How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- Your Highlight on page 232 | Location 2892-2893 | Added on Friday, February 7, 2025 1:20:55 PM

The praise, the recognition that he received
==========
﻿How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Bookmark on page 127 | Location 1614 | Added on Friday, February 7, 2025 4:37:06 PM


==========
﻿How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Highlight on page 127 | Location 1617-1618 | Added on Friday, February 7, 2025 11:00:51 PM

Thomas do just that. I once had the privilege
==========
﻿How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Underline on page 128 | Location 1639-1639 | Added on Saturday, February 8, 2025 11:08:54 AM

When their minds were filled
==========
﻿How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Highlight on page 128 | Location 1639-1639 | Added on Saturday, February 8, 2025 11:09:10 AM

When their minds were filled with positive thoughts
==========
﻿How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Highlight on page 128 | Location 1639-1640 | Added on Saturday, February 8, 2025 11:09:20 AM

When their minds were filled with positive thoughts of strength, they increased their actual physical powers almost fifty per cent.
==========
﻿How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Highlight on page 130 | Location 1662-1664 | Added on Saturday, February 8, 2025 11:15:08 AM

“And, behold, they brought to him a man sick of the palsy, lying on a bed: and Jesus... said unto the sick of the palsy; Son, be of good cheer; thy sins be forgiven thee... Arise, take up thy bed, and go unto thine house. And he arose, and departed to his house.”
==========
﻿How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Underline on page 135 | Location 1734-1735 | Added on Saturday, February 8, 2025 11:29:22 AM

Montaigne, the great French philosopher, adopted these seventeen
==========
﻿How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Underline on page 135 | Location 1734-1735 | Added on Saturday, February 8, 2025 11:29:24 AM

Montaigne, the great French philosopher, adopted these seventeen words as the motto of his life: “A man is not hurt so much by what happens,
==========
﻿How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Underline on page 135 | Location 1734-1735 | Added on Saturday, February 8, 2025 11:29:26 AM

Montaigne, the great French philosopher, adopted these seventeen words as the motto of his life: “A man is not hurt so much by what happens, as by his opinion of what happens.”
==========
﻿How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Highlight on page 136 | Location 1740-1742 | Added on Saturday, February 8, 2025 11:31:39 AM

“Action seems to follow feeling, but really action and feeling go together; and by regulating the action, which is under the more direct control of the will, we can indirectly regulate the feeling, which is not.”
==========
﻿How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Highlight on page 138 | Location 1780-1784 | Added on Saturday, February 8, 2025 11:39:30 AM

“A man will find that as he alters his thoughts toward things and other people, things and other people will alter towards him Let a man radically alter his thoughts, and he will be astonished at the rapid transformation it will effect in the material conditions of his life. Men do not attract that which they want, but that which they are—The divinity that shapes our ends is in ourselves. It is our very self.... All that a man achieves is the direct result of his own thoughts.... A man can only rise, conquer and achieve by lifting up his thoughts. He can only remain weak and abject and miserable by refusing to lift up his thoughts.”
==========
﻿How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Highlight on page 138 | Location 1780-1787 | Added on Saturday, February 8, 2025 11:40:14 AM

“A man will find that as he alters his thoughts toward things and other people, things and other people will alter towards him Let a man radically alter his thoughts, and he will be astonished at the rapid transformation it will effect in the material conditions of his life. Men do not attract that which they want, but that which they are—The divinity that shapes our ends is in ourselves. It is our very self.... All that a man achieves is the direct result of his own thoughts.... A man can only rise, conquer and achieve by lifting up his thoughts. He can only remain weak and abject and miserable by refusing to lift up his thoughts.” According to the Book of Genesis, the Creator gave man dominion over the whole wide earth. It’s a mighty big present. But I am not interested in any such super-royal prerogatives. All I desire is dominion over myself—dominion over my thoughts; dominion over my fears; dominion over my mind and over my spirit.
==========
﻿How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Highlight on page 139 | Location 1794-1811 | Added on Saturday, February 8, 2025 11:45:31 AM

Just For Today Just for today I will be happy. This assumes that what Abraham Lincoln said is true, that “most folks are about as happy as they make up their minds to be.” Happiness is from within; it is not a matter of externals. Just for today I will try to adjust myself to what is, and not try to adjust everything to my own desires. I will take my family, my business, and my luck as they come and fit myself to them. Just for today I will take care of my body. I will exercise it, care for it, nourish it, not abuse it nor neglect it, so that it will be a perfect machine for my bidding. Just for today I will try to strengthen my mind. I will learn something useful. I will not be a mental loafer. I will read something that requires effort, thought and concentration. Just for today I will exercise my soul in three ways; I will do somebody a good turn and not get found out. I will do at least two things I don’t want to do, as William James suggests, just for exercise. Just for today I will be agreeable. I will look as well as I can, dress as becomingly as possible, talk low, act courteously, be liberal with praise, criticize not at all, nor find fault with anything and not try to regulate nor improve anyone. Just for today I will try to live through this day only, not to tackle my whole life problem at once. I can do things for twelve hours that would appall me if I had to keep them up for a lifetime. Just for today I will have a program. I will write down what I expect to do every hour. I may not follow it exactly, but I will have it. It will eliminate two pests, hurrying and indecision. Just for today I will have a quiet half-hour all by myself and relax. In this half-hour sometimes I will think of God, so as to get a little more perspective into my life. Just for today I will be unafraid, especially I will not be afraid to be happy, to enjoy what is beautiful, to love, and to believe that those I love, love me. If we want to develop a mental attitude that will bring us peace and happiness, here is Rule 1: Think and act cheerfully, and you will feel cheerful.
==========
﻿How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Bookmark on page 142 | Location 1812 | Added on Saturday, February 8, 2025 11:45:46 AM


==========
﻿How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Highlight on page 144 | Location 1848-1850 | Added on Sunday, February 9, 2025 2:58:50 PM

Heat not a furnace for your foe so hot That it do singe yourself.
==========
﻿How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Highlight on page 146 | Location 1870-1871 | Added on Sunday, February 9, 2025 3:03:29 PM

at least forgive them and forget them. That is the smart thing to do. ‘To be wronged or robbed,” said Confucius,
==========
﻿How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Highlight on page 146 | Location 1870-1872 | Added on Sunday, February 9, 2025 3:03:31 PM

at least forgive them and forget them. That is the smart thing to do. ‘To be wronged or robbed,” said Confucius, “is nothing unless you continue to remember it.” I once asked General Eisenhower’s son, John, if his father ever nourished
==========
﻿How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Highlight on page 146 | Location 1870-1871 | Added on Sunday, February 9, 2025 3:03:44 PM

at least forgive them and forget them. That is the smart thing to do. ‘To be wronged or robbed,” said Confucius, “is nothing unless you continue to remember it.”
==========
﻿How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Highlight on page 146 | Location 1870-1871 | Added on Sunday, February 9, 2025 3:03:59 PM

‘To be wronged or robbed,” said Confucius, “is nothing unless you continue to remember it.”
==========
﻿How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Highlight on page 147 | Location 1890-1890 | Added on Sunday, February 9, 2025 3:09:26 PM

“I realize that patriotism is not enough. I must have no hatred or bitterness toward anyone.”
==========
﻿How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Highlight on page 146 | Location 1882-1884 | Added on Sunday, February 9, 2025 3:09:35 PM

No one can humiliate or disturb you and me, either—unless we let him. Sticks and stones may break my bones, But words can never hurt
==========
﻿How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Highlight on page 146 | Location 1882-1885 | Added on Sunday, February 9, 2025 3:09:40 PM

No one can humiliate or disturb you and me, either—unless we let him. Sticks and stones may break my bones, But words can never hurt me.
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Highlight on page 150 | Location 1936-1937 | Added on Sunday, February 9, 2025 11:51:12 PM

“O Great Spirit, keep me from ever judging and criticizing a man until I have walked in his moccasins for two weeks.”
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Highlight on page 151 | Location 1945-1948 | Added on Sunday, February 9, 2025 11:53:30 PM

Let’s never try to get even with our enemies, because if we do we will hurt ourselves far more than we hurt them. Let’s do as General Eisenhower does: let’s never waste a minute thinking about people we don’t like.
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Bookmark on page 152 | Location 1949 | Added on Sunday, February 9, 2025 11:53:38 PM


==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Bookmark on page 154 | Location 1978 | Added on Tuesday, February 11, 2025 12:27:32 AM


==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Highlight on page 156 | Location 2006-2007 | Added on Wednesday, February 12, 2025 10:25:56 PM

What joy they got out of these gifts—the joy of giving without expecting anything whatever in return!
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Highlight on page 156 | Location 2008-2009 | Added on Wednesday, February 12, 2025 10:26:16 PM

“The ideal man,” said Aristotle, “takes joy in doing favors for others.”
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Highlight on page 158 | Location 2043-2047 | Added on Wednesday, February 12, 2025 10:34:50 PM

To avoid resentment and worry over ingratitude, here is Rule 3: Instead of worrying about ingratitude, let’s expect it. Let’s remember that Jesus healed ten lepers in one day—and only one thanked Him. Why should we expect more gratitude than Jesus got? Let’s remember that the only way to find happiness is not to expect gratitude, but to give for the joy of giving. Let’s remember that gratitude is a “cultivated” trait; so if we want our children to be grateful, we must train them to be grateful.
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Bookmark on page 160 | Location 2048 | Added on Wednesday, February 12, 2025 10:35:43 PM


==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Highlight on page 161 | Location 2067-2069 | Added on Sunday, February 16, 2025 12:44:56 AM

had the blues because I had no shoes, Until upon the street, I met a man who had no feet.”
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Highlight on page 161 | Location 2069-2072 | Added on Sunday, February 16, 2025 12:45:46 AM

I once asked Eddie Rickenbacker what was the biggest lesson he had learned from drifting about with his companions in life rafts for twenty- one days, hopelessly lost in the Pacific. “The biggest lesson I learned from that experience,” he said, “was that if you have all the fresh water you want to drink and all the food you want to eat, you ought never to complain about anything.”
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Highlight on page 161 | Location 2076-2077 | Added on Sunday, February 16, 2025 12:46:49 AM

Why don’t you stop right now and ask yourself: “What in the hell am I worrying about?” You will probably find that it is comparatively unimportant and insignificant.
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Highlight on page 161 | Location 2076-2079 | Added on Sunday, February 16, 2025 12:47:11 AM

Why don’t you stop right now and ask yourself: “What in the hell am I worrying about?” You will probably find that it is comparatively unimportant and insignificant. About ninety percent of the things in our lives are right and about ten per cent are wrong. If we want to be happy, all we have to do is to concentrate on the ninety per cent that are right and ignore the ten per cent that are wrong.
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Highlight on page 161 | Location 2076-2080 | Added on Sunday, February 16, 2025 12:47:30 AM

Why don’t you stop right now and ask yourself: “What in the hell am I worrying about?” You will probably find that it is comparatively unimportant and insignificant. About ninety percent of the things in our lives are right and about ten per cent are wrong. If we want to be happy, all we have to do is to concentrate on the ninety per cent that are right and ignore the ten per cent that are wrong. If we want to be worried and bitter and have stomach ulcers, all we have to do is to concentrate on the ten percent that are wrong and ignore the ninety per cent that are glorious.
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Highlight on page 162 | Location 2081-2082 | Added on Sunday, February 16, 2025 12:48:46 AM

“Think and Thank.”
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Highlight on page 165 | Location 2125-2126 | Added on Sunday, February 16, 2025 12:58:05 AM

The habit of looking on the best side of every event,” said Dr. Johnson, “is worth more than a thousand pounds a year.”
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Highlight on page 165 | Location 2129-2130 | Added on Sunday, February 16, 2025 12:59:48 AM

“There are two things to aim at in life: first, to get what you want; and, after that, to enjoy it only the wisest of mankind achieve the second.”
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Highlight on page 167 | Location 2153-2155 | Added on Sunday, February 16, 2025 1:05:13 AM

If we want to stop worrying and start living, here is Rule 4 : Count your blessings—not your troubles!
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Highlight on page 170 | Location 2188-2189 | Added on Sunday, February 16, 2025 1:15:09 AM

“that it is safest to drop, as quickly as possible, people who pretend to be what they aren’t.”
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Highlight on page 171 | Location 2208-2215 | Added on Sunday, February 16, 2025 1:21:01 AM

You are something new in this world. Never before, since the beginning of time, has there ever been anybody exactly like you; and never again throughout all the ages to come will there ever be anybody exactly like you again. The science of genetics informs us that you arc what you are largely as a result of twenty-tour chromosomes contributed by your father and twenty-four chromosomes contributed by your mother. These forty-eight chromosomes comprise everything that determines what you inherit. In each chromosome there may be, says Amram Scheinfeld, “anywhere from scores to hundreds of genes—with a single gene, in some cases, able to change the whole life of an individual.” Truly, we are “fearfully and wonderfully” made. Even after your mother and father met and mated, there was only one chance in 300,000 billion that the person who is specifically you would be born! In other words, if you had 300,000 billion brothers and sisters, they might have all been different from you.
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Highlight on page 175 | Location 2255-2259 | Added on Sunday, February 16, 2025 1:31:39 AM

“There is a time in every man’s education when he arrives at the conviction that envy is ignorance; that imitation is suicide; that he must take himself for better, for worse, as his portion; that though the wide universe is full of good, no kernel of nourishing corn can come to him but through his toil bestowed on that plot of ground which is given him to till. The power which resides in him is new in nature, and none but he knows what he can do, nor does he know until he has tried.”
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Highlight on page 175 | Location 2260-2276 | Added on Sunday, February 16, 2025 1:33:44 AM

If you can’t be a pine on the top of the hill, Be a scrub in the valley—but be The best little scrub by the side of the hill; Be a bush, if you can’t be a tree. If you can’t be a bush, be a bit of the grass, And some highway happier make; If you can’t be a muskie, then just be a bass— But the liveliest bass in the lake! We can’t all be captains, we’ve got to be crew, There’s something for all of us here. There’s big work to do and there’s lesser to do And the task we must do is the near. If you can’t be a highway, then just be a trail, If you can’t be the sun, be a star; It isn’t by size that you win or you fail— Be the best of whatever you are!
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Highlight on page 175 | Location 2277-2278 | Added on Sunday, February 16, 2025 1:34:15 AM

Let’s not imitate others.
Let’s find ourselves and be ourselves.
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Bookmark on page 175 | Location 2277 | Added on Sunday, February 16, 2025 1:34:31 AM


==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Bookmark on page 177 | Location 2279 | Added on Sunday, February 16, 2025 1:34:56 AM


==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Bookmark on page 178 | Location 2294 | Added on Sunday, February 16, 2025 7:58:28 PM


==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Highlight on page 183 | Location 2366-2368 | Added on Sunday, February 16, 2025 8:14:39 PM

Nietzsche’s formula for the superior man was “not only to bear up under necessity but to love it.”
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Highlight on page 185 | Location 2400-2401 | Added on Sunday, February 16, 2025 8:20:52 PM

Rule 6: When fate hands us a lemon, 
let’s try to make a lemonade.
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Bookmark on page 186 | Location 2403 | Added on Sunday, February 16, 2025 8:21:00 PM


==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Bookmark on page 189 | Location 2449 | Added on Sunday, February 16, 2025 11:34:27 PM


==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Bookmark on page 190 | Location 2466 | Added on Monday, February 17, 2025 11:28:31 PM


==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Bookmark on page 191 | Location 2483 | Added on Monday, February 17, 2025 11:28:57 PM


==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Bookmark on page 195 | Location 2531 | Added on Monday, February 17, 2025 11:42:55 PM


==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Highlight on page 197 | Location 2560-2560 | Added on Tuesday, February 18, 2025 11:15:58 PM

Aristotle called this kind of attitude “enlightened
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Highlight on page 197 | Location 2560-2561 | Added on Tuesday, February 18, 2025 11:16:02 PM

Aristotle called this kind of attitude “enlightened selfishness.” Zoroaster said, “Doing good to others is not a duty. It is a joy,
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Highlight on page 197 | Location 2560-2561 | Added on Tuesday, February 18, 2025 11:16:04 PM

Aristotle called this kind of attitude “enlightened selfishness.” Zoroaster said, “Doing good to others is not a duty. It is a joy, for it increases your own health and happiness.”
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Highlight on page 197 | Location 2560-2562 | Added on Tuesday, February 18, 2025 11:16:23 PM

Aristotle called this kind of attitude “enlightened selfishness.” Zoroaster said, “Doing good to others is not a duty. It is a joy, for it increases your own health and happiness.” And Benjamin Franklin
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Highlight on page 197 | Location 2560-2562 | Added on Tuesday, February 18, 2025 11:16:25 PM

Aristotle called this kind of attitude “enlightened selfishness.” Zoroaster said, “Doing good to others is not a duty. It is a joy, for it increases your own health and happiness.” And Benjamin Franklin summed it up very simply—”When you are good to others,” said Franklin,
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Highlight on page 197 | Location 2560-2563 | Added on Tuesday, February 18, 2025 11:16:26 PM

Aristotle called this kind of attitude “enlightened selfishness.” Zoroaster said, “Doing good to others is not a duty. It is a joy, for it increases your own health and happiness.” And Benjamin Franklin summed it up very simply—”When you are good to others,” said Franklin, “you are best to yourself.”
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Highlight on page 198 | Location 2587-2588 | Added on Tuesday, February 18, 2025 11:23:19 PM

services of a psychiatrist? You can’t, can you? No, of course, not. A Chinese proverb puts it this way: “A bit
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Highlight on page 198 | Location 2587-2589 | Added on Tuesday, February 18, 2025 11:23:21 PM

services of a psychiatrist? You can’t, can you? No, of course, not. A Chinese proverb puts it this way: “A bit of fragrance always clings to the hand that gives you roses.”
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Highlight on page 199 | Location 2588-2589 | Added on Tuesday, February 18, 2025 11:23:30 PM

A Chinese proverb puts it this way: “A bit of fragrance always clings to the hand that gives you roses.”
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Highlight on page 200 | Location 2611-2612 | Added on Tuesday, February 18, 2025 11:28:18 PM

‘He that findeth his life shall lose it: and he that loseth his life for my sake shall find it.’”
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Highlight on page 201 | Location 2622-2624 | Added on Tuesday, February 18, 2025 11:32:27 PM

Rule 7: Forget yourself by becoming interested in others.
Do every day do a good deed
that will put a smile of joy on someone’s face.
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Bookmark on page 202 | Location 2625 | Added on Tuesday, February 18, 2025 11:33:02 PM


==========
Design Patterns Elements of Reusable Object-Oriented Software (Erich Gamma, Richard Helm, Ralph Johnson etc.) (z-lib.org) (Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides)
- Your Highlight on page 14 | Location 165-166 | Added on Wednesday, February 19, 2025 7:40:03 PM

Figure 1.1(page 23) depicts these references graphically.
==========
Design Patterns Elements of Reusable Object-Oriented Software (Erich Gamma, Richard Helm, Ralph Johnson etc.) (z-lib.org) (Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides)
- Your Highlight on page 14 | Location 169-169 | Added on Wednesday, February 19, 2025 7:41:01 PM

If you aren't an experienced object-oriented designer, then start withthe
==========
Design Patterns Elements of Reusable Object-Oriented Software (Erich Gamma, Richard Helm, Ralph Johnson etc.) (z-lib.org) (Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides)
- Your Highlight on page 14 | Location 169-170 | Added on Wednesday, February 19, 2025 7:41:02 PM

If you aren't an experienced object-oriented designer, then start withthe simplest and most common patterns:
==========
Design Patterns Elements of Reusable Object-Oriented Software (Erich Gamma, Richard Helm, Ralph Johnson etc.) (z-lib.org) (Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides)
- Your Highlight on page 14 | Location 169-170 | Added on Wednesday, February 19, 2025 7:41:04 PM

If you aren't an experienced object-oriented designer, then start withthe simplest and most common patterns: • Abstract Factory (page 99)
==========
Design Patterns Elements of Reusable Object-Oriented Software (Erich Gamma, Richard Helm, Ralph Johnson etc.) (z-lib.org) (Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides)
- Your Highlight on page 14 | Location 169-171 | Added on Wednesday, February 19, 2025 7:41:06 PM

If you aren't an experienced object-oriented designer, then start withthe simplest and most common patterns: • Abstract Factory (page 99) • Adapter (157)
==========
Design Patterns Elements of Reusable Object-Oriented Software (Erich Gamma, Richard Helm, Ralph Johnson etc.) (z-lib.org) (Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides)
- Your Highlight on page 14 | Location 169-171 | Added on Wednesday, February 19, 2025 7:41:08 PM

If you aren't an experienced object-oriented designer, then start withthe simplest and most common patterns: • Abstract Factory (page 99) • Adapter (157) • Composite (183)
==========
Design Patterns Elements of Reusable Object-Oriented Software (Erich Gamma, Richard Helm, Ralph Johnson etc.) (z-lib.org) (Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides)
- Your Highlight on page 14 | Location 169-172 | Added on Wednesday, February 19, 2025 7:41:14 PM

If you aren't an experienced object-oriented designer, then start withthe simplest and most common patterns: • Abstract Factory (page 99) • Adapter (157) • Composite (183) • Decorator (196)
==========
Design Patterns Elements of Reusable Object-Oriented Software (Erich Gamma, Richard Helm, Ralph Johnson etc.) (z-lib.org) (Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides)
- Your Highlight on page 14 | Location 169-172 | Added on Wednesday, February 19, 2025 7:41:16 PM

If you aren't an experienced object-oriented designer, then start withthe simplest and most common patterns: • Abstract Factory (page 99) • Adapter (157) • Composite (183) • Decorator (196) • Factory Method (121)
==========
Design Patterns Elements of Reusable Object-Oriented Software (Erich Gamma, Richard Helm, Ralph Johnson etc.) (z-lib.org) (Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides)
- Your Highlight on page 14 | Location 169-172 | Added on Wednesday, February 19, 2025 7:41:18 PM

If you aren't an experienced object-oriented designer, then start withthe simplest and most common patterns: • Abstract Factory (page 99) • Adapter (157) • Composite (183) • Decorator (196) • Factory Method (121) • Observer (326)
==========
Design Patterns Elements of Reusable Object-Oriented Software (Erich Gamma, Richard Helm, Ralph Johnson etc.) (z-lib.org) (Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides)
- Your Highlight on page 14 | Location 169-173 | Added on Wednesday, February 19, 2025 7:41:19 PM

If you aren't an experienced object-oriented designer, then start withthe simplest and most common patterns: • Abstract Factory (page 99) • Adapter (157) • Composite (183) • Decorator (196) • Factory Method (121) • Observer (326) • Strategy (349)
==========
Design Patterns Elements of Reusable Object-Oriented Software (Erich Gamma, Richard Helm, Ralph Johnson etc.) (z-lib.org) (Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides)
- Your Highlight on page 14 | Location 169-173 | Added on Wednesday, February 19, 2025 7:41:20 PM

If you aren't an experienced object-oriented designer, then start withthe simplest and most common patterns: • Abstract Factory (page 99) • Adapter (157) • Composite (183) • Decorator (196) • Factory Method (121) • Observer (326) • Strategy (349) • Template Method (360)
==========
Design Patterns Elements of Reusable Object-Oriented Software (Erich Gamma, Richard Helm, Ralph Johnson etc.) (z-lib.org) (Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides)
- Your Highlight on page 18 | Location 220-220 | Added on Wednesday, February 19, 2025 7:53:11 PM

"Each pattern describes a problem which
==========
Design Patterns Elements of Reusable Object-Oriented Software (Erich Gamma, Richard Helm, Ralph Johnson etc.) (z-lib.org) (Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides)
- Your Highlight on page 18 | Location 220-221 | Added on Wednesday, February 19, 2025 7:53:14 PM

"Each pattern describes a problem which occurs over and over again in our environment, and then describes the
==========
Design Patterns Elements of Reusable Object-Oriented Software (Erich Gamma, Richard Helm, Ralph Johnson etc.) (z-lib.org) (Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides)
- Your Highlight on page 18 | Location 220-221 | Added on Wednesday, February 19, 2025 7:53:18 PM

"Each pattern describes a problem which occurs over and over again in our environment, and then describes the core of the solution to that problem, in such a way that you can use
==========
Design Patterns Elements of Reusable Object-Oriented Software (Erich Gamma, Richard Helm, Ralph Johnson etc.) (z-lib.org) (Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides)
- Your Highlight on page 18 | Location 220-221 | Added on Wednesday, February 19, 2025 7:53:22 PM

"Each pattern describes a problem which occurs over and over again in our environment, and then describes the core of the solution to that problem, in such a way that you can use this solution a million times over, without ever doing it the same way
==========
Design Patterns Elements of Reusable Object-Oriented Software (Erich Gamma, Richard Helm, Ralph Johnson etc.) (z-lib.org) (Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides)
- Your Highlight on page 18 | Location 220-222 | Added on Wednesday, February 19, 2025 7:53:23 PM

"Each pattern describes a problem which occurs over and over again in our environment, and then describes the core of the solution to that problem, in such a way that you can use this solution a million times over, without ever doing it the same way twice"
==========
Design Patterns Elements of Reusable Object-Oriented Software (Erich Gamma, Richard Helm, Ralph Johnson etc.) (z-lib.org) (Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides)
- Your Underline on page 20 | Location 238-239 | Added on Wednesday, February 19, 2025 7:57:26 PM

Since reuse
==========
Design Patterns Elements of Reusable Object-Oriented Software (Erich Gamma, Richard Helm, Ralph Johnson etc.) (z-lib.org) (Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides)
- Your Highlight on page 20 | Location 238-239 | Added on Wednesday, February 19, 2025 7:57:30 PM

Since reuse is often
==========
Design Patterns Elements of Reusable Object-Oriented Software (Erich Gamma, Richard Helm, Ralph Johnson etc.) (z-lib.org) (Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides)
- Your Highlight on page 20 | Location 238-239 | Added on Wednesday, February 19, 2025 7:57:31 PM

Since reuse is often a
==========
Design Patterns Elements of Reusable Object-Oriented Software (Erich Gamma, Richard Helm, Ralph Johnson etc.) (z-lib.org) (Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides)
- Your Highlight on page 20 | Location 238-239 | Added on Wednesday, February 19, 2025 7:57:34 PM

address language and implementation issues as well. Since reuse is often a factor in object-oriented design, the consequences of a pattern include
==========
Design Patterns Elements of Reusable Object-Oriented Software (Erich Gamma, Richard Helm, Ralph Johnson etc.) (z-lib.org) (Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides)
- Your Highlight on page 20 | Location 238-240 | Added on Wednesday, February 19, 2025 7:57:37 PM

address language and implementation issues as well. Since reuse is often a factor in object-oriented design, the consequences of a pattern include its impact on a system's flexibility, extensibility, or portability. Listing
==========
Design Patterns Elements of Reusable Object-Oriented Software (Erich Gamma, Richard Helm, Ralph Johnson etc.) (z-lib.org) (Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides)
- Your Highlight on page 20 | Location 238-240 | Added on Wednesday, February 19, 2025 7:57:41 PM

address language and implementation issues as well. Since reuse is often a factor in object-oriented design, the consequences of a pattern include its impact on a system's flexibility, extensibility, or portability. Listing these consequences explicitly helps you understand and evaluate them.
==========
Design Patterns Elements of Reusable Object-Oriented Software (Erich Gamma, Richard Helm, Ralph Johnson etc.) (z-lib.org) (Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides)
- Your Highlight on page 20 | Location 243-244 | Added on Wednesday, February 19, 2025 7:58:37 PM

complex, domain-specific designs for an entire application or subsystem. The design patterns in this book are descriptions of communicating objects
==========
Design Patterns Elements of Reusable Object-Oriented Software (Erich Gamma, Richard Helm, Ralph Johnson etc.) (z-lib.org) (Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides)
- Your Highlight on page 20 | Location 243-244 | Added on Wednesday, February 19, 2025 7:58:40 PM

complex, domain-specific designs for an entire application or subsystem. The design patterns in this book are descriptions of communicating objects and classes that are customized to solve a general design problem in a particular
==========
Design Patterns Elements of Reusable Object-Oriented Software (Erich Gamma, Richard Helm, Ralph Johnson etc.) (z-lib.org) (Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides)
- Your Highlight on page 20 | Location 243-245 | Added on Wednesday, February 19, 2025 7:58:41 PM

complex, domain-specific designs for an entire application or subsystem. The design patterns in this book are descriptions of communicating objects and classes that are customized to solve a general design problem in a particular context.
==========
Design Patterns Elements of Reusable Object-Oriented Software (Erich Gamma, Richard Helm, Ralph Johnson etc.) (z-lib.org) (Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides)
- Your Bookmark on page 21 | Location 252 | Added on Wednesday, February 19, 2025 8:03:27 PM


==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Highlight on page 202 | Location 2625-2639 | Added on Wednesday, February 19, 2025 10:48:41 PM

Part Four in a Nutshell Seven Ways To Cultivate A Mental Attitude That Will Bring You Peace and Happiness RULE 1: Let’s fill our minds with thoughts of peace, courage, health, and hope, for “our life is what our thoughts make it.” RULE 2: Let’s never try to get even with our enemies, because if we do we will hurt ourselves far more than we hurt them. Let’s do as General Eisenhower does: let’s never waste a minute thinking about people we don’t like. RULE 3: Instead of worrying about ingratitude, let’s expect it. Let’s remember that Jesus healed ten lepers in one day— and only one thanked Him. Why should we expect more gratitude than Jesus got? Let’s remember that the only way to find happiness is not to expect gratitude—but to give for the joy of giving. Let’s remember that gratitude is a “cultivated” trait; so if we want our children to be grateful, we must train them to be grateful. RULE 4: Count your blessings—not your troubles! RULE 5: Let’s not imitate others. Let’s find ourselves and be ourselves, for “envy is ignorance” and “imitation is suicide.” RULE 6: When fate hands us a lemon, let’s try to make a lemonade. RULE 7: Let’s forget our own unhappiness—by trying to create a little happiness for others. “When you are good to others, you are best to yourself.”
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Highlight on page 211 | Location 2730-2730 | Added on Wednesday, February 19, 2025 11:10:07 PM

Jesus declared that there were only two important things about religion:
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Highlight on page 211 | Location 2730-2731 | Added on Wednesday, February 19, 2025 11:10:11 PM

Jesus declared that there were only two important things about religion: loving God with all our heart, and our neighbor as ourselves.
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Highlight on page 211 | Location 2733-2734 | Added on Wednesday, February 19, 2025 11:11:31 PM

John Baillie answer that. He was a distinguished professor who taught
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Highlight on page 211 | Location 2733-2734 | Added on Wednesday, February 19, 2025 11:11:34 PM

John Baillie answer that. He was a distinguished professor who taught theology at the University of Edinburgh. He said: “What makes a man a
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Highlight on page 211 | Location 2733-2735 | Added on Wednesday, February 19, 2025 11:11:38 PM

John Baillie answer that. He was a distinguished professor who taught theology at the University of Edinburgh. He said: “What makes a man a Christian is neither his intellectual acceptance of certain ideas, nor his
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Highlight on page 211 | Location 2733-2735 | Added on Wednesday, February 19, 2025 11:11:41 PM

John Baillie answer that. He was a distinguished professor who taught theology at the University of Edinburgh. He said: “What makes a man a Christian is neither his intellectual acceptance of certain ideas, nor his conformity to a certain rule, but his possession of a certain Spirit, and his
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Highlight on page 211 | Location 2733-2736 | Added on Wednesday, February 19, 2025 11:11:42 PM

John Baillie answer that. He was a distinguished professor who taught theology at the University of Edinburgh. He said: “What makes a man a Christian is neither his intellectual acceptance of certain ideas, nor his conformity to a certain rule, but his possession of a certain Spirit, and his participation in a certain Life.”
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Highlight on page 215 | Location 2789-2790 | Added on Wednesday, February 19, 2025 11:21:07 PM

been one whose problem in the last resort was not that of finding a religious outlook
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Highlight on page 215 | Location 2787-2787 | Added on Wednesday, February 19, 2025 11:21:50 PM

Dr. Carl
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Highlight on page 215 | Location 2787-2788 | Added on Wednesday, February 19, 2025 11:21:52 PM

That statement is so significant I want to repeat it in bold type. Dr. Carl Jung said:
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Highlight on page 215 | Location 2787-2792 | Added on Wednesday, February 19, 2025 11:22:03 PM

That statement is so significant I want to repeat it in bold type. Dr. Carl Jung said: “During the past thirty years, people from all the civilized countries of the earth have consulted me. I have treated many hundreds of patients. Among all my patients in the second half of life—that is to say, over thirty-five—there has not been one whose problem in the last resort was not that of finding a religious outlook on life. It is safe to say that every one of them fell ill because he had lost that which the living religions of every age have given to their followers, and none of them has been really healed who did not regain his religious outlook.”
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Highlight on page 218 | Location 2834-2836 | Added on Wednesday, February 19, 2025 11:30:46 PM

‘Take no thought for your life, what ye shall eat, or what ye shall drink; nor yet for your body, what ye shall put on. Is not the life more than meat, and the body than raiment? Behold the fowls of the air: for they sow not, neither do they reap, nor gather into barns; yet your heavenly Father feedeth them. Are ye not much better than they?...
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Highlight on page 225 | Location 2937-2955 | Added on Wednesday, February 19, 2025 11:33:42 PM

Even if you are not a religious person by nature or training—even if you are an out-and-out skeptic—prayer can help you much more than you believe, for it is a practical thing. What do I mean, practical? I mean that prayer fulfills these three very basic psychological needs which all people share, whether they believe in God or not: Prayer helps us to put into words exactly what is troubling us. We saw in Chapter 4 that it is almost impossible to deal with a problem while it remains vague and nebulous. Praying, in a way, is very much like writing our problems down on paper. If we ask help for a problem— even from God—we must put it into words. Prayer gives us a sense of sharing our burdens, of not being alone. Few of us are so strong that we can bear our heaviest burdens, our most agonizing troubles, all by our-selves. Sometimes our worries are of so intimate a nature that we cannot discuss them even with our closest relatives or friends. Then prayer is the answer. Any psychiatrist will tell us that when we are pent-up and tense, and in an agony of spirit, it is therapeutically good to tell someone our troubles. When we can’t tell anyone else—we can always tell God. Prayer puts into force an active principle of doing. It’s a first step toward action. I doubt if anyone can pray for some fulfillment, day after day, without benefiting from it—in other words, without taking some steps to bring it to pass. The world-famous scientist, Dr. Alexis Carrel, said: “Prayer is the most powerful form of energy one can generate.” So why not make use of it? Call it God or Allah or Spirit—why quarrel with definitions as long as the mysterious powers of nature take us in hand? Why not close this book right now, shut the door, kneel down, and unburden your heart? If you have lost your faith, beseech Almighty God to renew it; and repeat this beautiful prayer written by Saint Francis of Assisi seven hundred years ago: “Lord, make me an instrument of Thy Peace. Where there is hatred, let me sow love. Where there is injury, pardon. Where there is doubt, faith. Where there is despair, hope. Where there is darkness, light. Where there is sadness, joy. “O Divine Master, grant that I may not so much seek to be consoled as to console; to be understood, as to understand; to be loved, as to love; for it is in giving that we receive, it is in pardoning that we are pardoned, and it is in dying that we are born to Eternal Life.”
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Bookmark on page 229 | Location 2958 | Added on Wednesday, February 19, 2025 11:33:58 PM


==========
Design Patterns Elements of Reusable Object-Oriented Software (Erich Gamma, Richard Helm, Ralph Johnson etc.) (z-lib.org) (Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides)
- Your Highlight on Location 117-122 | Added on Thursday, February 20, 2025 7:35:52 PM

If you aren't an experienced object-oriented designer, then start withthe simplest and most common patterns:  • Abstract Factory (page 99) 
• Adapter (157) 
• Composite (183) 
• Decorator (196) 
• Factory Method (121) 
• Observer (326) 
• Strategy (349) 
• Template Method (360) It's hard to find an object-oriented system that doesn't use at leasta couple of these patterns, and large systems use nearly all of them.This subset will help you understand design patterns in particular andgood object-oriented design in general.
==========
Design Patterns Elements of Reusable Object-Oriented Software (Erich Gamma, Richard Helm, Ralph Johnson etc.) (z-lib.org) (Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides)
- Your Highlight on Location 156-156 | Added on Thursday, February 20, 2025 7:40:57 PM

"Each pattern describes a problem which
==========
Design Patterns Elements of Reusable Object-Oriented Software (Erich Gamma, Richard Helm, Ralph Johnson etc.) (z-lib.org) (Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides)
- Your Highlight on Location 156-157 | Added on Thursday, February 20, 2025 7:40:59 PM

Christopher Alexander says, "Each pattern describes a problem which occurs over and over again in our environment, and then describes the
==========
Design Patterns Elements of Reusable Object-Oriented Software (Erich Gamma, Richard Helm, Ralph Johnson etc.) (z-lib.org) (Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides)
- Your Highlight on Location 156-157 | Added on Thursday, February 20, 2025 7:41:02 PM

Christopher Alexander says, "Each pattern describes a problem which occurs over and over again in our environment, and then describes the core of the solution to that problem, in such a way that you can use
==========
Design Patterns Elements of Reusable Object-Oriented Software (Erich Gamma, Richard Helm, Ralph Johnson etc.) (z-lib.org) (Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides)
- Your Highlight on Location 156-158 | Added on Thursday, February 20, 2025 7:41:04 PM

Christopher Alexander says, "Each pattern describes a problem which occurs over and over again in our environment, and then describes the core of the solution to that problem, in such a way that you can use this solution a million times over, without ever doing it the same way
==========
Design Patterns Elements of Reusable Object-Oriented Software (Erich Gamma, Richard Helm, Ralph Johnson etc.) (z-lib.org) (Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides)
- Your Highlight on Location 156-158 | Added on Thursday, February 20, 2025 7:41:05 PM

Christopher Alexander says, "Each pattern describes a problem which occurs over and over again in our environment, and then describes the core of the solution to that problem, in such a way that you can use this solution a million times over, without ever doing it the same way twice" [AIS
==========
Design Patterns Elements of Reusable Object-Oriented Software (Erich Gamma, Richard Helm, Ralph Johnson etc.) (z-lib.org) (Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides)
- Your Highlight on Location 160-160 | Added on Thursday, February 20, 2025 7:41:43 PM

four essential elements:
==========
Design Patterns Elements of Reusable Object-Oriented Software (Erich Gamma, Richard Helm, Ralph Johnson etc.) (z-lib.org) (Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides)
- Your Highlight on Location 160-161 | Added on Thursday, February 20, 2025 7:41:46 PM

four essential elements: 1. The pattern name is
==========
Design Patterns Elements of Reusable Object-Oriented Software (Erich Gamma, Richard Helm, Ralph Johnson etc.) (z-lib.org) (Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides)
- Your Highlight on Location 164-164 | Added on Thursday, February 20, 2025 7:41:49 PM

2. The problem
==========
Design Patterns Elements of Reusable Object-Oriented Software (Erich Gamma, Richard Helm, Ralph Johnson etc.) (z-lib.org) (Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides)
- Your Highlight on Location 167-167 | Added on Thursday, February 20, 2025 7:41:51 PM

3. The solution
==========
Design Patterns Elements of Reusable Object-Oriented Software (Erich Gamma, Richard Helm, Ralph Johnson etc.) (z-lib.org) (Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides)
- Your Highlight on Location 170-170 | Added on Thursday, February 20, 2025 7:41:53 PM

4. The consequences are
==========
Design Patterns Elements of Reusable Object-Oriented Software (Erich Gamma, Richard Helm, Ralph Johnson etc.) (z-lib.org) (Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides)
- Your Highlight on Location 164-165 | Added on Thursday, February 20, 2025 7:42:02 PM

2. The problem describes when to apply the pattern.
==========
Design Patterns Elements of Reusable Object-Oriented Software (Erich Gamma, Richard Helm, Ralph Johnson etc.) (z-lib.org) (Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides)
- Your Highlight on Location 167-167 | Added on Thursday, February 20, 2025 7:42:07 PM

3. The solution describes the elements that make up the design, their relationships,
==========
Design Patterns Elements of Reusable Object-Oriented Software (Erich Gamma, Richard Helm, Ralph Johnson etc.) (z-lib.org) (Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides)
- Your Highlight on Location 167-168 | Added on Thursday, February 20, 2025 7:42:10 PM

3. The solution describes the elements that make up the design, their relationships, responsibilities, and collaborations.
==========
Design Patterns Elements of Reusable Object-Oriented Software (Erich Gamma, Richard Helm, Ralph Johnson etc.) (z-lib.org) (Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides)
- Your Highlight on Location 170-170 | Added on Thursday, February 20, 2025 7:42:16 PM

4. The consequences are the results and trade-offs of applying the pattern.
==========
Design Patterns Elements of Reusable Object-Oriented Software (Erich Gamma, Richard Helm, Ralph Johnson etc.) (z-lib.org) (Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides)
- Your Highlight on Location 173-173 | Added on Thursday, February 20, 2025 7:42:56 PM

Since reuse is often
==========
Design Patterns Elements of Reusable Object-Oriented Software (Erich Gamma, Richard Helm, Ralph Johnson etc.) (z-lib.org) (Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides)
- Your Highlight on Location 173-173 | Added on Thursday, February 20, 2025 7:42:59 PM

Since reuse is often a factor in object-oriented design, the consequences of a pattern include
==========
Design Patterns Elements of Reusable Object-Oriented Software (Erich Gamma, Richard Helm, Ralph Johnson etc.) (z-lib.org) (Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides)
- Your Highlight on Location 173-174 | Added on Thursday, February 20, 2025 7:43:04 PM

Since reuse is often a factor in object-oriented design, the consequences of a pattern include its impact on a system's flexibility, extensibility, or portability. Listing
==========
Design Patterns Elements of Reusable Object-Oriented Software (Erich Gamma, Richard Helm, Ralph Johnson etc.) (z-lib.org) (Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides)
- Your Highlight on Location 173-174 | Added on Thursday, February 20, 2025 7:43:07 PM

Since reuse is often a factor in object-oriented design, the consequences of a pattern include its impact on a system's flexibility, extensibility, or portability. Listing these consequences explicitly helps you understand and evaluate them.
==========
Design Patterns Elements of Reusable Object-Oriented Software (Erich Gamma, Richard Helm, Ralph Johnson etc.) (z-lib.org) (Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides)
- Your Highlight on Location 175-176 | Added on Thursday, February 20, 2025 7:43:32 PM

book we have concentrated on patterns at a certain level of abstraction. Design patterns are not about designs such as linked lists and
==========
Design Patterns Elements of Reusable Object-Oriented Software (Erich Gamma, Richard Helm, Ralph Johnson etc.) (z-lib.org) (Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides)
- Your Highlight on Location 175-177 | Added on Thursday, February 20, 2025 7:43:34 PM

book we have concentrated on patterns at a certain level of abstraction. Design patterns are not about designs such as linked lists and hash tables that can be encoded in classes and reused as is. Nor are they
==========
Design Patterns Elements of Reusable Object-Oriented Software (Erich Gamma, Richard Helm, Ralph Johnson etc.) (z-lib.org) (Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides)
- Your Highlight on Location 175-177 | Added on Thursday, February 20, 2025 7:43:38 PM

book we have concentrated on patterns at a certain level of abstraction. Design patterns are not about designs such as linked lists and hash tables that can be encoded in classes and reused as is. Nor are they complex, domain-specific designs for an entire application or subsystem.
==========
Design Patterns Elements of Reusable Object-Oriented Software (Erich Gamma, Richard Helm, Ralph Johnson etc.) (z-lib.org) (Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides)
- Your Highlight on Location 175-178 | Added on Thursday, February 20, 2025 7:43:44 PM

book we have concentrated on patterns at a certain level of abstraction. Design patterns are not about designs such as linked lists and hash tables that can be encoded in classes and reused as is. Nor are they complex, domain-specific designs for an entire application or subsystem. The design patterns in this book are descriptions of communicating objects
==========
Design Patterns Elements of Reusable Object-Oriented Software (Erich Gamma, Richard Helm, Ralph Johnson etc.) (z-lib.org) (Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides)
- Your Highlight on Location 175-178 | Added on Thursday, February 20, 2025 7:43:47 PM

book we have concentrated on patterns at a certain level of abstraction. Design patterns are not about designs such as linked lists and hash tables that can be encoded in classes and reused as is. Nor are they complex, domain-specific designs for an entire application or subsystem. The design patterns in this book are descriptions of communicating objects and classes that are customized to solve a general design problem in a particular
==========
Design Patterns Elements of Reusable Object-Oriented Software (Erich Gamma, Richard Helm, Ralph Johnson etc.) (z-lib.org) (Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides)
- Your Highlight on Location 175-179 | Added on Thursday, February 20, 2025 7:43:49 PM

book we have concentrated on patterns at a certain level of abstraction. Design patterns are not about designs such as linked lists and hash tables that can be encoded in classes and reused as is. Nor are they complex, domain-specific designs for an entire application or subsystem. The design patterns in this book are descriptions of communicating objects and classes that are customized to solve a general design problem in a particular context.
==========
Design Patterns Elements of Reusable Object-Oriented Software (Erich Gamma, Richard Helm, Ralph Johnson etc.) (z-lib.org) (Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides)
- Your Bookmark on Location 109 | Added on Thursday, February 20, 2025 7:51:54 PM


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 670 | Location 9837-9839 | Added on Thursday, February 20, 2025 8:28:00 PM

Opinamos que los accionistas deberían exigir a sus equipos directivos una tasa de desembolso de beneficio normal, del orden de, por ejemplo, dos tercios, o alternativamente una demostración más allá de toda duda razonable de que los beneficios reinvertidos han generado un satisfactorio incremento de los beneficios por acción.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 677 | Location 9933-9935 | Added on Thursday, February 20, 2025 8:38:21 PM

Graham desea que centre usted su atención en un hecho básico y a la vez increíblemente profundo: cuando compra una acción, se convierte en propietario de una empresa. Sus directivos, todos ellos, hasta llegar al CEO, trabajan para usted. Su consejo de administración debe rendir cuentas ante usted. Su dinero en efectivo le pertenece a usted.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 678 | Location 9941-9943 | Added on Thursday, February 20, 2025 8:39:05 PM

«hay tantos motivos para ejercitar la prudencia y la sensatez en ser accionista como en convertirse en accionista».
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 678 | Location 9944-9947 | Added on Thursday, February 20, 2025 8:39:26 PM

«hay simplemente dos cuestiones esenciales a las que los accionistas deberían prestar su atención: 1. ¿Es la dirección razonablemente eficaz? 2. ¿Están recibiendo una atención adecuada los intereses del accionista medio externo?».
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 685 | Location 10052-10057 | Added on Thursday, February 20, 2025 8:51:50 PM

La investigación realizada por los gestores de patrimonio Robert Arnott y Clifford Asness descubrió que cuando los dividendos actuales son escasos, los beneficios futuros de la empresa también acaban siendo escasos. Cuando los dividendos actuales son elevados, también lo son los beneficios futuros. Durante períodos de diez años, el tipo medio de crecimiento de los beneficios fue 3,9 puntos mayor cuando los dividendos eran elevados que cuando los dividendos eran reducidos.415
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 686 | Location 10057-10060 | Added on Thursday, February 20, 2025 8:52:34 PM

Los profesores de contabilidad de la Columbia University, Doron Nissim y Amir Ziv, descubrieron que las empresas que elevan sus dividendos no sólo consiguen una mejor rentabilidad sobre sus acciones, sino que además los «incrementos de dividendos están relacionados con una mayor rentabilidad futura durante un período mínimo de cuatro años a contar desde el cambio en la política de dividendos».
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 686 | Location 10061-10064 | Added on Thursday, February 20, 2025 8:52:43 PM

En pocas palabras, la mayor parte de los directivos se equivoca cuando dice que es capaz de utilizar su dinero mejor que usted. El pago de dividendo no garantiza grandes resultados, pero normalmente mejora la rentabilidad de las acciones al retirar por lo menos parte del dinero en efectivo de las manos de los directivos antes de que puedan malgastarlo o guardarlo bajo siete llaves.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 687 | Location 10073-10080 | Added on Thursday, February 20, 2025 8:56:05 PM

Todo esto es cierto en teoría. Por desgracia, en el mundo real, la generalización de la retribución en acciones ha acabado sirviendo a una finalidad que únicamente puede ser descrita como siniestra. En el momento actual en el que las opciones sobre acciones se han convertido en un elemento tan importante de la retribución de los ejecutivos, muchas empresas, sobre todo en los sectores de la alta tecnología, deben emitir cientos de millones de acciones para entregárselas a los ejecutivos que ejercitan estas opciones sobre acciones.419 Sin embargo, eso incrementaría el número de acciones en circulación y reduciría los beneficios por acción. Para contrarrestar esa dilución, las empresas deben actuar en sentido contrario y recomprar millones de acciones en el mercado abierto. En el año 2000, las empresas se gastaban un asombroso 41,8 por ciento de sus beneficios totales netos en la recompra de sus propias acciones, lo que supone un impresionante aumento desde el nivel de 1980: un 4,8 por ciento.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 688 | Location 10092-10104 | Added on Thursday, February 20, 2025 8:58:09 PM

¿Qué está pasando? En este tipo de operaciones se aprecia la influencia de dos factores sorprendentes: • Las empresas consiguen una bonificación fiscal cuando los ejecutivos y los empleados ejercitan opciones sobre acciones (que la Hacienda de Estados Unidos considera un «gasto salarial» para la empresa).422 En sus ejercicios fiscales desde 2000 hasta 2002, por ejemplo, Oracle disfrutó de 1.690 millones de dólares en bonificaciones fiscales como consecuencia de las opciones ejercitadas por las personas de dentro de la empresa. Sprint Corp. se embolsó 678 millones de dólares en bonificaciones fiscales gracias a que sus ejecutivos y empleados recibieron 1.900 millones de dólares en bonificaciones en forma de opciones sobre acciones durante los ejercicios de 1999 y 2000. • Un alto ejecutivo cuya retribución contuviera un importante elemento de opciones sobre acciones tiene un interés personal en favorecer la recompra de acciones respecto del pago de dividendos. ¿Por qué? Por motivos técnicos, las opciones aumentan de valor a medida que las fluctuaciones de las acciones se hacen mayores. Sin embargo, los dividendos atenúan la volatilidad de la cotización de las acciones. Por lo tanto, si los directivos incrementasen el dividendo, reducirían el valor de sus propias opciones sobre acciones.423
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 690 | Location 10114-10120 | Added on Thursday, February 20, 2025 9:00:46 PM

El principio en el que se apoyaban esas concesiones de opciones era el de coordinar los intereses de los directivos con los de los accionistas externos. Si fuese usted un accionista externo de Apple, querría que sus directivos fuesen recompensados únicamente si las acciones de Apple consiguiesen unos resultados superiores. Nada podría ser más justo para usted y para los demás propietarios de la empresa. Sin embargo, como suele señalar John Bogle, antiguo presidente de los fondos Vanguard, prácticamente todos los directivos venden las acciones que reciben inmediatamente después de ejercitar sus opciones. ¿Cómo es posible que desprenderse de millones de acciones a cambio de un beneficio instantáneo permita coordinar los intereses de los ejecutivos con los de los accionistas leales a largo plazo de la empresa?
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 690 | Location 10125-10131 | Added on Thursday, February 20, 2025 9:01:39 PM

Si lee con atención las propuestas de delegación de voto, el propietario inteligente se opondrá a cualquier plan de retribución de los ejecutivos que, a través de las concesiones de opciones sobre acciones, ponga en manos de los directivos más del 3 por ciento de las acciones en circulación de la empresa. También debería vetar cualquier plan que no haga que la concesión de opciones sobre acciones dependa de que se consiga una medida justa y duradera de resultados mejores que la media, por ejemplo, superar a la acción promedio del mismo sector durante un período de cinco años, por lo menos. Ningún CEO se merece hacerse rico si los resultados que ha proporcionado a sus accionistas son deficientes. Una última idea
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Bookmark on page 692 | Location 10137 | Added on Thursday, February 20, 2025 9:02:20 PM


==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Highlight on page 230 | Location 2975-2976 | Added on Thursday, February 20, 2025 10:29:37 PM

So when you are kicked and criticized, remember that it is often done because it gives the kicker a feeling of importance.
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Highlight on page 232 | Location 3006-3008 | Added on Thursday, February 20, 2025 10:34:51 PM

If we are tempted to be worried about unjust criticism, here is Rule 1: Remember that unjust criticism is often a disguised compliment.
Remember that no one ever kicks a dead
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Highlight on page 232 | Location 3006-3008 | Added on Thursday, February 20, 2025 10:34:57 PM

If we are tempted to be worried about unjust criticism, here is Rule 1: Remember that unjust criticism is often a disguised compliment.
Remember that no one ever kicks a dead dog.
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Highlight on page 234 | Location 3031-3032 | Added on Thursday, February 20, 2025 10:39:35 PM

One out of six! That is what happened to Jesus. Why should you and I expect a better score?
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Highlight on page 235 | Location 3040-3040 | Added on Thursday, February 20, 2025 10:40:50 PM

“Never be bothered by what people say, as long as you know in your heart you are right.”
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Highlight on page 235 | Location 3042-3044 | Added on Thursday, February 20, 2025 10:41:26 PM

“Do what you feel in your heart to be right—for you’ll be criticized, anyway. You’ll be ‘damned if you do, and damned if you don’t.’” That is her advice.
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Highlight on page 235 | Location 3049-3050 | Added on Thursday, February 20, 2025 10:42:33 PM

‘If you get your head above the crowd, you’re going to be criticized. So get used to the idea.’
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Highlight on page 237 | Location 3071-3073 | Added on Thursday, February 20, 2025 10:46:50 PM

When you and I are unjustly criticized, let’s remember Rule 2: Do the very best you can; and then put up your
old umbrella and keep the rain of criticism from
running down the back of your neck.
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Bookmark on page 239 | Location 3090 | Added on Thursday, February 20, 2025 10:50:12 PM


==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Highlight on page 239 | Location 3092-3099 | Added on Thursday, February 20, 2025 11:32:54 PM

“My family never makes any plans for me on Saturday night, for the family knows that I devote a part of each Saturday evening to self-examination and a review and appraisal of my work during the week. After dinner, I go off by myself, open my engagement book, and think over all the inter-views, discussions, and meetings that have taken place since Monday morning. I ask myself: ‘What mistakes did I make that time?’ ‘What did I do that was right—and in what way could I have improved my performance?’ ‘What lessons can I learn from that experience?’ I sometimes find that this weekly review makes me very unhappy. Sometimes I am astonished by my own blunders. Of course, as the years have gone by, these blunders have become less frequent. This system of self-analysis, continued year after year, has done more for me than any other thing I have ever attempted.”
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Highlight on page 240 | Location 3105-3107 | Added on Thursday, February 20, 2025 11:35:02 PM

Elbert Hubbard said: “Every man is a damn fool for at least five minutes every day. Wisdom consists in not exceeding that limit.”
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Highlight on page 243 | Location 3155-3157 | Added on Thursday, February 20, 2025 11:38:44 PM

Let’s keep a record of the fool things we have done
and criticize ourselves. Since we can’t hope to be perfect,
let’s do what E. H. Little did: let’s ask for unbiased,
helpful, constructive criticism.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 692 | Location 10146-10147 | Added on Friday, February 21, 2025 4:57:40 PM

sus obligaciones tuviesen categoría de títulos con grado de inversión. Esta habilidad del pasado para obtener unos ingresos superiores
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 692 | Location 10146-10148 | Added on Friday, February 21, 2025 4:58:07 PM

sus obligaciones tuviesen categoría de títulos con grado de inversión. Esta habilidad del pasado para obtener unos ingresos superiores a los intereses que se deben desembolsar constituye el margen de seguridad
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 692 | Location 10146-10148 | Added on Friday, February 21, 2025 4:58:11 PM

sus obligaciones tuviesen categoría de títulos con grado de inversión. Esta habilidad del pasado para obtener unos ingresos superiores a los intereses que se deben desembolsar constituye el margen de seguridad con el que se cuenta para proteger al inversor frente a las pérdidas o
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 692 | Location 10146-10148 | Added on Friday, February 21, 2025 4:58:12 PM

sus obligaciones tuviesen categoría de títulos con grado de inversión. Esta habilidad del pasado para obtener unos ingresos superiores a los intereses que se deben desembolsar constituye el margen de seguridad con el que se cuenta para proteger al inversor frente a las pérdidas o la
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 692 | Location 10146-10149 | Added on Friday, February 21, 2025 4:58:14 PM

sus obligaciones tuviesen categoría de títulos con grado de inversión. Esta habilidad del pasado para obtener unos ingresos superiores a los intereses que se deben desembolsar constituye el margen de seguridad con el que se cuenta para proteger al inversor frente a las pérdidas o la inquietud en el supuesto de que se produzca algún tipo de declive en
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 692 | Location 10146-10149 | Added on Friday, February 21, 2025 4:58:17 PM

sus obligaciones tuviesen categoría de títulos con grado de inversión. Esta habilidad del pasado para obtener unos ingresos superiores a los intereses que se deben desembolsar constituye el margen de seguridad con el que se cuenta para proteger al inversor frente a las pérdidas o la inquietud en el supuesto de que se produzca algún tipo de declive en el futuro en los ingresos netos.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 693 | Location 10156-10157 | Added on Friday, February 21, 2025 5:01:07 PM

suficientemente protegido frente a las vicisitudes del tiempo. El margen de seguridad de las obligaciones se puede calcular, alternativamente,
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 693 | Location 10156-10158 | Added on Friday, February 21, 2025 5:01:09 PM

suficientemente protegido frente a las vicisitudes del tiempo. El margen de seguridad de las obligaciones se puede calcular, alternativamente, comparando el valor total de la empresa con el importe de
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 693 | Location 10156-10158 | Added on Friday, February 21, 2025 5:01:11 PM

suficientemente protegido frente a las vicisitudes del tiempo. El margen de seguridad de las obligaciones se puede calcular, alternativamente, comparando el valor total de la empresa con el importe de la deuda.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 693 | Location 10157-10158 | Added on Friday, February 21, 2025 5:01:15 PM

El margen de seguridad de las obligaciones se puede calcular, alternativamente, comparando el valor total de la empresa con el importe de la deuda.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 695 | Location 10180-10181 | Added on Friday, February 21, 2025 5:09:00 PM

Supongamos, en un caso típico, que la capacidad de generación de beneficios es del 9 por ciento sobre la cotización y que el tipo de interés vigente de las
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 695 | Location 10180-10182 | Added on Friday, February 21, 2025 5:09:03 PM

Supongamos, en un caso típico, que la capacidad de generación de beneficios es del 9 por ciento sobre la cotización y que el tipo de interés vigente de las obligaciones es del 4 por ciento; en tal caso, el comprador de acciones tendrá un
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 695 | Location 10180-10182 | Added on Friday, February 21, 2025 5:09:08 PM

Supongamos, en un caso típico, que la capacidad de generación de beneficios es del 9 por ciento sobre la cotización y que el tipo de interés vigente de las obligaciones es del 4 por ciento; en tal caso, el comprador de acciones tendrá un margen medio anual del 5 por ciento que se devengará a su favor. Parte
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 695 | Location 10180-10182 | Added on Friday, February 21, 2025 5:09:10 PM

Supongamos, en un caso típico, que la capacidad de generación de beneficios es del 9 por ciento sobre la cotización y que el tipo de interés vigente de las obligaciones es del 4 por ciento; en tal caso, el comprador de acciones tendrá un margen medio anual del 5 por ciento que se devengará a su favor. Parte de ese
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 695 | Location 10180-10183 | Added on Friday, February 21, 2025 5:09:14 PM

Supongamos, en un caso típico, que la capacidad de generación de beneficios es del 9 por ciento sobre la cotización y que el tipo de interés vigente de las obligaciones es del 4 por ciento; en tal caso, el comprador de acciones tendrá un margen medio anual del 5 por ciento que se devengará a su favor. Parte de ese excedente le será abonado en la tasa de dividendo; aun cuando el inversor gaste
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 695 | Location 10180-10183 | Added on Friday, February 21, 2025 5:09:15 PM

Supongamos, en un caso típico, que la capacidad de generación de beneficios es del 9 por ciento sobre la cotización y que el tipo de interés vigente de las obligaciones es del 4 por ciento; en tal caso, el comprador de acciones tendrá un margen medio anual del 5 por ciento que se devengará a su favor. Parte de ese excedente le será abonado en la tasa de dividendo; aun cuando el inversor gaste ese
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 695 | Location 10180-10184 | Added on Friday, February 21, 2025 5:09:17 PM

Supongamos, en un caso típico, que la capacidad de generación de beneficios es del 9 por ciento sobre la cotización y que el tipo de interés vigente de las obligaciones es del 4 por ciento; en tal caso, el comprador de acciones tendrá un margen medio anual del 5 por ciento que se devengará a su favor. Parte de ese excedente le será abonado en la tasa de dividendo; aun cuando el inversor gaste ese dividendo, su importe deberá ser tenido en cuenta en el resultado general de su inversión. El saldo que no se distribuye se reinvierte en la empresa por su
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 695 | Location 10180-10184 | Added on Friday, February 21, 2025 5:09:19 PM

Supongamos, en un caso típico, que la capacidad de generación de beneficios es del 9 por ciento sobre la cotización y que el tipo de interés vigente de las obligaciones es del 4 por ciento; en tal caso, el comprador de acciones tendrá un margen medio anual del 5 por ciento que se devengará a su favor. Parte de ese excedente le será abonado en la tasa de dividendo; aun cuando el inversor gaste ese dividendo, su importe deberá ser tenido en cuenta en el resultado general de su inversión. El saldo que no se distribuye se reinvierte en la empresa por su cuenta.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 695 | Location 10180-10185 | Added on Friday, February 21, 2025 5:09:23 PM

Supongamos, en un caso típico, que la capacidad de generación de beneficios es del 9 por ciento sobre la cotización y que el tipo de interés vigente de las obligaciones es del 4 por ciento; en tal caso, el comprador de acciones tendrá un margen medio anual del 5 por ciento que se devengará a su favor. Parte de ese excedente le será abonado en la tasa de dividendo; aun cuando el inversor gaste ese dividendo, su importe deberá ser tenido en cuenta en el resultado general de su inversión. El saldo que no se distribuye se reinvierte en la empresa por su cuenta. En muchos casos, esos beneficios reinvertidos no son capaces de incrementar
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 695 | Location 10180-10185 | Added on Friday, February 21, 2025 5:09:29 PM

Supongamos, en un caso típico, que la capacidad de generación de beneficios es del 9 por ciento sobre la cotización y que el tipo de interés vigente de las obligaciones es del 4 por ciento; en tal caso, el comprador de acciones tendrá un margen medio anual del 5 por ciento que se devengará a su favor. Parte de ese excedente le será abonado en la tasa de dividendo; aun cuando el inversor gaste ese dividendo, su importe deberá ser tenido en cuenta en el resultado general de su inversión. El saldo que no se distribuye se reinvierte en la empresa por su cuenta. En muchos casos, esos beneficios reinvertidos no son capaces de incrementar proporcionalmente la capacidad de generación de beneficio y el valor
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 695 | Location 10180-10185 | Added on Friday, February 21, 2025 5:09:30 PM

Supongamos, en un caso típico, que la capacidad de generación de beneficios es del 9 por ciento sobre la cotización y que el tipo de interés vigente de las obligaciones es del 4 por ciento; en tal caso, el comprador de acciones tendrá un margen medio anual del 5 por ciento que se devengará a su favor. Parte de ese excedente le será abonado en la tasa de dividendo; aun cuando el inversor gaste ese dividendo, su importe deberá ser tenido en cuenta en el resultado general de su inversión. El saldo que no se distribuye se reinvierte en la empresa por su cuenta. En muchos casos, esos beneficios reinvertidos no son capaces de incrementar proporcionalmente la capacidad de generación de beneficio y el valor de sus acciones.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 695 | Location 10186-10188 | Added on Friday, February 21, 2025 5:10:25 PM

se retiene en forma de beneficios acumulados en la empresa.)427 No obstante, si se contempla la imagen en conjunto, hay
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 695 | Location 10186-10189 | Added on Friday, February 21, 2025 5:10:27 PM

se retiene en forma de beneficios acumulados en la empresa.)427 No obstante, si se contempla la imagen en conjunto, hay una conexión razonablemente estrecha entre el crecimiento de los superávits empresariales generados mediante la reinversión de los beneficios y el crecimiento
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 695 | Location 10186-10190 | Added on Friday, February 21, 2025 5:10:30 PM

se retiene en forma de beneficios acumulados en la empresa.)427 No obstante, si se contempla la imagen en conjunto, hay una conexión razonablemente estrecha entre el crecimiento de los superávits empresariales generados mediante la reinversión de los beneficios y el crecimiento del valor de las empresas.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 695 | Location 10187-10190 | Added on Friday, February 21, 2025 5:10:45 PM

No obstante, si se contempla la imagen en conjunto, hay una conexión razonablemente estrecha entre el crecimiento de los superávits empresariales generados mediante la reinversión de los beneficios y el crecimiento del valor de las empresas.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 695 | Location 10190-10199 | Added on Friday, February 21, 2025 5:13:17 PM

generación de beneficios de las acciones respecto de los intereses de las obligaciones puede llegar a acumular el 50 por ciento del precio pagado. Esta cifra es suficiente para ofrecer un margen de seguridad muy real, que, en condiciones favorables, evitará o reducirá al mínimo las pérdidas. Si existe dicho margen en cada una de las acciones presentes en la lista diversificada de 20 o más empresas, la probabilidad de un resultado favorable en «condiciones razonablemente normales» será muy grande. Ése es el motivo por el que la política de invertir en acciones ordinarias representativas no requiere mucho conocimiento ni capacidad de previsión para acabar teniendo éxito. Si las adquisiciones se hacen en el nivel medio de mercado correspondiente a una serie de años, los precios abonados deberían llevar con ellos la garantía de un margen de seguridad adecuado. El peligro para los inversores radica en concentrar sus adquisiciones en los niveles superiores de mercado, o en comprar acciones ordinarias no representativas que entrañan un riesgo superior a la media de reducción de la capacidad de generación de beneficios.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 695 | Location 10190-10199 | Added on Friday, February 21, 2025 5:13:23 PM

lo largo de un período de diez años, el excedente típico de capacidad de generación de beneficios de las acciones respecto de los intereses de las obligaciones puede llegar a acumular el 50 por ciento del precio pagado. Esta cifra es suficiente para ofrecer un margen de seguridad muy real, que, en condiciones favorables, evitará o reducirá al mínimo las pérdidas. Si existe dicho margen en cada una de las acciones presentes en la lista diversificada de 20 o más empresas, la probabilidad de un resultado favorable en «condiciones razonablemente normales» será muy grande. Ése es el motivo por el que la política de invertir en acciones ordinarias representativas no requiere mucho conocimiento ni capacidad de previsión para acabar teniendo éxito. Si las adquisiciones se hacen en el nivel medio de mercado correspondiente a una serie de años, los precios abonados deberían llevar con ellos la garantía de un margen de seguridad adecuado. El peligro para los inversores radica en concentrar sus adquisiciones en los niveles superiores de mercado, o en comprar acciones ordinarias no representativas que entrañan un riesgo superior a la media de reducción de la capacidad de generación de beneficios.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 695 | Location 10190-10199 | Added on Friday, February 21, 2025 5:13:33 PM

A lo largo de un período de diez años, el excedente típico de capacidad de generación de beneficios de las acciones respecto de los intereses de las obligaciones puede llegar a acumular el 50 por ciento del precio pagado. Esta cifra es suficiente para ofrecer un margen de seguridad muy real, que, en condiciones favorables, evitará o reducirá al mínimo las pérdidas. Si existe dicho margen en cada una de las acciones presentes en la lista diversificada de 20 o más empresas, la probabilidad de un resultado favorable en «condiciones razonablemente normales» será muy grande. Ése es el motivo por el que la política de invertir en acciones ordinarias representativas no requiere mucho conocimiento ni capacidad de previsión para acabar teniendo éxito. Si las adquisiciones se hacen en el nivel medio de mercado correspondiente a una serie de años, los precios abonados deberían llevar con ellos la garantía de un margen de seguridad adecuado. El peligro para los inversores radica en concentrar sus adquisiciones en los niveles superiores de mercado, o en comprar acciones ordinarias no representativas que entrañan un riesgo superior a la media de reducción de la capacidad de generación de beneficios.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 1224 | Location 13769-13769 | Added on Friday, February 21, 2025 5:16:07 PM

«El margen de seguridad es la diferencia entre el
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 1224 | Location 13769-13770 | Added on Friday, February 21, 2025 5:16:11 PM

«El margen de seguridad es la diferencia entre el porcentaje de beneficios de la acción al precio que se pagó por la acción y el tipo de
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 1224 | Location 13769-13770 | Added on Friday, February 21, 2025 5:16:13 PM

«El margen de seguridad es la diferencia entre el porcentaje de beneficios de la acción al precio que se pagó por la acción y el tipo de interés de las obligaciones,
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 1224 | Location 13769-13770 | Added on Friday, February 21, 2025 5:16:27 PM

«El margen de seguridad es la diferencia entre el porcentaje de beneficios de la acción al precio que se pagó por la acción y el tipo de interés de las obligaciones, y ese margen de seguridad es la diferencia que podría
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 1224 | Location 13769-13771 | Added on Friday, February 21, 2025 5:16:31 PM

«El margen de seguridad es la diferencia entre el porcentaje de beneficios de la acción al precio que se pagó por la acción y el tipo de interés de las obligaciones, y ese margen de seguridad es la diferencia que podría absorber cualquier acontecimiento insatisfactorio que pueda producirse.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 697 | Location 10212-10212 | Added on Friday, February 21, 2025 5:28:03 PM

No obstante, el riesgo de pagar un precio demasiado elevado por
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 697 | Location 10212-10212 | Added on Friday, February 21, 2025 5:28:04 PM

No obstante, el riesgo de pagar un precio demasiado elevado por una
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 697 | Location 10212-10212 | Added on Friday, February 21, 2025 5:28:05 PM

No obstante, el riesgo de pagar un precio demasiado elevado por una acción de buena
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 697 | Location 10212-10213 | Added on Friday, February 21, 2025 5:28:07 PM

No obstante, el riesgo de pagar un precio demasiado elevado por una acción de buena calidad, aunque es real, no es el principal peligro al
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 697 | Location 10212-10213 | Added on Friday, February 21, 2025 5:28:10 PM

No obstante, el riesgo de pagar un precio demasiado elevado por una acción de buena calidad, aunque es real, no es el principal peligro al que se enfrenta el comprador medio de acciones. La observación durante
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 697 | Location 10212-10215 | Added on Friday, February 21, 2025 5:28:26 PM

No obstante, el riesgo de pagar un precio demasiado elevado por una acción de buena calidad, aunque es real, no es el principal peligro al que se enfrenta el comprador medio de acciones. La observación durante muchos años nos ha enseñado que las principales pérdidas que sufren los inversores provienen de la adquisición de acciones de baja calidad en momentos en los que las condiciones económicas son favorables.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 697 | Location 10223-10227 | Added on Friday, February 21, 2025 5:30:17 PM

Por lo tanto, de todo esto se desprende que la mayor parte de las inversiones realizadas en momentos favorables, a precios y condiciones favorables, sufrirán perturbadores retrocesos de cotización cuando el horizonte se nuble y, frecuentemente, incluso antes de que lo haga. Tampoco puede el inversor confiar en una eventual recuperación —aunque ésta suele producirse en algunos casos—, porque nunca ha disfrutado de un verdadero margen de seguridad que le permita capear la adversidad. La filosofía de invertir en acciones de empresas en crecimiento
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 697 | Location 10223-10226 | Added on Friday, February 21, 2025 5:30:23 PM

Por lo tanto, de todo esto se desprende que la mayor parte de las inversiones realizadas en momentos favorables, a precios y condiciones favorables, sufrirán perturbadores retrocesos de cotización cuando el horizonte se nuble y, frecuentemente, incluso antes de que lo haga. Tampoco puede el inversor confiar en una eventual recuperación —aunque ésta suele producirse en algunos casos—, porque nunca ha disfrutado de un verdadero margen de seguridad que le permita capear la adversidad.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 699 | Location 10238-10238 | Added on Friday, February 21, 2025 5:32:35 PM

El margen de seguridad siempre depende del precio que se pague.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 700 | Location 10254-10255 | Added on Friday, February 21, 2025 5:35:40 PM

Existe una estrecha conexión lógica entre el concepto de margen de seguridad y el principio de diversificación. Uno es correlativo con el otro.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 700 | Location 10256-10257 | Added on Friday, February 21, 2025 5:36:05 PM

Con el margen lo único que se garantiza es que existen más probabilidades de beneficio que de pérdida, no que la pérdida sea imposible.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Bookmark on page 701 | Location 10270 | Added on Friday, February 21, 2025 6:15:31 PM


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 701 | Location 10273-10273 | Added on Friday, February 21, 2025 7:16:58 PM

Muchos de los autores niegan que exista una diferencia
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 701 | Location 10273-10274 | Added on Friday, February 21, 2025 7:17:01 PM

Muchos de los autores niegan que exista una diferencia útil o fiable entre los conceptos de inversión y de especulación. En nuestra
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 701 | Location 10273-10274 | Added on Friday, February 21, 2025 7:17:03 PM

Muchos de los autores niegan que exista una diferencia útil o fiable entre los conceptos de inversión y de especulación. En nuestra opinión, este escepticismo es innecesario y lesivo.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 701 | Location 10273-10274 | Added on Friday, February 21, 2025 7:17:07 PM

Muchos de los autores niegan que exista una diferencia útil o fiable entre los conceptos de inversión y de especulación. En nuestra opinión, este escepticismo es innecesario y lesivo. Es injurioso porque
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 701 | Location 10273-10275 | Added on Friday, February 21, 2025 7:17:10 PM

Muchos de los autores niegan que exista una diferencia útil o fiable entre los conceptos de inversión y de especulación. En nuestra opinión, este escepticismo es innecesario y lesivo. Es injurioso porque promueve la predisposición innata de muchas personas hacia la excitación
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 701 | Location 10273-10275 | Added on Friday, February 21, 2025 7:17:13 PM

Muchos de los autores niegan que exista una diferencia útil o fiable entre los conceptos de inversión y de especulación. En nuestra opinión, este escepticismo es innecesario y lesivo. Es injurioso porque promueve la predisposición innata de muchas personas hacia la excitación y los peligros de la especulación con acciones ordinarias.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 701 | Location 10273-10275 | Added on Friday, February 21, 2025 7:17:23 PM

Muchos de los autores niegan que exista una diferencia útil o fiable entre los conceptos de inversión y de especulación. En nuestra opinión, este escepticismo es innecesario y lesivo. Es injurioso porque promueve la predisposición innata de muchas personas hacia la excitación y los peligros de la especulación con acciones ordinarias. Somos de
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 701 | Location 10273-10276 | Added on Friday, February 21, 2025 7:17:26 PM

Muchos de los autores niegan que exista una diferencia útil o fiable entre los conceptos de inversión y de especulación. En nuestra opinión, este escepticismo es innecesario y lesivo. Es injurioso porque promueve la predisposición innata de muchas personas hacia la excitación y los peligros de la especulación con acciones ordinarias. Somos de la opinión de que el concepto de margen de seguridad se puede utilizar
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 701 | Location 10273-10276 | Added on Friday, February 21, 2025 7:17:28 PM

Muchos de los autores niegan que exista una diferencia útil o fiable entre los conceptos de inversión y de especulación. En nuestra opinión, este escepticismo es innecesario y lesivo. Es injurioso porque promueve la predisposición innata de muchas personas hacia la excitación y los peligros de la especulación con acciones ordinarias. Somos de la opinión de que el concepto de margen de seguridad se puede utilizar de manera muy provechosa como piedra de toque que permite distinguir
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 701 | Location 10273-10277 | Added on Friday, February 21, 2025 7:17:29 PM

Muchos de los autores niegan que exista una diferencia útil o fiable entre los conceptos de inversión y de especulación. En nuestra opinión, este escepticismo es innecesario y lesivo. Es injurioso porque promueve la predisposición innata de muchas personas hacia la excitación y los peligros de la especulación con acciones ordinarias. Somos de la opinión de que el concepto de margen de seguridad se puede utilizar de manera muy provechosa como piedra de toque que permite distinguir una operación de inversión de una operación de especulación.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 703 | Location 10293-10293 | Added on Friday, February 21, 2025 7:19:43 PM

Las inversiones convencionales son adecuadas para una cartera típica.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 703 | Location 10297-10298 | Added on Friday, February 21, 2025 7:19:50 PM

Las inversiones no convencionales son aquellas que únicamente son adecuadas para el inversor emprendedor.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 703 | Location 10303-10305 | Added on Friday, February 21, 2025 7:20:49 PM

Nosotros afirmamos que un precio suficientemente bajo puede hacer que un valor de categoría mediocre se convierta en una buena oportunidad de inversión, siempre y cuando el comprador esté informado y sea experto y ponga en práctica una diversificación adecuada.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 1227 | Location 13791-13791 | Added on Friday, February 21, 2025 7:22:56 PM

Graham está afirmando que no existen las acciones buenas ni las acciones
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 1227 | Location 13791-13792 | Added on Friday, February 21, 2025 7:23:04 PM

Graham está afirmando que no existen las acciones buenas ni las acciones malas; únicamente existen las acciones baratas y las acciones caras.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 1228 | Location 13797-13797 | Added on Friday, February 21, 2025 7:24:55 PM

según las palabras literales de Graham de un
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 1228 | Location 13797-13797 | Added on Friday, February 21, 2025 7:24:58 PM

según las palabras literales de Graham de un período anterior, «una depreciación de la cotización de casi el 90 por ciento hizo que
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 1228 | Location 13797-13798 | Added on Friday, February 21, 2025 7:25:01 PM

según las palabras literales de Graham de un período anterior, «una depreciación de la cotización de casi el 90 por ciento hizo que muchos de esos valores fuesen extraordinariamente atractivos y razonablemente
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 1228 | Location 13797-13798 | Added on Friday, February 21, 2025 7:25:02 PM

según las palabras literales de Graham de un período anterior, «una depreciación de la cotización de casi el 90 por ciento hizo que muchos de esos valores fuesen extraordinariamente atractivos y razonablemente seguros».
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 706 | Location 10339-10339 | Added on Friday, February 21, 2025 7:29:04 PM

La inversión es más inteligente cuanto más se parece a una operación
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 706 | Location 10339-10340 | Added on Friday, February 21, 2025 7:29:10 PM

La inversión es más inteligente cuanto más se parece a una operación empresarial.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 706 | Location 10343-10343 | Added on Friday, February 21, 2025 7:30:46 PM

Si una persona decide dedicarse a conseguir
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 706 | Location 10343-10343 | Added on Friday, February 21, 2025 7:30:48 PM

Si una persona decide dedicarse a conseguir beneficios con la compra y la venta de valores, se estará lanzando a una
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 706 | Location 10343-10344 | Added on Friday, February 21, 2025 7:30:50 PM

Si una persona decide dedicarse a conseguir beneficios con la compra y la venta de valores, se estará lanzando a una actividad empresarial, que deberá gestionar de conformidad con unos
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 706 | Location 10343-10344 | Added on Friday, February 21, 2025 7:30:52 PM

Si una persona decide dedicarse a conseguir beneficios con la compra y la venta de valores, se estará lanzando a una actividad empresarial, que deberá gestionar de conformidad con unos principios empresariales generalmente aceptados si quiere tener una probabilidad
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 706 | Location 10343-10345 | Added on Friday, February 21, 2025 7:30:53 PM

Si una persona decide dedicarse a conseguir beneficios con la compra y la venta de valores, se estará lanzando a una actividad empresarial, que deberá gestionar de conformidad con unos principios empresariales generalmente aceptados si quiere tener una probabilidad de prosperar.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 706 | Location 10345-10345 | Added on Friday, February 21, 2025 7:31:03 PM

El primero, y más evidente, de estos principios es: «Conozca lo que está haciendo, conozca su negocio».
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 706 | Location 10345-10349 | Added on Friday, February 21, 2025 7:31:30 PM

El primero, y más evidente, de estos principios es: «Conozca lo que está haciendo, conozca su negocio». En el caso del inversor, esto significa lo siguiente: no trate de conseguir «beneficios empresariales» con las operaciones que realice con valores, entendiendo por «beneficio empresarial» un rendimiento por encima de los intereses y dividendos ordinarios, salvo que tenga tantos conocimientos sobre el valor de los títulos como los que necesitaría tener sobre el valor de la mercancía que pretendiese fabricar o con la que pretendiese comerciar.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 707 | Location 10349-10351 | Added on Friday, February 21, 2025 7:31:42 PM

Un segundo principio sería el siguiente: «No permita que nadie dirija su empresa, salvo (1) que pueda supervisar sus resultados con una diligencia adecuada y comprendiendo los datos, o (2) salvo que tenga unos motivos inusualmente sólidos para depositar una confianza implícita en su integridad y capacidad».
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 707 | Location 10352-10355 | Added on Friday, February 21, 2025 7:33:17 PM

Un tercer principio empresarial sería el siguiente: «No haga una operación, es decir, no fabrique o comercie con un artículo, salvo que esté convencido después de realizar un cálculo fiable de que tiene una buena probabilidad de conseguir un beneficio razonable. En particular, manténgase alejado de los proyectos en los que tiene poco que ganar y mucho que perder».
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 707 | Location 10355-10356 | Added on Friday, February 21, 2025 7:33:26 PM

esto significa que sus operaciones para conseguir beneficio no deberían basarse en el optimismo, sino en los cálculos aritméticos.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 707 | Location 10358-10362 | Added on Friday, February 21, 2025 7:34:32 PM

La cuarta regla tiene una naturaleza más positiva: «Tenga el coraje de reconocer su conocimiento y su experiencia. Si ha llegado a una conclusión a partir de los hechos y sabe que su juicio es sensato, póngalo en práctica, aunque los demás duden u opinen otra cosa». (Usted no tendrá razón ni se equivocará por el hecho de que la multitud no esté de acuerdo con usted. Tendrá razón porque sus datos y su razonamiento sean correctos.) De la misma manera, en el mundo de los valores, el coraje es la virtud suprema después de un adecuado conocimiento y de una capacidad de juicio contrastada.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 708 | Location 10362-10366 | Added on Friday, February 21, 2025 7:35:19 PM

Afortunadamente, en el caso del inversor típico no suele ser necesario para el éxito que incorpore todas estas cualidades a su plan, siempre y cuando limite su ambición a su capacidad y restrinja sus actividades al seguro y estrecho sendero de la inversión ordinaria defensiva. Conseguir unos resultados de inversión satisfactorios es más sencillo de lo que la mayoría de la gente piensa; conseguir unos resultados superiores es mucho más difícil de lo que parece.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 709 | Location 10380-10382 | Added on Friday, February 21, 2025 7:36:42 PM

pérdidas en los períodos bajistas que inevitablemente siguen a los primeros. (Tener «razón» hace que los especuladores estén cada vez más dispuestos a asumir una mayor cantidad de riesgo, a medida que su confianza se va desbordando.)
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 709 | Location 10381-10382 | Added on Friday, February 21, 2025 7:36:50 PM

(Tener «razón» hace que los especuladores estén cada vez más dispuestos a asumir una mayor cantidad de riesgo, a medida que su confianza se va desbordando.)
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 710 | Location 10384-10386 | Added on Friday, February 21, 2025 7:37:50 PM

No es sorprendente que cuando se le pidió que resumiese todo lo que había aprendido durante su prolongada carrera sobre la forma de hacerse rico, el legendario financiero J. K. Klingenstein de Wertheim & Co. respondiese sencillamente: «No perder».
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 710 | Location 10387-10394 | Added on Friday, February 21, 2025 7:38:56 PM

Gráfico 20.1. El coste de las pérdidas Imagínese que encuentra una acción que usted cree que puede crecer un 10 por ciento al año, aunque el mercado sólo crezca un 5 por ciento anualmente. Lamentablemente, siente usted tal entusiasmo que paga un precio demasiado elevado, y la acción pierde el 50 por ciento de su valor el primer año. Aunque la acción posteriormente generase el doble del rendimiento del mercado, usted necesitará más de dieciséis años para sobrepasar al mercado, simplemente porque pagó demasiado, y perdió demasiado, al principio.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 711 | Location 10398-10399 | Added on Friday, February 21, 2025 7:39:47 PM

el «margen de seguridad» de Graham desempeña una función similar: al negarse a pagar demasiado por una inversión, se reducen al mínimo las probabilidades de que su patrimonio desaparezca o se destruya súbitamente.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 712 | Location 10415-10417 | Added on Friday, February 21, 2025 7:42:19 PM

El riesgo existe en otra dimensión: dentro de usted. Si sobreestima todo lo que sabe realmente sobre las inversiones, o sobreestima su capacidad para superar un desplome temporal de los precios, no importa cuál sea la composición de su cartera o cuál sea la evolución del mercado. En última instancia, el riesgo financiero no reside en los tipos de inversión que tenga en cartera, sino en el tipo de inversor que sea usted.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 713 | Location 10419-10423 | Added on Friday, February 21, 2025 7:42:53 PM

El psicólogo ganador del premio Nobel, Daniel Kahneman, explica dos factores que caracterizan a las buenas decisiones: • «Seguridad bien calibrada» (¿entiendo esta inversión tan bien como a mí me parece?). • «Aceptar de forma correcta el arrepentimiento» (¿cómo reaccionaré si mi análisis resulta ser erróneo?).
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 713 | Location 10424-10433 | Added on Friday, February 21, 2025 7:43:16 PM

Piense cuidadosamente en estas cuestiones: • ¿Qué experiencia tengo? ¿Qué tal lo he hecho en el pasado cuando me he enfrentado a situaciones similares? • ¿Cuál es el historial de otras personas que han tratado de hacer esto en el pasado?436 • Cuando yo compro, hay otra persona que vende. ¿Hasta qué punto es probable que yo sepa algo que esta otra persona (o empresa) no sepa? • Cuando yo vendo, hay otra persona que compra. ¿Hasta qué punto es probable que yo sepa algo que esta otra persona (o empresa) no sepa? • ¿He calculado cuánto tiene que subir esta inversión para que recupere mi dinero después de pagar impuestos y los costes de operación? A continuación, mire en el espejo para averiguar si es usted
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 713 | Location 10424-10433 | Added on Friday, February 21, 2025 7:43:26 PM

Piense cuidadosamente en estas cuestiones: • ¿Qué experiencia tengo? ¿Qué tal lo he hecho en el pasado cuando me he enfrentado a situaciones similares? • ¿Cuál es el historial de otras personas que han tratado de hacer esto en el pasado?436 • Cuando yo compro, hay otra persona que vende. ¿Hasta qué punto es probable que yo sepa algo que esta otra persona (o empresa) no sepa? • Cuando yo vendo, hay otra persona que compra. ¿Hasta qué punto es probable que yo sepa algo que esta otra persona (o empresa) no sepa? • ¿He calculado cuánto tiene que subir esta inversión para que recupere mi dinero después de pagar impuestos y los costes de operación?
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 714 | Location 10435-10440 | Added on Friday, February 21, 2025 7:44:20 PM

Responda a esa pregunta teniendo en cuenta estas cuestiones: • Si acierto, podría ganar mucho dinero. Sin embargo, ¿qué pasa si me equivoco? Atendiendo a los resultados históricos de inversiones similares, ¿cuánto podría llegar a perder? • ¿Tengo otras inversiones que me ayuden a capear la situación si esta decisión acaba siendo errónea? ¿Tengo acciones, obligaciones o fondos con un historial contrastado de subida cuando este tipo de inversión evolucione a la baja? ¿Estoy arriesgando una cantidad exagerada de mi capital con esta nueva inversión?
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 714 | Location 10440-10445 | Added on Friday, February 21, 2025 7:44:25 PM

Cuando me digo: «Tienes una elevada tolerancia hacia el riesgo», ¿cómo he llegado a saberlo? ¿He perdido alguna vez mucho dinero con una inversión? ¿Cómo me sentí? ¿Compré más o liquidé mi posición? • ¿Me estoy basando únicamente en mi fuerza de voluntad para decidir que no voy a ceder al pánico en el peor momento? ¿O he controlado mi comportamiento anticipadamente mediante la diversificación, mediante la firma de un contrato de inversión y mediante la técnica del plan de inversión constante?
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 714 | Location 10445-10446 | Added on Friday, February 21, 2025 7:45:14 PM

«el riesgo es una combinación de dosis iguales de dos ingredientes: probabilidades y consecuencias».
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 1233 | Location 13816-13817 | Added on Friday, February 21, 2025 7:45:32 PM

Paul Slovic, «Informing and Educating the Public about Risk», Risk Analysis, vol. 6, n.o 4 (1986), p. 412.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 715 | Location 10462-10463 | Added on Friday, February 21, 2025 7:47:30 PM

Bernstein llega a la siguiente conclusión: «A la hora de adoptar decisiones en condiciones de incertidumbre, las consecuencias deben dominar a las probabilidades. Nunca sabemos lo que va a pasar en el futuro».
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 716 | Location 10465-10467 | Added on Friday, February 21, 2025 7:48:02 PM

La probabilidad de cometer por lo menos un error en algún momento de su vida de inversión es prácticamente del cien por cien, y esas probabilidades están absolutamente fuera de su control.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 716 | Location 10465-10467 | Added on Friday, February 21, 2025 7:48:13 PM

La probabilidad de cometer por lo menos un error en algún momento de su vida de inversión es prácticamente del cien por cien, y esas probabilidades están absolutamente fuera de su control. No obstante, usted sí que tiene control sobre las consecuencias que tendría su equivocación.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 718 | Location 10503-10506 | Added on Friday, February 21, 2025 7:55:19 PM

Sin embargo, más allá de la suerte o de la decisión crucial, tiene que haber unos antecedentes de preparación y de capacidad disciplinada. Es necesario tener un fundamento suficiente y la fama adecuada para que estas oportunidades llamen a la puerta. Hace falta tener los medios, la capacidad de juicio y el coraje para aprovecharlas.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 720 | Location 10511-10512 | Added on Friday, February 21, 2025 7:55:55 PM

Para tener éxito en la inversión es necesario gestionar el riesgo, no evitarlo.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 720 | Location 10522-10523 | Added on Friday, February 21, 2025 7:58:15 PM

La incertidumbre siempre ha existido, y siempre existirá. A la hora de la verdad, «incertidumbre» e «inversión» son sinónimos.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 721 | Location 10525-10526 | Added on Friday, February 21, 2025 7:58:39 PM

Para ser inversor es necesario, es imprescindible, tener fe en que el mañana que nos espera será mejor.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 721 | Location 10530-10543 | Added on Friday, February 21, 2025 8:00:22 PM

Oh hermanos», dije, «que después de cien mil peligros habéis llegado a occidente, en esta tan pequeña vigilia que resta a nuestros sentidos no queráis negaros la experiencia, del mundo despoblado que nos espera siguiendo al Sol. Considerad la simiente de la que procedéis: hechos no fuisteis para vivir como brutos, sino para perseguir virtud y conocimiento». Con esta mi breve arenga mis compañeros tornáronse tan ansiosos de seguir camino, que apenas podría con esfuerzo haberlos contenido y, vuelta nuestra popa a la mañana, de los remos hicimos alas para el loco vuelo.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 726 | Location 10613-10616 | Added on Friday, February 21, 2025 8:18:13 PM

familias ganadoras aleatoriamente distribuidas. En este grupo de inversores de éxito que quiero examinar había un patriarca intelectual común, Ben Graham. Sin embargo, los niños que abandonaron la casa de este patriarca intelectual decidieron sus «apuestas» de formas muy diferentes. Fueron a lugares diferentes y compraron y vendieron diferentes acciones de diferentes empresas y, no obstante, consiguieron unos resultados combinados que simplemente no se pueden explicar por la casualidad aleatoria.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 726 | Location 10613-10616 | Added on Friday, February 21, 2025 8:18:19 PM

En este grupo de inversores de éxito que quiero examinar había un patriarca intelectual común, Ben Graham. Sin embargo, los niños que abandonaron la casa de este patriarca intelectual decidieron sus «apuestas» de formas muy diferentes. Fueron a lugares diferentes y compraron y vendieron diferentes acciones de diferentes empresas y, no obstante, consiguieron unos resultados combinados que simplemente no se pueden explicar por la casualidad aleatoria.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 727 | Location 10619-10621 | Added on Friday, February 21, 2025 8:19:00 PM

El rasgo intelectual común de los inversores procedentes de Graham and Doddsville es el siguiente: buscan discrepancias entre el valor de una empresa y el precio de las pequeñas partes de la empresa que se venden en el mercado.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Highlight on page 727 | Location 10627-10630 | Added on Friday, February 21, 2025 8:20:25 PM

Nuestros inversores de Graham & Dodd, huelga siquiera mencionarlo, no se ocupan ni de betas, ni de modelos de determinación de precios de activos de capital, ni de covarianzas en los rendimientos entre valores. No son temas que les interesen. De hecho, la mayoría de ellos tendrían dificultades para definir esos términos. Los inversores se centran simplemente en dos variables: precio y valor.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- Your Bookmark on page 739 | Location 10789 | Added on Friday, February 21, 2025 8:24:08 PM


==========
design-patterns-en (Alexander Shvets)
- Your Bookmark on page 30 | Location 224 | Added on Saturday, February 22, 2025 8:20:39 PM


==========
design-patterns-en (Alexander Shvets)
- Your Highlight on page 44 | Location 322-322 | Added on Saturday, February 22, 2025 8:23:48 PM

Encapsulate What Varies
==========
design-patterns-en (Alexander Shvets)
- Your Highlight on page 44 | Location 322-323 | Added on Saturday, February 22, 2025 8:23:59 PM

Encapsulate What Varies Identify the aspects of your application that vary and separate them from what stays the same.
==========
design-patterns-en (Alexander Shvets)
- Your Highlight on page 44 | Location 322-324 | Added on Saturday, February 22, 2025 8:24:29 PM

Encapsulate What Varies Identify the aspects of your application that vary and separate them from what stays the same. The main goal of this principle is to minimize the effect caused by changes.
==========
design-patterns-en (Alexander Shvets)
- Your Highlight on page 49 | Location 366-367 | Added on Saturday, February 22, 2025 8:30:05 PM

Program to an Interface, not an Implementation Program to an interface, not an implementation. Depend on abstractions, not on concrete
==========
design-patterns-en (Alexander Shvets)
- Your Highlight on page 49 | Location 366-367 | Added on Saturday, February 22, 2025 8:30:08 PM

Program to an Interface, not an Implementation Program to an interface, not an implementation. Depend on abstractions, not on concrete classes.
==========
design-patterns-en (Alexander Shvets)
- Your Highlight on page 49 | Location 372-376 | Added on Saturday, February 22, 2025 8:32:20 PM

flexible way to set up collaboration between objects: Determine what exactly one object needs from the other: which methods does it execute? Describe these methods in a new interface or abstract class. Make the class that is a dependency implement this interface. Now make the second class dependent on this interface rather than on the concrete class. You still can make it work with objects of the original class, but the connection is now much more flexible.
==========
design-patterns-en (Alexander Shvets)
- Your Highlight on page 55 | Location 404-404 | Added on Saturday, February 22, 2025 8:59:06 PM

Favor Composition Over Inheritance
==========
design-patterns-en (Alexander Shvets)
- Your Highlight on page 55 | Location 407-409 | Added on Saturday, February 22, 2025 8:59:58 PM

A subclass can’t reduce the interface of the superclass. You have to implement all abstract methods of the parent class even if you won’t be using them.
==========
design-patterns-en (Alexander Shvets)
- Your Highlight on page 55 | Location 407-411 | Added on Saturday, February 22, 2025 9:00:11 PM

A subclass can’t reduce the interface of the superclass. You have to implement all abstract methods of the parent class even if you won’t be using them. When overriding methods you need to make sure that the new behavior is compatible with the base one. It’s important because objects of the subclass may be passed to any code that expects objects of the superclass and you don’t want that code to break.
==========
design-patterns-en (Alexander Shvets)
- Your Highlight on page 55 | Location 407-412 | Added on Saturday, February 22, 2025 9:01:11 PM

A subclass can’t reduce the interface of the superclass. You have to implement all abstract methods of the parent class even if you won’t be using them. When overriding methods you need to make sure that the new behavior is compatible with the base one. It’s important because objects of the subclass may be passed to any code that expects objects of the superclass and you don’t want that code to break. Inheritance breaks encapsulation of the superclass because the internal details of the parent class become available to the subclass.
==========
design-patterns-en (Alexander Shvets)
- Your Highlight on page 56 | Location 413-414 | Added on Saturday, February 22, 2025 9:02:05 PM

Subclasses are tightly coupled to superclasses. Any change in a superclass may break the functionality of subclasses.
==========
design-patterns-en (Alexander Shvets)
- Your Highlight on page 56 | Location 413-415 | Added on Saturday, February 22, 2025 9:02:21 PM

Subclasses are tightly coupled to superclasses. Any change in a superclass may break the functionality of subclasses. Trying to reuse code through inheritance can lead to creating parallel inheritance hierarchies.
==========
design-patterns-en (Alexander Shvets)
- Your Highlight on page 56 | Location 416-417 | Added on Saturday, February 22, 2025 9:02:50 PM

There’s an alternative to inheritance called composition.
==========
design-patterns-en (Alexander Shvets)
- Your Highlight on page 56 | Location 416-418 | Added on Saturday, February 22, 2025 9:03:00 PM

There’s an alternative to inheritance called composition. Whereas inheritance represents the “is a” relationship between classes (a car is a transport), composition represents the “has a” relationship
==========
design-patterns-en (Alexander Shvets)
- Your Highlight on page 56 | Location 416-418 | Added on Saturday, February 22, 2025 9:03:07 PM

There’s an alternative to inheritance called composition. Whereas inheritance represents the “is a” relationship between classes (a car is a transport), composition represents the “has a” relationship (a car has an
==========
design-patterns-en (Alexander Shvets)
- Your Highlight on page 56 | Location 416-418 | Added on Saturday, February 22, 2025 9:03:08 PM

There’s an alternative to inheritance called composition. Whereas inheritance represents the “is a” relationship between classes (a car is a transport), composition represents the “has a” relationship (a car has an engine).
==========
design-patterns-en (Alexander Shvets)
- Your Highlight on page 56 | Location 416-420 | Added on Saturday, February 22, 2025 9:03:32 PM

There’s an alternative to inheritance called composition. Whereas inheritance represents the “is a” relationship between classes (a car is a transport), composition represents the “has a” relationship (a car has an engine). I should mention that this principle also applies to aggregation—a more relaxed variant of composition where one object may have a reference to the other one but doesn’t manage its lifecycle.
==========
design-patterns-en (Alexander Shvets)
- Your Highlight on page 56 | Location 416-420 | Added on Saturday, February 22, 2025 9:03:45 PM

There’s an alternative to inheritance called composition. Whereas inheritance represents the “is a” relationship between classes (a car is a transport), composition represents the “has a” relationship (a car has an engine). I should mention that this principle also applies to aggregation—a more relaxed variant of composition where one object may have a reference to the other one but doesn’t manage its lifecycle. Here’s an example: a car has a driver, but he or she may use another car or just walk without the car.
==========
design-patterns-en (Alexander Shvets)
- Your Highlight on page 57 | Location 426-427 | Added on Saturday, February 22, 2025 9:06:56 PM

You can solve this problem with composition. Instead of car objects implementing a behavior on their own, they can delegate it to other objects.
==========
design-patterns-en (Alexander Shvets)
- Your Highlight on page 57 | Location 426-428 | Added on Saturday, February 22, 2025 9:07:07 PM

You can solve this problem with composition. Instead of car objects implementing a behavior on their own, they can delegate it to other objects. The added benefit is that you can replace a behavior at runtime.
==========
design-patterns-en (Alexander Shvets)
- Your Highlight on page 60 | Location 442-443 | Added on Saturday, February 22, 2025 9:10:00 PM

Single Responsibility Principle A class should have just one reason to change.
==========
design-patterns-en (Alexander Shvets)
- Your Highlight on page 63 | Location 461-462 | Added on Saturday, February 22, 2025 9:14:01 PM

Open/Closed Principle Classes should be open for extension but closed for modification.
==========
design-patterns-en (Alexander Shvets)
- Your Highlight on page 63 | Location 461-463 | Added on Saturday, February 22, 2025 9:14:19 PM

Open/Closed Principle Classes should be open for extension but closed for modification. The main idea of this principle is to keep existing code from breaking when you implement new features.
==========
design-patterns-en (Alexander Shvets)
- Your Highlight on page 65 | Location 478-480 | Added on Saturday, February 22, 2025 9:16:50 PM

BEFORE: you have to change the Order class whenever you add a new shipping method to the app. You can solve the problem by applying the Strategy pattern.
==========
design-patterns-en (Alexander Shvets)
- Your Highlight on page 65 | Location 480-480 | Added on Saturday, February 22, 2025 9:16:59 PM

extracting shipping methods into separate classes with a common interface.
==========
design-patterns-en (Alexander Shvets)
- Your Highlight on page 68 | Location 488-491 | Added on Saturday, February 22, 2025 9:18:46 PM

Liskov Substitution Principle 7 When extending a class, remember that you should be able to pass objects of the subclass in place of objects of the parent class without breaking the client code.
==========
design-patterns-en (Alexander Shvets)
- Your Highlight on page 68 | Location 496-496 | Added on Saturday, February 22, 2025 9:21:42 PM

Parameter
==========
design-patterns-en (Alexander Shvets)
- Your Highlight on page 68 | Location 496-497 | Added on Saturday, February 22, 2025 9:21:44 PM

Parameter types in a method of a subclass should match or be more abstract than parameter types in the method of the superclass.
==========
design-patterns-en (Alexander Shvets)
- Your Highlight on page 69 | Location 506-507 | Added on Saturday, February 22, 2025 9:21:53 PM

The return type in a method of a subclass should match or be a subtype of the return type in the method of the superclass. As
==========
design-patterns-en (Alexander Shvets)
- Your Highlight on page 70 | Location 514 | Added on Saturday, February 22, 2025 9:25:56 PM

A
==========
design-patterns-en (Alexander Shvets)
- Your Highlight on page 70 | Location 514-515 | Added on Saturday, February 22, 2025 9:25:58 PM

A method in a subclass shouldn’t throw types of exceptions which the base method isn’t expected to throw.
==========
design-patterns-en (Alexander Shvets)
- Your Highlight on page 70 | Location 516-516 | Added on Saturday, February 22, 2025 9:26:07 PM

subtypes of the ones that the base method is already able to throw. This rule comes
==========
design-patterns-en (Alexander Shvets)
- Your Highlight on page 70 | Location 514-515 | Added on Saturday, February 22, 2025 9:26:11 PM

A method in a subclass shouldn’t throw types of exceptions which the base method isn’t expected to throw. In other words,
==========
design-patterns-en (Alexander Shvets)
- Your Highlight on page 70 | Location 514-515 | Added on Saturday, February 22, 2025 9:26:14 PM

A method in a subclass shouldn’t throw types of exceptions which the base method isn’t expected to throw. In other words, types of
==========
design-patterns-en (Alexander Shvets)
- Your Underline on page 70 | Location 515-516 | Added on Saturday, February 22, 2025 9:26:15 PM

exceptions should match or be
==========
design-patterns-en (Alexander Shvets)
- Your Highlight on page 70 | Location 514-516 | Added on Saturday, February 22, 2025 9:26:17 PM

A method in a subclass shouldn’t throw types of exceptions which the base method isn’t expected to throw. In other words, types of exceptions should match or be subtypes of the ones that the base method is already able to throw. This rule comes
==========
design-patterns-en (Alexander Shvets)
- Your Highlight on page 71 | Location 520-521 | Added on Saturday, February 22, 2025 9:26:43 PM

A subclass shouldn’t strengthen pre-conditions.
==========
design-patterns-en (Alexander Shvets)
- Your Highlight on page 71 | Location 524-525 | Added on Saturday, February 22, 2025 9:27:15 PM

A subclass shouldn’t weaken post-conditions.
==========
design-patterns-en (Alexander Shvets)
- Your Highlight on page 71 | Location 528-529 | Added on Saturday, February 22, 2025 9:27:57 PM

Invariants of a superclass must be preserved.
==========
design-patterns-en (Alexander Shvets)
- Your Highlight on page 71 | Location 529-531 | Added on Saturday, February 22, 2025 9:28:28 PM

of all. Invariants are conditions in which an object makes sense. For example, invariants of a cat are having four legs, a tail, ability to meow, etc. The confusing
==========
design-patterns-en (Alexander Shvets)
- Your Highlight on page 72 | Location 534-535 | Added on Saturday, February 22, 2025 9:29:20 PM

A subclass shouldn’t change values of private fields of the superclass. What?
==========
design-patterns-en (Alexander Shvets)
- Your Highlight on page 75 | Location 551-552 | Added on Saturday, February 22, 2025 9:32:57 PM

Interface Segregation Principle Clients shouldn’t be forced to depend on methods they do not use.
==========
design-patterns-en (Alexander Shvets)
- Your Highlight on page 78 | Location 573-574 | Added on Saturday, February 22, 2025 9:33:26 PM

Dependency Inversion Principle High-level classes shouldn’t depend on low-level classes. Both should depend on abstractions. Abstractions shouldn’t depend on details. Details should depend on abstractions.
==========
design-patterns-en (Alexander Shvets)
- Your Highlight on page 78 | Location 575-577 | Added on Saturday, February 22, 2025 9:34:16 PM

Low-level classes implement basic operations such as working with a disk, transferring data over a network, connecting to a database, etc. High-level classes contain complex business logic that directs low-level classes to do something.
==========
design-patterns-en (Alexander Shvets)
- Your Highlight on page 79 | Location 586-587 | Added on Saturday, February 22, 2025 9:36:45 PM

Once low-level classes implement these interfaces, they become dependent on the business logic level, reversing the direction of the original dependency.
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Highlight on page 245 | Location 3159-3164 | Added on Sunday, February 23, 2025 12:42:24 AM

Part Six in a Nutshell How to keep from worrying about criticism RULE 1: Unjust criticism is often a disguised compliment. It often means that you have aroused jealousy and envy. Remember that no one ever kicks a dead dog. RULE 2: Do the very best you can; and then put up your old umbrella and keep the rain of criticism from running down the back of your neck. RULE 3: Let’s keep a record of the fool things we have done and criticize ourselves. Since we can’t hope to be perfect, let’s do what E.H. Little did: let’s ask for unbiased, helpful, constructive criticism.
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 14 | posición 165-167 | Añadido el martes, 17 de enero de 2023 14:19:36

Una acción no es un simple símbolo en una tabla de cotizaciones o un pulso electrónico; es una participación en la propiedad de un negocio real, con un valor subyacente que no depende de la cotización de la acción.
==========
﻿El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 14 | posición 168-169 | Añadido el martes, 17 de enero de 2023 14:19:57

El inversor inteligente es un realista que vende a optimistas y compra a pesimistas.
==========
﻿El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 14 | posición 169-171 | Añadido el martes, 17 de enero de 2023 14:20:26

El valor futuro de todas las inversiones es una función de su precio actual. Cuanto mayor sea el precio que se paga, menor será la rentabilidad que se obtenga.
==========
﻿El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 15 | posición 183-183 | Añadido el martes, 17 de enero de 2023 14:21:36

Envidio la emoción y la experiencia formativa de que van
==========
﻿El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 24 | posición 311-313 | Añadido el miércoles, 18 de enero de 2023 18:22:29

Los expertos no disponen de formas fiables de elegir y concentrar sus inversiones en las empresas más prometedoras de los sectores más prometedores.
==========
﻿El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 24 | posición 310-311 | Añadido el miércoles, 18 de enero de 2023 18:22:35

Las perspectivas evidentes de crecimiento físico de un sector no se traducen en beneficios evidentes para los inversionistas.
==========
﻿El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 36 | posición 471-472 | Añadido el jueves, 19 de enero de 2023 23:01:20

«Las perspectivas evidentes de crecimiento físico de una empresa no se traducen en beneficios evidentes para los inversores».
==========
﻿El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 38 | posición 503-505 | Añadido el viernes, 20 de enero de 2023 17:41:28

«Una operación de inversión es aquella que, después de realizar un análisis exhaustivo, promete la seguridad del principal y un adecuado rendimiento. Las operaciones que no satisfacen estos requisitos son especulativas».
==========
﻿El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 42 | posición 563-564 | Añadido el viernes, 20 de enero de 2023 17:55:44

No mezcle nunca sus operaciones especulativas y sus operaciones de inversión en la misma cuenta ni en ningún apartado de su mente.
==========
﻿El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 42 | posición 560-563 | Añadido el viernes, 20 de enero de 2023 17:55:55

pequeña mejor de su patrimonio, colóquela en una cuenta separada y destínela a este fin. No añada nunca más dinero a esta cuenta simplemente porque el mercado ha evolucionado al alza y los beneficios son copiosos. (En realidad, ése será, precisamente, el momento de empezar a pensar en la posibilidad de retirar dinero del fondo especulativo.)
==========
﻿El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 42 | posición 560-563 | Añadido el viernes, 20 de enero de 2023 17:56:01

divertida, siempre y cuando sus resultados sean favorables. Si quiere probar suerte, separe una porción cuanto más pequeña mejor de su patrimonio, colóquela en una cuenta separada y destínela a este fin. No añada nunca más dinero a esta cuenta simplemente porque el mercado ha evolucionado al alza y los beneficios son copiosos. (En realidad, ése será, precisamente, el momento de empezar a pensar en la posibilidad de retirar dinero del fondo especulativo.)
==========
﻿El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 42 | posición 560-563 | Añadido el viernes, 20 de enero de 2023 17:56:13

Si quiere probar suerte, separe una porción cuanto más pequeña mejor de su patrimonio, colóquela en una cuenta separada y destínela a este fin. No añada nunca más dinero a esta cuenta simplemente porque el mercado ha evolucionado al alza y los beneficios son copiosos. (En realidad, ése será, precisamente, el momento de empezar a pensar en la posibilidad de retirar dinero del fondo especulativo.)
==========
﻿El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 61 | posición 819-820 | Añadido el lunes, 23 de enero de 2023 22:54:18

«Una operación de inversión es aquella que, tras un análisis exhaustivo, promete seguridad para el principal y un adecuado rendimiento».
==========
﻿El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 62 | posición 838 | Añadido el lunes, 23 de enero de 2023 22:58:03


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 76 | posición 1022-1033 | Añadido el sábado, 28 de enero de 2023 17:04:52

Todo esto refuerza la advertencia de Graham de que hay que dar a la especulación el mismo tratamiento que los jugadores veteranos dan a sus visitas al casino: • Nunca debe engañarse, creyendo que está invirtiendo cuando en realidad está especulando. • La especulación se hace mortalmente peligrosa en el momento en el que uno empieza a tomársela en serio. • Debe poner límites estrictos a la cantidad que está dispuesto a apostar. Al igual que hacen los jugadores sensatos cuando, por ejemplo, llevan 100 dólares al casino y dejan el resto del dinero bajo llave en la caja de seguridad de la habitación del hotel, el inversor inteligente separa una pequeña parte de su cartera total y la destina a una cuenta de «dinero para tonterías». Para la mayoría de nosotros, el 10 por ciento de nuestro patrimonio general es la cantidad máxima que podemos permitirnos arriesgar en operaciones especulativas. No mezcle nunca el dinero de su cuenta especulativa con el dinero de sus cuentas de inversión: no permita nunca que su forma de pensar especulativa influya en sus actividades de inversión, y no ponga nunca más del 10 por ciento de sus activos en su cuenta de dinero para tonterías, pase lo que pase.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 79 | posición 1050-1056 | Añadido el domingo, 29 de enero de 2023 17:07:35

Nuestros lectores tendrán la inteligencia suficiente para darse cuenta de que ni siquiera las acciones de mejor calidad pueden ser una compra mejor que las obligaciones en todas las circunstancias, es decir, con independencia de lo elevado que esté el mercado de valores y de lo reducida que sea la rentabilidad por dividendo en comparación con los tipos de interés ofrecidos por las obligaciones. Una afirmación de ese tipo sería tan absurda como la contraria, tan frecuentemente repetida años atrás, de que cualquier obligación es más segura que cualquier acción. En este capítulo trataremos de aplicar diferentes medidas al factor inflación, para poder alcanzar algunas conclusiones sobre el grado en que el inversor puede verse inteligentemente influido por las expectativas sobre futuras alzas en el nivel de precios.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 84 | posición 1111-1112 | Añadido el domingo, 29 de enero de 2023 17:26:14

No hay conexión temporal estrecha entre las condiciones inflacionarias (o deflacionarias) y la evolución de las cotizaciones y beneficios de las acciones ordinarias.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 84 | posición 1117-1120 | Añadido el domingo, 29 de enero de 2023 17:52:55

Otra forma muy importante de abordar esta cuestión consiste en estudiar la tasa de beneficio sobre el capital generado por las empresas estadounidenses. Dicha tasa, evidentemente, ha fluctuado junto con la tasa general de actividad económica, pero no ha mostrado una tendencia general a aumentar con los precios al por mayor o con el coste de la vida. De hecho, dicha tasa se ha reducido de manera muy acusada durante los últimos veinte años, a pesar de la inflación experimentada en dicho período.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 85 | posición 1127-1132 | Añadido el domingo, 29 de enero de 2023 17:58:20

Nuestras cifras encajan perfectamente con la idea que se planteaba en el capítulo50 anterior que sugería que el inversor puede esperar un rendimiento por dividendo medio de aproximadamente el 3,5 por ciento del valor de mercado de sus acciones, más una apreciación de aproximadamente el 4 por ciento anual, resultante de la reinversión de beneficios. (Se debe tener en cuenta que en este cálculo se supone que cada unidad monetaria añadida al valor contable incrementa el precio de mercado en aproximadamente 1,60 unidades monetarias.)
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 86 | posición 1139-1147 | Añadido el domingo, 29 de enero de 2023 18:02:24

Justificamos nuestra postura en la ausencia de cualquier signo de que un nivel de inflación comparable en el pasado haya tenido algún efecto directo sobre los beneficios por acción declarados. Las frías cifras demuestran que la totalidad de la gran ganancia obtenida por la unidad del DJIA durante los últimos veinte años se debió a un gran crecimiento proporcional del capital invertido derivado de la reinversión de beneficios. Si la inflación hubiese operado como factor independiente favorable, su efecto habría sido el de incrementar el «valor» del capital previamente existente; a su vez, esto debería haber incrementado la tasa de beneficio de dicho capital antiguo y, por lo tanto, del capital antiguo y del nuevo combinado. Sin embargo, nada de esto ha sucedido en los veinte últimos años, durante los cuales el nivel de precio al por mayor ha aumentado prácticamente en un 40 por ciento. (Los beneficios empresariales deberían verse más influidos por los precios mayoristas que por los precios al consumo.) El único mecanismo para que la inflación incremente el valor de las acciones es el aumento de los beneficios de la inversión de capital.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 88 | posición 1177-1179 | Añadido el domingo, 29 de enero de 2023 18:11:31

Si el futuro tiene algo garantizado es que los beneficios y el valor medio anual de mercado de una cartera de valores no crecerán a un tipo uniforme del 4 por ciento ni de ninguna otra cifra. En las memorables palabras de J. P. Morgan, «Fluctuarán».
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 89 | posición 1180-1181 | Añadido el domingo, 29 de enero de 2023 18:11:56

precios actuales, o a los precios del futuro, correrá un riesgo real de sufrir resultados insatisfactorios durante un período de varios años. Fueron necesarios 25 años para que General Electric (y el propio
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 88 | posición 1177-1181 | Añadido el domingo, 29 de enero de 2023 18:12:09

Si el futuro tiene algo garantizado es que los beneficios y el valor medio anual de mercado de una cartera de valores no crecerán a un tipo uniforme del 4 por ciento ni de ninguna otra cifra. En las memorables palabras de J. P. Morgan, «Fluctuarán».51 Esto significa, en primer lugar, que el comprador de acciones a los precios actuales, o a los precios del futuro, correrá un riesgo real de sufrir resultados insatisfactorios durante un período de varios años.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 91 | posición 1211-1215 | Añadido el domingo, 29 de enero de 2023 18:20:16

Por el mero hecho de la existencia de incertidumbres en el futuro el inversor no puede permitirse el lujo de colocar todos sus fondos en una única cesta, ni en la cesta de las obligaciones, a pesar de los rendimientos excepcionalmente elevados que las obligaciones han ofrecido recientemente, ni en la cesta de valores, a pesar de la perspectiva de inflación sostenida. Cuanto más dependa el inversor de su cartera y de la renta que obtenga de ella, más necesario le resultará protegerse de lo imprevisto y de lo desconcertante en esa etapa de su vida.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 95 | posición 1267-1268 | Añadido el domingo, 29 de enero de 2023 18:33:19

Erradicar por completo la inflación va en contra de los intereses de cualquier Administración pública que tome prestado dinero con regularidad.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 100 | posición 1324 | Añadido el domingo, 29 de enero de 2023 18:44:58


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 100 | posición 1324 | Añadido el domingo, 29 de enero de 2023 18:45:05


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 112 | posición 1494-1507 | Añadido el sábado, 4 de febrero de 2023 10:26:21

Los principios de la inversión, tal y como se exponen en el presente documento, exigirían la siguiente política en las condiciones imperantes en 1964, por orden de urgencia: 1. No endeudarse para adquirir o mantener valores. 2. No incrementar la proporción de fondos destinados a acciones ordinarias. 3. Reducir la cartera de acciones cuando sea necesario para realinear su proporción hasta un máximo del 50 por ciento de la cartera total. El impuesto sobre plusvalías deberá ser abonado con el mejor talante posible y los fondos obtenidos deberán invertirse en obligaciones de la mejor calidad o ser depositados en cuentas de ahorro. Los inversores que hayan estado siguiendo durante un cierto período de tiempo un plan de inversión constante digno de tal nombre pueden, en principio, optar por proseguir con sus compras periódicas sin variación o suspenderlas hasta que tengan la impresión de que el nivel de mercado ha dejado de ser peligroso. Tendríamos que aconsejar en términos bastante rotundos en contra del inicio de un nuevo plan de inversión constante a los niveles vigentes a finales de 1964, puesto que la mayor parte de los inversores no tendrán la capacidad de resistencia para mantener dicho plan en el caso de que los resultados llegasen a ser extraordinariamente negativos poco después de su inicio.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La nota en la página 113 | posición 1506 | Añadido el sábado, 4 de febrero de 2023 10:27:20

Que hacer cuandola cotizacion se entiemde como peligrosa o potencial de subrir una caida 
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 114 | posición 1521-1523 | Añadido el sábado, 4 de febrero de 2023 10:30:35

Hay una brillante afirmación al principio de la obra Ética, de Aristóteles, que dice lo siguiente: «La mente educada se distingue por no esperar más precisión que la que admite la naturaleza de la cuestión estudiada.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 132 | posición 1773 | Añadido el martes, 7 de febrero de 2023 23:11:46


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 132 | posición 1782-1787 | Añadido el miércoles, 8 de febrero de 2023 19:19:36

ha surgido la noción general de que la tasa de rendimiento que el inversor debería tratar de alcanzar es más o menos proporcional al nivel de riesgo que está dispuesto a correr. Nuestra opinión es diferente. La tasa de rendimiento que se debe tratar de alcanzar debería depender, al contrario, de la cantidad de esfuerzo inteligente que el inversor está dispuesto a, y es capaz de, aportar a esta tarea. El rendimiento mínimo corresponderá al inversor pasivo, que desee tanto seguridad como falta de esfuerzo y preocupación. El rendimiento máximo será obtenido por el inversor alerta y emprendedor que ponga en juego la máxima inteligencia y capacidad.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 146 | posición 1978 | Añadido el miércoles, 8 de febrero de 2023 19:58:05


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 148 | posición 1998-2004 | Añadido el jueves, 9 de febrero de 2023 20:23:02

En términos prácticos, aconsejamos a la persona que invierta en obligaciones a largo plazo que sacrifique una pequeña parte del rendimiento para obtener la garantía de exclusión de rescate, por ejemplo, durante un período de 20 o 25 años. De la misma manera, resulta ventajoso adquirir una obligación con cupón reducido75 bajo par en lugar de una obligación con cupón elevado que se venda sobre la par y que sea rescatable en un período breve. El motivo es que el descuento, por ejemplo, de una obligación al 3,5 por ciento a 63,5 (bajo par) con una rentabilidad del 7,85 por ciento ofrece una protección total frente a las consecuencias negativas del rescate.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 148 | posición 2004 | Añadido el jueves, 9 de febrero de 2023 20:27:17


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 153 | posición 2060-2069 | Añadido el viernes, 10 de febrero de 2023 18:51:21

Según Graham, eso depende menos de los tipos de inversiones que se tienen que del tipo de inversor que se es. Hay dos formas de ser un inversor inteligente: • Investigando, seleccionando y supervisando continuamente una combinación dinámica de acciones, obligaciones o fondos de inversión. • Creando una cartera permanente que funcione con el piloto automático y que no requiera más esfuerzo (aunque genere muy poca emoción). Graham denomina «activo» o emprendedor al primer método; requiere mucho tiempo y enormes cantidades de energía. La estrategia «pasiva» o «defensiva» requiere poco tiempo o esfuerzo, pero exige una separación casi ascética del atractivo tumulto del mercado. Como el teórico de la inversión Charles Ellis ha explicado, el método emprendedor es física e intelectualmente exigente, mientras que el método defensivo es emocionalmente exigente.77
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 156 | posición 2108-2121 | Añadido el viernes, 10 de febrero de 2023 19:02:33

Para llegar a captar una impresión mejor del riesgo que somos capaces de asumir, hay que pensar en las circunstancias esenciales de nuestra vida, en qué momento se dejará sentir su efecto, en qué momento podrían cambiar y de qué forma pueden afectar a nuestra necesidad de dinero en efectivo: • ¿Está soltero o casado? ¿Qué hace su cónyuge o su pareja para ganarse la vida? • ¿Tiene o va a tener hijos? ¿Cuándo tendrá que empezar a hacer frente a los gastos académicos? • ¿Va a heredar dinero o acabará teniendo que asumir responsabilidades financieras por familiares enfermos o mayores? • ¿Qué factores podrían afectar negativamente a su carrera profesional? (Si trabaja usted para un banco o para una constructora, una subida de los tipos de interés podría dejarle sin trabajo. Si trabaja en una empresa fabricante de productos químicos, la subida de los precios del petróleo podría ser una muy mala noticia.) • Si es usted autónomo, ¿cuánto tiempo suelen sobrevivir los negocios similares al suyo? • ¿Necesita que sus inversiones sean un complemento a sus ingresos monetarios? (En general, las obligaciones pueden desempeñar esa función; las acciones no.) • Teniendo en cuenta su salario y sus necesidades de gasto, ¿cuánto dinero puede permitirse perder en sus inversiones?
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La nota en la página 157 | posición 2120 | Añadido el viernes, 10 de febrero de 2023 19:03:03

A preguntarse para nuestro perfil de riesgo
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 157 | posición 2125-2127 | Añadido el viernes, 10 de febrero de 2023 19:04:47

Cuando haya establecido estos objetivos porcentuales, cámbielos únicamente a medida que varíen las circunstancias de su vida. No compre más acciones porque el mercado de valores ha subido; no las venda porque ha bajado.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 157 | posición 2127-2136 | Añadido el viernes, 10 de febrero de 2023 19:09:31

Afortunadamente, mediante la estructuración de su plan de ahorro para la jubilación resulta fácil poner su cartera de inversión en piloto automático permanente. Supongamos que se siente cómodo con un nivel de riesgo relativamente elevado, por ejemplo, el 70 por ciento de su patrimonio en acciones y el 30 por ciento en obligaciones. Si la cotización de las acciones en el mercado en general aumenta el 25 por ciento (y las obligaciones se mantienen niveladas), pasará a tener poco menos del 75 por ciento en acciones y solamente el 25 por ciento en obligaciones.81 Visite el sitio web de su plan de ahorro para la jubilación (o llame a su número de teléfono gratuito) y venda una cantidad suficiente de sus fondos en acciones para volver a equilibrar la cartera en la proporción que se ha marcado como objetivo de 70-30. La clave consiste en realizar estas operaciones de reequilibrio de acuerdo con un plan previsible y paciente: sin realizarlo con tanta frecuencia que acabe volviéndose loco ni tan infrecuentemente que sus objetivos estén constantemente desbaratados. Le recomendamos que lo haga cada seis meses, ni más ni menos, en fechas fáciles de recordar como el año nuevo y el 30 de junio.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 160 | posición 2166-2174 | Añadido el viernes, 10 de febrero de 2023 20:32:24

¿A corto plazo o a largo plazo? Las obligaciones y los tipos de interés habitan en los extremos opuestos de un balancín: si los tipos de interés aumentan, la cotización de las obligaciones se reduce, aunque las obligaciones a corto plazo reducen su cotización menos que las obligaciones a largo plazo. Por otra parte, si los tipos de interés descienden, las cotizaciones de las obligaciones aumentan y las obligaciones a largo plazo aumentarán su cotización más que las obligaciones a corto plazo.84 Se pueden equilibrar estos altibajos comprando obligaciones a plazo intermedio que venzan en un período de cinco a diez años, cuya cotización no se dispara cuando su lado del balancín se eleva, pero tampoco se estrella contra el suelo. Para la mayor parte de los inversores, las obligaciones a plazo intermedio son la opción más sencilla, ya que les permite mantenerse al margen del juego de las adivinanzas sobre la evolución que van a seguir los tipos de interés.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 161 | posición 2180-2182 | Añadido el viernes, 10 de febrero de 2023 20:34:06

una opción mucho más adecuada que las obligaciones individuales en todos los casos (siendo las principales excepciones las obligaciones del Estado y algunas obligaciones municipales). La mayor parte de las agencias de inversión, como Vanguard, Fidelity, Schwab y T. Rowe Price, ofrecen un amplio menú de fondos de renta fija a coste reducido.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 168 | posición 2255 | Añadido el miércoles, 15 de febrero de 2023 16:03:11


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 170 | posición 2284-2302 | Añadido el miércoles, 15 de febrero de 2023 16:35:51

Reglas aplicables al componente en acciones La selección de acciones para la cartera del inversor defensivo debe ser una cuestión que se realice con una relativa sencillez. Nos atreveríamos a sugerir la aplicación de cuatro reglas: 1. Debería haber una diversificación adecuada, aunque no excesiva. Esto podría suponer tener acciones de un mínimo de 10 sociedades emisoras y un máximo de aproximadamente 30.93 2. Cada una de las sociedades elegidas debe ser grande, destacada y tiene que contar con una financiación conservadora. Por indefinidos que sean estos adjetivos, el sentido general es claro. Al final del capítulo se hacen unas indicaciones sobre esta cuestión. 3. Cada una de las sociedades debe tener un prolongado historial de pago de dividendos continuado. (Todas las sociedades cuyas acciones estaban integradas en el Dow Jones Industrial Average cumplían este requisito de dividendo en 1971.) Para ser específicos en este punto, sugeriríamos que el requisito de pagos de dividendos continuados hubiese comenzado por lo menos en 1950.94 4. El inversor debería imponer algún tipo de límite en el precio que está dispuesto a pagar por unas acciones en relación con los beneficios netos obtenidos a lo largo de, por ejemplo, los siete últimos años. Sugeriríamos que ese límite se estableciese en 25 veces dichos beneficios medios, y en no más de 20 veces los beneficios correspondientes al último período de 12 meses. No obstante, esta restricción eliminaría prácticamente a todas las sociedades más fuertes y más populares de la cartera. En particular, esto supondría prohibir prácticamente toda la categoría de «acciones de crecimiento», que durante los últimos años han sido las preferidas tanto de los especuladores como de los inversores institucionales. Expondremos los motivos que nos llevan a proponer una exclusión tan drástica.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La nota en la página 171 | posición 2301 | Añadido el miércoles, 15 de febrero de 2023 16:36:31

Reglas sonre acciones para el inversor conservadpr
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 171 | posición 2303-2308 | Añadido el miércoles, 15 de febrero de 2023 16:38:50

El término «acción de crecimiento» se aplica a las acciones cuyos beneficios por acción en el pasado han aumentado a una tasa muy superior a la de las acciones ordinarias en general, y respecto de las cuales se espera que se mantenga esa tendencia en el futuro. (Algunos autores afirman que una verdadera acción de crecimiento debería ser aquella que se espera que por lo menos duplique sus beneficios por acción en un plazo de diez años, es decir, que los incremente a un tipo anual compuesto de más del 7,1 por ciento.)95 Evidentemente, resulta muy atractivo comprar y poseer acciones de este tipo, siempre y cuando el precio que se pague no sea excesivo.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La nota en la página 171 | posición 2308 | Añadido el miércoles, 15 de febrero de 2023 16:39:12

Acciones growth
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 172 | posición 2317-2321 | Añadido el miércoles, 15 de febrero de 2023 16:46:02

Un buen ejemplo de este segundo tipo, a los efectos que nos interesan ahora, es el de Texas Instruments, que en seis años creció de 5 a 256, sin abonar dividendos, mientras que sus beneficios pasaban de 40 centavos a 3,91 dólares por acción. (Se debe destacar que el precio aumentó 5 veces más deprisa que los beneficios; es un comportamiento habitual entre las acciones ordinarias populares.) Dos años después, los beneficios se habían reducido casi en un 50 por ciento y la cotización lo había hecho en cuatro quintas partes, hasta 49.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 172 | posición 2321-2323 | Añadido el miércoles, 15 de febrero de 2023 16:46:37

lector comprenderá con estos ejemplos los motivos por los cuales consideramos que las acciones de crecimiento, en su conjunto, son un vehículo demasiado incierto y arriesgado para el inversor defensivo. Por
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 175 | posición 2362 | Añadido el miércoles, 15 de febrero de 2023 16:56:20


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 178 | posición 2404-2406 | Añadido el martes, 21 de febrero de 2023 23:25:12

el tipo de valores que se deben comprar y el tipo de rendimiento que se debe tratar de obtener no depende de los recursos financieros del inversor, sino de su preparación financiera en términos de conocimiento, experiencia y temperamento.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 181 | posición 2446-2449 | Añadido el miércoles, 22 de febrero de 2023 22:33:04

Las finanzas de una sociedad industrial no son conservadoras, salvo que las acciones ordinarias (en valor nominal) representen por lo menos la mitad de la capitalización total, incluida toda la deuda bancaria.III En el caso de una empresa de ferrocarriles o de una concesionaria de servicios públicos la cifra debería ser de por lo menos el 30 por ciento.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 181 | posición 2449-2450 | Añadido el miércoles, 22 de febrero de 2023 22:34:18

Las palabras «grande» y «prominente» denotan la idea de un tamaño sustancial combinado con una posición de liderazgo en su sector. Tales empresas suelen recibir habitualmente la denominación de «primera categoría»;
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 183 | posición 2464-2467 | Añadido el miércoles, 22 de febrero de 2023 22:38:39

La felicidad humana no es tanto el producto de grandes golpes de buena suerte que rara vez ocurren, sino de las pequeñas ventajas que tienen lugar todos los días. BENJAMIN FRANKLIN
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 184 | posición 2478-2480 | Añadido el miércoles, 1 de marzo de 2023 22:35:01

Enfocada desde un punto de vista lógico, la decisión sobre poseer o no poseer acciones en la actualidad no tiene nada que ver con la cantidad de dinero que se haya perdido con las acciones hace unos pocos años.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 184 | posición 2478-2481 | Añadido el miércoles, 1 de marzo de 2023 22:35:42

Enfocada desde un punto de vista lógico, la decisión sobre poseer o no poseer acciones en la actualidad no tiene nada que ver con la cantidad de dinero que se haya perdido con las acciones hace unos pocos años. Cuando las acciones tienen un precio suficientemente razonable para generar crecimiento en el futuro, conviene tener acciones, con independencia de las pérdidas que puedan haber ocasionado en los últimos años.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 187 | posición 2524-2527 | Añadido el miércoles, 1 de marzo de 2023 22:44:43

Un equipo de psicólogos dirigido por Baruch Fischhoff, de la Carnegie Mellon University, ha documentado un hecho perturbador: estar más familiarizado con una materia no reduce significativamente la tendencia que tienen las personas a exagerar lo mucho que realmente saben sobre ella.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 187 | posición 2528-2530 | Añadido el miércoles, 1 de marzo de 2023 22:45:34

Esta perniciosa forma de manifestación del exceso de confianza se denomina técnicamente «sesgo de familiaridad» o hábito de apegarse a lo que nos resulta familiar:
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 193 | posición 2612-2617 | Añadido el miércoles, 1 de marzo de 2023 23:01:00

Según Ibbotson Associates, la importante firma de investigación financiera, si hubiese invertido 12.000 dólares en un índice referenciado al Standard & Poor’s 500 a principios de 1929, diez años después sólo le quedarían 7.223 dólares. No obstante, si hubiese comenzado con unos escasos 100 dólares y simplemente hubiese ido invirtiendo otros 100 dólares todos los meses, para agosto de 1939 su dinero habría alcanzado los 15.571 dólares. Ése es el poder de las compras disciplinadas, incluso en medio de la gran depresión y con el peor período bajista de mercado de toda la historia.110
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 193 | posición 2612-2616 | Añadido el miércoles, 1 de marzo de 2023 23:01:07

Según Ibbotson Associates, la importante firma de investigación financiera, si hubiese invertido 12.000 dólares en un índice referenciado al Standard & Poor’s 500 a principios de 1929, diez años después sólo le quedarían 7.223 dólares. No obstante, si hubiese comenzado con unos escasos 100 dólares y simplemente hubiese ido invirtiendo otros 100 dólares todos los meses, para agosto de 1939 su dinero habría alcanzado los 15.571 dólares. Ése es el poder de las compras disciplinadas, incluso en medio de la gran depresión y con el peor período bajista de mercado de toda la historia.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 195 | posición 2636-2637 | Añadido el miércoles, 1 de marzo de 2023 23:04:53

Ser consciente de lo poco que se puede hacer respecto al futuro, en combinación con la aceptación de la ignorancia, será el arma más poderosa que tenga a su alcance el inversor defensivo.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 507-507 | Añadido el lunes, 13 de marzo de 2023 22:52:55

The ability of the compiler to determine types from context is called type inference.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 508-513 | Añadido el lunes, 13 de marzo de 2023 22:53:46

benefits of static typing: Performance— Calling methods is faster because there’s no need to figure out at runtime which method needs to be called. Reliability— The compiler verifies the correctness of the program, so there are fewer chances for crashes at runtime. Maintainability— Working with unfamiliar code is easier because you can see what kind of objects the code is working with. Tool support— Static typing enables reliable refactorings, precise code completion, and other IDE features.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- El marcador en la posición 553 | Añadido el lunes, 13 de marzo de 2023 23:02:48


==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- El marcador en la posición 728 | Añadido el martes, 14 de marzo de 2023 23:13:49


==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 761-773 | Añadido el miércoles, 15 de marzo de 2023 22:04:55

Statements and expressions In Kotlin, if is an expression, not a statement. The difference between a statement and an expression is that an expression has a value, which can be used as part of another expression, whereas a statement is always a top-level element in its enclosing block and doesn’t have its own value. In Java, all control structures are statements. In Kotlin, most control structures, except for the loops (for, do, and do/while) are expressions. The ability to combine control structures with other expressions lets you express many common patterns concisely, as you’ll see later in the book. On the other hand, assignments are expressions in Java and become statements in Kotlin. This helps avoid confusion between comparisons and assignments, which is a common source of mistakes. Expression bodies You can simplify the previous function even further. Because its body consists of a single expression, you can use that expression as the entire body of the function, removing the curly braces and the return statement: fun max(a: Int, b: Int): Int = if (a > b) a else b If a function is written with its body in curly braces, we say that this function has a block body. If it returns an expression directly, it has an expression body.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 781-784 | Añadido el miércoles, 15 de marzo de 2023 22:06:52

Doesn’t Kotlin, as a statically typed language, require every expression to have a type at compile time? Indeed, every variable and every expression has a type, and every function has a return type. But for expression-body functions, the compiler can analyze the expression used as the body of the function and use its type as the function return type, even when it’s not spelled out explicitly. This type of analysis is usually called type inference.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 800-804 | Añadido el miércoles, 15 de marzo de 2023 22:10:24

Mutable and immutable variables There are two keywords to declare a variable: val (from value)—Immutable reference. A variable declared with val can’t be reassigned after it’s initialized. It corresponds to a final variable in Java. var (from variable)—Mutable reference. The value of such a variable can be changed. This declaration corresponds to a regular (non-final) Java variable.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 857-857 | Añadido el miércoles, 15 de marzo de 2023 22:19:04

In Kotlin, public is the default visibility, so you can omit
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 862-863 | Añadido el miércoles, 15 de marzo de 2023 22:20:54

In Java, the combination of the field and its accessors is often referred to as a property, and many frameworks make heavy use of that concept. In Kotlin, properties are a first-class language feature, which entirely replaces fields and accessor methods.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 863-865 | Añadido el miércoles, 15 de marzo de 2023 22:21:13

You declare a property in a class the same way you declare a variable: with val and var keywords. A property declared as val is read-only, whereas a var property is mutable and can be changed.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 862-865 | Añadido el miércoles, 15 de marzo de 2023 22:21:19

In Java, the combination of the field and its accessors is often referred to as a property, and many frameworks make heavy use of that concept. In Kotlin, properties are a first-class language feature, which entirely replaces fields and accessor methods. You declare a property in a class the same way you declare a variable: with val and var keywords. A property declared as val is read-only, whereas a var property is mutable and can be changed.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 890-892 | Añadido el miércoles, 15 de marzo de 2023 22:26:57

In most cases, the property has a corresponding backing field that stores the property value. But if the value can be computed on the fly—for example, from other properties—you can express that using a custom getter.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 976-978 | Añadido el miércoles, 15 de marzo de 2023 22:43:06

A set is a collection for which the order of items doesn’t matter; two sets are equal if they contain the same items. Thus, if the sets setOf(c1, c2) and setOf(RED, YELLOW) are equal, it means either c1 is RED and c2 is YELLOW, or vice versa. This is exactly what you want to check.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 1016-1021 | Añadido el miércoles, 15 de marzo de 2023 22:50:47

In Kotlin, you check whether a variable is of a certain type by using an is check. If you’ve programmed in C#, this notation should be familiar. The is check is similar to instanceof in Java. But in Java, if you’ve checked that a variable has a certain type and needs to access members of that type, you need to add an explicit cast following the instanceof check. When the initial variable is used more than once, you often store the cast result in a separate variable. In Kotlin, the compiler does this job for you. If you check the variable for a certain type, you don’t need to cast it afterward; you can use it as having the type you checked for. In effect, the compiler performs the cast for you, and we call it a smart cast.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 1026-1027 | Añadido el miércoles, 15 de marzo de 2023 22:51:25

The IDE highlights smart casts with a background color.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- El marcador en la posición 1026 | Añadido el miércoles, 15 de marzo de 2023 22:52:43


==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 1035-1036 | Añadido el jueves, 16 de marzo de 2023 18:20:16

In Kotlin, there is no ternary operator, because, unlike in Java, the if expression returns a value.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 1052-1054 | Añadido el jueves, 16 de marzo de 2023 18:23:17

Blocks as branches of “if” and “when” Both if and when can have blocks as branches. In this case, the last expression in the block is the result. If you want to add logging to the example function, you can do so in the block and return the last value as before.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 1059-1060 | Añadido el jueves, 16 de marzo de 2023 18:24:10

rule “the last expression in a block is the result” holds in all cases where a block can be used and a result is expected.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 1061-1062 | Añadido el jueves, 16 de marzo de 2023 18:24:35

But as we mentioned in section 2.2, this rule doesn’t hold for regular functions. A function can have either an expression body that can’t be a
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 1061-1063 | Añadido el jueves, 16 de marzo de 2023 18:24:41

But as we mentioned in section 2.2, this rule doesn’t hold for regular functions. A function can have either an expression body that can’t be a block or a block body with explicit return statements inside.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 1076-1078 | Añadido el jueves, 16 de marzo de 2023 18:26:35

A range is essentially just an interval between two values, usually numbers: a start and an end. You write it using the .. operator: val oneToTen = 1..10 Note that ranges in Kotlin are closed or inclusive, meaning the second value is always a part of the range.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 1094-1095 | Añadido el jueves, 16 de marzo de 2023 18:32:31

In many cases, it’s more convenient to iterate over half-closed ranges, which don’t include the specified end point. To create such a range, use the until function.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 1094-1096 | Añadido el jueves, 16 de marzo de 2023 18:32:46

In many cases, it’s more convenient to iterate over half-closed ranges, which don’t include the specified end point. To create such a range, use the until function. For example, the loop for (x in 0 until size) is equivalent to for (x in 0..size-1),
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 1289-1293 | Añadido el jueves, 16 de marzo de 2023 19:40:04

Default values and Java Given that Java doesn’t have the concept of default parameter values, you have to specify all the parameter values explicitly when you call a Kotlin function with default parameter values from Java. If you frequently need to call a function from Java and want to make it easier to use for Java callers, you can annotate it with @Jvm-Overloads. This instructs the compiler to generate Java overloaded methods, omitting each of the parameters one by one, starting from the last one.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 1301-1308 | Añadido el jueves, 16 de marzo de 2023 19:44:27

Getting rid of static utility classes: top-level functions and properties We all know that Java, as an object-oriented language, requires all code to be written as methods of classes. Usually, this works out nicely; but in reality, almost every large project ends up with a lot of code that doesn’t clearly belong to any single class. Sometimes an operation works with objects of two different classes that play an equally important role for it. Sometimes there is one primary object, but you don’t want to bloat its API by adding the operation as an instance method. As a result, you end up with classes that don’t contain any state or any instance methods and that act as containers for a bunch of static methods. A perfect example is the Collections class in the JDK. To find other examples in your own code, look for classes that have Util as part of the name. In Kotlin, you don’t need to create all those meaningless classes.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 1301-1308 | Añadido el jueves, 16 de marzo de 2023 19:44:43

Getting rid of static utility classes: top-level functions and properties We all know that Java, as an object-oriented language, requires all code to be written as methods of classes. Usually, this works out nicely; but in reality, almost every large project ends up with a lot of code that doesn’t clearly belong to any single class. Sometimes an operation works with objects of two different classes that play an equally important role for it. Sometimes there is one primary object, but you don’t want to bloat its API by adding the operation as an instance method. As a result, you end up with classes that don’t contain any state or any instance methods and that act as containers for a bunch of static methods. A perfect example is the Collections class in the JDK. To find other examples in your own code, look for classes that have Util as part of the name. In Kotlin, you don’t need to create all those meaningless classes.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 1301-1307 | Añadido el jueves, 16 de marzo de 2023 19:44:49

Getting rid of static utility classes: top-level functions and properties We all know that Java, as an object-oriented language, requires all code to be written as methods of classes. Usually, this works out nicely; but in reality, almost every large project ends up with a lot of code that doesn’t clearly belong to any single class. Sometimes an operation works with objects of two different classes that play an equally important role for it. Sometimes there is one primary object, but you don’t want to bloat its API by adding the operation as an instance method. As a result, you end up with classes that don’t contain any state or any instance methods and that act as containers for a bunch of static methods. A perfect example is the Collections class in the JDK. To find other examples in your own code, look for classes that have Util as part of the name.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 1301-1327 | Añadido el jueves, 16 de marzo de 2023 19:45:01

Getting rid of static utility classes: top-level functions and properties We all know that Java, as an object-oriented language, requires all code to be written as methods of classes. Usually, this works out nicely; but in reality, almost every large project ends up with a lot of code that doesn’t clearly belong to any single class. Sometimes an operation works with objects of two different classes that play an equally important role for it. Sometimes there is one primary object, but you don’t want to bloat its API by adding the operation as an instance method. As a result, you end up with classes that don’t contain any state or any instance methods and that act as containers for a bunch of static methods. A perfect example is the Collections class in the JDK. To find other examples in your own code, look for classes that have Util as part of the name. In Kotlin, you don’t need to create all those meaningless classes. Instead, you can place functions directly at the top level of a source file, outside of any class. Such functions are still members of the package declared at the top of the file, and you still need to import them if you want to call them from other packages, but the unnecessary extra level of nesting no longer exists. Let’s put the joinToString function into the strings package directly. Create a file called join.kt with the following contents. Listing 3.3. Declaring joinToString() as a top-level function package strings fun joinToString(...): String { ... } package strings fun joinToString(...): String { ... } How does this run? You know that, when you compile the file, some classes will be produced, because the JVM can only execute code in classes. When you work only with Kotlin, that’s all you need to know. But if you need to call such a function from Java, you have to understand how it will be compiled. To make this clear, let’s look at the Java code that would compile to the same class: You can see that the name of the class generated by the Kotlin compiler corresponds to the name of the file containing the function. All top-level functions in the file are compiled to static methods of that class. Therefore, calling this function from Java is as easy as calling any other static method: /* Java */ import strings.JoinKt; ... JoinKt.joinToString(list, ", ", "", ""); Changing the file class name To change the name of the generated class that contains Kotlin top-level functions, you add a @JvmName annotation to the file. Place it at the beginning of the file, before the package name: Now the function can be called as follows: /* Java */ import strings.StringFunctions;
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 1329-1342 | Añadido el jueves, 16 de marzo de 2023 19:50:27

Top-level properties Just like functions, properties can be placed at the top level of a file. Storing individual pieces of data outside of a class isn’t needed as often but is still useful. For example, you can use a var property to count the number of times some operation has been performed: The value of such a property will be stored in a static field. Top-level properties also allow you to define constants in your code: val UNIX_LINE_SEPARATOR = "\n" By default, top-level properties, just like any other properties, are exposed to Java code as accessor methods (a getter for a val property and a getter/setter pair for a var property). If you want to expose a constant to Java code as a public static final field, to make its use more natural, you can mark it with the const modifier (this is allowed for properties of primitive types, as well as String): const val UNIX_LINE_SEPARATOR = "\n" This gets you the equivalent of the following Java code: /* Java */ public static final String  UNIX_LINE_SEPARATOR = "\n"; You’ve improved the initial joinToString utility function quite a lot. Now let’s look at how to make it even handier. 3.3.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 1329-1341 | Añadido el jueves, 16 de marzo de 2023 19:50:32

Top-level properties Just like functions, properties can be placed at the top level of a file. Storing individual pieces of data outside of a class isn’t needed as often but is still useful. For example, you can use a var property to count the number of times some operation has been performed: The value of such a property will be stored in a static field. Top-level properties also allow you to define constants in your code: val UNIX_LINE_SEPARATOR = "\n" By default, top-level properties, just like any other properties, are exposed to Java code as accessor methods (a getter for a val property and a getter/setter pair for a var property). If you want to expose a constant to Java code as a public static final field, to make its use more natural, you can mark it with the const modifier (this is allowed for properties of primitive types, as well as String): const val UNIX_LINE_SEPARATOR = "\n" This gets you the equivalent of the following Java code: /* Java */ public static final String  UNIX_LINE_SEPARATOR = "\n"; You’ve improved
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 1329-1341 | Añadido el jueves, 16 de marzo de 2023 19:50:39

Top-level properties Just like functions, properties can be placed at the top level of a file. Storing individual pieces of data outside of a class isn’t needed as often but is still useful. For example, you can use a var property to count the number of times some operation has been performed: The value of such a property will be stored in a static field. Top-level properties also allow you to define constants in your code: val UNIX_LINE_SEPARATOR = "\n" By default, top-level properties, just like any other properties, are exposed to Java code as accessor methods (a getter for a val property and a getter/setter pair for a var property). If you want to expose a constant to Java code as a public static final field, to make its use more natural, you can mark it with the const modifier (this is allowed for properties of primitive types, as well as String): const val UNIX_LINE_SEPARATOR = "\n" This gets you the equivalent of the following Java code: /* Java */ public static final String  UNIX_LINE_SEPARATOR = "\n"; You’ve improved the initial joinToString utility function quite a lot. Now let’s look at how to make it even handier.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 1346-1351 | Añadido el jueves, 16 de marzo de 2023 19:55:23

Conceptually, an extension function is a simple thing: it’s a function that can be called as a member of a class but is defined outside of it. To demonstrate that, let’s add a method for computing the last character of a string: package strings fun String.lastChar(): Char = this.get(this.length - 1) All you need to do is put the name of the class or interface that you’re extending before the name of the function you’re adding. This class name is called the receiver type; the value on which you’re calling the extension function is called the receiver object.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 1346-1351 | Añadido el jueves, 16 de marzo de 2023 19:55:37

Conceptually, an extension function is a simple thing: it’s a function that can be called as a member of a class but is defined outside of it. To demonstrate that, let’s add a method for computing the last character of a string: package strings fun String.lastChar(): Char = this.get(this.length - 1) All you need to do is put the name of the class or interface that you’re extending before the name of the function you’re adding. This class name is called the receiver type; the value on which you’re calling the extension function is called the receiver object.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 1357-1360 | Añadido el jueves, 16 de marzo de 2023 19:57:28

Even though String isn’t part of your code, and you may not even have the source code to that class, you can still extend it with the methods you need in your project. It doesn’t even matter whether String is written in Java, Kotlin, or some other JVM language, such as Groovy. As long as it’s compiled to a Java class, you can add your own extensions to that class.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 1363-1364 | Añadido el jueves, 16 de marzo de 2023 19:58:42

extension functions don’t have access to private or protected members of the class.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 1368-1369 | Añadido el jueves, 16 de marzo de 2023 20:00:00

become available across your entire project. Instead, it needs to be imported,
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 1367-1371 | Añadido el jueves, 16 de marzo de 2023 20:00:05

Imports and extension functions When you define an extension function, it doesn’t automatically become available across your entire project. Instead, it needs to be imported, just like any other class or function. This helps avoid accidental name conflicts. Kotlin allows you to import individual functions using the same syntax you use for classes: import strings.lastChar
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 1367-1374 | Añadido el jueves, 16 de marzo de 2023 20:00:22

Imports and extension functions When you define an extension function, it doesn’t automatically become available across your entire project. Instead, it needs to be imported, just like any other class or function. This helps avoid accidental name conflicts. Kotlin allows you to import individual functions using the same syntax you use for classes: import strings.lastChar val c = "Kotlin".lastChar() Of course, * imports work as well: import strings.* val c = "Kotlin".lastChar() You can change the name of the class or function you’re importing using the as keyword: import strings.lastChar as last val c = "Kotlin".last()
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 1378-1383 | Añadido el jueves, 16 de marzo de 2023 20:04:20

Under the hood, an extension function is a static method that accepts the receiver object as its first argument. Calling it doesn’t involve creating adapter objects or any other runtime overhead. That makes using extension functions from Java pretty easy: you call the static method and pass the receiver object instance. Just as with other top-level functions, the name of the Java class containing the method is determined from the name of the file where the function is declared. Let’s say it was declared in a StringUtil.kt file: /* Java */ char c = StringUtilKt.lastChar("Java");
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 1378-1385 | Añadido el jueves, 16 de marzo de 2023 20:04:40

Under the hood, an extension function is a static method that accepts the receiver object as its first argument. Calling it doesn’t involve creating adapter objects or any other runtime overhead. That makes using extension functions from Java pretty easy: you call the static method and pass the receiver object instance. Just as with other top-level functions, the name of the Java class containing the method is determined from the name of the file where the function is declared. Let’s say it was declared in a StringUtil.kt file: /* Java */ char c = StringUtilKt.lastChar("Java"); This extension function is declared as a top-level function, so it’s compiled to a static method. You can import the lastChar method statically from Java, simplifying the use to just lastChar("Java").
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 1401-1402 | Añadido el jueves, 16 de marzo de 2023 20:09:02

Method overriding in Kotlin works as usual for member functions, but you can’t override an extension function.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 1411-1412 | Añadido el jueves, 16 de marzo de 2023 20:10:35

externally to it. Even though you can define extension functions with the same name and parameter types for a base class and its subclass,
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 1411-1413 | Añadido el jueves, 16 de marzo de 2023 20:10:39

Extension functions aren’t a part of the class; they’re declared externally to it. Even though you can define extension functions with the same name and parameter types for a base class and its subclass, the function that’s called depends on the declared static type of the variable, not on the runtime type of the value stored in that variable.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 1420-1420 | Añadido el jueves, 16 de marzo de 2023 20:12:02

Kotlin resolves them statically.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 1422-1422 | Añadido el jueves, 16 de marzo de 2023 20:12:17

the class has a member function with the same signature as an extension function, the member function always takes precedence.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 1422-1422 | Añadido el jueves, 16 de marzo de 2023 20:12:21

the class has a member function with the same signature as an extension function, the member function always takes precedence.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 1422-1422 | Añadido el jueves, 16 de marzo de 2023 20:12:27

the class has a member function with the same signature as an extension function, the member function always takes precedence.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 1422-1422 | Añadido el jueves, 16 de marzo de 2023 20:12:42

If the class has a member function with the same signature as an extension function, the member function always takes precedence.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 1466-1470 | Añadido el jueves, 16 de marzo de 2023 20:30:15

Varargs: functions that accept an arbitrary number of arguments When you call a function to create a list, you can pass any number of arguments to it: val list = listOf(2, 3, 5, 7, 11) If you look up how this function is declared in the library, you’ll find the following: fun listOf<T>(vararg values: T): List<T> { ... }
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 1470-1472 | Añadido el jueves, 16 de marzo de 2023 20:30:58

You’re probably familiar with Java’s varargs: a feature that allows you to pass an arbitrary number of values to a method by packing them in an array. Kotlin’s varargs are similar to those in Java, but the syntax is slightly different: instead of three dots after the type, Kotlin uses the vararg modifier on the parameter.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 1472-1478 | Añadido el jueves, 16 de marzo de 2023 20:31:58

One other difference between Kotlin and Java is the syntax of calling the function when the arguments you need to pass are already packed in an array. In Java, you pass the array as is, whereas Kotlin requires you to explicitly unpack the array, so that every array element becomes a separate argument to the function being called. Technically, this feature is called using a spread operator, but in practice it’s as simple as putting the * character before the corresponding argument: This example shows that the spread operator lets you combine the values from an array and some fixed values in a single call. This isn’t supported in Java.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 1482-1491 | Añadido el jueves, 16 de marzo de 2023 20:40:43

The word to in this line of code isn’t a built-in construct, but rather a method invocation of a special kind, called an infix call. In an infix call, the method name is placed immediately between the target object name and the parameter, with no extra separators. The following two calls are equivalent: Infix calls can be used with regular methods and extension functions that have one required parameter. To allow a function to be called using the infix notation, you need to mark it with the infix modifier. Here’s a simplified version of the declaration of the to function: infix fun Any.to(other: Any) = Pair(this, other) The to function returns an instance of Pair, which is a Kotlin standard library class that, unsurprisingly, represents a pair of elements. The actual declarations of Pair and to use generics, but we’re omitting them here to keep things simple.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 1492-1493 | Añadido el jueves, 16 de marzo de 2023 20:43:32

val (number, name) = 1 to "one" This feature is called a destructuring declaration. Figure
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 1508-1510 | Añadido el jueves, 16 de marzo de 2023 20:47:50

Kotlin strings are exactly the same things as Java strings. You can pass a string created in Kotlin code to any Java method, and you can use any Kotlin standard library methods on strings that you receive from Java code. No conversion is involved, and no additional wrapper objects are created. Kotlin makes working with standard Java
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 1508-1510 | Añadido el jueves, 16 de marzo de 2023 20:47:56

Kotlin strings are exactly the same things as Java strings. You can pass a string created in Kotlin code to any Java method, and you can use any Kotlin standard library methods on strings that you receive from Java code. No conversion is involved, and no additional wrapper objects are created.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 1510-1511 | Añadido el jueves, 16 de marzo de 2023 20:48:09

Kotlin makes working with standard Java strings more enjoyable by providing a bunch of useful extension functions.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 1550-1551 | Añadido el jueves, 16 de marzo de 2023 20:56:57

characters, including the backslash, so you can encode the dot symbol
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 1550-1555 | Añadido el jueves, 16 de marzo de 2023 20:57:03

triple-quoted string. In such a string, you don’t need to escape any characters, including the backslash, so you can encode the dot symbol with \. rather than \\. as you’d write in an ordinary string literal (see figure 3.5). This regular expression divides a path into three groups separated by a slash and a dot. The pattern . matches any character from the beginning, so the first group (.+) contains the substring before the last slash. This substring includes all the previous slashes, because they match the pattern “any character”. Similarly, the second group contains the substring before the last dot, and the third group contains the remaining part.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- El marcador en la posición 1609 | Añadido el jueves, 16 de marzo de 2023 21:12:59


==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 1659-1660 | Añadido el sábado, 18 de marzo de 2023 19:27:05

Kotlin uses the colon after the class name to replace both the extends and implements keywords used in Java.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 1660-1660 | Añadido el sábado, 18 de marzo de 2023 19:27:19

As in Java, a class can implement as many interfaces as it wants, but it can extend only one class.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 1664-1665 | Añadido el sábado, 18 de marzo de 2023 19:28:17

An interface method can have a default implementation. Unlike Java 8, which requires you to mark such implementations with the default keyword, Kotlin has no special annotation for such methods: you just provide a method body.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 1702-1706 | Añadido el sábado, 18 de marzo de 2023 19:41:21

To protect against this problem, Effective Java by Joshua Bloch (Addison-Wesley, 2008), one of the best-known books on good Java programming style, recommends that you “design and document for inheritance or else prohibit it.” This means all classes and methods that aren’t specifically intended to be overridden in subclasses ought to be explicitly marked as final. Kotlin follows the same philosophy. Whereas Java’s classes and methods are open by default, Kotlin’s are final by default.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 1697-1706 | Añadido el sábado, 18 de marzo de 2023 19:41:25

problematic. The so-called fragile base class problem occurs when modifications of a base class can cause incorrect behavior of subclasses because the changed code of the base class no longer matches the assumptions in its subclasses. If the class doesn’t provide exact rules for how it should be subclassed (which methods are supposed to be overridden and how), the clients are at risk of overriding the methods in a way the author of the base class didn’t expect. Because it’s impossible to analyze all the subclasses, the base class is “fragile” in the sense that any change in it may lead to unexpected changes of behavior in subclasses. To protect against this problem, Effective Java by Joshua Bloch (Addison-Wesley, 2008), one of the best-known books on good Java programming style, recommends that you “design and document for inheritance or else prohibit it.” This means all classes and methods that aren’t specifically intended to be overridden in subclasses ought to be explicitly marked as final. Kotlin follows the same philosophy. Whereas Java’s classes and methods are open by default, Kotlin’s are final by default.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 1706-1707 | Añadido el sábado, 18 de marzo de 2023 19:41:41

If you want to allow the creation of subclasses of a class, you need to mark the class with the open modifier.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 1706-1707 | Añadido el sábado, 18 de marzo de 2023 19:41:57

If you want to allow the creation of subclasses of a class, you need to mark the class with the open modifier. In addition, you need to add the open modifier to every property or method that can be overridden.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 1715-1716 | Añadido el sábado, 18 de marzo de 2023 19:42:47

smart casts work only for variables that couldn’t have changed after the type check.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 1722-1722 | Añadido el sábado, 18 de marzo de 2023 19:44:33

Abstract members are always open, so you don’t need to use an explicit open modifier.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 1743-1745 | Añadido el sábado, 18 de marzo de 2023 19:47:43

The default visibility in Java, package-private, isn’t present in Kotlin. Kotlin uses packages only as a way of organizing code in namespaces; it doesn’t use them for visibility control. As an alternative, Kotlin offers a new visibility modifier, internal, which means “visible inside a module.”
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 1741-1745 | Añadido el sábado, 18 de marzo de 2023 19:47:47

Basically, visibility modifiers in Kotlin are similar to those in Java. You have the same public, protected, and private modifiers. But the default visibility is different: if you omit a modifier, the declaration becomes public. The default visibility in Java, package-private, isn’t present in Kotlin. Kotlin uses packages only as a way of organizing code in namespaces; it doesn’t use them for visibility control. As an alternative, Kotlin offers a new visibility modifier, internal, which means “visible inside a module.”
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 1741-1746 | Añadido el sábado, 18 de marzo de 2023 19:47:58

Basically, visibility modifiers in Kotlin are similar to those in Java. You have the same public, protected, and private modifiers. But the default visibility is different: if you omit a modifier, the declaration becomes public. The default visibility in Java, package-private, isn’t present in Kotlin. Kotlin uses packages only as a way of organizing code in namespaces; it doesn’t use them for visibility control. As an alternative, Kotlin offers a new visibility modifier, internal, which means “visible inside a module.” A module is a set of Kotlin files compiled together.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 1741-1746 | Añadido el sábado, 18 de marzo de 2023 19:48:14

Basically, visibility modifiers in Kotlin are similar to those in Java. You have the same public, protected, and private modifiers. But the default visibility is different: if you omit a modifier, the declaration becomes public. The default visibility in Java, package-private, isn’t present in Kotlin. Kotlin uses packages only as a way of organizing code in namespaces; it doesn’t use them for visibility control. As an alternative, Kotlin offers a new visibility modifier, internal, which means “visible inside a module.” A module is a set of Kotlin files compiled together. It may be an IntelliJ IDEA module, an Eclipse project, a Maven or Gradle project, or a set of files compiled with an invocation of the Ant task.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 1749-1751 | Añadido el sábado, 18 de marzo de 2023 19:49:53

Another difference is that Kotlin allows the use of private visibility for top-level declarations, including classes, functions, and properties. Such declarations are visible only in the file where they are declared.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 1812-1812 | Añadido el sábado, 18 de marzo de 2023 20:07:08

nested class in Kotlin with no explicit modifiers is the same as a static nested class in Java.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 1812-1812 | Añadido el sábado, 18 de marzo de 2023 20:07:26

nested class in Kotlin with no explicit modifiers is the same as a static nested class in Java.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 1812-1813 | Añadido el sábado, 18 de marzo de 2023 20:07:34

A nested class in Kotlin with no explicit modifiers is the same as a static nested class in Java. To turn it into an inner class so that it contains a reference to an outer class, you use the inner modifier.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 1842-1843 | Añadido el sábado, 18 de marzo de 2023 20:15:20

Note that the sealed modifier implies that the class is open; you don’t need an explicit open modifier. The behavior of sealed classes is illustrated in figure 4.2.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 1845-1846 | Añadido el sábado, 18 de marzo de 2023 20:15:55

When you use when with sealed classes and add a new subclass, the when expression returning a value fails to compile, which points you to the code that must be changed.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 1858-1861 | Añadido el sábado, 18 de marzo de 2023 20:19:04

Java, as you know, a class can declare one or more constructors. Kotlin is similar, with one additional change: it makes a distinction between a primary constructor (which is usually the main, concise way to initialize a class and is declared outside of the class body) and a secondary constructor (which is declared in the class body). It also allows you to put additional initialization logic in initializer blocks.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 1893-1905 | Añadido el sábado, 18 de marzo de 2023 20:28:49

If your class has a superclass, the primary constructor also needs to initialize the superclass. You can do so by providing the superclass constructor parameters after the superclass reference in the base class list: open class User(val nickname: String) { ... } class TwitterUser(nickname: String) : User(nickname) { ... } If you don’t declare any constructors for a class, a default constructor that does nothing will be generated for you: If you inherit the Button class and don’t provide any constructors, you have to explicitly invoke the constructor of the superclass even if it doesn’t have any parameters: class RadioButton: Button() That’s why you need empty parentheses after the name of the superclass. Note the difference with interfaces: interfaces don’t have constructors, so if you implement an interface, you never put parentheses after its name in the supertype list. If you want to ensure that your class can’t be instantiated by other code, you have to make the constructor private. Here’s how you make the primary constructor private: Because the Secretive class has only a private constructor, the code outside of the class can’t instantiate it. Later in this chapter, we’ll talk about companion objects, which may be a good place to call such constructors.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- El marcador en la posición 1988 | Añadido el sábado, 18 de marzo de 2023 20:48:02


==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 1979-1984 | Añadido el domingo, 19 de marzo de 2023 11:17:41

You may wonder what the difference is between making a property that has a backing field and one that doesn’t. The way you access the property doesn’t depend on whether it has a backing field. The compiler will generate the backing field for the property if you either reference it explicitly or use the default accessor implementation. If you provide custom accessor implementations that don’t use field (for the getter if the property is a val and for both accessors if it’s a mutable property), the backing field won’t be present. Sometimes you don’t need to change the default implementation of an accessor, but you need to change its visibility. Let’s see how you can do this.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 1985-1985 | Añadido el domingo, 19 de marzo de 2023 11:17:55

But you can change this
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 1985-1986 | Añadido el domingo, 19 de marzo de 2023 11:17:59

But you can change this if you need to, by putting a visibility modifier before
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 1985-1986 | Añadido el domingo, 19 de marzo de 2023 11:18:04

The accessor’s visibility by default is the same as the property’s. But you can change this if you need to, by putting a visibility modifier before the get or set keyword.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 1996-2004 | Añadido el domingo, 19 de marzo de 2023 11:22:14

More about properties later Later in the book, we’ll continue our discussion of properties. Here are some references: The lateinit modifier on a non-null property specifies that this property is initialized later, after the constructor is called, which is a common case for some frameworks. This feature will be covered in chapter 6. Lazy initialized properties, as part of the more general delegated properties feature, will be covered in chapter 7. For compatibility with Java frameworks, you can use annotations that emulate Java features in Kotlin. For instance, the @JvmField annotation on a property exposes a public field without accessors. You’ll learn more about annotations in chapter 10. The const modifier makes working with annotations more convenient and lets you use a property of a primitive type or String as an annotation argument. Chapter 10 provides details.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2013-2015 | Añadido el domingo, 19 de marzo de 2023 11:26:12

Universal object methods As is the case in Java, all Kotlin classes have several methods you may want to override: toString, equals, and hashCode.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2021-2022 | Añadido el domingo, 19 de marzo de 2023 11:27:06

By default, the string representation of an object looks like Client@5e9f23b4, which isn’t very useful.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2034-2040 | Añadido el domingo, 19 de marzo de 2023 11:29:42

== for equality In Java, you can use the == operator to compare primitive and reference types. If applied to primitive types, Java’s == compares values, whereas == on reference types compares references. Thus, in Java, there’s the well-known practice of always calling equals, and there’s the well-known problem of forgetting to do so. In Kotlin, the == operator is the default way to compare two objects: it compares their values by calling equals under the hood. Thus, if equals is overridden in your class, you can safely compare its instances using ==. For reference comparison, you can use the === operator, which works exactly the same as == in Java by comparing the object references.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2041-2046 | Añadido el domingo, 19 de marzo de 2023 11:31:17

Listing 4.19. Implementing equals() for Client Just to remind you, the is check in Kotlin is the analogue of instanceof in Java. It checks whether a value has the specified type. Like the !in operator, which is a negation for the in check (we discussed both in section 2.4.4), the !is operator denotes the negation of the is check.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2053-2069 | Añadido el domingo, 19 de marzo de 2023 11:35:34

Hash containers: hashCode() The hashCode method should be always overridden together with equals. This section explains why. Let’s create a set with one element: a client named Alice. Then you create a new Client instance containing the same data and check whether it’s contained in the set. You’d expect the check to return true, because the two instances are equal, but in fact it returns false: >>> val processed = hashSetOf(Client("Alice", 342562)) >>> println(processed.contains(Client("Alice", 342562))) false The reason is that the Client class is missing the hashCode method. Therefore, it violates the general hashCode contract: if two objects are equal, they must have the same hash code. The processed set is a HashSet. Values in a HashSet are compared in an optimized way: at first their hash codes are compared, and then, only if they’re equal, the actual values are compared. The hash codes are different for two different instances of the Client class in the previous example, so the set decides that it doesn’t contain the second object, even though equals would return true. Therefore, if the rule isn’t followed, the HashSet can’t work correctly with such objects. To fix that, you can add the implementation of hashCode to the class. Listing 4.20. Implementing hashCode() for Client class Client(val name: String, val postalCode: Int) {     ...     override fun hashCode(): Int = name.hashCode() * 31 + postalCode } Now you have a class that works as expected in all scenarios—but notice how much code you’ve had to write. Fortunately, the Kotlin compiler can help you by generating all of those methods automatically. Let’s see how you can ask it to do that.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2073-2095 | Añadido el domingo, 19 de marzo de 2023 11:37:38

If you add the modifier data to your class, the necessary methods are automatically generated for you. Listing 4.21. Client as a data class data class Client(val name: String, val postalCode: Int) Easy, right? Now you have a class that overrides all the standard Java methods: equals for comparing instances hashCode for using them as keys in hash-based containers such as HashMap toString for generating string representations showing all the fields in declaration order The equals and hashCode methods take into account all the properties declared in the primary constructor. The generated equals method checks that the values of all the properties are equal. The hashCode method returns a value that depends on the hash codes of all the properties. Note that properties that aren’t declared in the primary constructor don’t take part in the equality checks and hash code calculation. This isn’t a complete list of useful methods generated for data classes. The next section reveals one more, and section 7.4 fills in the rest. Data classes and immutability: the copy() method Note that even though the properties of a data class aren’t required to be val—you can use var as well—it’s strongly recommended that you use only read-only properties, making the instances of the data class immutable. This is required if you want to use such instances as keys in a HashMap or a similar container, because otherwise the container could get into an invalid state if the object used as a key was modified after it was added to the container. Immutable objects are also much easier to reason about, especially in multithreaded code: once an object has been created, it remains in its original state, and you don’t need to worry about other threads modifying the object while your code is working with it. To make it even easier to use data classes as immutable objects, the Kotlin compiler generates one more method for them: a method that allows you to copy the instances of your classes, changing the values of some properties. Creating a copy is usually a good alternative to modifying the instance in place: the copy has a separate lifecycle and can’t affect the places in the code that refer to the original instance. Here’s what the copy method would look like if you implemented it manually: class Client(val name: String, val postalCode: Int) {     ...     fun copy(name: String = this.name,              postalCode: Int = this.postalCode)
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2073-2082 | Añadido el domingo, 19 de marzo de 2023 11:38:00

If you add the modifier data to your class, the necessary methods are automatically generated for you. Listing 4.21. Client as a data class data class Client(val name: String, val postalCode: Int) Easy, right? Now you have a class that overrides all the standard Java methods: equals for comparing instances hashCode for using them as keys in hash-based containers such as HashMap toString for generating string representations showing all the fields in declaration order The equals and hashCode methods take into account all the properties declared in the primary constructor. The generated equals method checks that the values of all the properties are equal. The hashCode method returns a value that depends on the hash codes of all the properties. Note that properties that aren’t declared in the primary constructor don’t take part in the equality checks and hash code calculation.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2084-2099 | Añadido el domingo, 19 de marzo de 2023 11:42:49

Data classes and immutability: the copy() method Note that even though the properties of a data class aren’t required to be val—you can use var as well—it’s strongly recommended that you use only read-only properties, making the instances of the data class immutable. This is required if you want to use such instances as keys in a HashMap or a similar container, because otherwise the container could get into an invalid state if the object used as a key was modified after it was added to the container. Immutable objects are also much easier to reason about, especially in multithreaded code: once an object has been created, it remains in its original state, and you don’t need to worry about other threads modifying the object while your code is working with it. To make it even easier to use data classes as immutable objects, the Kotlin compiler generates one more method for them: a method that allows you to copy the instances of your classes, changing the values of some properties. Creating a copy is usually a good alternative to modifying the instance in place: the copy has a separate lifecycle and can’t affect the places in the code that refer to the original instance. Here’s what the copy method would look like if you implemented it manually: class Client(val name: String, val postalCode: Int) {     ...     fun copy(name: String = this.name,              postalCode: Int = this.postalCode) =         Client(name, postalCode) } And here’s how the copy method can be used: >>> val bob = Client("Bob", 973293) >>> println(bob.copy(postalCode = 382555)) Client(name=Bob, postalCode=382555) You’ve seen how the data modifier makes value-object classes more convenient to use.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2100-2106 | Añadido el domingo, 19 de marzo de 2023 11:50:21

A common problem in the design of large object-oriented systems is fragility caused by implementation inheritance. When you extend a class and override some of its methods, your code becomes dependent on the implementation details of the class you’re extending. When the system evolves and the implementation of the base class changes or new methods are added to it, the assumptions about its behavior that you’ve made in your class can become invalid, so your code may end up not behaving correctly. The design of Kotlin recognizes this problem and treats classes as final by default. This ensures that only those classes that are designed for extensibility can be inherited from. When working on such a class, you see that it’s open, and you can keep in mind that modifications need to be compatible with derived classes.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2107-2109 | Añadido el domingo, 19 de marzo de 2023 11:50:36

A commonly used way to implement this is known as the Decorator pattern. The essence of the pattern is that a new class is created, implementing the same interface as the original class and storing the instance of the original class as a field.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2118-2119 | Añadido el domingo, 19 de marzo de 2023 12:03:24

you’re delegating the implementation of the interface to another object, using the by keyword. Here’s how you can use this approach to rewrite the previous
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2117-2119 | Añadido el domingo, 19 de marzo de 2023 12:03:28

Whenever you’re implementing an interface, you can say that you’re delegating the implementation of the interface to another object, using the by keyword. Here’s how you can use this approach to rewrite the previous example:
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2117-2121 | Añadido el domingo, 19 de marzo de 2023 12:03:41

Whenever you’re implementing an interface, you can say that you’re delegating the implementation of the interface to another object, using the by keyword. Here’s how you can use this approach to rewrite the previous example: class DelegatingCollection<T>(         innerList: Collection<T> = ArrayList<T>() ) : Collection<T> by innerList {}
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2137-2143 | Añadido el domingo, 19 de marzo de 2023 12:06:00

The “object” keyword: declaring a class and creating an instance, combined The object keyword comes up in Kotlin in a number of cases, but they all share the same core idea: the keyword defines a class and creates an instance (in other words, an object) of that class at the same time. Let’s look at the different situations when it’s used: Object declaration is a way to define a singleton. Companion objects can contain factory methods and other methods that are related to this class but don’t require a class instance to be called. Their members can be accessed via class name. Object expression is used instead of Java’s anonymous inner class.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2147-2148 | Añadido el domingo, 19 de marzo de 2023 12:09:43

Kotlin provides first-class language support for this using the object declaration feature. The object declaration combines a class declaration and a declaration of a single instance of that class.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2152-2157 | Añadido el domingo, 19 de marzo de 2023 12:10:03

Object declarations are introduced with the object keyword. An object declaration effectively defines a class and a variable of that class in a single statement. Just like a class, an object declaration can contain declarations of properties, methods, initializer blocks, and so on. The only things that aren’t allowed are constructors (either primary or secondary). Unlike instances of regular classes, object declarations are created immediately at the point of definition, not through constructor calls from other places in the code. Therefore, defining a constructor for an object declaration doesn’t make sense.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2159-2160 | Añadido el domingo, 19 de marzo de 2023 12:10:26

Object declarations can also inherit from classes and interfaces.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2174-2181 | Añadido el domingo, 19 de marzo de 2023 12:15:16

Singletons and dependency injection Just like the Singleton pattern, object declarations aren’t always ideal for use in large software systems. They’re great for small pieces of code that have few or no dependencies, but not for large components that interact with many other parts of the system. The main reason is that you don’t have any control over the instantiation of objects, and you can’t specify parameters for the constructors. This means you can’t replace the implementations of the object itself, or other classes the object depends on, in unit tests or in different configurations of the software system. If you need that ability, you should use regular Kotlin classes together with a dependency injection framework (such as Guice, https://github.com/google/guice), just as in Java. You
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2174-2181 | Añadido el domingo, 19 de marzo de 2023 12:15:48

Singletons and dependency injection Just like the Singleton pattern, object declarations aren’t always ideal for use in large software systems. They’re great for small pieces of code that have few or no dependencies, but not for large components that interact with many other parts of the system. The main reason is that you don’t have any control over the instantiation of objects, and you can’t specify parameters for the constructors. This means you can’t replace the implementations of the object itself, or other classes the object depends on, in unit tests or in different configurations of the software system. If you need that ability, you should use regular Kotlin classes together with a dependency injection framework (such as Guice, https://github.com/google/guice), just as in Java. You
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2174-2180 | Añadido el domingo, 19 de marzo de 2023 12:15:56

Singletons and dependency injection Just like the Singleton pattern, object declarations aren’t always ideal for use in large software systems. They’re great for small pieces of code that have few or no dependencies, but not for large components that interact with many other parts of the system. The main reason is that you don’t have any control over the instantiation of objects, and you can’t specify parameters for the constructors. This means you can’t replace the implementations of the object itself, or other classes the object depends on, in unit tests or in different configurations of the software system. If you need that ability, you should use regular Kotlin classes together with a dependency injection framework (such as Guice, https://github.com/google/guice),
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2174-2180 | Añadido el domingo, 19 de marzo de 2023 12:16:03

Singletons and dependency injection Just like the Singleton pattern, object declarations aren’t always ideal for use in large software systems. They’re great for small pieces of code that have few or no dependencies, but not for large components that interact with many other parts of the system. The main reason is that you don’t have any control over the instantiation of objects, and you can’t specify parameters for the constructors. This means you can’t replace the implementations of the object itself, or other classes the object depends on, in unit tests or in different configurations of the software system. If you need that ability, you should use regular Kotlin classes together with a dependency injection framework (such as Guice, https://github.com/google/guice), just as in Java.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2181-2183 | Añadido el domingo, 19 de marzo de 2023 12:16:10

You can also declare objects in a class. Such objects also have just a single instance; they don’t have a separate instance per instance of the containing class. For example, it’s logical to place a comparator comparing objects of a particular class inside that class.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2189-2193 | Añadido el domingo, 19 de marzo de 2023 12:19:11

Using Kotlin objects from Java An object declaration in Kotlin is compiled as a class with a static field holding its single instance, which is always named INSTANCE. If you implemented the Singleton pattern in Java, you’d probably do the same thing by hand. Thus, to use a Kotlin object from the Java code, you access the static INSTANCE field: /* Java */ CaseInsensitiveFileComparator.INSTANCE.compare(file1, file2); In this example, the INSTANCE field has the type CaseInsensitiveFile-Comparator.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2196-2198 | Añadido el domingo, 19 de marzo de 2023 12:20:49

Java’s static keyword isn’t part of the Kotlin language. As a replacement, Kotlin relies on package-level functions (which can replace Java’s static methods in many situations) and object declarations (which replace Java static methods in other cases, as well as static fields).
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2196-2201 | Añadido el domingo, 19 de marzo de 2023 12:21:12

Java’s static keyword isn’t part of the Kotlin language. As a replacement, Kotlin relies on package-level functions (which can replace Java’s static methods in many situations) and object declarations (which replace Java static methods in other cases, as well as static fields). In most cases, it’s recommended that you use top-level functions. But top-level functions can’t access private members of a class, as illustrated by figure 4.5. Thus, if you need to write a function that can be called without having a class instance but needs access to the internals of a class, you can write it as a member of an object declaration inside that class. An example of such a function would be a factory method.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2203-2205 | Añadido el domingo, 19 de marzo de 2023 12:22:18

One of the objects defined in a class can be marked with a special keyword: companion. If you do that, you gain the ability to access the methods and properties of that object directly through the name of the containing class, without specifying the name of the object explicitly.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2209-2211 | Añadido el domingo, 19 de marzo de 2023 12:22:47

Remember when we promised you a good place to call a private constructor? That’s the companion object. The companion object has access to all private members of the class, including the private constructor, and it’s an ideal candidate to implement the Factory pattern.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2228-2229 | Añadido el domingo, 19 de marzo de 2023 12:28:59

A companion object is a regular object that is declared in a class. It can be named, implement an interface, or have extension functions or properties.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2275-2276 | Añadido el domingo, 19 de marzo de 2023 12:44:20

The syntax is the same as with object declarations, except that you omit the name of the object. The object expression declares a class and creates an instance of that class, but it doesn’t assign a name to the class or the instance.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2282-2283 | Añadido el domingo, 19 de marzo de 2023 12:45:39

Unlike object declarations, anonymous objects aren’t singletons. Every time an object expression is executed, a new instance of the object is created.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2289-2293 | Añadido el domingo, 19 de marzo de 2023 12:47:20

Object expressions are mostly useful when you need to override multiple methods in your anonymous object. If you only need to implement a single-method interface (such as Runnable), you can rely on Kotlin’s support for SAM conversion (converting a function literal to an implementation of an interface with a single abstract method) and write your implementation as a function literal (lambda). We’ll discuss lambdas and SAM conversion in much more detail in chapter 5.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2295-2331 | Añadido el domingo, 19 de marzo de 2023 12:47:42

Summary Interfaces in Kotlin are similar to Java’s but can contain default implementations (which Java supports only since version 8) and properties. All declarations are final and public by default. To make a declaration non-final, mark it as open. internal declarations are visible in the same module. Nested classes aren’t inner by default. Use the keyword inner to store a reference to the outer class. A sealed class can only have subclasses nested in its declaration (Kotlin 1.1 will allow placing them anywhere in the same file). Initializer blocks and secondary constructors provide flexibility for initializing class instances. You use the field identifier to reference a property backing field from the accessor body. Data classes provide compiler-generated equals, hashCode, toString, copy, and other methods. Class delegation helps to avoid many similar delegating methods in your code. Object declaration is Kotlin’s way to define a singleton class. Companion objects (along with package-level functions and properties) replace Java’s static method and field definitions. Companion objects, like other objects, can implement interfaces, as well as have extension functions and properties. Object expressions are Kotlin’s replacement for Java’s anonymous inner classes, with added power such as the ability to implement multiple interfaces and to modify the variables defined in the scope where the object is created. Chapter 5. Programming with lambdas This chapter covers Lambda expressions and member references Working with collections in a functional style Sequences: performing collection operations lazily Using Java functional interfaces in Kotlin Using lambdas with receivers Lambda expressions, or simply lambdas, are essentially small chunks of code that can be passed to other functions. With lambdas, you can easily extract common code structures into library functions, and the Kotlin standard library makes heavy use of them. One of the most common uses for lambdas is working with collections, and in this chapter you’ll see many examples of replacing common collection access patterns with lambdas passed to standard library functions. You’ll also see how lambdas can be used with Java libraries—even those that weren’t originally designed with lambdas in mind. Finally, we’ll look at lambdas with receivers—a special kind of lambdas where the body is executed in a different context than the surrounding code. 5.1. Lambda expressions and member references The introduction of lambdas to Java 8 was one of the longest-awaited changes in the evolution of the language. Why was it such a big deal? In this section, you’ll find out why lambdas are so useful and what the syntax of lambda expressions in Kotlin looks like. 5.1.1. Introduction to lambdas: blocks of code as function parameters Passing and storing pieces of behavior in your code is a frequent task. For example, you often need to express ideas like “When an event happens, run this handler” or “Apply this operation to all elements in a data structure.” In older versions of Java, you could accomplish this through anonymous inner classes. This technique works but requires verbose syntax. Functional programming offers you another approach to solve this problem: the ability to treat functions as values. Instead of declaring a class and passing an instance of that class to a function, you can pass a function directly. With lambda expressions, the code is even more concise. You don’t need to declare a function: instead, you can, effectively, pass a block of code directly as a function parameter. Let’s look at an example. Imagine that you need to define a behavior for clicking a button. You add a listener responsible for handling the click. This listener implements the corresponding OnClickListener interface with one method, onClick. Listing 5.1. Implementing
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2295-2310 | Añadido el domingo, 19 de marzo de 2023 12:48:10

Summary Interfaces in Kotlin are similar to Java’s but can contain default implementations (which Java supports only since version 8) and properties. All declarations are final and public by default. To make a declaration non-final, mark it as open. internal declarations are visible in the same module. Nested classes aren’t inner by default. Use the keyword inner to store a reference to the outer class. A sealed class can only have subclasses nested in its declaration (Kotlin 1.1 will allow placing them anywhere in the same file). Initializer blocks and secondary constructors provide flexibility for initializing class instances. You use the field identifier to reference a property backing field from the accessor body. Data classes provide compiler-generated equals, hashCode, toString, copy, and other methods. Class delegation helps to avoid many similar delegating methods in your code. Object declaration is Kotlin’s way to define a singleton class. Companion objects (along with package-level functions and properties) replace Java’s static method and field definitions. Companion objects, like other objects, can implement interfaces, as well as have extension functions and properties. Object expressions are Kotlin’s replacement for Java’s anonymous inner classes, with added power such as the ability to implement multiple interfaces and to modify the variables defined in the scope where the object is created.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- El marcador en la posición 2311 | Añadido el domingo, 19 de marzo de 2023 12:53:30


==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2368-2383 | Añadido el martes, 21 de marzo de 2023 22:31:53

Lambda expression syntax A lambda expression in Kotlin is always surrounded by curly braces. Note that there are no parentheses around the arguments. The arrow separates the argument list from the body of the lambda. You can store a lambda expression in a variable and then treat this variable like a normal function (call it with the corresponding arguments): If you want to, you can call the lambda expression directly: >>> { println(42) }() 42 But such syntax isn’t readable and doesn’t make much sense (it’s equivalent to executing the lambda body directly). If you need to enclose a piece of code in a block, you can use the library function run that executes the lambda passed to it: In section 8.2, you’ll learn why such invocations have no runtime overhead and are as efficient as built-in language constructs. Let’s return to listing 5.4, which finds the oldest person in a list: >>> val people = listOf(Person("Alice", 29), Person("Bob", 31)) >>> println(people.maxBy { it.age }) Person(name=Bob, age=31) If you rewrite this example without using any syntax shortcuts, you get the following: people.maxBy({ p: Person -> p.age }) It should be clear what happens here: the piece of code in curly braces is a lambda expression, and you pass it as an argument to the function.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2387-2392 | Añadido el martes, 21 de marzo de 2023 22:32:30

In this example, the lambda is the only argument, so it can be placed after the parentheses: people.maxBy() { p: Person -> p.age } When the lambda is the only argument to a function, you can also remove the empty parentheses from the call: people.maxBy { p: Person -> p.age } All three syntactic forms mean the same thing, but the last one is the easiest to read. If a lambda is the only argument, you’ll definitely want to write it without the parentheses.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2387-2394 | Añadido el martes, 21 de marzo de 2023 22:33:01

In this example, the lambda is the only argument, so it can be placed after the parentheses: people.maxBy() { p: Person -> p.age } When the lambda is the only argument to a function, you can also remove the empty parentheses from the call: people.maxBy { p: Person -> p.age } All three syntactic forms mean the same thing, but the last one is the easiest to read. If a lambda is the only argument, you’ll definitely want to write it without the parentheses. When you have several arguments, you can emphasize that the lambda is an argument by leaving it inside the parentheses, or you can put it outside of them—both options are valid. If you want to pass two or more lambdas, you can’t move more than one out, so it’s usually better to pass them using the regular syntax.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2415-2416 | Añadido el martes, 21 de marzo de 2023 22:35:36

The simple rule you can follow is to always start without the types; if the compiler complains, specify them.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2426-2427 | Añadido el martes, 21 de marzo de 2023 22:37:06

If you store a lambda in a variable, there’s no context from which to infer the parameter types, so you have to specify them explicitly:
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2426-2428 | Añadido el martes, 21 de marzo de 2023 22:37:13

If you store a lambda in a variable, there’s no context from which to infer the parameter types, so you have to specify them explicitly: >>> val getAge = { p: Person -> p.age }
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2436-2437 | Añadido el martes, 21 de marzo de 2023 22:38:56

If you use a lambda in a function, you can access the parameters of that function as well as the local variables declared before the lambda.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2442-2443 | Añadido el martes, 21 de marzo de 2023 22:41:22

One important difference between Kotlin and Java is that in Kotlin, you aren’t restricted to accessing final variables. You can also modify variables from within a lambda.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2446-2447 | Añadido el martes, 21 de marzo de 2023 22:42:24

Kotlin, unlike Java, allows you to access non-final variables and even modify them in a lambda. External variables accessed from a lambda, such as prefix, clientErrors,
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2444-2448 | Añadido el martes, 21 de marzo de 2023 22:42:36

Listing 5.11. Changing local variables from a lambda Kotlin, unlike Java, allows you to access non-final variables and even modify them in a lambda. External variables accessed from a lambda, such as prefix, clientErrors, and serverErrors in these examples, are said to be captured by the lambda.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2448-2451 | Añadido el martes, 21 de marzo de 2023 22:43:54

the lifetime of a local variable is constrained by the function in which the variable is declared. But if it’s captured by the lambda, the code that uses this variable can be stored and executed later. You may ask how this works. When you capture a final variable, its value is stored together with the lambda code that uses it. For non-final variables, the value is enclosed in a special wrapper that lets you change it, and the reference to the wrapper is stored together with the lambda.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2452-2461 | Añadido el martes, 21 de marzo de 2023 22:47:38

Capturing a mutable variable: implementation details Java allows you to capture only final variables. When you want to capture a mutable variable, you can use one of the following tricks: either declare an array of one element in which to store the mutable value, or create an instance of a wrapper class that stores the reference that can be changed. If you used this technique explicitly in Kotlin, the code would be as follows: In real code, you don’t need to create such wrappers. Instead, you can mutate the variable directly: var counter = 0 val inc = { counter++ } How does it work? The first example shows how the second example works under the hood. Any time you capture a final variable (val), its value is copied, as in Java. When you capture a mutable variable (var), its value is stored as an instance of a Ref class. The Ref variable is final and can be easily captured, whereas the actual value is stored in a field and can be changed from the lambda.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2471-2479 | Añadido el martes, 21 de marzo de 2023 22:50:50

Member references You’ve seen how lambdas allow you to pass a block of code as a parameter to a function. But what if the code that you need to pass as a parameter is already defined as a function? Of course, you can pass a lambda that calls that function, but doing so is somewhat redundant. Can you pass the function directly? In Kotlin, just like in Java 8, you can do so if you convert the function to a value. You use the :: operator for that: val getAge = Person::age This expression is called member reference, and it provides a short syntax for creating a function value that calls exactly one method or accesses a property. A double colon separates the name of a class from the name of the member you need to reference (a method or property), as shown in figure 5.2. Figure 5.2. Member reference syntax 
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2482-2482 | Añadido el martes, 21 de marzo de 2023 22:52:26

A member reference has the same type as a lambda that calls that function,
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2483-2496 | Añadido el martes, 21 de marzo de 2023 22:53:13

You can have a reference to a function that’s declared at the top level (and isn’t a member of a class), as well: In this case, you omit the class name and start with ::. The member reference ::salute is passed as an argument to the library function run, which calls the corresponding function. It’s convenient to provide a member reference instead of a lambda that delegates to a function taking several parameters: You can store or postpone the action of creating an instance of a class using a constructor reference. The constructor reference is formed by specifying the class name after the double colons: Note that you can also reference extension functions the same way: fun Person.isAdult() = age >= 21 val predicate = Person::isAdult Although isAdult isn’t a member of the Person class, you can access it via reference, just as you can access it as a member on an instance: person.isAdult(). Bound references In Kotlin 1.0, when you take a reference to a method or property of a class, you always need to provide an instance of that class when you call the reference.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- El marcador en la posición 2496 | Añadido el martes, 21 de marzo de 2023 22:56:02


==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2563-2568 | Añadido el domingo, 26 de marzo de 2023 08:45:17

Using the right function for the job: “count” vs. “size” It’s easy to forget about count and implement it by filtering the collection and getting its size: >>> println(people.filter(canBeInClub27).size) 1 But in this case, an intermediate collection is created to store all the elements that satisfy the predicate. On the other hand, the count method tracks only the number of matching elements, not the elements themselves, and is therefore more efficient.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2574-2575 | Añadido el domingo, 26 de marzo de 2023 08:47:09

groupBy: converting a list to a map of groups Imagine that you need to divide all elements into different groups according to some quality.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2574-2581 | Añadido el domingo, 26 de marzo de 2023 08:47:19

groupBy: converting a list to a map of groups Imagine that you need to divide all elements into different groups according to some quality. For example, you want to group people of the same age. It’s convenient to pass this quality directly as a parameter. The groupBy function can do this for you: >>> val people = listOf(Person("Alice", 31), ...         Person("Bob", 29), Person("Carol", 31)) >>> println(people.groupBy { it.age }) The result of this operation is a map from the key by which the elements are grouped (age, in this case) to the groups of elements (persons); see figure 5.5. Figure 5.5. The result of applying the groupBy function 
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2589-2589 | Añadido el domingo, 26 de marzo de 2023 08:53:30

flatMap and flatten: processing elements in nested collections
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2589-2593 | Añadido el domingo, 26 de marzo de 2023 08:53:40

flatMap and flatten: processing elements in nested collections Now let’s put aside our discussion of people and switch to books. Suppose you have a storage of books, represented by the class Book: class Book(val title: String, val authors: List<String>) Each book was written by one or more authors. You can compute the set of all the authors in your library: 
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2589-2595 | Añadido el domingo, 26 de marzo de 2023 08:53:52

flatMap and flatten: processing elements in nested collections Now let’s put aside our discussion of people and switch to books. Suppose you have a storage of books, represented by the class Book: class Book(val title: String, val authors: List<String>) Each book was written by one or more authors. You can compute the set of all the authors in your library: The flatMap function does two things: At first it transforms (or maps) each element to a collection according to the function given as an argument, and then it combines (or flattens) several lists into one.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2607-2608 | Añadido el domingo, 26 de marzo de 2023 08:54:06

The toSet call removes duplicates from the resulting collection—so,
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2608-2611 | Añadido el domingo, 26 de marzo de 2023 08:54:42

You may think of flatMap when you’re stuck with a collection of collections of elements that have to be combined into one. Note that if you don’t need to transform anything and just need to flatten such a collection, you can use the flatten function: listOfLists.flatten().
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2616-2620 | Añadido el domingo, 26 de marzo de 2023 08:56:33

Lazy collection operations: sequences In the previous section, you saw several examples of chained collection functions, such as map and filter. These functions create intermediate collections eagerly, meaning the intermediate result of each step is stored in a temporary list. Sequences give you an alternative way to perform such computations that avoids the creation of intermediate temporary objects.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2616-2620 | Añadido el domingo, 26 de marzo de 2023 08:58:34

Lazy collection operations: sequences In the previous section, you saw several examples of chained collection functions, such as map and filter. These functions create intermediate collections eagerly, meaning the intermediate result of each step is stored in a temporary list. Sequences give you an alternative way to perform such computations that avoids the creation of intermediate temporary objects.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2616-2622 | Añadido el domingo, 26 de marzo de 2023 08:58:43

Lazy collection operations: sequences In the previous section, you saw several examples of chained collection functions, such as map and filter. These functions create intermediate collections eagerly, meaning the intermediate result of each step is stored in a temporary list. Sequences give you an alternative way to perform such computations that avoids the creation of intermediate temporary objects. Here’s an example: people.map(Person::name).filter { it.startsWith("A") } The Kotlin standard library reference says that both filter and map return a list.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2616-2625 | Añadido el domingo, 26 de marzo de 2023 08:58:54

Lazy collection operations: sequences In the previous section, you saw several examples of chained collection functions, such as map and filter. These functions create intermediate collections eagerly, meaning the intermediate result of each step is stored in a temporary list. Sequences give you an alternative way to perform such computations that avoids the creation of intermediate temporary objects. Here’s an example: people.map(Person::name).filter { it.startsWith("A") } The Kotlin standard library reference says that both filter and map return a list. That means this chain of calls will create two lists: one to hold the results of the filter function and another for the results of map. This isn’t a problem when the source list contains two elements, but it becomes much less efficient if you have a million. To make this more efficient, you can convert the operation so it uses sequences instead of using collections directly: 
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2616-2628 | Añadido el domingo, 26 de marzo de 2023 08:59:57

Lazy collection operations: sequences In the previous section, you saw several examples of chained collection functions, such as map and filter. These functions create intermediate collections eagerly, meaning the intermediate result of each step is stored in a temporary list. Sequences give you an alternative way to perform such computations that avoids the creation of intermediate temporary objects. Here’s an example: people.map(Person::name).filter { it.startsWith("A") } The Kotlin standard library reference says that both filter and map return a list. That means this chain of calls will create two lists: one to hold the results of the filter function and another for the results of map. This isn’t a problem when the source list contains two elements, but it becomes much less efficient if you have a million. To make this more efficient, you can convert the operation so it uses sequences instead of using collections directly: The result of applying this operation is the same as in the previous example: a list of people’s names that start with the letter A. But in the second example, no intermediate collections to store the elements are created, so performance for a large number
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2616-2627 | Añadido el domingo, 26 de marzo de 2023 09:00:05

Lazy collection operations: sequences In the previous section, you saw several examples of chained collection functions, such as map and filter. These functions create intermediate collections eagerly, meaning the intermediate result of each step is stored in a temporary list. Sequences give you an alternative way to perform such computations that avoids the creation of intermediate temporary objects. Here’s an example: people.map(Person::name).filter { it.startsWith("A") } The Kotlin standard library reference says that both filter and map return a list. That means this chain of calls will create two lists: one to hold the results of the filter function and another for the results of map. This isn’t a problem when the source list contains two elements, but it becomes much less efficient if you have a million. To make this more efficient, you can convert the operation so it uses sequences instead of using collections directly: The result of applying this operation is the same as in the previous example: a list of people’s names that start with the letter A. But in the second example, no intermediate collections to store the elements are created, so performance
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2616-2628 | Añadido el domingo, 26 de marzo de 2023 09:01:10

Lazy collection operations: sequences In the previous section, you saw several examples of chained collection functions, such as map and filter. These functions create intermediate collections eagerly, meaning the intermediate result of each step is stored in a temporary list. Sequences give you an alternative way to perform such computations that avoids the creation of intermediate temporary objects. Here’s an example: people.map(Person::name).filter { it.startsWith("A") } The Kotlin standard library reference says that both filter and map return a list. That means this chain of calls will create two lists: one to hold the results of the filter function and another for the results of map. This isn’t a problem when the source list contains two elements, but it becomes much less efficient if you have a million. To make this more efficient, you can convert the operation so it uses sequences instead of using collections directly: The result of applying this operation is the same as in the previous example: a list of people’s names that start with the letter A. But in the second example, no intermediate collections to store the elements are created, so performance for a large number of elements will be noticeably better.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2638-2639 | Añadido el domingo, 26 de marzo de 2023 09:03:12

As a rule, use a sequence whenever you have a chain of operations on a large collection.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2638-2640 | Añadido el domingo, 26 de marzo de 2023 09:03:33

As a rule, use a sequence whenever you have a chain of operations on a large collection. In section 8.2, we’ll discuss why eager operations on regular collections are efficient in Kotlin, in spite of creating intermediate collections.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2665-2670 | Añadido el domingo, 26 de marzo de 2023 12:01:27

Figure 5.8 illustrates the difference between evaluating this code in an eager (using collections) and lazy (using sequences) manner. Figure 5.8. Eager evaluation runs each operation on the entire collection; lazy evaluation processes elements one by one. In the first case, when you work with collections, the list is transformed into another list, so the map transformation is applied to each element, including 3 and 4. Afterward, the first element satisfying the predicate is found: the square of 2.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2665-2673 | Añadido el domingo, 26 de marzo de 2023 12:02:53

Figure 5.8 illustrates the difference between evaluating this code in an eager (using collections) and lazy (using sequences) manner. Figure 5.8. Eager evaluation runs each operation on the entire collection; lazy evaluation processes elements one by one. In the first case, when you work with collections, the list is transformed into another list, so the map transformation is applied to each element, including 3 and 4. Afterward, the first element satisfying the predicate is found: the square of 2. In the second case, the find call begins processing the elements one by one. You take a number from the original sequence, transform it with map, and then check whether it matches the predicate passed to find. When you reach 2, you see that its square is greater than 3 and return it as the result of the find operation. You don’t need to look at 3
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2665-2673 | Añadido el domingo, 26 de marzo de 2023 12:03:00

Figure 5.8 illustrates the difference between evaluating this code in an eager (using collections) and lazy (using sequences) manner. Figure 5.8. Eager evaluation runs each operation on the entire collection; lazy evaluation processes elements one by one. In the first case, when you work with collections, the list is transformed into another list, so the map transformation is applied to each element, including 3 and 4. Afterward, the first element satisfying the predicate is found: the square of 2. In the second case, the find call begins processing the elements one by one. You take a number from the original sequence, transform it with map, and then check whether it matches the predicate passed to find. When you reach 2, you see that its square is greater than 3 and return it as the result of the find operation. You don’t need to look at 3 and 4, because the result was found before you reached them.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2683-2687 | Añadido el domingo, 26 de marzo de 2023 18:13:46

Streams vs. sequences If you’re familiar with Java 8 streams, you’ll see that sequences are exactly the same concept. Kotlin provides its own version of the same concept because Java 8 streams aren’t available on platforms built on older versions of Java, such as Android. If you’re targeting Java 8, streams give you one big feature that isn’t currently implemented for Kotlin collections and sequences: the ability to run a stream operation (such as map or filter) on multiple CPUs in parallel. You can choose between streams and sequences based on the Java versions you target and your specific requirements.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2721-2722 | Añadido el domingo, 26 de marzo de 2023 18:18:11

This works because the OnClickListener interface has only one abstract method. Such interfaces are called functional interfaces, or SAM
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2721-2725 | Añadido el domingo, 26 de marzo de 2023 18:18:15

This works because the OnClickListener interface has only one abstract method. Such interfaces are called functional interfaces, or SAM interfaces, where SAM stands for single abstract method. The Java API is full of functional interfaces like Runnable and Callable, as well as methods working with them. Kotlin allows you to use lambdas when calling Java methods that take functional interfaces as parameters, ensuring that your Kotlin code remains clean and idiomatic.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2750-2755 | Añadido el domingo, 26 de marzo de 2023 18:22:40

Lambda implementation details As of Kotlin 1.0, every lambda expression is compiled into an anonymous class, unless it’s an inline lambda. Support for generating Java 8 bytecode is planned for later versions of Kotlin. Once implemented, it will allow the compiler to avoid generating a separate .class file for every lambda expression. If a lambda captures variables, the anonymous class will have a field for each captured variable, and a new instance of that class will be created for every invocation. Otherwise, a single instance will be created. The name of the class is derived by adding a suffix from the name of the function in which the lambda is declared: HandleComputation$1, for this example.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2782-2783 | Añadido el martes, 28 de marzo de 2023 22:15:56

From the compiler’s point of view, the lambda is a block of code, not an object, and you can’t refer to it as an object. The this reference in a lambda refers to a surrounding class.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2794-2795 | Añadido el martes, 28 de marzo de 2023 22:18:58

unique feature of Kotlin’s lambdas that isn’t available with Java: the ability to call methods of a different object in the body of a lambda without any additional qualifiers. Such lambdas are called lambdas with receivers.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2808-2809 | Añadido el miércoles, 29 de marzo de 2023 06:31:05

The with structure looks like a special construct, but it’s a function that takes two arguments:
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2809-2810 | Añadido el miércoles, 29 de marzo de 2023 06:31:41

The convention of putting the lambda outside of the parentheses works here, and the entire invocation looks like a built-in feature of the language.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2809-2810 | Añadido el miércoles, 29 de marzo de 2023 06:31:47

The convention of putting the lambda outside of the parentheses works here, and the entire invocation looks like a built-in feature of the language. Alternatively, you could write
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2809-2811 | Añadido el miércoles, 29 de marzo de 2023 06:31:56

The convention of putting the lambda outside of the parentheses works here, and the entire invocation looks like a built-in feature of the language. Alternatively, you could write this as with(stringBuilder, { ... }), but it’s less readable.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2811-2812 | Añadido el miércoles, 29 de marzo de 2023 06:32:27

The with function converts its first argument into a receiver of the lambda that’s passed as a second argument.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2811-2813 | Añadido el miércoles, 29 de marzo de 2023 06:32:50

The with function converts its first argument into a receiver of the lambda that’s passed as a second argument. You can access this receiver via an explicit this reference. Alternatively, as usual for a this reference, you can omit it and access methods or properties of this value without any additional qualifiers.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2818-2824 | Añadido el miércoles, 29 de marzo de 2023 06:34:28

In the body of an extension function, this refers to the instance of the type the function is extending, and it can be omitted to give you direct access to the receiver’s members. Note that an extension function is, in a sense, a function with a receiver. The following analogy can be applied: Regular function Regular lambda Extension function Lambda with a receiver A lambda is a way to define behavior similar to a regular function. A lambda with a receiver is a way to define behavior similar to an extension function.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2832-2836 | Añadido el miércoles, 29 de marzo de 2023 06:36:28

Method-name conflicts What happens if the object you pass as a parameter to with has a method with the same name as the class in which you’re using with? In this case, you can add an explicit label to the this reference to specify which method you need to call. Imagine that the alphabet function is a method of the class OuterClass. If you need to refer to the toString method defined in the outer class instead of the one in StringBuilder, you can do so using the following syntax: this@OuterClass.toString()
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2837-2839 | Añadido el miércoles, 29 de marzo de 2023 06:37:07

The value that with returns is the result of executing the lambda code. The result is the last expression in the lambda. But sometimes you want the call to return the receiver object,
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2837-2838 | Añadido el miércoles, 29 de marzo de 2023 06:37:13

The value that with returns is the result of executing the lambda code. The result is the last expression in the lambda.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2840-2842 | Añadido el miércoles, 29 de marzo de 2023 06:38:01

The apply function works almost exactly the same as with; the only difference is that apply always returns the object passed to it as an argument (in other words, the receiver object).
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2848-2850 | Añadido el miércoles, 29 de marzo de 2023 06:42:30

One of many cases where this is useful is when you’re creating an instance of an object and need to initialize some properties right away. In Java, this is usually accomplished through a separate Builder object; and in Kotlin, you can use apply on any object without any special support from the library where the object is defined.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2857-2858 | Añadido el miércoles, 29 de marzo de 2023 06:42:56

After the lambda is executed, apply returns that instance, which is already initialized;
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2859-2859 | Añadido el miércoles, 29 de marzo de 2023 06:43:06

The with and apply functions are basic generic examples of using lambdas with receivers.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2865-2866 | Añadido el miércoles, 29 de marzo de 2023 06:43:47

The buildString function is an elegant solution for the task of creating a String with the help of StringBuilder.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2870-2881 | Añadido el miércoles, 29 de marzo de 2023 06:49:37

Lambdas allow you to pass chunks of code as arguments to functions. Kotlin lets you pass lambdas to functions outside of parentheses and refer to a single lambda parameter as it. Code in a lambda can access and modify variables in the function containing the call to the lambda. You can create references to methods, constructors, and properties by prefixing the name of the function with ::, and pass such references to functions instead of lambdas. Most common operations with collections can be performed without manually iterating over elements, using functions such as filter, map, all, any, and so on. Sequences allow you to combine multiple operations on a collection without creating collections to hold intermediate results. You can pass lambdas as arguments to methods that take a Java functional interface (an interface with a single abstract method, also known as a SAM interface) as a parameter. Lambdas with receivers are lambdas in which you can directly call methods on a special receiver object. The with standard library function allows you to call multiple methods on the same object without repeating the reference to the object. apply lets you construct and initialize any object using a builder-style API.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2869-2881 | Añadido el miércoles, 29 de marzo de 2023 06:49:41

5.6. Summary Lambdas allow you to pass chunks of code as arguments to functions. Kotlin lets you pass lambdas to functions outside of parentheses and refer to a single lambda parameter as it. Code in a lambda can access and modify variables in the function containing the call to the lambda. You can create references to methods, constructors, and properties by prefixing the name of the function with ::, and pass such references to functions instead of lambdas. Most common operations with collections can be performed without manually iterating over elements, using functions such as filter, map, all, any, and so on. Sequences allow you to combine multiple operations on a collection without creating collections to hold intermediate results. You can pass lambdas as arguments to methods that take a Java functional interface (an interface with a single abstract method, also known as a SAM interface) as a parameter. Lambdas with receivers are lambdas in which you can directly call methods on a special receiver object. The with standard library function allows you to call multiple methods on the same object without repeating the reference to the object. apply lets you construct and initialize any object using a builder-style API.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- El marcador en la posición 2881 | Añadido el miércoles, 29 de marzo de 2023 06:56:29


==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4130-4131 | Añadido el miércoles, 29 de marzo de 2023 07:01:33

higher-order functions. By definition, a higher-order function is a function that takes another function as an argument or returns one.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4144-4146 | Añadido el miércoles, 29 de marzo de 2023 07:04:55

Figure 8.1. Function-type syntax in Kotlin 
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4146-4147 | Añadido el miércoles, 29 de marzo de 2023 07:05:12

the Unit type is used to specify that a function returns no meaningful value.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4148-4150 | Añadido el miércoles, 29 de marzo de 2023 07:05:51

you can omit the types of the parameters x, y in the lambda expression { x, y -> x + y }. Because they’re specified in the function type as part of the variable declaration, you don’t need to repeat them in the lambda itself.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4150-4155 | Añadido el miércoles, 29 de marzo de 2023 07:06:16

Just like with any other function, the return type of a function type can be marked as nullable: var canReturnNull: (Int, Int) -> Int? = { null } You can also define a nullable variable of a function type. To specify that the variable itself, rather than the return type of the function, is nullable, you need to enclose the entire function type definition in parentheses and put the question mark after the parentheses: var funOrNull: ((Int, Int) -> Int)? = null Note the subtle difference between this example and the previous
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4183-4185 | Añadido el miércoles, 29 de marzo de 2023 07:21:35

Using function types from Java Under the hood, function types are declared as regular interfaces: a variable of a function type is an implementation of a FunctionN interface.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4183-4187 | Añadido el miércoles, 29 de marzo de 2023 07:22:52

Using function types from Java Under the hood, function types are declared as regular interfaces: a variable of a function type is an implementation of a FunctionN interface. The Kotlin standard library defines a series of interfaces, corresponding to different numbers of function arguments: Function0<R> (this function takes no arguments), Function1<P1, R> (this function takes one argument), and so on.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4183-4187 | Añadido el miércoles, 29 de marzo de 2023 07:23:20

Using function types from Java Under the hood, function types are declared as regular interfaces: a variable of a function type is an implementation of a FunctionN interface. The Kotlin standard library defines a series of interfaces, corresponding to different numbers of function arguments: Function0<R> (this function takes no arguments), Function1<P1, R> (this function takes one argument), and so on. Each interface defines a single invoke method, and calling it will execute the function.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4183-4191 | Añadido el miércoles, 29 de marzo de 2023 07:25:50

Using function types from Java Under the hood, function types are declared as regular interfaces: a variable of a function type is an implementation of a FunctionN interface. The Kotlin standard library defines a series of interfaces, corresponding to different numbers of function arguments: Function0<R> (this function takes no arguments), Function1<P1, R> (this function takes one argument), and so on. Each interface defines a single invoke method, and calling it will execute the function. A variable of a function type is an instance of a class implementing the corresponding FunctionN interface, with the invoke method containing the body of the lambda. Kotlin functions that use function types can be called easily from Java. Java 8 lambdas are automatically converted to values of function types: /* Kotlin declaration */ fun processTheAnswer(f: (Int) -> Int) {     println(f(42)) } /* Java */ >>> processTheAnswer(number
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4183-4191 | Añadido el miércoles, 29 de marzo de 2023 07:25:58

Using function types from Java Under the hood, function types are declared as regular interfaces: a variable of a function type is an implementation of a FunctionN interface. The Kotlin standard library defines a series of interfaces, corresponding to different numbers of function arguments: Function0<R> (this function takes no arguments), Function1<P1, R> (this function takes one argument), and so on. Each interface defines a single invoke method, and calling it will execute the function. A variable of a function type is an instance of a class implementing the corresponding FunctionN interface, with the invoke method containing the body of the lambda. Kotlin functions that use function types can be called easily from Java. Java 8 lambdas are automatically converted to values of function types: /* Kotlin declaration */ fun processTheAnswer(f: (Int) -> Int) {     println(f(42)) } /* Java */ >>>
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4183-4191 | Añadido el miércoles, 29 de marzo de 2023 07:26:14

Using function types from Java Under the hood, function types are declared as regular interfaces: a variable of a function type is an implementation of a FunctionN interface. The Kotlin standard library defines a series of interfaces, corresponding to different numbers of function arguments: Function0<R> (this function takes no arguments), Function1<P1, R> (this function takes one argument), and so on. Each interface defines a single invoke method, and calling it will execute the function. A variable of a function type is an instance of a class implementing the corresponding FunctionN interface, with the invoke method containing the body of the lambda. Kotlin functions that use function types can be called easily from Java. Java 8 lambdas are automatically converted to values of function types: /* Kotlin declaration */ fun processTheAnswer(f: (Int) -> Int) {     println(f(42)) } /* Java */ >>> processTheAnswer(number -> number + 1); 43
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4213-4214 | Añadido el miércoles, 29 de marzo de 2023 07:32:08

Declaring a default value of a function type requires no special syntax—you just put the value as a lambda after the = sign.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4291-4293 | Añadido el miércoles, 29 de marzo de 2023 07:49:44

But that means every time you use a lambda expression, an extra class is created; and if the lambda captures some variables, then a new object is created on every invocation. This introduces runtime overhead, causing an implementation that uses a lambda to be less efficient than a function that executes the same code directly.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4295-4297 | Añadido el miércoles, 29 de marzo de 2023 07:50:28

If you mark a function with the inline modifier, the compiler won’t generate a function call when this function is used and instead will replace every call to the function with the actual code implementing the function.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4360-4364 | Añadido el miércoles, 29 de marzo de 2023 08:02:35

Imagine now that you apply two operations, filter and map, in a chain. >>> println(people.filter { it.age > 30 } ...               .map(Person::name)) [Bob] This example uses a lambda expression and a member reference. Once again, both filter and map are declared as inline, so their bodies are inlined, and no extra classes or objects are created.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4360-4366 | Añadido el miércoles, 29 de marzo de 2023 08:02:51

Imagine now that you apply two operations, filter and map, in a chain. >>> println(people.filter { it.age > 30 } ...               .map(Person::name)) [Bob] This example uses a lambda expression and a member reference. Once again, both filter and map are declared as inline, so their bodies are inlined, and no extra classes or objects are created. But the code creates an intermediate collection to store the result of filtering the list. The code generated from the filter function adds elements to that collection, and the code generated from map reads from it.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4366-4367 | Añadido el miércoles, 29 de marzo de 2023 08:03:09

If the number of elements to process is large, and the overhead of an intermediate collection becomes a concern, you can use a sequence instead, by adding an as-Sequence call to the chain.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4366-4371 | Añadido el miércoles, 29 de marzo de 2023 08:04:28

If the number of elements to process is large, and the overhead of an intermediate collection becomes a concern, you can use a sequence instead, by adding an as-Sequence call to the chain. But as you saw in the previous section, lambdas used to process a sequence aren’t inlined. Each intermediate sequence is represented as an object storing a lambda in its field, and the terminal operation causes a chain of calls through each intermediate sequence to be performed. Therefore, even though operations on sequences are lazy, you shouldn’t strive to insert an asSequence call into every chain of collection operations in your code. This helps only for large collections; smaller
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4366-4371 | Añadido el miércoles, 29 de marzo de 2023 08:04:35

If the number of elements to process is large, and the overhead of an intermediate collection becomes a concern, you can use a sequence instead, by adding an as-Sequence call to the chain. But as you saw in the previous section, lambdas used to process a sequence aren’t inlined. Each intermediate sequence is represented as an object storing a lambda in its field, and the terminal operation causes a chain of calls through each intermediate sequence to be performed. Therefore, even though operations on sequences are lazy, you shouldn’t strive to insert an asSequence call into every chain of collection operations in your code. This helps only for large collections; smaller ones can be processed nicely with regular collection operations.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4373-4374 | Añadido el miércoles, 29 de marzo de 2023 08:05:25

Using the inline keyword is likely to improve performance only with functions that take lambdas as arguments;
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4375-4376 | Añadido el miércoles, 29 de marzo de 2023 08:05:53

For regular function calls, the JVM already provides powerful inlining support. It analyzes the execution of your code and inlines calls whenever doing so provides the most benefit. This happens automatically while translating bytecode to machine code.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4379-4393 | Añadido el miércoles, 29 de marzo de 2023 08:07:03

On the other hand, inlining functions with lambda arguments is beneficial. First, the overhead you avoid through inlining is more significant. You save not only on the call, but also on the creation of the extra class for each lambda and an object for the lambda instance. Second, the JVM currently isn’t smart enough to always perform inlining through the call and the lambda. Finally, inlining lets you use features that are impossible to make work with regular lambdas, such as non-local returns, which we’ll discuss later in this chapter. But you should still pay attention to the code size when deciding whether to use the inline modifier. If the function you want to inline is large, copying its bytecode into every call site could be expensive in terms of bytecode size. In that case, you should try to extract the code not related to the lambda arguments into a separate non-inline function. You can verify for yourself that the inline functions in the Kotlin standard library are always small. Next, let’s see how higher-order functions can help you improve your code. 8.2.5. Using inlined lambdas for resource management One common pattern where lambdas can remove duplicate code is resource management: acquiring a resource before an operation and releasing it afterward. Resource here can mean many different things: a file, a lock, a database transaction, and so on. The standard way to implement such a pattern is to use a try/finally statement in which the resource is acquired before the try block and released in the finally block. Earlier in this section, you saw an example of how you can encapsulate the logic of the try/finally statement in a function and pass the code using the resource as a lambda to that function. The example showed the synchronized function, which has the same syntax as the synchronized statement in Java: it takes the lock object as an argument.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4423-4424 | Añadido el miércoles, 29 de marzo de 2023 08:13:02

If you use the return keyword in a lambda, it returns from the function in which you called the lambda, not just from the lambda itself.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4423-4425 | Añadido el miércoles, 29 de marzo de 2023 08:13:38

If you use the return keyword in a lambda, it returns from the function in which you called the lambda, not just from the lambda itself. Such a return statement is called a non-local return, because it returns from a larger block than the block containing the return statement.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4428-4429 | Añadido el miércoles, 29 de marzo de 2023 08:14:37

Note that the return from the outer function is possible only if the function that takes the lambda as an argument is inlined.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4415-4415 | Añadido el miércoles, 29 de marzo de 2023 08:16:00

Return statements in lambdas: return from an enclosing function
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4433-4434 | Añadido el miércoles, 29 de marzo de 2023 08:16:13

Returning from lambdas: return with a label You can write a local return from a lambda expression as well. A local return in a lambda is similar to a break expression in a for loop.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4433-4435 | Añadido el miércoles, 29 de marzo de 2023 08:16:41

Returning from lambdas: return with a label You can write a local return from a lambda expression as well. A local return in a lambda is similar to a break expression in a for loop. It stops the execution of the lambda and continues execution of the code from which the lambda was invoked.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4433-4435 | Añadido el miércoles, 29 de marzo de 2023 08:16:52

Returning from lambdas: return with a label You can write a local return from a lambda expression as well. A local return in a lambda is similar to a break expression in a for loop. It stops the execution of the lambda and continues execution of the code from which the lambda was invoked.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4433-4436 | Añadido el miércoles, 29 de marzo de 2023 08:17:03

Returning from lambdas: return with a label You can write a local return from a lambda expression as well. A local return in a lambda is similar to a break expression in a for loop. It stops the execution of the lambda and continues execution of the code from which the lambda was invoked. To distinguish a local return from a non-local one, you use labels.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4437-4441 | Añadido el miércoles, 29 de marzo de 2023 08:18:05

Listing 8.20. Using a local return with a label To label a lambda expression, put the label name (which can be any identifier), followed by the @ character, before the opening curly brace of the lambda. To return from a lambda, put the @ character followed by the label name after the return keyword. This is illustrated in figure 8.4.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4438-4441 | Añadido el miércoles, 29 de marzo de 2023 08:18:15

To label a lambda expression, put the label name (which can be any identifier), followed by the @ character, before the opening curly brace of the lambda. To return from a lambda, put the @ character followed by the label name after the return keyword. This is illustrated in figure 8.4.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4438-4442 | Añadido el miércoles, 29 de marzo de 2023 08:18:34

To label a lambda expression, put the label name (which can be any identifier), followed by the @ character, before the opening curly brace of the lambda. To return from a lambda, put the @ character followed by the label name after the return keyword. This is illustrated in figure 8.4. Figure 8.4. Returns from a lambda use the “@” character to mark a label. 
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4443-4447 | Añadido el miércoles, 29 de marzo de 2023 08:19:12

Alternatively, the name of the function that takes this lambda as an argument can be used as a label. Listing 8.21. Using the function name as a return label Note that if you specify the label of the lambda expression explicitly, labeling using the function name doesn’t work. A lambda expression can’t have more than one label.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4448-4454 | Añadido el miércoles, 29 de marzo de 2023 08:21:11

Labeled “this” expression The same rules apply to the labels of this expressions. In chapter 5, we discussed lambdas with receivers—lambdas that contain an implicit context object that can be accessed via a this reference in a lambda (chapter 11 will explain how to write your own functions that expect lambdas with receivers as arguments). If you specify the label of a lambda with a receiver, you can access its implicit receiver using the corresponding labeled this expression: As with labels for return expressions, you can specify the label of the lambda expression explicitly or use the function name instead.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4454-4461 | Añadido el miércoles, 29 de marzo de 2023 08:22:31

The non-local return syntax is fairly verbose and becomes cumbersome if a lambda contains multiple return expressions. As a solution, you can use an alternate syntax to pass around blocks of code: anonymous functions. 8.3.3. Anonymous functions: local returns by default An anonymous function is a different way to write a block of code passed to a function. Let’s start with an example. Listing 8.22. Using return in an anonymous function You can see that an anonymous function looks similar to a regular function, except that its name and parameter types are omitted. Here’s another example.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4466-4476 | Añadido el miércoles, 29 de marzo de 2023 08:24:23

Using an anonymous function with an expression body people.filter(fun (person) = person.age < 30) people.filter(fun (person) = person.age < 30) Inside an anonymous function, a return expression without a label returns from the anonymous function, not from the enclosing one. The rule is simple: return returns from the closest function declared using the fun keyword. Lambda expressions don’t use the fun keyword, so a return in a lambda returns from the outer function. Anonymous functions do use fun; therefore, in the previous example, the anonymous function is the closest matching function. Consequently, the return expression returns from the anonymous function, not from the enclosing one. The difference is illustrated in figure 8.5. Figure 8.5. The return expression returns from the function declared using the fun keyword. Note that despite the fact that an anonymous function looks similar to a regular function declaration, it’s another syntactic form of a lambda expression.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4478-4487 | Añadido el miércoles, 29 de marzo de 2023 08:28:22

Summary Function types allow you to declare a variable, parameter, or function return value that holds a reference to a function. Higher-order functions take other functions as arguments or return them. You can create such functions by using a function type as the type of a function parameter or return value. When an inline function is compiled, its bytecode along with the bytecode of a lambda passed to it is inserted directly into the code of the calling function, which ensures that the call happens with no overhead compared to similar code written directly. Higher-order functions facilitate code reuse within the parts of a single component and let you build powerful generic libraries. Inline functions allow you to use non-local returns—return expressions placed in a lambda that return from the enclosing function. Anonymous functions provide an alternative syntax to lambda expressions with different rules for resolving the return expressions. You can use them if you need to write a block of code with multiple exit points.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2919-2921 | Añadido el miércoles, 29 de marzo de 2023 20:37:09

A variable of a nullable type can store a null reference To reiterate, a type without a question mark denotes that
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2939-2940 | Añadido el miércoles, 29 de marzo de 2023 20:39:18

“A type is a classification ... that determines the possible values for that type, and the operations that can be done on values of that type.”
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2958-2960 | Añadido el miércoles, 29 de marzo de 2023 20:43:20

Another path to solving this problem is to never use null values in code and to use a special wrapper type, such as the Optional type introduced in Java 8, to represent values that may or may not be defined.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 2958-2961 | Añadido el miércoles, 29 de marzo de 2023 20:43:39

Another path to solving this problem is to never use null values in code and to use a special wrapper type, such as the Optional type introduced in Java 8, to represent values that may or may not be defined. This approach has several downsides: the code gets more verbose, the extra wrapper instances affect performance at runtime, and it’s not used consistently across the entire ecosystem.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3026-3027 | Añadido el miércoles, 29 de marzo de 2023 20:54:06

The as? operator tries to cast a value to the specified type and returns null if the value doesn’t have the proper type.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3026-3029 | Añadido el miércoles, 29 de marzo de 2023 20:54:17

The as? operator tries to cast a value to the specified type and returns null if the value doesn’t have the proper type. Figure 6.4 illustrates this. Figure 6.4. The safe-cast operator tries to cast a value to the given type and returns null if the type differs. 
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3031-3032 | Añadido el miércoles, 29 de marzo de 2023 20:55:49

Using a safe cast to implement equals 
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3077-3078 | Añadido el miércoles, 29 de marzo de 2023 21:03:56

The “let” function The let function makes it easier to deal with nullable expressions.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3080-3081 | Añadido el miércoles, 29 de marzo de 2023 21:04:06

One of its most common uses is handling a nullable argument that should be passed to a function that expects a non-null parameter.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3127-3130 | Añadido el miércoles, 29 de marzo de 2023 21:11:02

A common use case for lateinit properties is dependency injection. In that scenario, the values of lateinit properties are set externally by a dependency-injection framework. To ensure compatibility with a broad range of Java frameworks, Kotlin generates a field with the same visibility as the lateinit property. If the property is declared as public, the field will be public as well.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3137-3138 | Añadido el miércoles, 29 de marzo de 2023 21:12:10

isEmpty and isBlank, defined as extensions of String in the Kotlin standard library. The first one checks whether the string is an empty string "", and the second one checks whether it’s empty or if it consists solely of whitespace characters.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3188-3190 | Añadido el miércoles, 29 de marzo de 2023 21:20:56

Platform types A platform type is essentially a type for which Kotlin doesn’t have nullability information; you can work with it as either a nullable or a non-null type
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3277-3281 | Añadido el miércoles, 29 de marzo de 2023 21:29:20

The full list of types that correspond to Java primitive types is: Integer types—Byte, Short, Int, Long Floating-point number types—Float, Double Character type—Char Boolean type—Boolean
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3303-3304 | Añadido el miércoles, 29 de marzo de 2023 21:30:55

argument, so a generic class (both in Java and in Kotlin) must always use a boxed representation of the type.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3261-3262 | Añadido el miércoles, 29 de marzo de 2023 21:31:38

and reference types. A variable of a primitive type (such as int) holds its value directly. A variable of a reference type (such as String) holds a reference to the memory location containing the object.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3260-3262 | Añadido el miércoles, 29 de marzo de 2023 21:31:43

6.2.1. Primitive types: Int, Boolean, and more As you know, Java makes a distinction between primitive types and reference types. A variable of a primitive type (such as int) holds its value directly. A variable of a reference type (such as String) holds a reference to the memory location containing the object.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3323-3329 | Añadido el miércoles, 29 de marzo de 2023 21:34:30

Kotlin supports the following ways to write number literals in source code, in addition to simple decimal numbers: Literals of type Long use the L suffix: 123L. Literals of type Double use the standard representation of floating-point numbers: 0.12, 2.0, 1.2e10, 1.2e-10. Literals of type Float use the f or F suffix: 123.4f, .456F, 1e3f. Hexadecimal literals use the 0x or 0X prefix (such as 0xCAFEBABE or 0xbcdL). Binary literals use the 0b or 0B prefix (such as 0b000000101).
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3347-3348 | Añadido el miércoles, 29 de marzo de 2023 21:35:48

“Any” and “Any?”: the root types Similar to how Object is the root of the class hierarchy in Java, the Any type is the supertype of all non-nullable types in Kotlin.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3351-3353 | Añadido el miércoles, 29 de marzo de 2023 21:37:01

Just as in Java, assigning a value of a primitive type to a variable of type Any performs automatic boxing: 
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3353-3354 | Añadido el miércoles, 29 de marzo de 2023 21:37:12

type, so a variable of the type Any can’t
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3353-3355 | Añadido el miércoles, 29 de marzo de 2023 21:37:18

Note that Any is a non-nullable type, so a variable of the type Any can’t hold the value null. If you need a variable that can hold any possible value in Kotlin, including null, you must use the Any? type.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3355-3355 | Añadido el miércoles, 29 de marzo de 2023 21:37:27

Under the hood, the Any type corresponds to java.lang.Object.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3361-3362 | Añadido el miércoles, 29 de marzo de 2023 21:38:13

The Unit type: Kotlin’s “void” The Unit type in Kotlin fulfills the same function as void in Java.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3362-3363 | Añadido el miércoles, 29 de marzo de 2023 21:38:23

It can be used as a return type of a function that has nothing interesting to return: fun f(): Unit { ...
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3368-3369 | Añadido el miércoles, 29 de marzo de 2023 21:39:41

Unit is a full-fledged type, and, unlike void, it can be used as a type argument. Only one value of this type exists; it’s also called Unit and is returned implicitly.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3371-3374 | Añadido el miércoles, 29 de marzo de 2023 21:40:29

The signature of the interface requires the process function to return a value; and, because the Unit type does have a value, it’s no problem to return it from the method. But you don’t need to write an explicit return statement in NoResult-Processor.process, because return Unit is added implicitly by the compiler.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3374-3378 | Añadido el miércoles, 29 de marzo de 2023 21:41:21

Contrast this with Java, where neither of the possibilities for solving the problem of using “no value” as a type argument is as nice as the Kotlin solution. One option is to use separate interfaces (such as Callable and Runnable) to represent interfaces that don’t and do return a value. The other is to use the special java.lang.Void type as the type parameter. If you use the second option, you still need to put in an explicit return null; to return the only possible value matching that type, because if the return type isn’t void, you must always have an explicit return statement.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3383-3383 | Añadido el miércoles, 29 de marzo de 2023 21:42:36

The Nothing type: “This function never returns”
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3383-3384 | Añadido el miércoles, 29 de marzo de 2023 21:42:55

For some functions in Kotlin, the concept of a “return value” doesn’t make sense because they never complete successfully.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3394-3395 | Añadido el miércoles, 29 de marzo de 2023 21:44:38

The compiler knows that a function with this return type never terminates normally and uses that information when analyzing the code calling the function.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3456-3457 | Añadido el miércoles, 29 de marzo de 2023 21:50:23

key thing to keep in mind when working with collection interfaces is that read-only collections aren’t necessarily immutable.[
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3465-3466 | Añadido el miércoles, 29 de marzo de 2023 21:51:12

Therefore, it’s essential to understand that read-only collections aren’t always thread-safe.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- El marcador en la posición 3461 | Añadido el miércoles, 29 de marzo de 2023 21:51:47


==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3465-3467 | Añadido el jueves, 30 de marzo de 2023 20:23:46

Therefore, it’s essential to understand that read-only collections aren’t always thread-safe. If you’re working with data in a multithreaded environment, you need to ensure that your code properly synchronizes access to the data or uses data structures that support concurrent access.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3471-3475 | Añadido el jueves, 30 de marzo de 2023 20:24:49

every Java collection interface has two representations in Kotlin: a read-only one and a mutable one, as you can see in figure 6.13. Figure 6.13. The hierarchy of the Kotlin collection interfaces. The Java classes ArrayList and HashSet extend Kotlin mutable interfaces. 
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3478-3479 | Añadido el jueves, 30 de marzo de 2023 20:28:05

Mutable interfaces correspond directly to the interfaces in the java.util package, whereas the read-only versions lack all the mutating methods.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3500-3508 | Añadido el jueves, 30 de marzo de 2023 21:13:37

For example, if you have a Java method that takes a java.util.Collection as a parameter, you can pass any Collection or MutableCollection value as an argument to that parameter. This has important consequences with regard to mutability of collections. Because Java doesn’t distinguish between read-only and mutable collections, Java code can modify the collection even if it’s declared as a read-only Collection on the Kotlin side. The Kotlin compiler can’t fully analyze what’s being done to the collection in the Java code, and therefore there’s no way for Kotlin to reject a call passing a read-only Collection to Java code that modifies it. For example, the following two snippets of code form a compilable cross-language Kotlin/Java program: Therefore, if you’re writing a Kotlin function that takes a collection and passes it to Java, it’s your responsibility to use the correct type for the parameter, depending on whether the Java code you’re calling will modify the collection.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3508-3510 | Añadido el jueves, 30 de marzo de 2023 21:14:05

Note that this caveat also applies to collections with non-null element types. If you pass such a collection to a Java method, the method can put a null value into it; there’s no way for Kotlin to forbid that or even to detect that it has happened without compromising performance.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3513-3518 | Añadido el jueves, 30 de marzo de 2023 21:16:14

Collections as platform types If you recall the discussion of nullability earlier in this chapter, you’ll remember that types defined in Java code are seen as platform types in Kotlin. For platform types, Kotlin doesn’t have the nullability information, so the compiler allows Kotlin code to treat them as either nullable or non-null. In the same way, variables of collection types declared in Java are also seen as platform types. A collection with a platform type is essentially a collection of unknown mutability—the Kotlin code can treat it as either read-only or mutable. Usually this doesn’t matter, because, in effect, all the operations you may want to perform just work.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3565-3575 | Añadido el jueves, 30 de marzo de 2023 21:35:17

Creating an array of characters >>> val letters = Array<String>(26) { i -> ('a' + i).toString() } >>> println(letters.joinToString("")) abcdefghijklmnopqrstuvwxyz The lambda takes the index of the array element and returns the value to be placed in the array at that index. Here you calculate the value by adding the index to the 'a' character and converting the result to a string. The array element type is shown for clarity; you can omit it in real code because the compiler can infer it. Having said that, one of the most common cases for creating an array in Kotlin code is when you need to call a Java method that takes an array, or a Kotlin function with a vararg parameter. In those situations, you often have the data already stored in a collection, and you just need to convert it into an array. You can do this using the toTypedArray method. Listing 6.31. Passing a collection to a vararg method As with other types, type arguments of array types always become object types.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3565-3577 | Añadido el jueves, 30 de marzo de 2023 21:36:30

Creating an array of characters >>> val letters = Array<String>(26) { i -> ('a' + i).toString() } >>> println(letters.joinToString("")) abcdefghijklmnopqrstuvwxyz The lambda takes the index of the array element and returns the value to be placed in the array at that index. Here you calculate the value by adding the index to the 'a' character and converting the result to a string. The array element type is shown for clarity; you can omit it in real code because the compiler can infer it. Having said that, one of the most common cases for creating an array in Kotlin code is when you need to call a Java method that takes an array, or a Kotlin function with a vararg parameter. In those situations, you often have the data already stored in a collection, and you just need to convert it into an array. You can do this using the toTypedArray method. Listing 6.31. Passing a collection to a vararg method As with other types, type arguments of array types always become object types. Therefore, if you declare something like an Array<Int>, it will become an array of boxed integers (its Java type will be java.lang.Integer[]). If you need to create an array of values of a primitive type without boxing, you must use one of the specialized classes for arrays of primitive types.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3565-3581 | Añadido el jueves, 30 de marzo de 2023 21:37:07

Creating an array of characters >>> val letters = Array<String>(26) { i -> ('a' + i).toString() } >>> println(letters.joinToString("")) abcdefghijklmnopqrstuvwxyz The lambda takes the index of the array element and returns the value to be placed in the array at that index. Here you calculate the value by adding the index to the 'a' character and converting the result to a string. The array element type is shown for clarity; you can omit it in real code because the compiler can infer it. Having said that, one of the most common cases for creating an array in Kotlin code is when you need to call a Java method that takes an array, or a Kotlin function with a vararg parameter. In those situations, you often have the data already stored in a collection, and you just need to convert it into an array. You can do this using the toTypedArray method. Listing 6.31. Passing a collection to a vararg method As with other types, type arguments of array types always become object types. Therefore, if you declare something like an Array<Int>, it will become an array of boxed integers (its Java type will be java.lang.Integer[]). If you need to create an array of values of a primitive type without boxing, you must use one of the specialized classes for arrays of primitive types. To represent arrays of primitive types, Kotlin provides a number of separate classes, one for each primitive type. For example, an array of values of type Int is called IntArray. For other types, Kotlin provides ByteArray, CharArray, Boolean-Array, and so on. All of these types are compiled to regular Java primitive type arrays, such as int[], byte[], char[], and so on. Therefore, values in such an array are stored without boxing, in the most efficient manner possible.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3601-3616 | Añadido el jueves, 30 de marzo de 2023 21:43:35

Summary Kotlin’s support of nullable types detects possible NullPointerException errors at compile time. Kotlin provides tools such as safe calls (?.), the Elvis operator (?:), not-null assertions (!!), and the let function for dealing with nullable types concisely. The as? operator provides an easy way to cast a value to a type and to handle the case when it has a different type. Types coming from Java are interpreted as platform types in Kotlin, allowing the developer to treat them as either nullable or non-null. Types representing basic numbers (such as Int) look and function like regular classes but are usually compiled to Java primitive types. Nullable primitive types (such as Int?) correspond to boxed primitive types in Java (such as java.lang.Integer). The Any type is a supertype of all other types and is analogous to Java’s Object. Unit is an analogue of void. The Nothing type is used as a return type of functions that don’t terminate normally. Kotlin uses the standard Java classes for collections and enhances them with a distinction between read-only and mutable collections. You need to carefully consider nullability and mutability of parameters when you extend Java classes or implement Java interfaces in Kotlin. Kotlin’s Array class looks like a regular generic class, but it’s compiled to a Java array. Arrays of primitive types are represented by special classes such as IntArray.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3650-3653 | Añadido el jueves, 30 de marzo de 2023 21:52:14

Defining the plus operator Note how you use the operator keyword to declare the plus function. All functions used to overload operators need to be marked with that keyword.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3650-3654 | Añadido el jueves, 30 de marzo de 2023 21:52:26

Defining the plus operator Note how you use the operator keyword to declare the plus function. All functions used to overload operators need to be marked with that keyword. This makes it explicit that you intend to use the function as an implementation of the corresponding convention and that you didn’t
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3650-3654 | Añadido el jueves, 30 de marzo de 2023 21:52:34

Defining the plus operator Note how you use the operator keyword to declare the plus function. All functions used to overload operators need to be marked with that keyword. This makes it explicit that you intend to use the function as an implementation of the corresponding convention and that you didn’t define a function that accidentally had a matching name.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3657-3657 | Añadido el jueves, 30 de marzo de 2023 21:53:09

The + operator is transformed into a plus function call.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3657-3659 | Añadido el jueves, 30 de marzo de 2023 21:53:17

The + operator is transformed into a plus function call. As an alternative to declaring the operator as a member, you can define the operator as an extension function.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3667-3673 | Añadido el jueves, 30 de marzo de 2023 21:54:41

Overloadable binary arithmetic operators Expression Function name a * b times a / b div a % b mod a + b plus a - b minus
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3674-3676 | Añadido el jueves, 30 de marzo de 2023 21:55:13

the standard numeric types. For example, if you write a + b * c, the multiplication will always be executed before the addition, even if you’ve defined those operators yourself. The operators *, /, and % have the same precedence, which is higher than the precedence of the + and - operators.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3685-3689 | Añadido el jueves, 30 de marzo de 2023 21:56:49

Defining an operator with different operand types operator fun Point.times(scale: Double): Point {     return Point((x * scale).toInt(), (y * scale).toInt()) } >>> val p = Point(10, 20) >>> println(p * 1.5) Point(x=15, y=30) Note that Kotlin operators don’t automatically support commutativity (the ability to swap the left and right sides of an
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3685-3690 | Añadido el jueves, 30 de marzo de 2023 21:57:29

Defining an operator with different operand types operator fun Point.times(scale: Double): Point {     return Point((x * scale).toInt(), (y * scale).toInt()) } >>> val p = Point(10, 20) >>> println(p * 1.5) Point(x=15, y=30) Note that Kotlin operators don’t automatically support commutativity (the ability to swap the left and right sides of an operator). If you want users to be able to write 1.5 * p in addition to p * 1.5, you need to define a separate operator for that: operator fun Double.times(p: Point): Point.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3710-3712 | Añadido el jueves, 30 de marzo de 2023 22:00:10

Overloading compound assignment operators Normally, when you define an operator such as plus, Kotlin supports not only the + operation but += as well. Operators such as +=, -=, and so on are called compound assignment operators.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3713-3714 | Añadido el jueves, 30 de marzo de 2023 22:00:38

var point = Point(1, 2) >>> point += Point(3, 4) >>> println(point) Point(x=4, y=6) This is the same as writing point = point + Point(3, 4).
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3718-3720 | Añadido el jueves, 30 de marzo de 2023 22:01:37

you define a function named plusAssign with the Unit return type, Kotlin will call it when the += operator is used. Other binary arithmetic operators have similarly named counterparts: minusAssign, timesAssign, and so on.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3729-3735 | Añadido el jueves, 30 de marzo de 2023 22:03:51

The += operator can be transformed into either the plus or the plusAssign function call. The Kotlin standard library supports both approaches for collections. The + and - operators always return a new collection. The += and -= operators work on mutable collections by modifying them in place, and on read-only collections by returning a modified copy. (This means += and -= can only be used with a read-only collection if the variable referencing it is declared as a var.)
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3737-3737 | Añadido el jueves, 30 de marzo de 2023 22:06:11

So far, we’ve discussed overloading of binary operators—operators that are applied to two values, such as a +
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3737-3737 | Añadido el jueves, 30 de marzo de 2023 22:06:18

So far, we’ve discussed overloading of binary operators—operators that are applied to two values, such as a + b.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3737-3738 | Añadido el jueves, 30 de marzo de 2023 22:08:28

In addition, Kotlin allows you to overload unary operators, which are applied to a single value, as in -a.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3742-3743 | Añadido el jueves, 30 de marzo de 2023 22:08:55

Functions used to overload unary operators don’t take any arguments.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3747-3753 | Añadido el jueves, 30 de marzo de 2023 22:09:17

Overloadable unary arithmetic operators Expression Function name +a unaryPlus -a unaryMinus !a not ++a, a++ inc --a, a-- dec
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3756-3758 | Añadido el jueves, 30 de marzo de 2023 22:11:34

Listing 7.6. Defining an increment operator The postfix operation ++ first returns the current value of the bd variable and after that increases it, whereas the prefix operation works the other way round.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- El marcador en la posición 3762 | Añadido el jueves, 30 de marzo de 2023 22:12:23


==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3765-3765 | Añadido el jueves, 30 de marzo de 2023 22:13:46

You saw that using the == operator in Kotlin is translated into a call of the equals method.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3767-3768 | Añadido el jueves, 30 de marzo de 2023 22:14:00

Note that unlike all other operators, == and != can be used with nullable operands, because those operators check equality to null under the hood.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3768-3770 | Añadido el jueves, 30 de marzo de 2023 22:14:18

The comparison a == b checks whether a isn’t null, and, if it’s not, calls a.equals(b) (see figure 7.4). Otherwise the result is true only if both arguments are null references.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3770-3774 | Añadido el jueves, 30 de marzo de 2023 22:14:33

An equality check == is transformed into an equals call and a null check. For the Point class, the implementation of equals
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3775-3779 | Añadido el jueves, 30 de marzo de 2023 22:16:03

Listing 7.7. Implementing the equals method You use the identity equals operator (===) to check whether the parameter to equals is the same object as the one on which equals is called. The identity equals operator does exactly
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3775-3780 | Añadido el jueves, 30 de marzo de 2023 22:16:42

Listing 7.7. Implementing the equals method You use the identity equals operator (===) to check whether the parameter to equals is the same object as the one on which equals is called. The identity equals operator does exactly the same thing as the == operator in Java: it checks that both of its arguments reference the same object (or have the same value, if they have a primitive type).
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- El marcador en la posición 3787 | Añadido el jueves, 30 de marzo de 2023 22:20:34


==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3791-3791 | Añadido el viernes, 31 de marzo de 2023 21:23:35

Only values of primitive types can be compared using < and >; all other
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3790-3792 | Añadido el viernes, 31 de marzo de 2023 21:23:44

to determine whether one object is larger than another. But in Java, there’s no shorthand syntax for calling this method. Only values of primitive types can be compared using < and >; all other types require you to write element1.compareTo(element2) explicitly.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3823-3825 | Añadido el viernes, 31 de marzo de 2023 21:32:59

In Kotlin, the index operator is one more convention. Reading an element using the index operator is translated into a call of the get operator method, and writing an element becomes a call to
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3815-3818 | Añadido el viernes, 31 de marzo de 2023 21:33:20

Some of the most common operations for working with collections are getting and setting elements by index, as well as checking whether an element belongs to a collection. All of these operations are supported via operator syntax: To get or set an element by index, you use the syntax a[b] (called the index operator). The in operator can be used to check whether an element is in a collection or range and also to iterate over a collection.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3830-3830 | Añadido el viernes, 31 de marzo de 2023 21:34:50

All you need to do is define a function named get and mark it as operator.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3865-3868 | Añadido el viernes, 31 de marzo de 2023 21:40:40

The .. operator is transformed into a rangeTo function call. The rangeTo function returns a range.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3877-3879 | Añadido el viernes, 31 de marzo de 2023 21:42:50

operators. But it’s better to use parentheses for its arguments to avoid confusion: 
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3877-3880 | Añadido el viernes, 31 de marzo de 2023 21:42:55

The rangeTo operator has lower priority than arithmetic operators. But it’s better to use parentheses for its arguments to avoid confusion: Also note that the expression 0..n.forEach {} won’t compile, because you have to surround a range expression with parentheses to call a method on it:
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3882-3885 | Añadido el viernes, 31 de marzo de 2023 21:44:19

The “iterator” convention for the “for” loop As we discussed in chapter 2, for loops in Kotlin use the same in operator as range checks. But its meaning is different in this context: it’s used to perform iteration. This means a statement such as for (x in list) { ... } will be translated into a call of list.iterator(), on which the hasNext and next methods are then repeatedly called, just
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3897-3898 | Añadido el viernes, 31 de marzo de 2023 21:46:10

destructuring declarations. This feature allows you to unpack a single composite value and use it to initialize several separate variables.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3899-3901 | Añadido el viernes, 31 de marzo de 2023 21:46:34

A destructuring declaration looks like a regular variable declaration, but it has multiple variables grouped in parentheses. Under the hood, the destructuring declaration once again
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3899-3905 | Añadido el viernes, 31 de marzo de 2023 21:46:54

A destructuring declaration looks like a regular variable declaration, but it has multiple variables grouped in parentheses. Under the hood, the destructuring declaration once again uses the principle of conventions. To initialize each variable in a destructuring declaration, a function named componentN is called, where N is the position of the variable in the declaration. In other words, the previous example would be transformed as shown in figure 7.10. Figure 7.10. Destructuring declarations are transformed into componentN function calls. 
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3905-3906 | Añadido el viernes, 31 de marzo de 2023 21:47:26

For a data class, the compiler generates a componentN function for every property declared in the primary constructor.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3906-3908 | Añadido el viernes, 31 de marzo de 2023 21:47:42

The following example shows how you can declare these functions manually for a non-data class: class Point(val x: Int, val y: Int) {     operator fun component1() = x     operator fun component2() = y }
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3908-3909 | Añadido el viernes, 31 de marzo de 2023 21:47:56

One of the main use cases where destructuring declarations are helpful is returning multiple values from a function.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3908-3911 | Añadido el viernes, 31 de marzo de 2023 21:49:17

One of the main use cases where destructuring declarations are helpful is returning multiple values from a function. If you need to do that, you can define a data class to hold the values you need to return and use it as the return type of the function. The destructuring-declaration syntax makes it easy to unpack and use the values after you call the function.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3912-3913 | Añadido el viernes, 31 de marzo de 2023 21:49:56

Listing 7.14. Using a destructuring declaration to return multiple values 
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3920-3921 | Añadido el viernes, 31 de marzo de 2023 21:51:31

The standard library allows you to use this syntax to access the first five elements of a container.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3936-3939 | Añadido el viernes, 31 de marzo de 2023 21:54:23

delegated properties. This feature lets you easily implement properties that work in a more complex way than storing values in backing fields, without duplicating the logic in each accessor. For example, properties can store their values in database tables, in a browser session, in a map, and so on. The foundation for this feature
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3936-3939 | Añadido el viernes, 31 de marzo de 2023 21:55:05

delegated properties. This feature lets you easily implement properties that work in a more complex way than storing values in backing fields, without duplicating the logic in each accessor. For example, properties can store their values in database tables, in a browser session, in a map, and so on. The foundation for this feature is delegation: a design pattern where an object, instead of performing a task, delegates that task to another helper object.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3936-3940 | Añadido el viernes, 31 de marzo de 2023 21:55:11

delegated properties. This feature lets you easily implement properties that work in a more complex way than storing values in backing fields, without duplicating the logic in each accessor. For example, properties can store their values in database tables, in a browser session, in a map, and so on. The foundation for this feature is delegation: a design pattern where an object, instead of performing a task, delegates that task to another helper object. The helper object is called a delegate.
==========
lambda  
- La subrayado en la página 1-1 | Añadido el viernes, 7 de abril de 2023 15:17:01

The λ calculus consists of a single transformation rule (variable substitution) and a single function defnition scheme
==========
lambda  
- La subrayado en la página 1-1 | Añadido el viernes, 7 de abril de 2023 15:17:28

any computable function can be expressed and evaluated using this formalism
==========
lambda  
- La subrayado en la página 1-1 | Añadido el viernes, 7 de abril de 2023 15:18:10

λ calculus emphasizes the use of transformation rules and does not care about the actual machine implementing them
==========
lambda  
- La subrayado en la página 1-1 | Añadido el viernes, 7 de abril de 2023 15:18:43

The central concept in λ calculus is the \expression". A \name", also called a \variable", is an identifer which, for our purposes, can be any of the letters a; b; c; : : : An expression is defned recursively as follows: <expression> := <name> j <function> j <application> <function> := λ <name>.<expression> <application> := <expression><expression> An expression can be surrounded with parenthesis for clarity, that is, if E is an expression, (E) is the same expression
==========
lambda  
- La subrayado en la página 1-1 | Añadido el viernes, 7 de abril de 2023 15:18:59

The only keywords used in the language are λ and the dot
==========
lambda  
- La subrayado en la página 1-1 | Añadido el viernes, 7 de abril de 2023 15:19:16

convention that function application associates from the
==========
lambda  
- La subrayado en la página 1-1 | Añadido el viernes, 7 de abril de 2023 15:19:27

convention that function application associates from the left, that is, the expression E1E2E3 : : : En
==========
lambda  
- La subrayado en la página 2-2 | Añadido el viernes, 7 de abril de 2023 15:19:59

evaluated applying the expressions as follows: (: : : ((E1E2)E3) : : : En
==========
lambda  
- La subrayado en la página 2-2 | Añadido el viernes, 7 de abril de 2023 15:24:49

(λx:x)y = [y=x]x = y In this transformation the notation [y=x] is used to indicate that all occurrences of x are substituted by y in the expression to the right
==========
lambda  
- La subrayado en la página 2-2 | Añadido el viernes, 7 de abril de 2023 15:25:33

We use the symbol \≡" to indicate that when A ≡ B, A is just a synonym of B.
==========
lambda  
- La subrayado en la página 2-2 | Añadido el viernes, 7 de abril de 2023 15:25:41

The names of the arguments in function defnitions do not carry any meaning by themselves. They are just \place holders", that is, they are used to indicate how to rearrange the arguments of the function when it is evaluated. Therefore (λz:z) ≡ (λy:y) ≡ (λt:t) ≡ (λu:u
==========
lambda  
- La subrayado en la página 2-2 | Añadido el viernes, 7 de abril de 2023 15:26:03

The name after the λ is the identifer of the argument of this function. The expression after the point (in this case a single x) is called the \body" of the defnition
==========
lambda  
- La subrayado en la página 2-2 | Añadido el viernes, 7 de abril de 2023 15:26:16

An example of an application is (λx:x)y This is the identity function applied to y. Parenthesis are used for clarity in order to avoid ambiguity. Function applications are evaluated by substituting the value of the argument x (in this case y) in the body of the function defnition
==========
lambda  
- La subrayado en la página 2-2 | Añadido el viernes, 7 de abril de 2023 15:27:08

As can be seen from the defnition of λ expressions given above, a single identifer is a λ expression
==========
lambda  
- La subrayado en la página 2-2 | Añadido el viernes, 7 de abril de 2023 15:27:14

An example of a function is the following: λx:x
==========
lambda  
- La subrayado en la página 2-2 | Añadido el viernes, 7 de abril de 2023 16:49:27

\bound" since its occurrence in the body of the defnition is preceded by λx. A name not preceded by a
==========
lambda  
- La subrayado en la página 2-2 | Añadido el viernes, 7 de abril de 2023 16:49:39

In λ calculus all names are local to defnitions. In the function λx:x we say that x is \bound" since its occurrence in the body of the defnition is preceded by λx. A name not preceded by a λ is called a \free variable
==========
lambda  
- La subrayado en la página 4-4 | Añadido el viernes, 7 de abril de 2023 17:04:30

if the function λx: <exp> is applied to E, we substitute all free occurrences of x in <exp> with E. If the substitution would bring a free variable of E in an expression where this
==========
lambda  
- La subrayado en la página 4-4 | Añadido el viernes, 7 de abril de 2023 17:04:54

if the function λx: <exp> is applied to E, we substitute all free occurrences of x in <exp> with E. If the substitution would bring a free variable of E in an expression where this variable occurs bound, we rename the bound variable before performing the substitution. For example, in the expression (λx:(λy:(x(λx:xy))))y we associate the argument x with y. In the body (λy:(x(λx:xy))) only the frst x is free and can be substituted. Before substituting though, we have to rename the variable y to avoid mixing its bound with is free occurrence: [y=x](λt:(x(λx:xt))) = (λt:(y(λx:xt))) In normal order reduction we try to reduce always the left most expression of a
==========
lambda  
- La subrayado en la página 5-5 | Añadido el viernes, 7 de abril de 2023 18:15:18

Our frst interesting function is the successor function. This can be defned as S ≡ λwyx:y(wyx) The successor function applied to our representation for zero yields S0 ≡ (λwyx:y(wyx))(λsz:z) In the body of the frst expression we substitute all occurrences of w with (λsz:z) and this yields λyx:y((λsz:z)yx) = λyx:y((λz:z)x) = λyx:y(x) ≡ 1 That is, we obtain the representation of the number 1 (remember that variable names are \dummies"). Successor applied to 1 yields: S1 ≡ (λwyx:y(wyx))(λsz:s(z)) = λyx:y((λsz:s(z))yx) = λyx:y(y(x)) ≡ 2 Notice that the only purpose of applying the number (λsz:s(z)) to the arguments y and x is to \rename" the variables used in the defnition of our number
==========
lambda  
- La subrayado en la página 8-8 | Añadido el viernes, 7 de abril de 2023 23:15:49

If the predecessor function applied x times to y yields zero, then it is true that x ≥ y. If x ≥ y and y ≥ x, then x = y. This leads to the following defnition of the function E which tests if two numbers are equal: E ≡ (λxy: ^ (Z(xPy))(Z(yPx))) In a similar manner we can defne functions to test whether x > y, x < y or x 6= y.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3944-3947 | Añadido el domingo, 9 de abril de 2023 22:43:00

The general syntax of a delegated property is this: class Foo {     var p: Type by Delegate() } The property p delegates the logic of its accessors to another object: in this case, a new instance of the Delegate class. The object is obtained by evaluating the expression following the by keyword, which can be anything that satisfies the rules of the convention for property delegates.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3947-3948 | Añadido el domingo, 9 de abril de 2023 22:43:41

The compiler creates a hidden helper property, initialized with the instance of the delegate object, to which the initial property p delegates.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3947-3950 | Añadido el domingo, 9 de abril de 2023 22:44:09

The compiler creates a hidden helper property, initialized with the instance of the delegate object, to which the initial property p delegates. For simplicity, let’s call it delegate: By convention, the Delegate class must have getValue and setValue methods
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3974-3978 | Añadido el domingo, 9 de abril de 2023 22:53:41

Implementing lazy initialization using a delegated property class Person(val name: String) {     val emails by lazy { loadEmails(this) } } The lazy function returns an object that has a method called getValue with the proper signature, so you can use it together with the by keyword to create a delegated property. The argument of lazy is a lambda that it calls to initialize the value. The lazy function is thread-safe
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 3974-3979 | Añadido el domingo, 9 de abril de 2023 22:53:51

Implementing lazy initialization using a delegated property class Person(val name: String) {     val emails by lazy { loadEmails(this) } } The lazy function returns an object that has a method called getValue with the proper signature, so you can use it together with the by keyword to create a delegated property. The argument of lazy is a lambda that it calls to initialize the value. The lazy function is thread-safe by default; and if you need to, you can specify additional options to tell it which lock to use or to bypass the synchronization entirely if the class is never used in a multithreaded environment.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4032-4034 | Añadido el domingo, 9 de abril de 2023 23:05:30

The object to the right of by is called the delegate. Kotlin automatically stores the delegate in a hidden property and calls getValue and setValue on the delegate when you access or modify the main property.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4495-4496 | Añadido el lunes, 10 de abril de 2023 22:00:35

Reified type parameters allow you to refer at runtime to the specific types used as type arguments in an inline function call. (For normal classes or functions, this isn’t possible, because type arguments are erased at runtime.)
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4497-4498 | Añadido el martes, 11 de abril de 2023 22:17:33

Declaration-site variance lets you specify whether a generic type with a type argument is a subtype or a supertype of another generic type with the same base type and a different type argument.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- El marcador en la posición 4548 | Añadido el martes, 11 de abril de 2023 22:27:51


==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4614-4618 | Añadido el domingo, 23 de abril de 2023 01:34:25

If you want to guarantee that a non-null type will always be substituted for a type parameter, you can achieve this by specifying a constraint. If you don’t have any restrictions other than nullability, you can use Any as the upper bound, replacing the default Any?: The <T : Any> constraint ensures that the T type will always be a non-nullable type. The code
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4644-4645 | Añadido el domingo, 23 de abril de 2023 01:38:14

Because type arguments aren’t stored, you can’t check them—for example, you can’t check whether a list is a list of strings rather than other objects. As a general rule, it’s not possible to use types with type arguments in is checks.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- El marcador en la posición 4635 | Añadido el domingo, 23 de abril de 2023 01:41:24


==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4645-4661 | Añadido el miércoles, 26 de abril de 2023 22:04:40

The following code won’t compile: >>> if (value is List<String>) { ... } ERROR: Cannot check for instance of erased type Even though it’s perfectly possible to find out at runtime that value is a List, you can’t tell whether it’s a list of strings, persons, or something else: that information has been erased. Note that erasing generic type information has its benefits: the overall amount of memory used by your application is smaller, because less type information needs to be saved in memory. As we stated earlier, Kotlin doesn’t let you use a generic type without specifying type arguments. Thus you may wonder how to check that the value is a list, rather than a set or another object. You can do that by using the special star projection syntax: if (value is List<*>) { ... } Effectively, you need to include a * for every type parameter the type has. We’ll discuss the star projection in detail (including why it’s called a projection) later in the chapter; for now, you can think of it as a type with unknown arguments (or an analogue of Java’s List<?>). In the previous example, you check whether a value is a List, and you don’t get any information about its element type. Note that you can still use normal generic types in as and as? casts. But the cast won’t fail if the class has the correct base type and a wrong type argument, because the type argument isn’t known at runtime when the cast is performed. Because of that, the compiler will emit an “unchecked cast” warning on such a cast. It’s only a warning, so you can later use the value as having the necessary type, as shown next. Listing 9.5. Using a type cast with a generic type Everything compiles fine: the compiler only issues a warning, which means this code is legitimate.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4650-4656 | Añadido el miércoles, 26 de abril de 2023 22:07:41

As we stated earlier, Kotlin doesn’t let you use a generic type without specifying type arguments. Thus you may wonder how to check that the value is a list, rather than a set or another object. You can do that by using the special star projection syntax: if (value is List<*>) { ... } Effectively, you need to include a * for every type parameter the type has. We’ll discuss the star projection in detail (including why it’s called a projection) later in the chapter; for now, you can think of it as a type with unknown arguments (or an analogue of Java’s List<?>). In the previous example, you check whether a value is a List, and you don’t get any information about its element type.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4678-4683 | Añadido el miércoles, 26 de abril de 2023 22:16:41

As we discussed earlier, Kotlin generics are erased at runtime, which means if you have an instance of a generic class, you can’t find out the type arguments used when the instance was created. The same holds for type arguments of a function. When you call a generic function, in its body you can’t determine the type arguments it was invoked with: >>> fun <T> isA(value: Any) = value is T Error: Cannot check for instance of erased type: T This is true in general, but there’s one case where this limitation can be avoided: inline functions. Type parameters of inline functions can be reified, which means you can refer to actual type arguments at runtime.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4684-4690 | Añadido el miércoles, 26 de abril de 2023 22:18:47

if you mark a function with the inline keyword, the compiler will replace every call to the function with the actual code implementing the function. Making the function inline may improve performance if this function uses lambdas as arguments: the lambda code can be inlined as well, so no anonymous class will be created. This section shows another case when inline functions are helpful: their type arguments can be reified. If you declare the previous isA function as inline and mark the type parameter as reified, you can check value to see whether it’s an instance of T. Listing 9.7. Declaring a function with a reified type parameter 
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4697-4699 | Añadido el miércoles, 26 de abril de 2023 22:21:43

In this case, the type argument is known at runtime, and filterIs-Instance uses it to check which values in the list are instances of the class specified as the type argument.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4715-4715 | Añadido el jueves, 27 de abril de 2023 21:39:49

it can have non-reified type parameters in addition to the reified ones.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4714-4721 | Añadido el jueves, 27 de abril de 2023 21:39:55

An inline function can have multiple reified type parameters, and it can have non-reified type parameters in addition to the reified ones. Note that the filter-IsInstance function is marked as inline even though it doesn’t expect any lambdas as arguments. In section 8.2.4, we discussed that marking a function as inline only has performance benefits when the function has parameters of the function type and the corresponding arguments—lambdas—are inlined together with the function. But in this case, you aren’t marking the function as inline for performance reasons; instead, you’re doing it to enable the use of reified type parameters. To ensure good performance, you still need to keep track of the size of the function marked as inline. If the function becomes large, it’s better to extract the code that doesn’t depend on the reified type parameters into separate non-inline functions.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4734-4736 | Añadido el jueves, 27 de abril de 2023 21:46:30

You can use the same ::class.java syntax on reified type parameters that you can use on regular classes. Using this syntax gives you the java.lang.Class corresponding to the class specified as the type parameter, which you can then use normally.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- El marcador en la posición 4762 | Añadido el jueves, 27 de abril de 2023 21:59:58


==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4785-4795 | Añadido el domingo, 30 de abril de 2023 13:01:26

We’ve sometimes used the terms type and class as equivalent, but they aren’t, and now is the time to look at the difference. In the simplest case, with a non-generic class, the name of the class can be used directly as a type. For example, if you write var x: String, you declare a variable that can hold instances of the String class. But note that the same class name can also be used to declare a nullable type: var x: String?. This means each Kotlin class can be used to construct at least two types. The story becomes even more complicated with generic classes. To get a valid type, you have to substitute a specific type as a type argument for the class’s type parameter. List isn’t a type (it’s a class), but all of the following substitutions are valid types: List<Int>, List<String?>, List<List<String>>, and so on. Each generic class produces a potentially infinite number of types. In order for us to discuss the relation between types, you need to be familiar with the term subtype. A type B is a subtype of a type A if you can use the value of the type B whenever a value of the type A is required. For instance, Int is a subtype of Number, but Int isn’t a subtype of String.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4785-4795 | Añadido el domingo, 30 de abril de 2023 13:03:36

We’ve sometimes used the terms type and class as equivalent, but they aren’t, and now is the time to look at the difference. In the simplest case, with a non-generic class, the name of the class can be used directly as a type. For example, if you write var x: String, you declare a variable that can hold instances of the String class. But note that the same class name can also be used to declare a nullable type: var x: String?. This means each Kotlin class can be used to construct at least two types. The story becomes even more complicated with generic classes. To get a valid type, you have to substitute a specific type as a type argument for the class’s type parameter. List isn’t a type (it’s a class), but all of the following substitutions are valid types: List<Int>, List<String?>, List<List<String>>, and so on. Each generic class produces a potentially infinite number of types. In order for us to discuss the relation between types, you need to be familiar with the term subtype. A type B is a subtype of a type A if you can use the value of the type B whenever a value of the type A is required. For instance, Int is a subtype of Number, but Int isn’t a subtype of String. This definition also indicates that a type is considered a subtype of itself.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4798-4799 | Añadido el domingo, 30 de abril de 2023 13:04:35

The term supertype is the opposite of subtype. If A is a subtype of B, then B is a supertype of A.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4807-4808 | Añadido el domingo, 30 de abril de 2023 13:06:33

In simple cases, subtype means essentially the same thing as subclass.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4821-4824 | Añadido el domingo, 30 de abril de 2023 13:14:23

A generic class—for instance, MutableList—is called invariant on the type parameter if, for any two different types A and B, MutableList<A> isn’t a subtype or a supertype of MutableList<B>. In Java, all classes are invariant (even though specific uses of those classes can be marked as non-invariant, as you’ll see soon).
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4825-4826 | Añadido el domingo, 30 de abril de 2023 13:18:56

If A is a subtype of B, then List<A> is a subtype of List<B>. Such classes or interfaces are called covariant.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4828-4830 | Añadido el domingo, 30 de abril de 2023 13:20:18

A covariant class is a generic class (we’ll use Producer<T> as an example) for which the following holds: Producer<A> is a subtype of Producer<B> if A is a subtype of B.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4828-4830 | Añadido el domingo, 30 de abril de 2023 13:20:26

A covariant class is a generic class (we’ll use Producer<T> as an example) for which the following holds: Producer<A> is a subtype of Producer<B> if A is a subtype of B. We say that the subtyping is preserved. For
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4828-4831 | Añadido el domingo, 30 de abril de 2023 13:20:50

A covariant class is a generic class (we’ll use Producer<T> as an example) for which the following holds: Producer<A> is a subtype of Producer<B> if A is a subtype of B. We say that the subtyping is preserved. For example, Producer<Cat> is a subtype of Producer<Animal> because Cat is a subtype of Animal.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4831-4836 | Añadido el domingo, 30 de abril de 2023 13:21:10

In Kotlin, to declare the class to be covariant on a certain type parameter, you put the out keyword before the name of the type parameter: Marking a type parameter of a class as covariant makes it possible to pass values of that class as function arguments and return values when the type arguments don’t exactly match the ones in the function definition. For example, imagine a function that takes care of feeding a group of animals, represented by the Herd class. The type parameter of the Herd class identifies the type of the animal in the herd.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4847-4853 | Añadido el domingo, 30 de abril de 2023 13:30:11

You can’t make any class covariant: it would be unsafe. Making the class covariant on a certain type parameter constrains the possible uses of this type parameter in the class. To guarantee type safety, it can be used only in so-called out positions, meaning the class can produce values of type T but not consume them. Uses of a type parameter in declarations of class members can be divided into in and out positions. Let’s consider a class that declares a type parameter T and contains a function that uses T. We say that if T is used as the return type of a function, it’s in the out position. In this case, the function produces values of type T. If T is used as the type of a function parameter, it’s in the in position. Such a function consumes values of type T. Figure 9.6 illustrates this.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4847-4859 | Añadido el domingo, 30 de abril de 2023 13:30:20

You can’t make any class covariant: it would be unsafe. Making the class covariant on a certain type parameter constrains the possible uses of this type parameter in the class. To guarantee type safety, it can be used only in so-called out positions, meaning the class can produce values of type T but not consume them. Uses of a type parameter in declarations of class members can be divided into in and out positions. Let’s consider a class that declares a type parameter T and contains a function that uses T. We say that if T is used as the return type of a function, it’s in the out position. In this case, the function produces values of type T. If T is used as the type of a function parameter, it’s in the in position. Such a function consumes values of type T. Figure 9.6 illustrates this. Figure 9.6. The function parameter type is called in position, and the function return type is called out position. The out keyword on a type parameter of the class requires that all methods using T have T only in out positions and not in in positions. This keyword constrains possible use of T, which guarantees safety of the corresponding subtype relation.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- El marcador en la posición 4860 | Añadido el lunes, 1 de mayo de 2023 16:58:38


==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4863-4865 | Añadido el miércoles, 3 de mayo de 2023 20:56:44

To reiterate, the out keyword on the type parameter T means two things: The subtyping is preserved (Producer<Cat> is a subtype of Producer<Animal>). T can be used only in out positions.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4865-4868 | Añadido el miércoles, 3 de mayo de 2023 20:57:30

Now let’s look at the List<T> interface. List is read-only in Kotlin, so it has a method get that returns an element of type T but doesn’t define any methods that store a value of type T in the list. Therefore, it’s also covariant. 
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4878-4882 | Añadido el miércoles, 3 de mayo de 2023 21:01:28

Even if a type parameter is declared as out, you can still use it in a constructor parameter declaration: class Herd<out T: Animal>(vararg animals: T) { ... } The variance protects the class instance from misuse if you’re working with it as an instance of a more generic type: you just can’t call the potentially dangerous methods. The constructor isn’t a method that can be called later (after an instance creation), and therefore it can’t be potentially dangerous.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4889-4890 | Añadido el miércoles, 3 de mayo de 2023 21:03:21

The variance rules protect a class from misuse by external clients and don’t come into play in the implementation of the class itself:
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4887-4890 | Añadido el miércoles, 3 de mayo de 2023 21:03:28

setter for the leadAnimal property that uses T in the in position. Also note that the position rules cover only the externally visible (public, protected, and internal) API of a class. Parameters of private methods are in neither the in nor the out position. The variance rules protect a class from misuse by external clients and don’t come into play in the implementation of the class itself:
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4894-4896 | Añadido el miércoles, 3 de mayo de 2023 21:05:11

Contravariance: reversed subtyping relation The concept of contravariance can be thought of as a mirror to covariance: for a contravariant class, the subtyping relation is the opposite of the subtyping relations of classes used as its type arguments.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4906-4909 | Añadido el miércoles, 3 de mayo de 2023 21:10:15

Now you’re ready for the full definition of contravariance. A class that is contravariant on the type parameter is a generic class (let’s consider Consumer<T> as an example) for which the following holds: Consumer<A> is a subtype of Consumer<B> if B is a subtype of
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4906-4909 | Añadido el miércoles, 3 de mayo de 2023 21:10:25

Now you’re ready for the full definition of contravariance. A class that is contravariant on the type parameter is a generic class (let’s consider Consumer<T> as an example) for which the following holds: Consumer<A> is a subtype of Consumer<B> if B is a subtype of A. The type arguments A and B changed places, so we say the subtyping is reversed.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4913-4916 | Añadido el miércoles, 3 de mayo de 2023 21:12:23

Figure 9.7. For a covariant type Producer<T>, the subtyping is preserved, but for a contravariant type Consumer<T>, the subtyping is reversed. 
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4918-4919 | Añadido el miércoles, 3 de mayo de 2023 21:12:55

The in keyword on the type parameter T means the subtyping is reversed and T can be used only in in positions. Table 9.1 summarizes the differences between the possible variance choices.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4929-4932 | Añadido el miércoles, 3 de mayo de 2023 21:14:43

A class or interface can be covariant on one type parameter and contravariant on another. The classic example is the Function interface. The following declaration shows a one-parameter Function: interface Function1<in P, out R> {     operator fun invoke(p: P): R } The Kotlin notation (P) -> R is another, more readable form to express Function1<P, R>.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4929-4935 | Añadido el miércoles, 3 de mayo de 2023 21:15:21

A class or interface can be covariant on one type parameter and contravariant on another. The classic example is the Function interface. The following declaration shows a one-parameter Function: interface Function1<in P, out R> {     operator fun invoke(p: P): R } The Kotlin notation (P) -> R is another, more readable form to express Function1<P, R>. You can see that P (the parameter type) is used only in the in position and is marked with the in keyword, whereas R (the return type) is used only in the out position and is marked with the out keyword. That means the subtyping for the function type is reversed for its first type argument and preserved for the second.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4943-4944 | Añadido el miércoles, 3 de mayo de 2023 21:22:41

The ability to specify variance modifiers on class declarations is convenient because the modifiers apply to all places where the class is used. This is called declaration-site variance.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4945-4947 | Añadido el miércoles, 3 de mayo de 2023 21:23:06

In Java, every time you use a type with a type parameter, you can also specify whether this type parameter can be replaced with its subtypes or supertypes. This is called use-site variance.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4948-4949 | Añadido el miércoles, 3 de mayo de 2023 21:23:24

Declaration-site variance allows for more concise code, because you specify the variance modifiers once, and clients of your class don’t have to think about them.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4955-4956 | Añadido el miércoles, 3 de mayo de 2023 21:24:10

Kotlin supports use-site variance too, allowing you to specify the variance
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4955-4957 | Añadido el miércoles, 3 de mayo de 2023 21:24:17

Kotlin supports use-site variance too, allowing you to specify the variance for a specific occurrence of a type parameter even when it can’t be declared as covariant or contravariant in the class declaration. Let’s see how that works.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4975-4978 | Añadido el miércoles, 3 de mayo de 2023 21:29:47

You can specify a variance modifier on any usage of a type parameter in a type declaration: for a parameter type (as in listing 9.16), local variable type, function return type, and so on. What happens here is called type projection: we say that source isn’t a regular MutableList, but a projected (restricted) one.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4996-4998 | Añadido el miércoles, 3 de mayo de 2023 21:33:14

Use-site variance declarations in Kotlin correspond directly to Java bounded wildcards. MutableList<out T> in Kotlin means the same as MutableList<? extends T> in Java. The in-projected MutableList<in T> corresponds to Java’s MutableList<? super
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 4996-4998 | Añadido el miércoles, 3 de mayo de 2023 21:33:22

Use-site variance declarations in Kotlin correspond directly to Java bounded wildcards. MutableList<out T> in Kotlin means the same as MutableList<? extends T> in Java. The in-projected MutableList<in T> corresponds to Java’s MutableList<? super T>.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 5004-5007 | Añadido el miércoles, 3 de mayo de 2023 21:35:21

First, note that MutableList<*> isn’t the same as MutableList<Any?> (it’s important here that MutableList<T> is invariant on T). A MutableList<Any?> is a list that you know can contain elements of any type. On the other hand, a Mutable-List<*> is a list that contains elements of a specific type, but you don’t know what type it is.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 5016-5018 | Añadido el miércoles, 3 de mayo de 2023 21:37:56

For contravariant type parameters such as Consumer<in T>, a star projection is equivalent to <in Nothing>. In effect, you can’t call any methods that have T in the signature on such a star projection.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- El marcador en la posición 5021 | Añadido el miércoles, 3 de mayo de 2023 21:38:40


==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 5065-5080 | Añadido el sábado, 6 de mayo de 2023 11:35:25

Summary Kotlin’s generics are fairly similar to those in Java: you declare a generic function or class in the same way. As in Java, type arguments for generic types only exist at compile time. You can’t use types with type arguments together with the is operator, because type arguments are erased at runtime. Type parameters of inline functions can be marked as reified, which allows you to use them at runtime to perform is checks and obtain java.lang.Class instances. Variance is a way to specify whether one of two generic types with the same base class and different type arguments is a subtype or a supertype of the other one if one of the type arguments is the subtype of the other one. You can declare a class as covariant on a type parameter if the parameter is used only in out positions. The opposite is true for contravariant cases: you can declare a class as contravariant on a type parameter if it’s used only in in positions. The read-only interface List in Kotlin is declared as covariant, which means List<String> is a subtype of List<Any>. The function interface is declared as contravariant on its first type parameter and covariant on its second, which makes (Animal)->Int a subtype of (Cat)->Number. Kotlin lets you specify variance both for a generic class as a whole (declaration-site variance) and for a specific use of a generic type (use-site variance). The star-projection syntax can be used when the exact type arguments are unknown or unimportant.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 5110-5117 | Añadido el sábado, 6 de mayo de 2023 11:46:23

The syntax for specifying annotation arguments is slightly different from Java’s: To specify a class as an annotation argument, put ::class after the class name: @MyAnnotation(MyClass::class). To specify another annotation as an argument, don’t put the @ character before the annotation name. For instance, ReplaceWith in the previous example is an annotation, but you don’t use @ when you specify it as an argument of the Deprecated annotation. To specify an array as an argument, use the arrayOf function: @Request-Mapping(path = arrayOf("/foo", "/bar")). If the annotation class is declared in Java, the parameter named value is automatically converted to a vararg parameter if necessary, so the arguments can be provided without using the arrayOf function.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 5117-5118 | Añadido el sábado, 6 de mayo de 2023 11:46:38

Annotation arguments need to be known at compile time, so you can’t refer to arbitrary properties as arguments.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 5117-5119 | Añadido el sábado, 6 de mayo de 2023 11:48:01

Annotation arguments need to be known at compile time, so you can’t refer to arbitrary properties as arguments. To use a property as an annotation argument, you need to mark it with a const modifier, which tells the compiler that the property is a compile-time constant.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 5124-5128 | Añadido el sábado, 6 de mayo de 2023 11:49:44

Annotation targets In many cases, a single declaration in the Kotlin source code corresponds to multiple Java declarations, and each of them can carry annotations. For example, a Kotlin property corresponds to a Java field, a getter, and possibly a setter and its parameter. A property declared in the primary constructor has one more corresponding element: the constructor parameter. Therefore, it may be necessary to specify which of these elements needs to be annotated.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 5128-5149 | Añadido el sábado, 6 de mayo de 2023 11:50:31

You specify the element to be annotated with a use-site target declaration. The use-site target is placed between the @ sign and the annotation name and is separated from the name with a colon. The word get in figure 10.1 causes the annotation @Rule to be applied to the property getter. Figure 10.1. The syntax for specifying use-site targets Let’s look at an example of using this annotation. In JUnit, you can specify a rule to be executed before each test method. For instance, the standard TemporaryFolder rule is used to create files and folders that are deleted when the test method finishes. To specify a rule, in Java you declare a public field or method annotated with @Rule. But if you just annotate the property folder in your Kotlin test class with @Rule, you’ll get a JUnit exception: “The @Rule ‘folder’ must be public.” It happens because @Rule is applied to the field, which is private by default. To apply it to the getter, you need to write that explicitly, @get:Rule, as follows: If you annotate a property with an annotation declared in Java, it’s applied to the corresponding field by default. Kotlin also lets you declare annotations that can be directly applied to properties. The full list of supported use-site targets is as follows: property—Java annotations can’t be applied with this use-site target. field—Field generated for the property. get—Property getter. set—Property setter. receiver—Receiver parameter of an extension function or property. param—Constructor parameter. setparam—Property setter parameter. delegate—Field storing the delegate instance for a delegated property. file—Class containing top-level functions and properties declared in the file. Any annotation with the file target needs to be placed at the top level of the file, before the package directive. One of the annotations commonly applied to files is @JvmName, which changes the name of the corresponding class. Section 3.2.3 showed you an example: @file:JvmName("StringFunctions").
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 5156-5165 | Añadido el sábado, 6 de mayo de 2023 11:56:33

Controlling the Java API with annotations Kotlin provides a variety of annotations to control how declarations written in Kotlin are compiled to Java bytecode and exposed to Java callers. Some of those annotations replace the corresponding keywords of the Java language: for example, the @Volatile and @Strictfp annotations serve as direct replacements for Java’s volatile and strictfp keywords. Others are used to change how Kotlin’s declarations are visible to Java callers: @JvmName changes the name of a Java method or field generated from a Kotlin declaration. @JvmStatic can be applied to methods of an object declaration or a companion object to expose them as static Java methods. @JvmOverloads, mentioned in section 3.2.2, instructs the Kotlin compiler to generate overloads for a function that has default parameter values. @JvmField can be applied to a property to expose that property as a public Java field with no getters or setters.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 5217-5220 | Añadido el sábado, 6 de mayo de 2023 12:13:30

For annotations that have parameters, the parameters are declared in the primary constructor of the class: annotation class JsonName(val name: String) You use the regular primary constructor declaration syntax. The val keyword is mandatory for all parameters of an annotation class.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 5230-5231 | Añadido el sábado, 6 de mayo de 2023 12:18:32

Just as in Java, a Kotlin annotation class can itself be annotated. The annotations that can be applied to annotation classes are called meta-annotations.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 5235-5237 | Añadido el sábado, 6 de mayo de 2023 12:19:44

Here’s how it’s applied: @Target(AnnotationTarget.PROPERTY) annotation class JsonExclude The @Target meta-annotation specifies the types of elements to which the annotation can be applied.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 5246-5250 | Añadido el sábado, 6 de mayo de 2023 12:21:35

The @Retention annotation In Java, you’ve probably seen another important meta-annotation, @Retention. You can use it to specify whether the annotation you declare will be stored in the .class file and whether it will be accessible at runtime through reflection. Java by default retains annotations in .class files but doesn’t make them accessible at runtime. Most annotations do need to be present at runtime, so in Kotlin the default is different: annotations have RUNTIME retention. Therefore, the JKid annotations do not have an explicitly specified retention.
==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 5254-5256 | Añadido el sábado, 6 de mayo de 2023 12:23:20

@DeserializeInterface annotation, which allows you to control the deserialization of properties that have an interface type. You can’t create an instance of an interface directly, so you need to specify which class is used as the implementation created during deserialization.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 8 | posición 85-85 | Añadido el sábado, 6 de mayo de 2023 23:41:40

Para invertir con éxito durante toda la vida
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 8 | posición 86-87 | Añadido el sábado, 6 de mayo de 2023 23:41:52

Lo que hace falta es una infraestructura intelectual que permita adoptar decisiones y la capacidad de evitar que las emociones deterioren esa infraestructura.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 14 | posición 167-169 | Añadido el domingo, 7 de mayo de 2023 15:00:11

El mercado es un péndulo que oscila constantemente entre un optimismo insostenible (que hace que las acciones sean demasiado caras) y un pesimismo injustificado (que hace que sean demasiado baratas). El inversor inteligente es un realista que vende a optimistas y compra a pesimistas.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 14 | posición 171-173 | Añadido el domingo, 7 de mayo de 2023 15:01:49

Por mucho cuidado que se ponga, el único riesgo que ningún inversor puede eliminar por completo es el riesgo de equivocarse. Únicamente si se insiste en lo que Graham denominó el «margen de seguridad», no pagar nunca un precio excesivo, por interesante que pueda parecer una inversión, se pueden minimizar las probabilidades de cometer un error.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 14 | posición 173-178 | Añadido el domingo, 7 de mayo de 2023 15:03:42

El secreto del éxito financiero está dentro de la persona. Si se llega a ser un pensador crítico que no acepta ningún «hecho» del mercado de valores como artículo de fe, y si se invierte con una confianza paciente, se podrá sacar un buen partido de manera sostenida, incluso en los peores períodos bajistas del mercado. Desarrollando la disciplina y el coraje personal es posible impedir que los cambios de humor de las otras personas rijan el destino financiero personal. Al final, el comportamiento que tienen las inversiones de una persona es mucho menos importante que el comportamiento que tiene esa persona.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 16 | posición 198-199 | Añadido el domingo, 7 de mayo de 2023 15:05:20

«Los que no recuerdan el pasado están condenados a repetirlo».
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 18 | posición 215-216 | Añadido el domingo, 7 de mayo de 2023 15:08:07

dollar-cost averaging o plan de inversión constante.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 21 | posición 261-263 | Añadido el domingo, 7 de mayo de 2023 15:17:59

Es obvio que no sólo hay que advertir al principiante de que, aunque el entusiasmo pueda ser necesario para conseguir grandes logros en otros lugares, en el mercado de valores conduce de manera prácticamente segura al desastre.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 22 | posición 276-278 | Añadido el domingo, 7 de mayo de 2023 15:20:32

El inversor defensivo (o pasivo) es el que centra principalmente su atención en evitar errores o pérdidas serias. Su segundo objetivo consistirá en no tener que realizar grandes esfuerzos o trámites y en quedar eximido de la necesidad de adoptar decisiones frecuentes.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 25 | posición 315-316 | Añadido el domingo, 7 de mayo de 2023 15:25:25

¿Que tratamos, entonces, de lograr con este libro? Nuestro principal objetivo consistirá en orientar al lector para prevenirle frente a las áreas de posibles errores sustanciales, y en desarrollar políticas con las que se sienta cómodo. Hablaremos bastante sobre la psicología de los inversores
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 25 | posición 315-317 | Añadido el domingo, 7 de mayo de 2023 15:25:38

¿Que tratamos, entonces, de lograr con este libro? Nuestro principal objetivo consistirá en orientar al lector para prevenirle frente a las áreas de posibles errores sustanciales, y en desarrollar políticas con las que se sienta cómodo. Hablaremos bastante sobre la psicología de los inversores, porque indiscutiblemente el principal problema del inversor, e incluso su principal enemigo, es muy probable que sea él mismo.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 30 | posición 380 | Añadido el domingo, 7 de mayo de 2023 15:57:45


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 31 | posición 402-405 | Añadido el lunes, 8 de mayo de 2023 21:23:21

¿Qué quiere decir exactamente Graham con la expresión inversor «inteligente»? En la primera edición de este libro, Graham define el término y deja claro que este tipo de inteligencia no tiene nada que ver con el coeficiente intelectual o las notas de la selectividad. Simplemente significa tener la paciencia, la disciplina y la voluntad necesarias para aprender; por otra parte, también es necesario saber controlar las emociones y pensar por uno mismo.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 31 | posición 402-406 | Añadido el lunes, 8 de mayo de 2023 21:23:41

¿Qué quiere decir exactamente Graham con la expresión inversor «inteligente»? En la primera edición de este libro, Graham define el término y deja claro que este tipo de inteligencia no tiene nada que ver con el coeficiente intelectual o las notas de la selectividad. Simplemente significa tener la paciencia, la disciplina y la voluntad necesarias para aprender; por otra parte, también es necesario saber controlar las emociones y pensar por uno mismo. Este tipo de inteligencia, explica Graham, «es más un rasgo del carácter que del cerebro».
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 34 | posición 446-447 | Añadido el lunes, 8 de mayo de 2023 21:29:14

En palabras del propio Graham, «aunque el entusiasmo puede ser necesario para los grandes logros en otros ámbitos, en Wall Street conduce de manera prácticamente invariable al desastre».
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 36 | posición 482-482 | Añadido el lunes, 8 de mayo de 2023 21:35:20

desde la exuberancia irracional hasta el pesimismo injustificable. En 2002, los inversionistas sacaron 27.000 millones de dólares
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 36 | posición 481-482 | Añadido el lunes, 8 de mayo de 2023 21:35:25

El péndulo ha oscilado, como Graham sabía que siempre hace, desde la exuberancia irracional hasta el pesimismo injustificable.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 41 | posición 544-547 | Añadido el lunes, 8 de mayo de 2023 21:45:17

En la mayor parte de los períodos el inversor deberá reconocer la existencia de un factor especulativo en su cartera de valores. Es responsabilidad suya asegurarse de que ese elemento queda confinado a unos límites estrictos, y también es responsabilidad suya estar preparado financiera y psicológicamente para sufrir resultados negativos cuya duración puede ser breve o prolongada.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 44 | posición 585 | Añadido el lunes, 8 de mayo de 2023 21:52:48


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 45 | posición 606-607 | Añadido el martes, 9 de mayo de 2023 22:05:01

«una obligación a largo plazo puede experimentar grandes variaciones de precio en respuesta a los cambios de los tipos de interés».
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 52 | posición 699-701 | Añadido el martes, 9 de mayo de 2023 22:23:17

El inversor defensivo debe limitarse a las acciones de empresas importantes que tengan un prolongado historial de explotación rentable y que se encuentren en una sólida situación financiera. (Cualquier analista de valores que se merezca su salario será capaz
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 53 | posición 715 | Añadido el martes, 9 de mayo de 2023 22:26:41


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 55 | posición 742-743 | Añadido el miércoles, 10 de mayo de 2023 21:35:42

Hacer operaciones siguiendo al mercado no es un método «que, tras un análisis exhaustivo, ofrezca seguridad del principal y un rendimiento satisfactorio».
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 56 | posición 759-761 | Añadido el miércoles, 10 de mayo de 2023 21:39:14

para disfrutar de una probabilidad razonable de obtener unos resultados continuados mejores que la media, el inversor debe seguir unas políticas que sean (1) inherentemente sólidas y prometedoras, y (2) que no gocen de popularidad en el mercado de valores.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 61 | posición 811 | Añadido el miércoles, 10 de mayo de 2023 21:51:48


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 61 | posición 819-825 | Añadido el jueves, 11 de mayo de 2023 21:44:55

«Una operación de inversión es aquella que, tras un análisis exhaustivo, promete seguridad para el principal y un adecuado rendimiento».34 Se debe tener en cuenta que invertir, según Graham, es una actividad compuesta por tres elementos de igual trascendencia: • Es necesario analizar exhaustivamente la empresa y la solidez de sus negocios subyacentes, antes de comprar sus acciones. • Es necesario protegerse deliberadamente frente a pérdidas graves. • Se debe aspirar a unos resultados «adecuados», no a unos resultados extraordinarios. El
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 68 | posición 906 | Añadido el jueves, 11 de mayo de 2023 22:02:46


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 78 | posición 1036 | Añadido el viernes, 12 de mayo de 2023 22:56:06


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 82 | posición 1091-1106 | Añadido el domingo, 14 de mayo de 2023 09:04:28

¿Puede estar el inversor razonablemente seguro de que va a conseguir mejores resultados comprando y conservando otros productos que no sean obligaciones de la máxima categoría, incluso con el tipo de interés sin precedentes que se ofrecía en 1970-1971? ¿No sería, por ejemplo, un plan de inversión compuesto íntegramente por acciones preferible a otro que estuviese compuesto en parte por acciones y en parte por obligaciones? ¿No ofrecen las acciones ordinarias una mejor protección intrínseca frente a la inflación, y no es prácticamente seguro que van a generar una mejor rentabilidad a lo largo de los años que la de las obligaciones? De hecho, ¿no han tratado las acciones al inversor mucho mejor que las obligaciones a lo largo de los 55 años de nuestro estudio? La respuesta a estas preguntas dista de ser sencilla. Las acciones ordinarias, ciertamente, han arrojado un resultado mejor que las obligaciones durante un prolongado período de tiempo en el pasado. La ascensión del DJIA desde una media de 77 en 1915 a una media de 753 en 1970 arroja un tipo compuesto anual de algo más del 4 por ciento, al que se debe añadir otro 4 por ciento adicional por rentabilidad media por dividendo. (Las cifras correspondientes del índice S&P son aproximadamente similares.) Estas cifras combinadas del 8 por ciento anual son, por supuesto, mucho mejores que la rentabilidad obtenida con las obligaciones durante el mismo período de 55 años. Pero no son mejores que la rentabilidad que en la actualidad ofrecen las obligaciones de mejor categoría. Esto nos lleva a la siguiente pregunta lógica: ¿Hay algún motivo convincente para creer que las acciones ordinarias van a conseguir unos resultados mucho mejores en los años venideros de lo que han conseguido durante las últimas cinco décadas y media? La respuesta a esta pregunta esencial tiene que ser un no tajante. Las acciones ordinarias pueden conseguir mejores resultados en el futuro que en el pasado, pero que lo logren dista mucho de ser un hecho seguro. A la hora de abordar esta cuestión tenemos que hacer frente a dos diferentes períodos temporales de referencia en los que se deben encuadrar los resultados de las inversiones.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 82 | posición 1091-1111 | Añadido el domingo, 14 de mayo de 2023 09:05:34

¿Puede estar el inversor razonablemente seguro de que va a conseguir mejores resultados comprando y conservando otros productos que no sean obligaciones de la máxima categoría, incluso con el tipo de interés sin precedentes que se ofrecía en 1970-1971? ¿No sería, por ejemplo, un plan de inversión compuesto íntegramente por acciones preferible a otro que estuviese compuesto en parte por acciones y en parte por obligaciones? ¿No ofrecen las acciones ordinarias una mejor protección intrínseca frente a la inflación, y no es prácticamente seguro que van a generar una mejor rentabilidad a lo largo de los años que la de las obligaciones? De hecho, ¿no han tratado las acciones al inversor mucho mejor que las obligaciones a lo largo de los 55 años de nuestro estudio? La respuesta a estas preguntas dista de ser sencilla. Las acciones ordinarias, ciertamente, han arrojado un resultado mejor que las obligaciones durante un prolongado período de tiempo en el pasado. La ascensión del DJIA desde una media de 77 en 1915 a una media de 753 en 1970 arroja un tipo compuesto anual de algo más del 4 por ciento, al que se debe añadir otro 4 por ciento adicional por rentabilidad media por dividendo. (Las cifras correspondientes del índice S&P son aproximadamente similares.) Estas cifras combinadas del 8 por ciento anual son, por supuesto, mucho mejores que la rentabilidad obtenida con las obligaciones durante el mismo período de 55 años. Pero no son mejores que la rentabilidad que en la actualidad ofrecen las obligaciones de mejor categoría. Esto nos lleva a la siguiente pregunta lógica: ¿Hay algún motivo convincente para creer que las acciones ordinarias van a conseguir unos resultados mucho mejores en los años venideros de lo que han conseguido durante las últimas cinco décadas y media? La respuesta a esta pregunta esencial tiene que ser un no tajante. Las acciones ordinarias pueden conseguir mejores resultados en el futuro que en el pasado, pero que lo logren dista mucho de ser un hecho seguro. A la hora de abordar esta cuestión tenemos que hacer frente a dos diferentes períodos temporales de referencia en los que se deben encuadrar los resultados de las inversiones. El primero cubre el futuro a largo plazo, lo que es probable que suceda, por ejemplo, en los próximos 25 años. El segundo es el marco en el que se debe evaluar lo que es probable que le ocurra al inversor, tanto financiera como psicológicamente, a lo largo de períodos a corto y medio plazo, digamos cinco años o menos. Su mentalidad, sus esperanzas y aprensiones, su satisfacción o insatisfacción con lo que ha hecho y, sobre todo, sus decisiones sobre lo que tiene que hacer a continuación vienen determinadas no por una panorámica retrospectiva de toda una vida de inversión, sino por su experiencia de año en año.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 97 | posición 1288-1290 | Añadido el domingo, 14 de mayo de 2023 09:51:48

Mientras que una inflación moderada hacía posible que las empresas trasladasen a los clientes el incremento de costes que experimentaban en sus materias primas, la inflación elevada provoca el caos, obliga a los clientes a reducir al mínimo sus adquisiciones y deprime la actividad en toda la economía.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 96 | posición 1281-1283 | Añadido el domingo, 14 de mayo de 2023 09:51:54

los años entre 1926 y 2002, ordenados no con criterios cronológicos sino en orden desde la menor inflación anual a la más elevada. Cuando la inflación es muy negativa (véase el extremo izquierdo) las acciones tienen un rendimiento muy insatisfactorio.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 96 | posición 1281-1287 | Añadido el domingo, 14 de mayo de 2023 09:52:04

Este gráfico muestra la inflación y los rendimientos de las acciones de todos los años entre 1926 y 2002, ordenados no con criterios cronológicos sino en orden desde la menor inflación anual a la más elevada. Cuando la inflación es muy negativa (véase el extremo izquierdo) las acciones tienen un rendimiento muy insatisfactorio. Cuando la inflación es moderada, como sucedió en la mayoría de los años de este período, las acciones suelen tener unos resultados satisfactorios, por lo general. Sin embargo, cuando la inflación se eleva hasta niveles muy altos (véase el extremo derecho) las acciones suelen tener rendimientos erráticos, con pérdidas que la mayoría de las ocasiones superan el 10 por ciento.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 97 | posición 1288-1295 | Añadido el domingo, 14 de mayo de 2023 09:53:08

Mientras que una inflación moderada hacía posible que las empresas trasladasen a los clientes el incremento de costes que experimentaban en sus materias primas, la inflación elevada provoca el caos, obliga a los clientes a reducir al mínimo sus adquisiciones y deprime la actividad en toda la economía. Los datos históricos son claros: desde la aparición de unos datos exactos del mercado de valores en 1926, ha habido 64 períodos quinquenales (es decir, de 1926 a 1930, de 1927 a 1931, de 1928 a 1932, etcétera, hasta llegar a 1998-2002). En 50 de esos 64 períodos quinquenales (lo que supone el 78 por ciento del tiempo) las acciones tuvieron resultados mejores que la inflación.61 Es impresionante, pero imperfecto; significa que las acciones no han sido capaces de mantenerse a la altura de la inflación aproximadamente una quinta parte del tiempo. Dos
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 97 | posición 1288-1295 | Añadido el domingo, 14 de mayo de 2023 09:53:14

Mientras que una inflación moderada hacía posible que las empresas trasladasen a los clientes el incremento de costes que experimentaban en sus materias primas, la inflación elevada provoca el caos, obliga a los clientes a reducir al mínimo sus adquisiciones y deprime la actividad en toda la economía. Los datos históricos son claros: desde la aparición de unos datos exactos del mercado de valores en 1926, ha habido 64 períodos quinquenales (es decir, de 1926 a 1930, de 1927 a 1931, de 1928 a 1932, etcétera, hasta llegar a 1998-2002). En 50 de esos 64 períodos quinquenales (lo que supone el 78 por ciento del tiempo) las acciones tuvieron resultados mejores que la inflación.61 Es impresionante, pero imperfecto; significa que las acciones no han sido capaces de mantenerse a la altura de la inflación aproximadamente una quinta parte del tiempo.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 100 | posición 1324 | Añadido el domingo, 14 de mayo de 2023 10:00:30


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 117 | posición 1559 | Añadido el martes, 16 de mayo de 2023 21:45:22


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 119 | posición 1572 | Añadido el martes, 16 de mayo de 2023 21:46:03


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 124 | posición 1649-1650 | Añadido el miércoles, 17 de mayo de 2023 21:29:45

El valor de cualquier inversión es, y siempre tendrá que ser, una función del precio que se paga por ella.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 126 | posición 1679 | Añadido el miércoles, 17 de mayo de 2023 21:36:33


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 127 | posición 1688-1693 | Añadido el jueves, 18 de mayo de 2023 21:29:59

El rendimiento del mercado de valores depende de tres factores: • Crecimiento real (el incremento de las ganancias y dividendos de las empresas). • Crecimiento inflacionario (el aumento general de los precios en toda la economía). • Crecimiento (o decrecimiento) especulativo (cualquier aumento o reducción del apetito de acciones del público inversionista).
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 127 | posición 1697-1701 | Añadido el jueves, 18 de mayo de 2023 21:41:40

A largo plazo, eso significa que cabe razonablemente esperar que las acciones alcancen un promedio de aproximadamente el 6 por ciento de rentabilidad (o el 4 por ciento después de la inflación). Si el público inversor vuelve a actuar de manera avariciosa y vuelve a poner en órbita las acciones una vez más, esa fiebre especulativa hará que aumenten los rendimientos temporalmente. En caso de que, por el contrario, los inversores actúen temerosamente, al igual que hicieron en las décadas de 1930 y 1970, los rendimientos de las acciones serán temporalmente menores.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 128 | posición 1701-1705 | Añadido el jueves, 18 de mayo de 2023 21:42:07

Robert Shiller, un profesor de finanzas de la Universidad de Yale, afirma que Graham inspiró su método de valoración: Shiller compara el precio del índice de valores Standard & Poor’s 500 con los beneficios empresariales medios de los diez últimos años (después de deducir la inflación). Tras un examen de los registros históricos, Shiller ha mostrado que cuando esta relación supera ampliamente el 20, el mercado suele ofrecer unos rendimientos deficientes posteriormente; cuando queda muy por debajo de 10, las acciones suelen generar unos sustanciales beneficios tras un período de tiempo.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 128 | posición 1712-1714 | Añadido el jueves, 18 de mayo de 2023 21:42:21

Graham, adoptando siempre una postura conservadora, dividiría la diferencia entre los rendimientos inferiores y los rendimientos superiores del pasado y proyectaría el resultado durante la siguiente década, con lo que las acciones obtendrían aproximadamente el 6 por ciento anual, o el 4 por ciento después de deducir la inflación.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 130 | posición 1763-1765 | Añadido el jueves, 18 de mayo de 2023 21:43:01

De todas formas, hay una segunda lección que se puede extraer del método aplicado por Graham. La única cosa en la que se puede confiar cuando se hacen previsiones sobre la futura rentabilidad de las acciones es que es muy probable que la previsión resulte ser errónea. La única verdad indiscutible que nos enseñan las décadas pasadas es que el futuro siempre nos sorprenderá; siempre.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 130 | posición 1763-1767 | Añadido el jueves, 18 de mayo de 2023 21:43:13

De todas formas, hay una segunda lección que se puede extraer del método aplicado por Graham. La única cosa en la que se puede confiar cuando se hacen previsiones sobre la futura rentabilidad de las acciones es que es muy probable que la previsión resulte ser errónea. La única verdad indiscutible que nos enseñan las décadas pasadas es que el futuro siempre nos sorprenderá; siempre. Y el corolario de esta ley de la historia financiera es que los mercados sorprenderán más brutalmente a las personas que estén más seguras de que sus opiniones sobre el futuro son acertadas.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 131 | posición 1772-1772 | Añadido el jueves, 18 de mayo de 2023 21:43:25

«Benditos sean los que no esperan nada, porque disfrutarán de todo».
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 132 | posición 1785 | Añadido el jueves, 18 de mayo de 2023 21:46:36


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 133 | posición 1798-1803 | Añadido el viernes, 19 de mayo de 2023 22:05:07

Según la tradición, el motivo más sensato para incrementar el porcentaje de acciones ordinarias sería la aparición de niveles de «precio de ganga» que se producen en un prolongado período bajista de mercado. A la inversa, un procedimiento sensato requeriría reducir el componente de acciones ordinarias a una proporción inferior al 50 por ciento, cuando a juicio del inversor el nivel de mercado hubiese llegado a ser peligrosamente elevado. Estas reglas básicas siempre han sido fáciles de formular y siempre han sido muy difíciles de seguir, porque van en contra de la propia naturaleza humana que produce los excesos de los períodos alcistas y bajistas del mercado.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 134 | posición 1805-1807 | Añadido el viernes, 19 de mayo de 2023 22:06:47

Que el inversor medio opere, o podría llegar a afirmarse que deba operar, en sentido contrario es la causa de los grandes repuntes y colapsos que se han producido en el pasado; este escritor cree, además, que también es la causa de que resulte tan probable que vayan a repetirse en el futuro.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 144 | posición 1944 | Añadido el viernes, 19 de mayo de 2023 22:43:39


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 150 | posición 2025 | Añadido el lunes, 22 de mayo de 2023 22:11:06


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 167 | posición 2242-2243 | Añadido el martes, 23 de mayo de 2023 21:53:43

que emiten acciones preferentes no pueden deducir los pagos de dividendos preferentes en sus
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 168 | posición 2255 | Añadido el martes, 23 de mayo de 2023 21:55:27


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 178 | posición 2400 | Añadido el miércoles, 24 de mayo de 2023 22:20:32


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 180 | posición 2428-2431 | Añadido el jueves, 25 de mayo de 2023 22:14:44

Durante ese período su valor de mercado habrá fluctuado, con toda probabilidad, y existen más o menos las mismas probabilidades de que durante un cierto período hubiese tenido que ser vendido por un precio inferior al que le costó al comprador, que de que no ocurra esto. Si este hecho hace que la inversión sea «arriesgada», deberíamos afirmar que se trata de una inversión arriesgada y segura al mismo tiempo.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 180 | posición 2428-2434 | Añadido el jueves, 25 de mayo de 2023 22:16:42

Durante ese período su valor de mercado habrá fluctuado, con toda probabilidad, y existen más o menos las mismas probabilidades de que durante un cierto período hubiese tenido que ser vendido por un precio inferior al que le costó al comprador, que de que no ocurra esto. Si este hecho hace que la inversión sea «arriesgada», deberíamos afirmar que se trata de una inversión arriesgada y segura al mismo tiempo. Esta confusión se puede evitar si aplicamos el concepto de riesgo exclusivamente a la pérdida de valor que se materializa mediante la venta real, o que se provoca por un deterioro sustancial en la posición de la sociedad, o, lo que puede ocurrir con mayor frecuencia, que es resultado del pago de un precio excesivo en relación con el valor intrínseco del título en cuestión.II
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 183 | posición 2463 | Añadido el jueves, 25 de mayo de 2023 22:24:20


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 183 | posición 2463 | Añadido el jueves, 25 de mayo de 2023 22:24:42


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 196 | posición 2638 | Añadido el martes, 30 de mayo de 2023 21:57:27


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 211 | posición 2869-2870 | Añadido el miércoles, 31 de mayo de 2023 21:39:42

Para el inversor agresivo, lo mismo que para el inversor defensivo, lo que no se hace tiene tanta repercusión sobre el éxito como lo que sí se hace.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 219 | posición 2989-2993 | Añadido el jueves, 1 de junio de 2023 21:51:19

Por desgracia, por cada oferta pública inicial como la de Microsoft que resulta ser un gran éxito, hay miles de fracasos. Los psicólogos Daniel Kahnerman y Amos Tversky han demostrado que cuando los seres humanos calculan las probabilidades o la frecuencia de un suceso, la valoración no se basa en la frecuencia con la que realmente ocurrió el suceso, sino en lo notables que son los ejemplos ocurridos en el pasado. Todos queremos comprar «el siguiente Microsoft», precisamente porque sabemos que no compramos el primer Microsoft.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 221 | posición 3011-3013 | Añadido el jueves, 1 de junio de 2023 21:54:44

importantes planteadas por Graham: con independencia del número de personas que quieran comprar una acción, únicamente se deben comprar acciones si esa compra ofrece una forma económica de llegar a ser propietario de una empresa deseable.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 224 | posición 3038 | Añadido el jueves, 1 de junio de 2023 21:58:41


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 228 | posición 3112-3114 | Añadido el sábado, 3 de junio de 2023 11:42:52

(En el caso del inversor defensivo sugerimos un límite superior de precio de compra de 25 veces el beneficio medio de los últimos siete años. Estos dos criterios serían más o menos equivalentes en la mayor parte de los casos.)137
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 255 | posición 3534 | Añadido el sábado, 3 de junio de 2023 12:47:41


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 255 | posición 3535-3539 | Añadido el lunes, 5 de junio de 2023 10:03:55

Hace falta una gran osadía y una gran cautela para amasar una gran fortuna; cuando se ha logrado, hace falta diez veces más osadía y cautela para conservarla. NATHAN MAYER ROTHSCHILD
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 256 | posición 3561-3562 | Añadido el lunes, 5 de junio de 2023 10:10:39

Como el filósofo danés Søren Kierkegaard indicó, la vida sólo se puede entender mirando hacia atrás, pero se debe vivir mirando hacia delante.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 256 | posición 3561-3566 | Añadido el lunes, 5 de junio de 2023 10:11:16

Como el filósofo danés Søren Kierkegaard indicó, la vida sólo se puede entender mirando hacia atrás, pero se debe vivir mirando hacia delante. A posteriori siempre se sabe exactamente cuándo debería haber comprado y cuándo debería haber vendido acciones. No deje que eso le lleve a pensar que es usted capaz de percibir, en tiempo real, en qué momento tiene que entrar y en qué momento tiene que salir. En los mercados financieros, a posteriori siempre se tiene razón al cien por cien, pero a priori no se tiene ni idea. Por lo tanto, para la mayor parte de los inversores, acertar con la coyuntura del mercado es una imposibilidad práctica y emocional.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 262 | posición 3662-3666 | Añadido el lunes, 5 de junio de 2023 10:30:07

En 1982, el patrimonio neto de un miembro del Forbes 400 era de 230 millones. Para estar presente en el Forbes 400 de 2002, el miembro medio del Forbes de 1982 únicamente tendría que haber conseguido una rentabilidad anual media del 4,5 por ciento sobre su patrimonio, durante un período en el que hasta las cuentas bancarias rindieron mucho más que esa cifra y el mercado de valores obtuvo una media anual de 13,2 por ciento. ¿Cuántas de las fortunas del Forbes 400 de 1982 seguían en la lista veinte años después? Únicamente 64 de los miembros originales, un escaso 16 por ciento, seguían en la lista en el año 2002.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 263 | posición 3677-3680 | Añadido el lunes, 5 de junio de 2023 10:34:27

Coja un ejemplar de The Wall Street Journal de hoy, pase a la sección «Dinero e inversión» y eche un vistazo a los indicadores de las bolsas NYSE y NASDAQ para encontrar las listas del día con las acciones que han llegado a su punto mínimo del último año; una forma sencilla y rápida de localizar empresas que podrían cumplir los requisitos de capital circulante neto de Graham.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 263 | posición 3677-3685 | Añadido el lunes, 5 de junio de 2023 10:35:30

Coja un ejemplar de The Wall Street Journal de hoy, pase a la sección «Dinero e inversión» y eche un vistazo a los indicadores de las bolsas NYSE y NASDAQ para encontrar las listas del día con las acciones que han llegado a su punto mínimo del último año; una forma sencilla y rápida de localizar empresas que podrían cumplir los requisitos de capital circulante neto de Graham. Para comprobar si una acción se vende por una cifra inferior al valor de su capital circulante neto (lo que los seguidores de Graham denominan «netas netas» o net nets) descargue o solicite el informe anual o trimestral más reciente del sitio web de la empresa o de la base de datos EDGAR en <www.sec.gov>. Reste del activo circulante de la empresa su pasivo total, incluidas las acciones preferentes y la deuda a largo plazo. (O consulte en su biblioteca local un ejemplar de la Encuesta de Inversión Value Line, y se ahorrará una costosa suscripción anual. Todos los números incluyen una lista de «Acciones de ocasión» que se acercan a la definición de Graham.) Últimamente la mayoría de esas acciones pertenecen a sectores arrasados como la alta tecnología y las telecomunicaciones.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 265 | posición 3707-3712 | Añadido el lunes, 5 de junio de 2023 10:39:56

Si vive en Estados Unidos, trabaja en Estados Unidos y recibe su salario en dólares de Estados Unidos, ya está haciendo una apuesta múltiple a favor de la economía de Estados Unidos. Para ser prudente, debería poner parte de su cartera de inversión en otro lugar, simplemente porque nadie, en ningún lugar, puede estar seguro nunca de lo que va a pasar en el futuro en su país de origen o en el extranjero. Destinar hasta un tercio del dinero que se invierte en fondos de inversión que tengan acciones extranjeras (incluidas las de empresas de economías emergentes) es útil para asegurarse frente al riesgo de que el país de origen no siempre sea el mejor lugar del mundo para invertir.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 267 | posición 3713 | Añadido el lunes, 5 de junio de 2023 10:51:32


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 277 | posición 3857-3858 | Añadido el martes, 6 de junio de 2023 21:55:07

«Todo lo excelso es tan difícil como raro».
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 278 | posición 3872-3891 | Añadido el martes, 6 de junio de 2023 22:02:19

No será muy probable que el inversor serio crea que las fluctuaciones de un día a otro, o incluso las fluctuaciones de un mes a otro, del mercado de valores vayan a enriquecerle o a empobrecerle. ¿Podrían hacerlo los cambios a más largo plazo y de mayor calado? En este terreno surgen dudas prácticas y problemas psicológicos que probablemente se complicarán. Una subida sustancial en el mercado es, simultáneamente, un motivo justificado de satisfacción y una causa de preocupación prudente, pero también puede entrañar una gran tentación de emprender acciones imprudentes. Sus acciones han subido, ¡bien! Es usted más rico que antes, ¡bien! Pero ¿ha subido demasiado el precio y debería pensar en vender? ¿O debería castigarse por no haber comprado más acciones cuando el nivel era más bajo? O, y éste es el peor pensamiento de todos, ¿debería ceder a la atmósfera alcista, llenarse de entusiasmo y del exceso de confianza y de la codicia que domina al público en general (del cual, después de todo, usted forma parte), y contraer mayores y peligrosos compromisos? Planteada en estos términos sobre el papel, la respuesta a la última pregunta es evidentemente no, pero incluso el inversor inteligente necesitará una considerable fuerza de voluntad para dejar de seguir a la multitud. Por estas causas de naturaleza humana, más incluso que por los cálculos de pérdidas o ganancias financieras, nos mostramos favorables a algún tipo de método mecánico para modificar la proporción entre obligaciones y acciones en la cartera del inversor. La principal ventaja, tal vez, es que dicha fórmula le ofrecerá algo que hacer. A medida que suba el mercado venderá acciones de su cartera y destinará los ingresos a obligaciones; cuando el mercado baje, hará lo contrario. Estas actividades ofrecerán una salida a sus energías que de lo contrario estarían excesivamente concentradas. Si es el tipo de inversor adecuado, encontrará satisfacción adicional en el hecho de que sus operaciones sean exactamente contrarias a las que realiza la multitud.165 Valoraciones empresariales en contraposición a valoraciones del mercado de valores La repercusión de las fluctuaciones del mercado en la verdadera situación del inversor también se puede analizar desde el punto de vista del accionista que es propietario parcial de varias empresas.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 278 | posición 3872-3888 | Añadido el martes, 6 de junio de 2023 22:02:27

No será muy probable que el inversor serio crea que las fluctuaciones de un día a otro, o incluso las fluctuaciones de un mes a otro, del mercado de valores vayan a enriquecerle o a empobrecerle. ¿Podrían hacerlo los cambios a más largo plazo y de mayor calado? En este terreno surgen dudas prácticas y problemas psicológicos que probablemente se complicarán. Una subida sustancial en el mercado es, simultáneamente, un motivo justificado de satisfacción y una causa de preocupación prudente, pero también puede entrañar una gran tentación de emprender acciones imprudentes. Sus acciones han subido, ¡bien! Es usted más rico que antes, ¡bien! Pero ¿ha subido demasiado el precio y debería pensar en vender? ¿O debería castigarse por no haber comprado más acciones cuando el nivel era más bajo? O, y éste es el peor pensamiento de todos, ¿debería ceder a la atmósfera alcista, llenarse de entusiasmo y del exceso de confianza y de la codicia que domina al público en general (del cual, después de todo, usted forma parte), y contraer mayores y peligrosos compromisos? Planteada en estos términos sobre el papel, la respuesta a la última pregunta es evidentemente no, pero incluso el inversor inteligente necesitará una considerable fuerza de voluntad para dejar de seguir a la multitud. Por estas causas de naturaleza humana, más incluso que por los cálculos de pérdidas o ganancias financieras, nos mostramos favorables a algún tipo de método mecánico para modificar la proporción entre obligaciones y acciones en la cartera del inversor. La principal ventaja, tal vez, es que dicha fórmula le ofrecerá algo que hacer. A medida que suba el mercado venderá acciones de su cartera y destinará los ingresos a obligaciones; cuando el mercado baje, hará lo contrario. Estas actividades ofrecerán una salida a sus energías que de lo contrario estarían excesivamente concentradas. Si es el tipo de inversor adecuado, encontrará satisfacción adicional en el hecho de que sus operaciones sean exactamente contrarias a las que realiza la multitud.165
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 279 | posición 3888 | Añadido el martes, 6 de junio de 2023 22:09:01


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 286 | posición 3984-3988 | Añadido el sábado, 10 de junio de 2023 18:50:31

De esta historia se pueden extraer dos lecciones principales. La primera es que el mercado de valores se equivoca mucho de vez en cuando, y en ocasiones un inversor valiente que esté alerta puede aprovecharse de esos errores manifiestos. La segunda es que la mayor parte de las empresas cambian de naturaleza y calidad a lo largo de los años, en ocasiones para mejor y, tal vez más frecuentemente, para peor. No es necesario que el inversor vigile los resultados de sus empresas como un halcón; no obstante, sí debería examinarlos a fondo de vez en cuando.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 286 | posición 3991-3999 | Añadido el sábado, 10 de junio de 2023 18:56:04

No obstante, se debe tener en cuenta este hecho importante: el verdadero inversor prácticamente nunca se ve obligado a vender sus acciones y, salvo en esos contados momentos en que pudiese verse forzado a vender, está en perfectas condiciones para desentenderse de la cotización vigente. Deberá prestar atención a las cotizaciones y llevar a cabo alguna intervención únicamente en la medida en que le convenga, y no más.170 Por lo tanto, el inversor que permita que otros lo arrastren a las estampidas o que se preocupe indebidamente por las retracciones injustificadas provocadas por el mercado en sus carteras estará transformando perversamente su ventaja básica en una desventaja esencial. Se trata de personas que estarían mejor si sus acciones no cotizasen en absoluto, porque podrían librarse de la angustia mental que les provocan los errores de juicio cometidos por otras personas.171
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 299 | posición 4159-4162 | Añadido el sábado, 10 de junio de 2023 21:27:40

La felicidad de quienes ansían la popularidad depende de los demás; la felicidad de los que persiguen el placer fluctúa con estados de ánimo que no pueden controlar; sin embargo, la felicidad de los sabios surge de sus propios actos libres. MARCO AURELIO
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 302 | posición 4210-4213 | Añadido el sábado, 10 de junio de 2023 21:38:24

El inversor inteligente no debería desentenderse por completo del Sr. Mercado. Al contrario, debería hacer negocios con él, pero únicamente en la medida en que le interesase. La tarea del Sr. Mercado es la de facilitarle precios; su tarea es la de decidir si le resulta interesante hacer algo respecto de esos precios. No tiene usted que hacer operaciones con el mercado simplemente porque éste le ruegue incesantemente que lo haga.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 304 | posición 4221 | Añadido el sábado, 10 de junio de 2023 21:40:22


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 305 | posición 4234-4236 | Añadido el domingo, 11 de junio de 2023 14:57:51

«El inversor que permita que otros lo arrastren a las estampidas o que se preocupe indebidamente por las retracciones injustificadas provocadas por el mercado en sus carteras estará transformando perversamente su ventaja básica en una desventaja esencial».
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 307 | posición 4261-4310 | Añadido el domingo, 11 de junio de 2023 15:49:15

Por lo tanto, no hay ningún motivo por el que no pueda usted tener unos resultados tan satisfactorios como los de los profesionales. Lo que no podrá hacer usted (a pesar de todos los presuntos expertos que le digan que sí puede) es «ganar a los profesionales en su propio juego». Ni siquiera los profesionales pueden ganar en su propio juego. ¿Por qué iba a querer usted jugar a ese juego, para empezar? Si sigue sus reglas, acabará perdiendo, ya que al final acabará siendo un esclavo del Sr. Mercado, al igual que lo son los profesionales. Lo que debe hacer, al contrario, es caer en la cuenta de que invertir de manera inteligente consiste en controlar lo que se puede controlar. No es posible controlar si las acciones o los fondos que compra van a tener mejores resultados que el mercado hoy, la semana que viene, el mes que viene o este año; a corto plazo, su rendimiento siempre será rehén del Sr. Mercado y de sus caprichos. Sin embargo, lo que sí puede controlar usted es: • Los costes de intermediación, si hace operaciones con poca frecuencia, de manera paciente y de forma barata. • Sus costes de cartera, si se niega a comprar fondos de inversión que tengan unos gastos anuales excesivos. • Sus expectativas, si actúa con realismo y no se deja llevar por las fantasías, a la hora de hacer previsiones sobre los resultados que puede obtener.182 • Su riesgo, si decide qué parte de su patrimonio total queda expuesto a los azares del mercado de valores, mediante la diversificación y mediante los ajustes de la cartera. • Su factura tributaria, si conserva las acciones durante el período necesario para reducir al máximo sus obligaciones tributarias, atendiendo a la normativa fiscal que se encuentre vigente en cada momento. • Y, en especial, su propio comportamiento. Si presta atención a los programas financieros de televisión, o si lee a la mayoría de los columnistas especializados en el mercado, acabará pensando que la inversión es una especie de deporte, o de guerra, o de lucha para sobrevivir en un entorno hostil. Sin embargo, la inversión no consiste en ganar a otros siguiendo sus reglas del juego. Consiste en aprender a controlarse en el juego que decida usted jugar. El desafío para el inversor inteligente no consiste en encontrar las acciones que más vayan a subir o que menos vayan a bajar, sino en no permitir que se convierta usted en su peor enemigo, en impedir que acabe comprando a precios elevados simplemente porque el Sr. Mercado le grite «¡A comprar!», y en no permitir que acabe vendiendo a precios bajos simplemente porque el Sr. Mercado diga en un momento determinado «¡A vender!». Si su horizonte de inversión es a largo plazo, por lo menos 25 o 30 años, únicamente hay un método adecuado que pueda seguir: compre todos los meses, de manera automática, y en todas las demás ocasiones en las que pueda prescindir de algo de dinero. La mejor opción para este tipo de carteras vitalicias es un fondo que compre un índice bursátil completo. Venda únicamente cuando necesite el dinero (si necesita un apoyo psicológico, fotocopie y firme su «Contrato de propietario de inversiones»). Si quiere ser un inversor inteligente, también tiene que negarse a juzgar su éxito financiero en comparación con lo que está consiguiendo una cuadrilla de personas que son absolutamente desconocidas para usted. Usted no será ni un penique más pobre si otra persona que vive en Denver, en Dallas o en Durango consigue mejores resultados que el S&P 500 y usted no. No hay ningún epitafio que diga: «Ganó al mercado». En una ocasión entrevisté a un grupo de jubilados de Boca Ratón, una de las comunidades de jubilados más ricos de Florida. Cuando pregunté a estas personas, que en su mayoría tenían setenta años o más, si habían conseguido mejores resultados que el mercado durante su vida como inversores, algunos me contestaron que sí y otros que no; y la mayoría no estaban seguros. Uno de ellos me dijo: «¿Y qué más me da? Lo único que sé es que gracias a mis inversiones he conseguido ganar suficiente dinero como para acabar viviendo en Boca». ¿Cabe una respuesta mejor? Después de todo, el objetivo de la inversión no consiste en ganar más dinero que la media, sino en ganar suficiente dinero para satisfacer sus propias necesidades. La mejor forma de medir el éxito de su inversión no consiste en saber si está ganando al mercado, sino en saber si ha elaborado un plan financiero y una disciplina de conducta que tenga probabilidades de permitirle llegar adonde quiere llegar. En última instancia, lo que importa no es cruzar la meta antes que el resto, sino asegurarse de que uno llega a su meta.183 Su dinero y su cerebro Entonces, ¿por qué les resulta tan cautivador el Sr. Mercado a los inversores? En la práctica, nuestro cerebro está programado para provocarnos problemas a la hora de invertir; los seres humanos somos animales que tratamos de identificar pautas de actuación. Los psicólogos han demostrado que si se presenta una serie aleatoria a un grupo de personas y se les dice que es imprevisible, insistirán, no obstante, en tratar de adivinar qué va a salir a continuación. De la misma manera, «sabemos» que la siguiente tirada de dados será un 7, que un jugador que lanza una falta va a marcar el gol, que los siguientes números ganadores de la lotería primitiva van a ser, incuestionablemente, 4-27-9-16-4210, y que las acciones de esta pequeña empresa se van a convertir en el siguiente Microsoft. Unas recientes investigaciones revolucionarias de la ciencia neurológica indican que nuestros cerebros están diseñados para percibir tendencias incluso donde no las hay. Después de que un acontecimiento suceda dos o tres veces seguidas, ciertas zonas de nuestro cerebro, de manera automática, anticipan que va a suceder de nuevo. Si el acontecimiento se repite, un producto químico natural denominado dopamina se libera, inundando el cerebro con una leve euforia. De esta forma, si una acción sube unas cuantas veces, de manera refleja esperará
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 307 | posición 4261-4298 | Añadido el domingo, 11 de junio de 2023 15:49:36

Por lo tanto, no hay ningún motivo por el que no pueda usted tener unos resultados tan satisfactorios como los de los profesionales. Lo que no podrá hacer usted (a pesar de todos los presuntos expertos que le digan que sí puede) es «ganar a los profesionales en su propio juego». Ni siquiera los profesionales pueden ganar en su propio juego. ¿Por qué iba a querer usted jugar a ese juego, para empezar? Si sigue sus reglas, acabará perdiendo, ya que al final acabará siendo un esclavo del Sr. Mercado, al igual que lo son los profesionales. Lo que debe hacer, al contrario, es caer en la cuenta de que invertir de manera inteligente consiste en controlar lo que se puede controlar. No es posible controlar si las acciones o los fondos que compra van a tener mejores resultados que el mercado hoy, la semana que viene, el mes que viene o este año; a corto plazo, su rendimiento siempre será rehén del Sr. Mercado y de sus caprichos. Sin embargo, lo que sí puede controlar usted es: • Los costes de intermediación, si hace operaciones con poca frecuencia, de manera paciente y de forma barata. • Sus costes de cartera, si se niega a comprar fondos de inversión que tengan unos gastos anuales excesivos. • Sus expectativas, si actúa con realismo y no se deja llevar por las fantasías, a la hora de hacer previsiones sobre los resultados que puede obtener.182 • Su riesgo, si decide qué parte de su patrimonio total queda expuesto a los azares del mercado de valores, mediante la diversificación y mediante los ajustes de la cartera. • Su factura tributaria, si conserva las acciones durante el período necesario para reducir al máximo sus obligaciones tributarias, atendiendo a la normativa fiscal que se encuentre vigente en cada momento. • Y, en especial, su propio comportamiento. Si presta atención a los programas financieros de televisión, o si lee a la mayoría de los columnistas especializados en el mercado, acabará pensando que la inversión es una especie de deporte, o de guerra, o de lucha para sobrevivir en un entorno hostil. Sin embargo, la inversión no consiste en ganar a otros siguiendo sus reglas del juego. Consiste en aprender a controlarse en el juego que decida usted jugar. El desafío para el inversor inteligente no consiste en encontrar las acciones que más vayan a subir o que menos vayan a bajar, sino en no permitir que se convierta usted en su peor enemigo, en impedir que acabe comprando a precios elevados simplemente porque el Sr. Mercado le grite «¡A comprar!», y en no permitir que acabe vendiendo a precios bajos simplemente porque el Sr. Mercado diga en un momento determinado «¡A vender!». Si su horizonte de inversión es a largo plazo, por lo menos 25 o 30 años, únicamente hay un método adecuado que pueda seguir: compre todos los meses, de manera automática, y en todas las demás ocasiones en las que pueda prescindir de algo de dinero. La mejor opción para este tipo de carteras vitalicias es un fondo que compre un índice bursátil completo. Venda únicamente cuando necesite el dinero (si necesita un apoyo psicológico, fotocopie y firme su «Contrato de propietario de inversiones»). Si quiere ser un inversor inteligente, también tiene que negarse a juzgar su éxito financiero en comparación con lo que está consiguiendo una cuadrilla de personas que son absolutamente desconocidas para usted. Usted no será ni un penique más pobre si otra persona que vive en Denver, en Dallas o en Durango consigue mejores resultados que el S&P 500 y usted no. No hay ningún epitafio que diga: «Ganó al mercado». En una ocasión entrevisté a un grupo de jubilados de Boca Ratón, una de las comunidades de jubilados más ricos de Florida. Cuando pregunté a estas personas, que en su mayoría tenían setenta años o más, si habían conseguido mejores resultados que el mercado durante su vida como inversores, algunos me contestaron que sí y otros que no; y la mayoría no estaban seguros. Uno de ellos me dijo: «¿Y qué más me da? Lo único que sé es que gracias a mis inversiones he conseguido ganar suficiente dinero como para acabar viviendo en Boca». ¿Cabe una respuesta mejor? Después de todo, el objetivo de la inversión no consiste en ganar más dinero que la media, sino en ganar suficiente dinero para satisfacer sus propias necesidades. La mejor forma de medir el éxito de su inversión no consiste en saber si está ganando al mercado, sino en saber si ha elaborado un plan financiero y una disciplina de conducta que tenga probabilidades de permitirle llegar adonde quiere llegar. En última instancia, lo que importa no es cruzar la meta antes que
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 307 | posición 4261-4300 | Añadido el domingo, 11 de junio de 2023 15:49:43

Por lo tanto, no hay ningún motivo por el que no pueda usted tener unos resultados tan satisfactorios como los de los profesionales. Lo que no podrá hacer usted (a pesar de todos los presuntos expertos que le digan que sí puede) es «ganar a los profesionales en su propio juego». Ni siquiera los profesionales pueden ganar en su propio juego. ¿Por qué iba a querer usted jugar a ese juego, para empezar? Si sigue sus reglas, acabará perdiendo, ya que al final acabará siendo un esclavo del Sr. Mercado, al igual que lo son los profesionales. Lo que debe hacer, al contrario, es caer en la cuenta de que invertir de manera inteligente consiste en controlar lo que se puede controlar. No es posible controlar si las acciones o los fondos que compra van a tener mejores resultados que el mercado hoy, la semana que viene, el mes que viene o este año; a corto plazo, su rendimiento siempre será rehén del Sr. Mercado y de sus caprichos. Sin embargo, lo que sí puede controlar usted es: • Los costes de intermediación, si hace operaciones con poca frecuencia, de manera paciente y de forma barata. • Sus costes de cartera, si se niega a comprar fondos de inversión que tengan unos gastos anuales excesivos. • Sus expectativas, si actúa con realismo y no se deja llevar por las fantasías, a la hora de hacer previsiones sobre los resultados que puede obtener.182 • Su riesgo, si decide qué parte de su patrimonio total queda expuesto a los azares del mercado de valores, mediante la diversificación y mediante los ajustes de la cartera. • Su factura tributaria, si conserva las acciones durante el período necesario para reducir al máximo sus obligaciones tributarias, atendiendo a la normativa fiscal que se encuentre vigente en cada momento. • Y, en especial, su propio comportamiento. Si presta atención a los programas financieros de televisión, o si lee a la mayoría de los columnistas especializados en el mercado, acabará pensando que la inversión es una especie de deporte, o de guerra, o de lucha para sobrevivir en un entorno hostil. Sin embargo, la inversión no consiste en ganar a otros siguiendo sus reglas del juego. Consiste en aprender a controlarse en el juego que decida usted jugar. El desafío para el inversor inteligente no consiste en encontrar las acciones que más vayan a subir o que menos vayan a bajar, sino en no permitir que se convierta usted en su peor enemigo, en impedir que acabe comprando a precios elevados simplemente porque el Sr. Mercado le grite «¡A comprar!», y en no permitir que acabe vendiendo a precios bajos simplemente porque el Sr. Mercado diga en un momento determinado «¡A vender!». Si su horizonte de inversión es a largo plazo, por lo menos 25 o 30 años, únicamente hay un método adecuado que pueda seguir: compre todos los meses, de manera automática, y en todas las demás ocasiones en las que pueda prescindir de algo de dinero. La mejor opción para este tipo de carteras vitalicias es un fondo que compre un índice bursátil completo. Venda únicamente cuando necesite el dinero (si necesita un apoyo psicológico, fotocopie y firme su «Contrato de propietario de inversiones»). Si quiere ser un inversor inteligente, también tiene que negarse a juzgar su éxito financiero en comparación con lo que está consiguiendo una cuadrilla de personas que son absolutamente desconocidas para usted. Usted no será ni un penique más pobre si otra persona que vive en Denver, en Dallas o en Durango consigue mejores resultados que el S&P 500 y usted no. No hay ningún epitafio que diga: «Ganó al mercado». En una ocasión entrevisté a un grupo de jubilados de Boca Ratón, una de las comunidades de jubilados más ricos de Florida. Cuando pregunté a estas personas, que en su mayoría tenían setenta años o más, si habían conseguido mejores resultados que el mercado durante su vida como inversores, algunos me contestaron que sí y otros que no; y la mayoría no estaban seguros. Uno de ellos me dijo: «¿Y qué más me da? Lo único que sé es que gracias a mis inversiones he conseguido ganar suficiente dinero como para acabar viviendo en Boca». ¿Cabe una respuesta mejor? Después de todo, el objetivo de la inversión no consiste en ganar más dinero que la media, sino en ganar suficiente dinero para satisfacer sus propias necesidades. La mejor forma de medir el éxito de su inversión no consiste en saber si está ganando al mercado, sino en saber si ha elaborado un plan financiero y una disciplina de conducta que tenga probabilidades de permitirle llegar adonde quiere llegar. En última instancia, lo que importa no es cruzar la meta antes que el resto, sino asegurarse de que uno llega a su meta.183
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 314 | posición 4366-4367 | Añadido el domingo, 11 de junio de 2023 16:01:52

neurológico Antonio Damasio, «ejercerá un control muy superior si cae en la cuenta de todo lo que no puede controlar».
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 314 | posición 4370 | Añadido el domingo, 11 de junio de 2023 16:04:22


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 324 | posición 4527 | Añadido el lunes, 12 de junio de 2023 22:13:28


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 332 | posición 4619 | Añadido el martes, 13 de junio de 2023 22:23:35


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 340 | posición 4780-4781 | Añadido el miércoles, 14 de junio de 2023 21:56:20

Los psicólogos han demostrado que los seres humanos tienen una tendencia innata a creer que es posible predecir el largo plazo incluso a partir de una serie breve de resultados.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 341 | posición 4793-4795 | Añadido el miércoles, 14 de junio de 2023 22:00:18

resultados de los fondos de inversión desde hace por lo menos medio siglo y han alcanzado unas conclusiones prácticamente unánimes respecto de varias cuestiones:
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 341 | posición 4793-4804 | Añadido el miércoles, 14 de junio de 2023 22:00:29

Los estudiosos de las finanzas llevan analizando los resultados de los fondos de inversión desde hace por lo menos medio siglo y han alcanzado unas conclusiones prácticamente unánimes respecto de varias cuestiones: Tabla 9.6. El club de los fracasados Fuente: Lipper. Nota: Monument Internet posteriormente cambió su nombre por el de Orbitex Emerging Technology. Estos 10 fondos estuvieron entre los de mejores resultados en 1999 y, de hecho, entre los de mejores resultados anuales de toda la historia. Sin embargo, los tres años siguientes contrarrestaron las gigantescas ganancias de 1999 y parte del principal. • El fondo medio no selecciona las acciones con la destreza suficiente para superar los costes en que incurre en materia de investigación y operativa en el mercado. • Cuanto mayores son los gastos de un fondo, menor es su rendimiento.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 341 | posición 4793-4809 | Añadido el miércoles, 14 de junio de 2023 22:00:40

Los estudiosos de las finanzas llevan analizando los resultados de los fondos de inversión desde hace por lo menos medio siglo y han alcanzado unas conclusiones prácticamente unánimes respecto de varias cuestiones: Tabla 9.6. El club de los fracasados Fuente: Lipper. Nota: Monument Internet posteriormente cambió su nombre por el de Orbitex Emerging Technology. Estos 10 fondos estuvieron entre los de mejores resultados en 1999 y, de hecho, entre los de mejores resultados anuales de toda la historia. Sin embargo, los tres años siguientes contrarrestaron las gigantescas ganancias de 1999 y parte del principal. • El fondo medio no selecciona las acciones con la destreza suficiente para superar los costes en que incurre en materia de investigación y operativa en el mercado. • Cuanto mayores son los gastos de un fondo, menor es su rendimiento. • Cuanto mayor es la frecuencia con que un fondo hace operaciones con sus acciones, menores suelen ser sus ganancias. • Los fondos muy volátiles, que rebotan al alza y a la baja más que la media, tienen muchas probabilidades de ser volátiles todo el tiempo. • Los fondos que han conseguido una elevada rentabilidad en el pasado tienen pocas probabilidades de seguir siendo ganadores durante un período prolongado de tiempo.202
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 342 | posición 4809-4813 | Añadido el miércoles, 14 de junio de 2023 22:01:15

Las probabilidades que tiene de elegir con éxito los fondos que van a tener un resultado extraordinario en el futuro basándose en la rentabilidad que han obtenido en el pasado son más o menos similares a las probabilidades que tiene de que el Hombre del Saco y el Abominable Hombre de las Nieves se presenten, cogidos de la mano y en zapatillas rosas de ballet, en la próxima fiesta que dé en su casa. En otras palabras, sus probabilidades no son iguales a cero, pero se acercan mucho a esa cifra.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 349 | posición 4908-4910 | Añadido el miércoles, 14 de junio de 2023 22:14:55

Tenga un fondo indexado durante veinte años o más, aportando dinero todos los meses, y podrá estar prácticamente seguro de que conseguirá mejores resultados que la inmensa mayoría de los inversores profesionales y particulares. En los últimos años de su vida, Graham alabó a los fondos
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 349 | posición 4908-4911 | Añadido el miércoles, 14 de junio de 2023 22:15:09

Tenga un fondo indexado durante veinte años o más, aportando dinero todos los meses, y podrá estar prácticamente seguro de que conseguirá mejores resultados que la inmensa mayoría de los inversores profesionales y particulares. En los últimos años de su vida, Graham alabó a los fondos indexados como la mejor opción para los inversores individuales, al igual que lo hace Warren Buffett.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 349 | posición 4907 | Añadido el miércoles, 14 de junio de 2023 22:15:48


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 352 | posición 4946-4962 | Añadido el jueves, 15 de junio de 2023 21:11:16

¿Qué otras cosas debería buscar? La mayor parte de los compradores suelen empezar por fijarse en el rendimiento del pasado, después en la reputación del gestor, después en el nivel de riesgo del fondo y, por último (si es que lo hacen), en los gastos del fondo.208 El inversor inteligente se fija en esas mismas cosas, pero en el orden exactamente contrario. Como los gastos del fondo son mucho más previsibles que su riesgo o su rentabilidad futura, los gastos deberían ser su primer filtro. No hay ningún buen motivo para pagar más que los niveles de gastos de operación que se indican a continuación, desglosados por categoría de fondo: * Obligaciones municipales y sujetas a tributación ...............................................................0,75 por ciento * Acciones estadounidenses (acciones de grandes y medianas empresas) .......................... 1,00 por ciento * Obligaciones de alto rendimiento (bonos basura)........................................................... 1,00 por ciento * Acciones de empresas estadounidenses (acciones de pequeñas empresas)............................1,25 por ciento * Acciones extranjeras............................................. 1,50 por ciento209 A continuación, evalúe el riesgo. En sus folletos (o en la guía del inversor) todos los fondos deberán mostrar un gráfico de barras que indique su peor pérdida durante un trimestre natural. Si no puede soportar la perspectiva de perder por lo menos esa cantidad de dinero en tres meses, busque otro fondo. También
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 352 | posición 4946-4963 | Añadido el jueves, 15 de junio de 2023 21:12:28

¿Qué otras cosas debería buscar? La mayor parte de los compradores suelen empezar por fijarse en el rendimiento del pasado, después en la reputación del gestor, después en el nivel de riesgo del fondo y, por último (si es que lo hacen), en los gastos del fondo.208 El inversor inteligente se fija en esas mismas cosas, pero en el orden exactamente contrario. Como los gastos del fondo son mucho más previsibles que su riesgo o su rentabilidad futura, los gastos deberían ser su primer filtro. No hay ningún buen motivo para pagar más que los niveles de gastos de operación que se indican a continuación, desglosados por categoría de fondo: * Obligaciones municipales y sujetas a tributación ...............................................................0,75 por ciento * Acciones estadounidenses (acciones de grandes y medianas empresas) .......................... 1,00 por ciento * Obligaciones de alto rendimiento (bonos basura)........................................................... 1,00 por ciento * Acciones de empresas estadounidenses (acciones de pequeñas empresas)............................1,25 por ciento * Acciones extranjeras............................................. 1,50 por ciento209 A continuación, evalúe el riesgo. En sus folletos (o en la guía del inversor) todos los fondos deberán mostrar un gráfico de barras que indique su peor pérdida durante un trimestre natural. Si no puede soportar la perspectiva de perder por lo menos esa cantidad de dinero en tres meses, busque otro fondo. También merece la pena comprobar la calificación asignada al fondo por Morningstar, una importante firma de investigación de inversión que concede «estrellas de calificación»
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 353 | posición 4966-4969 | Añadido el jueves, 15 de junio de 2023 21:14:15

Por lo tanto, lo primero que tiene que hacer es encontrar un fondo de bajo coste cuyos gestores sean los principales accionistas, se atrevan a ser diferentes, no hagan mucha publicidad con sus resultados y hayan demostrado que están dispuestos a cerrar la entrada al fondo antes de que éste crezca demasiado para su capacidad de gestión. Entonces, y únicamente entonces, consulte su calificación en Morningstar.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 353 | posición 4966-4971 | Añadido el jueves, 15 de junio de 2023 21:14:29

Por lo tanto, lo primero que tiene que hacer es encontrar un fondo de bajo coste cuyos gestores sean los principales accionistas, se atrevan a ser diferentes, no hagan mucha publicidad con sus resultados y hayan demostrado que están dispuestos a cerrar la entrada al fondo antes de que éste crezca demasiado para su capacidad de gestión. Entonces, y únicamente entonces, consulte su calificación en Morningstar.210 Por último, analice el rendimiento conseguido en el pasado, recordando que es únicamente un indicador de cuáles pueden ser los resultados en el futuro.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 353 | posición 4966-4972 | Añadido el jueves, 15 de junio de 2023 21:14:47

Por lo tanto, lo primero que tiene que hacer es encontrar un fondo de bajo coste cuyos gestores sean los principales accionistas, se atrevan a ser diferentes, no hagan mucha publicidad con sus resultados y hayan demostrado que están dispuestos a cerrar la entrada al fondo antes de que éste crezca demasiado para su capacidad de gestión. Entonces, y únicamente entonces, consulte su calificación en Morningstar.210 Por último, analice el rendimiento conseguido en el pasado, recordando que es únicamente un indicador de cuáles pueden ser los resultados en el futuro. Como ya hemos visto, los ganadores del pasado suelen convertirse en los perdedores del futuro. Sin embargo, los investigadores han puesto de manifiesto que una cosa es prácticamente segura: los perdedores del pasado casi nunca se convierten en los ganadores del futuro.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 355 | posición 5003-5005 | Añadido el jueves, 15 de junio de 2023 21:19:33

Un estudio puso de manifiesto que los inversores en fondos de inversión consiguieron unos resultados peores que los de sus propios fondos en 4,7 puntos porcentuales anuales desde 1998 hasta 2001, simplemente porque compraron a precios elevados y vendieron a precios bajos.215
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 357 | posición 5031-5039 | Añadido el jueves, 15 de junio de 2023 21:23:54

Por lo tanto, ¿cuándo debería vender? A continuación, le ofrecemos unas cuantas indicaciones de peligro claras: • Un cambio acusado e imprevisto de estrategia, como por ejemplo, un fondo de «valor» que se cargase de acciones tecnológicas en 1999 o un fondo de «crecimiento» que comprase toneladas de acciones de compañías de seguros en el año 2002. • Un incremento de los gastos, que sugiera que los gestores se están llenando el bolsillo con el dinero de los partícipes. • Cuantiosas y frecuentes liquidaciones tributarias, provocadas por el exceso de operaciones de mercado. • Resultados súbitamente erráticos, como por ejemplo, cuando un antiguo fondo conservador genera una gran pérdida (o incluso genera una gran ganancia).
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 361 | posición 5078 | Añadido el jueves, 15 de junio de 2023 21:42:59


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 364 | posición 5116-5117 | Añadido el sábado, 17 de junio de 2023 11:59:06

Prácticamente todas las personas interesadas en el mercado de valores quieren que otra persona les diga lo que cree que va a pasar en el mercado. Teniendo en cuenta que esta demanda existe, alguien debe ocuparse de satisfacerla.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 372 | posición 5235-5237 | Añadido el sábado, 17 de junio de 2023 12:38:54

El inversor debería utilizar su inteligencia no sólo para formular sus políticas financieras, sino también los detalles asociados con ellas. Entre estos detalles está la elección de un corredor de buena reputación para que se encargue de ejecutar sus órdenes.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 376 | posición 5281-5284 | Añadido el sábado, 17 de junio de 2023 12:45:49

El inversor inteligente prestará atención al consejo y a las recomendaciones recibidas de las entidades de banca de inversión, en especial de aquellas que le sean conocidas por su excelente reputación; no obstante, tiene que estar seguro de que aporta una capacidad de juicio sensata e independiente para evaluar esas sugerencias, ya sea su propia capacidad, en el caso de que esté capacitado para realizar esa evaluación, o la de cualquier otro tipo de asesor.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 380 | posición 5325 | Añadido el sábado, 17 de junio de 2023 12:52:14


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 385 | posición 5408 | Añadido el domingo, 18 de junio de 2023 00:37:21


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 389 | posición 5463-5465 | Añadido el domingo, 18 de junio de 2023 09:40:47

Sobre todo, debería confiar lo suficiente en su asesor para permitirle que le proteja de su peor enemigo: usted mismo. «Usted contrata un asesor», explica el columnista Nick Murray, «no para que gestione su dinero, sino para que le gestione a usted».
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 389 | posición 5465-5474 | Añadido el domingo, 18 de junio de 2023 09:41:42

«Si el asesor es una línea de defensa entre usted y sus peores tendencias impulsivas», dice el analista de planificación financiera Robert Veres, «debería contar con los sistemas necesarios para que ustedes dos puedan controlar esas tendencias». Entre esos sistemas se pueden mencionar los siguientes ejemplos: • Un plan financiero exhaustivo que indique de qué manera va usted a ganar, ahorrar, gastar, pedir prestado e invertir su dinero. • Una declaración de política de inversión que especifique su método fundamental de inversión. • Un plan de asignación de activos que detalle cuánto dinero va a tener en cada una de las diferentes categorías de inversión. Éstos son los pilares básicos sobre los que se deben apoyar las buenas decisiones financieras, y se deben crear de común acuerdo, entre usted y su asesor, en vez de ser impuestos de forma unilateral.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 410 | posición 5754 | Añadido el domingo, 18 de junio de 2023 10:41:38


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 414 | posición 5809 | Añadido el domingo, 18 de junio de 2023 22:09:53


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 419 | posición 5881-5890 | Añadido el lunes, 19 de junio de 2023 22:12:48

¿Qué factores determinan cuánto debería estar usted dispuesto a pagar por una acción? ¿Qué hace que una empresa valga 10 veces sus beneficios y otra valga 20 veces sus beneficios? ¿Cómo puede estar usted razonablemente seguro de que no está pagando una cantidad excesiva por un futuro aparentemente rosa que se acabará convirtiendo en una pesadilla espantosa? Graham tiene la impresión de que hay cinco elementos que son decisivos.246 Los resume de la siguiente manera: • Las «perspectivas generales a largo plazo» de la empresa. • La calidad de su equipo directivo. • Su fortaleza financiera y su estructura de capital. • Su historial de dividendos. • Y su actual tasa de dividendos.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 419 | posición 5891-5896 | Añadido el lunes, 19 de junio de 2023 22:14:02

Las perspectivas a largo plazo. Hoy en día, el inversor inteligente debería comenzar por descargar al menos las memorias anuales (Formulario 10-K) de los últimos cinco años de la página web de la empresa o de la base de datos EDGAR que se encuentra en <www.sec.gov>.247 Después tendría que repasar los estados financieros, recopilando datos que le ayudasen a dar respuesta a dos preguntas esenciales. ¿Qué hace crecer a esta empresa? ¿De dónde provienen (y de dónde van a provenir en el futuro) sus beneficios?
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 420 | posición 5897-5898 | Añadido el lunes, 19 de junio de 2023 22:16:13

Que la empresa sea una «adquirente en serie». Una media de más de dos o tres adquisiciones al año es señal de problemas potenciales.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 419 | posición 5891-5897 | Añadido el lunes, 19 de junio de 2023 22:16:19

Las perspectivas a largo plazo. Hoy en día, el inversor inteligente debería comenzar por descargar al menos las memorias anuales (Formulario 10-K) de los últimos cinco años de la página web de la empresa o de la base de datos EDGAR que se encuentra en <www.sec.gov>.247 Después tendría que repasar los estados financieros, recopilando datos que le ayudasen a dar respuesta a dos preguntas esenciales. ¿Qué hace crecer a esta empresa? ¿De dónde provienen (y de dónde van a provenir en el futuro) sus beneficios? Entre los problemas que hay que tratar de identificar están los siguientes:
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 420 | posición 5906 | Añadido el lunes, 19 de junio de 2023 22:17:46


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 431 | posición 6045 | Añadido el martes, 20 de junio de 2023 21:54:27


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 435 | posición 6116 | Añadido el miércoles, 21 de junio de 2023 22:24:06


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 438 | posición 6165-6167 | Añadido el jueves, 22 de junio de 2023 22:06:47

Cuanto más seriamente se tomen los inversores las cifras de beneficio por acción tal y como se publican, más necesario será que estén en guardia frente a los factores de contabilidad de uno o de otro tipo que puedan hacer imposible una comparación válida de las cifras de diferentes ejercicios o de diferentes empresas.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 441 | posición 6209-6212 | Añadido el jueves, 22 de junio de 2023 22:16:07

La contabilidad de las grandes empresas suele estar llena de trucos; el análisis de valores puede ser complicado; las valoraciones de las acciones sólo son realmente fiables en casos excepcionales.263 Para la mayor parte de los inversores, probablemente lo mejor sería que se asegurasen de que están consiguiendo un buen valor por el precio que pagan y que no profundizasen más en esta cuestión.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 442 | posición 6213 | Añadido el jueves, 22 de junio de 2023 22:16:29


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 449 | posición 6323 | Añadido el domingo, 25 de junio de 2023 13:26:34


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 453 | posición 6382 | Añadido el domingo, 25 de junio de 2023 16:41:31


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 453 | posición 6384-6387 | Añadido el lunes, 26 de junio de 2023 21:44:59

Lea las memorias empezando por la última página. Cuando estudie las memorias financieras de una empresa, empiece su lectura por la última página y vaya retrocediendo lentamente hacia la primera. Cualquier cosa que la empresa no quiera que descubra usted estará enterrada al final de la memoria, y ése es precisamente el motivo por el que usted tiene que empezar por el final.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 453 | posición 6387-6389 | Añadido el lunes, 26 de junio de 2023 21:45:12

Lea las notas. No compre nunca una acción sin haber leído las notas a pie de página de los estados financieros incluidos en su memoria anual. Normalmente recogida bajo el título de «resumen de las principales políticas de contabilidad»,
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 454 | posición 6398-6400 | Añadido el lunes, 26 de junio de 2023 21:46:55

Lea más. Si es usted un inversor emprendedor que está dispuesto a dedicar mucho tiempo y energía a su cartera, está obligado, por mera coherencia con sus objetivos personales, a aprender más sobre datos financieros.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 454 | posición 6398-6401 | Añadido el lunes, 26 de junio de 2023 21:47:07

Lea más. Si es usted un inversor emprendedor que está dispuesto a dedicar mucho tiempo y energía a su cartera, está obligado, por mera coherencia con sus objetivos personales, a aprender más sobre datos financieros. Es la única forma de minimizar las probabilidades de ser engañado por una cuenta de beneficios alterada. Tiene
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 454 | posición 6398-6403 | Añadido el lunes, 26 de junio de 2023 21:47:30

Lea más. Si es usted un inversor emprendedor que está dispuesto a dedicar mucho tiempo y energía a su cartera, está obligado, por mera coherencia con sus objetivos personales, a aprender más sobre datos financieros. Es la única forma de minimizar las probabilidades de ser engañado por una cuenta de beneficios alterada. Tiene a su disposición tres libros fundamentales, llenos de ejemplos oportunos y específicos: Financial Statement Analysis, de Martin Fridson y Fernando Álvarez; The Financial Numbers Game, de Charles Mulford y Eugene Comiskey y, Financial Shenanigans, de Howard Schilit.275
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 467 | posición 6639 | Añadido el martes, 27 de junio de 2023 22:08:23


==========
Kotlin_in_Action (Dmitry Jemerov
Svetlana Isakova)
- La subrayado en la posición 5122-5123 | Añadido el miércoles, 28 de junio de 2023 06:50:09

properties annotated with const need to be declared at the top level of a file or in an object and must be initialized with values of primitive types or String.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 478 | posición 6813 | Añadido el miércoles, 28 de junio de 2023 21:41:54


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 479 | posición 6833-6838 | Añadido el jueves, 29 de junio de 2023 21:36:43

Tamaño adecuado de la empresa Todas nuestras cifras mínimas deben ser arbitrarias y sobre todo en lo tocante al tamaño exigido. Nuestra idea consiste en excluir a las pequeñas empresas que pueden quedar sometidas a más vicisitudes que la media sobre todo en el terreno industrial. (Frecuentemente, estas empresas ofrecen buenas posibilidades, pero no las consideramos adecuadas a las necesidades del inversor defensivo.) Empleemos cantidades exactas, un mínimo de 100 millones de dólares de ventas anuales en el caso de una empresa industrial y no menos de 50 millones de dólares en activo total en el caso de una concesionaria de servicios y suministros públicos. 2.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 479 | posición 6833-6837 | Añadido el jueves, 29 de junio de 2023 21:36:51

Tamaño adecuado de la empresa Todas nuestras cifras mínimas deben ser arbitrarias y sobre todo en lo tocante al tamaño exigido. Nuestra idea consiste en excluir a las pequeñas empresas que pueden quedar sometidas a más vicisitudes que la media sobre todo en el terreno industrial. (Frecuentemente, estas empresas ofrecen buenas posibilidades, pero no las consideramos adecuadas a las necesidades del inversor defensivo.) Empleemos cantidades exactas, un mínimo de 100 millones de dólares de ventas anuales en el caso de una empresa industrial y no menos de 50 millones de dólares en activo total en el caso de
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 479 | posición 6833-6838 | Añadido el jueves, 29 de junio de 2023 21:37:02

Tamaño adecuado de la empresa Todas nuestras cifras mínimas deben ser arbitrarias y sobre todo en lo tocante al tamaño exigido. Nuestra idea consiste en excluir a las pequeñas empresas que pueden quedar sometidas a más vicisitudes que la media sobre todo en el terreno industrial. (Frecuentemente, estas empresas ofrecen buenas posibilidades, pero no las consideramos adecuadas a las necesidades del inversor defensivo.) Empleemos cantidades exactas, un mínimo de 100 millones de dólares de ventas anuales en el caso de una empresa industrial y no menos de 50 millones de dólares en activo total en el caso de una concesionaria de servicios y suministros públicos.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 479 | posición 6838-6843 | Añadido el jueves, 29 de junio de 2023 21:37:11

2. Un estado financiero suficientemente sólido En el caso de las empresas industriales, el activo circulante debería ser por lo menos el doble que el pasivo circulante, lo que se denomina ratio circulante dos a uno. Además, la deuda a largo plazo no debería ser mayor que el activo circulante neto (o «capital de explotación»). En el caso de las concesionarias de servicios y suministros públicos, la deuda no debería ser superior al doble del capital social (en valor contable).
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 481 | posición 6868 | Añadido el lunes, 3 de julio de 2023 21:16:36


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 482 | posición 6882 | Añadido el lunes, 3 de julio de 2023 21:16:56


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 487 | posición 6926-6929 | Añadido el lunes, 3 de julio de 2023 21:27:28

En las pruebas a las que sometemos las acciones de concesionarias de servicios públicos excluimos uno de nuestros criterios, la ratio de activo circulante entre pasivo circulante. En este sector, el factor del capital de explotación se encarga de la financiación continua de su crecimiento mediante la colocación de obligaciones y acciones. Sí que exigimos una adecuada proporción entre recursos propios y recursos ajenos.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 495 | posición 7026-7032 | Añadido el lunes, 3 de julio de 2023 21:43:49

El motivo subyacente es que la cotización actual de cada acción destacada refleja con bastante exactitud los factores más importantes de su historial financiero, más la opinión general sobre sus perspectivas futuras. Por lo tanto, la opinión de cualquier analista de que una acción es mejor candidata a la compra que el resto debe basarse en gran medida en sus propias predisposiciones y expectativas personales, o en el hecho de que conceda más importancia a un conjunto de factores que a otro en su trabajo de evaluación. Si todos los analistas coincidiesen en que las acciones de una empresa concreta son mejores que todas las demás, la cotización de esa acción subiría rápidamente hasta un nivel que contrarrestaría y anularía todas sus ventajas anteriores.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 494 | posición 7010 | Añadido el lunes, 3 de julio de 2023 21:46:33


==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 389-390 | Añadido el miércoles, 5 de julio de 2023 22:26:01

You always have to strive to achieve the best return on the time you invest in unit testing, minimizing the effort you put into tests and maximizing the benefits they provide. Achieving both things isn’t an easy task.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 405-407 | Añadido el miércoles, 5 de julio de 2023 22:34:16

The ratio between the production code and the test code could be anywhere between 1:1 and 1:3 (for each line of production code, there are one to three lines of test code). Sometimes, this ratio goes much higher than that, to a whopping 1:10.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 407-409 | Añadido el miércoles, 5 de julio de 2023 22:34:37

The discussion has shifted from “Should we write unit tests?” to “What does it mean to write good unit tests?” This is where the main confusion still lies.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 436-438 | Añadido el viernes, 7 de julio de 2023 19:54:56

but it only works in one direction. It’s a good negative indicator—it points out poor-quality code with relatively high accuracy. If you find that code is hard to unit test, it’s a strong sign that the code needs improvement. The poor quality
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 435-440 | Añadido el viernes, 7 de julio de 2023 19:55:07

The relationship between unit testing and code design The ability to unit test a piece of code is a nice litmus test, but it only works in one direction. It’s a good negative indicator—it points out poor-quality code with relatively high accuracy. If you find that code is hard to unit test, it’s a strong sign that the code needs improvement. The poor quality usually manifests itself in tight coupling, which means different pieces of production code are not decoupled from each other enough, and it’s hard to test them separately. Unfortunately, the ability to unit test a piece of code is a bad positive indicator.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 442-444 | Añadido el viernes, 7 de julio de 2023 19:55:55

What is the goal of unit testing, then? The goal is to enable sustainable growth of the software project. The term sustainable is key. It’s quite easy to grow a project, especially when you start from scratch. It’s much harder to sustain this growth over time.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 451-451 | Añadido el viernes, 7 de julio de 2023 19:57:29

This phenomenon of quickly decreasing development speed is also known as software entropy.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 453-453 | Añadido el viernes, 7 de julio de 2023 19:57:57

In software, entropy manifests in the form of code that tends to deteriorate.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 460-461 | Añadido el viernes, 7 de julio de 2023 19:59:35

Definition A regression is when a feature stops working as intended after a certain event (usually, a code modification). The terms regression and software bug are synonyms and can be used interchangeably.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 462-464 | Añadido el viernes, 7 de julio de 2023 19:59:53

The downside here is that tests require initial—sometimes significant—effort. But they pay for themselves in the long run by helping the project to grow in the later stages.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 464-465 | Añadido el viernes, 7 de julio de 2023 20:00:15

Sustainability and scalability are the keys. They allow you to maintain development speed in the long run.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 473-474 | Añadido el viernes, 7 de julio de 2023 20:02:43

not all tests are created equal. Some of them are valuable and contribute a lot to overall software quality. Others don’t.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 476-477 | Añadido el viernes, 7 de julio de 2023 20:02:48

You need to consider both the test’s value and its upkeep cost.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 477-482 | Añadido el viernes, 7 de julio de 2023 20:13:36

The cost component is determined by the amount of time spent on various activities: Refactoring the test when you refactor the underlying code Running the test on each code change Dealing with false alarms raised by the test Spending time reading the test when you’re trying to understand how the underlying code behaves It’s easy to create tests whose net value is close to zero or even is negative due to high maintenance costs. To enable sustainable project growth, you have to exclusively focus on high-quality tests—those are the only type of tests that are worth keeping in the test suite.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 483-486 | Añadido el viernes, 7 de julio de 2023 20:16:23

Production code vs. test code People often think production code and test code are different. Tests are assumed to be an addition to production code and have no cost of ownership. By extension, people often believe that the more tests, the better. This isn’t the case. Code is a liability, not an asset.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 483-487 | Añadido el viernes, 7 de julio de 2023 20:16:45

Production code vs. test code People often think production code and test code are different. Tests are assumed to be an addition to production code and have no cost of ownership. By extension, people often believe that the more tests, the better. This isn’t the case. Code is a liability, not an asset. The more code you introduce, the more you extend the surface area for potential bugs in your software, and the higher the project’s upkeep cost. It’s always better to solve problems with as little code as possible.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 487-489 | Añadido el viernes, 7 de julio de 2023 20:17:16

Tests are code, too. You should view them as the part of your code base that aims at solving a particular problem: ensuring the application’s correctness. Unit tests, just like any other code, are also vulnerable to bugs and require maintenance.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 495-496 | Añadido el viernes, 7 de julio de 2023 20:18:38

Definition A coverage metric shows how much source code a test suite executes, from none to 100%.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 499-500 | Añadido el viernes, 7 de julio de 2023 22:11:33

Unfortunately, it’s not that simple, and coverage metrics, while providing valuable feedback, can’t be used to effectively measure the quality of a
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 499-500 | Añadido el viernes, 7 de julio de 2023 22:11:39

Unfortunately, it’s not that simple, and coverage metrics, while providing valuable feedback, can’t be used to effectively measure the quality of a test suite.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 500-501 | Añadido el viernes, 7 de julio de 2023 22:12:01

are a good negative indicator
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 505-508 | Añadido el viernes, 7 de julio de 2023 22:13:13

Understanding the code coverage metric The first and most-used coverage metric is code coverage, also known as test coverage; see figure 1.3. This metric shows the ratio of the number of code lines executed by at least one test and the total number of lines in the production code base.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 532-532 | Añadido el viernes, 7 de julio de 2023 22:16:28

The more compact your code is, the better the test coverage metric becomes,
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 532-533 | Añadido el viernes, 7 de julio de 2023 22:16:45

The more compact your code is, the better the test coverage metric becomes, because it only accounts for the raw line numbers.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 534-536 | Añadido el viernes, 7 de julio de 2023 22:17:15

Another coverage metric is called branch coverage. Branch coverage provides more precise results than code coverage because it helps cope with code coverage’s shortcomings.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 536-537 | Añadido el viernes, 7 de julio de 2023 22:17:45

Instead of using the raw number of code lines, this metric focuses on control structures, such as if and switch statements. It shows how many of such control structures are traversed by at least one test
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 547-548 | Añadido el viernes, 7 de julio de 2023 22:18:49

The branch coverage metric only accounts for the number of branches; it doesn’t take into consideration how many lines of code it took to implement those branches.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 574-575 | Añadido el sábado, 8 de julio de 2023 05:45:41

As you can see, the coverage metrics don’t guarantee that the underlying code is tested, only that it has been executed at some point.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 575-583 | Añadido el sábado, 8 de julio de 2023 05:47:18

An extreme version of this situation with partially tested outcomes is assertion-free testing, which is when you write tests that don’t have any assertion statements in them whatsoever. Here’s an example of assertion-free testing. Listing 1.3. A test with no assertions always passes. public void Test() {     bool result1 = IsStringLong("abc");      1     bool result2 = IsStringLong("abcdef");   2 } 1 Returns true 2 Returns false This test has both code and branch coverage metrics showing 100%. But at the same time, it is completely useless because it doesn’t verify anything.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 599-600 | Añadido el sábado, 8 de julio de 2023 05:51:52

But let’s say that you thoroughly verify each outcome of the code under test. Does this, in combination with the branch coverage metric, provide a reliable mechanism, which you can use to determine the quality of your test suite? Unfortunately,
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 599-600 | Añadido el sábado, 8 de julio de 2023 05:51:57

But let’s say that you thoroughly verify each outcome of the code under test. Does this, in combination with the branch coverage metric, provide a reliable mechanism, which you can use to determine the quality of your test suite? Unfortunately,
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 599-600 | Añadido el sábado, 8 de julio de 2023 05:52:02

But let’s say that you thoroughly verify each outcome of the code under test. Does this, in combination with the branch coverage metric, provide a reliable mechanism, which you can use to determine the quality of your test suite? Unfortunately,
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 599-600 | Añadido el sábado, 8 de julio de 2023 05:52:08

But let’s say that you thoroughly verify each outcome of the code under test. Does this, in combination with the branch coverage metric, provide a reliable mechanism, which you can use to determine
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 599-600 | Añadido el sábado, 8 de julio de 2023 05:52:13

But let’s say that you thoroughly verify each outcome of the code under test. Does this, in combination with the branch coverage metric, provide a reliable mechanism, which you can use to determine the quality of your test suite? Unfortunately, no.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 601-603 | Añadido el sábado, 8 de julio de 2023 05:53:55

No coverage metric can take into account code paths in external libraries The second problem with all coverage metrics is that they don’t take into account code paths that external libraries go through when the system under test calls methods on them.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 616-617 | Añadido el sábado, 8 de julio de 2023 05:55:11

This is not to say that coverage metrics should take into account code paths in external libraries (they shouldn’t), but rather to show you that you can’t rely on those metrics to see how good or bad your unit tests are.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 616-618 | Añadido el sábado, 8 de julio de 2023 05:56:27

This is not to say that coverage metrics should take into account code paths in external libraries (they shouldn’t), but rather to show you that you can’t rely on those metrics to see how good or bad your unit tests are. Coverage metrics can’t possibly tell whether your tests are exhaustive; nor can they say if you have enough tests.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 621-621 | Añadido el sábado, 8 de julio de 2023 05:57:13

The best way to view a coverage metric is as an indicator, not a goal in and of itself.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 625-626 | Añadido el sábado, 8 de julio de 2023 05:58:23

targeting a specific coverage number creates a perverse incentive that goes against the goal of unit testing.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 626-628 | Añadido el sábado, 8 de julio de 2023 05:59:26

Proper unit testing is difficult enough already. Imposing a mandatory coverage number only distracts developers from being mindful about what they test, and makes proper unit testing even harder to achieve.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 629-630 | Añadido el sábado, 8 de julio de 2023 05:59:38

Tip It’s good to have a high level of coverage in core parts of your system. It’s bad to make this high level a requirement. The difference is subtle but critical.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 640-643 | Añadido el sábado, 8 de julio de 2023 06:01:38

A successful test suite has the following properties: It’s integrated into the development cycle. It targets only the most important parts of your code base. It provides maximum value with minimum maintenance costs.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 636-637 | Añadido el sábado, 8 de julio de 2023 06:01:48

The only reliable way is to evaluate each test in the suite individually, one by one.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 638-639 | Añadido el sábado, 8 de julio de 2023 06:01:55

The point is that there’s no automated way to see how good your test suite is. You have to apply your personal judgment.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- El marcador en la posición 644 | Añadido el sábado, 8 de julio de 2023 06:03:17


==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 645-646 | Añadido el sábado, 8 de julio de 2023 15:54:50

It targets only the most important parts of your code base
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 648-656 | Añadido el sábado, 8 de julio de 2023 15:55:12

It’s important to direct your unit testing efforts to the most critical parts of the system and verify the others only briefly or indirectly. In most applications, the most important part is the part that contains business logic—the domain model.[1] Testing business logic gives you the best return on your time investment. 1 See Domain-Driven Design: Tackling Complexity in the Heart of Software by Eric Evans (Addison-Wesley, 2003). All other parts can be divided into three categories: Infrastructure code External services and dependencies, such as the database and third-party systems Code that glues everything together
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 663-664 | Añadido el sábado, 8 de julio de 2023 15:55:34

It provides maximum value with minimum maintenance costs The most difficult part of unit testing is achieving maximum value with minimum maintenance costs. That’s the main focus of this book.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 665-668 | Añadido el sábado, 8 de julio de 2023 15:56:11

It’s also crucial to keep in the suite only the tests whose value exceeds their upkeep costs by a good margin. This last attribute can be divided in two: Recognizing a valuable test (and, by extension, a test of low value) Writing a valuable test
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 730-732 | Añadido el sábado, 8 de julio de 2023 16:18:03

A unit test is an automated test that Verifies a small piece of code (also known as a unit), Does it quickly, And does it in an isolated manner.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 733-735 | Añadido el sábado, 8 de julio de 2023 16:18:41

The first two attributes here are pretty non-controversial. There might be some dispute as to what exactly constitutes a fast unit test because it’s a highly subjective measure. But overall, it’s not that important. If your test suite’s execution time is good enough for you, it means your tests are quick enough.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 733-735 | Añadido el sábado, 8 de julio de 2023 16:19:18

The first two attributes here are pretty non-controversial. There might be some dispute as to what exactly constitutes a fast unit test because it’s a highly subjective measure. But overall, it’s not that important. If your test suite’s execution time is good enough for you, it means your tests are quick enough. What people have
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 733-735 | Añadido el sábado, 8 de julio de 2023 16:19:24

The first two attributes here are pretty non-controversial. There might be some dispute as to what exactly constitutes a fast unit test because it’s a highly subjective measure. But overall, it’s not that important. If your test suite’s execution time is good enough for you, it means your tests are quick enough. What people have vastly different opinions about is the third attribute.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 740-741 | Añadido el sábado, 8 de julio de 2023 16:20:00

Probably the most canonical book on the classical school is the one by Kent Beck: Test-Driven Development: By Example (Addison-Wesley Professional, 2002).
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 739-740 | Añadido el sábado, 8 de julio de 2023 16:20:06

The classical and London schools of unit testing The classical approach is also referred to as the Detroit
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 743-745 | Añadido el sábado, 8 de julio de 2023 16:20:38

The most prominent proponents of this approach are Steve Freeman and Nat Pryce. I recommend their book, Growing Object-Oriented Software, Guided by Tests (Addison-Wesley Professional, 2009), as a good source on this subject.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 742-742 | Añadido el sábado, 8 de julio de 2023 16:20:50

The London style is sometimes referred to as mockist.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 750-753 | Añadido el sábado, 8 de julio de 2023 16:22:55

Definition A test double is an object that looks and behaves like its release-intended counterpart but is actually a simplified version that reduces the complexity and facilitates testing. This term was introduced by Gerard Meszaros in his book, xUnit Test Patterns: Refactoring Test Code (Addison-Wesley, 2007). The name itself comes from the notion of a stunt double in movies.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 746-746 | Añadido el sábado, 8 de julio de 2023 16:23:16

The isolation issue: The London take
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 746-747 | Añadido el sábado, 8 de julio de 2023 16:23:24

What does it mean to verify a piece of code—a unit—in an isolated manner? The London school describes it as isolating the system under test from its collaborators.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 746-748 | Añadido el sábado, 8 de julio de 2023 16:23:31

What does it mean to verify a piece of code—a unit—in an isolated manner? The London school describes it as isolating the system under test from its collaborators. It means if a class has a dependency on another class, or several classes, you need to replace all such dependencies with test doubles.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 758-759 | Añadido el sábado, 8 de julio de 2023 16:28:14

One benefit of this approach is that if the test fails, you know for sure which part of the code base is broken: it’s the system under test.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 760-761 | Añadido el sábado, 8 de julio de 2023 16:28:30

Another benefit is the ability to split the object graph—the web of communicating classes solving the same problem.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 801-803 | Añadido el sábado, 8 de julio de 2023 16:39:49

Definition A method under test (MUT) is a method in the SUT called by the test. The terms MUT and SUT are often used as synonyms, but normally, MUT refers to a method while SUT refers to the whole class.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 813-814 | Añadido el sábado, 8 de julio de 2023 16:41:28

Definition A mock is a special kind of test double that allows you to examine interactions between the system under test and its collaborators.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 818-819 | Añadido el sábado, 8 de julio de 2023 16:42:41

Test double is an overarching term that describes all kinds of non-production-ready, fake dependencies in a test. Mock is just one kind of such dependencies.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 845-845 | Añadido el sábado, 8 de julio de 2023 16:47:39

The isolation issue: The classical take
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 855-857 | Añadido el sábado, 8 de julio de 2023 16:50:20

In the classical approach, it’s not the code that needs to be tested in an isolated manner. Instead, unit tests themselves should be run in isolation from each other. That way, you can run the tests in parallel, sequentially, and in any order, whatever fits you best, and they still won’t affect each other’s outcome.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 864-867 | Añadido el sábado, 8 de julio de 2023 16:53:23

Shared, private, and out-of-process dependencies A shared dependency is a dependency that is shared between tests and provides means for those tests to affect each other’s outcome. A typical example of shared dependencies is a static mutable field. A change to such a field is visible across all unit tests running within the same process. A database is another typical example of a shared dependency. A private dependency is a dependency that is not shared.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 864-873 | Añadido el sábado, 8 de julio de 2023 16:54:25

Shared, private, and out-of-process dependencies A shared dependency is a dependency that is shared between tests and provides means for those tests to affect each other’s outcome. A typical example of shared dependencies is a static mutable field. A change to such a field is visible across all unit tests running within the same process. A database is another typical example of a shared dependency. A private dependency is a dependency that is not shared. An out-of-process dependency is a dependency that runs outside the application’s execution process; it’s a proxy to data that is not yet in the memory. An out-of-process dependency corresponds to a shared dependency in the vast majority of cases, but not always. For example, a database is both out-of-process and shared. But if you launch that database in a Docker container before each test run, that would make this dependency out-of-process but not shared, since tests no longer work with the same instance of it. Similarly, a read-only database is also out-of-process but not shared, even if it’s reused by tests. Tests can’t mutate data in such a database and thus can’t affect each other’s outcome.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 873-879 | Añadido el sábado, 8 de julio de 2023 16:56:18

This take on the isolation issue entails a much more modest view on the use of mocks and other test doubles. You can still use them, but you normally do that for only those dependencies that introduce a shared state between tests. Figure 2.3 shows how it looks. Figure 2.3. Isolating unit tests from each other entails isolating the class under test from shared dependencies only. Private dependencies can be kept intact. Note that shared dependencies are shared between unit tests, not between classes under test (units).
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 879-879 | Añadido el sábado, 8 de julio de 2023 16:56:41

In that sense, a singleton dependency is not shared as long as you are able to create a new instance of it in each test.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 879-880 | Añadido el sábado, 8 de julio de 2023 16:57:08

In that sense, a singleton dependency is not shared as long as you are able to create a new instance of it in each test. While there’s only one instance of a singleton in the production code, tests may very well not follow this pattern and not reuse that
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 879-881 | Añadido el sábado, 8 de julio de 2023 16:57:15

In that sense, a singleton dependency is not shared as long as you are able to create a new instance of it in each test. While there’s only one instance of a singleton in the production code, tests may very well not follow this pattern and not reuse that singleton. Thus, such a dependency would be private.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 885-887 | Añadido el sábado, 8 de julio de 2023 16:58:46

Shared vs. volatile dependencies Another term has a similar, yet not identical, meaning: volatile dependency. I recommend Dependency Injection: Principles, Practices, Patterns by Steven van Deursen and Mark Seemann (Manning Publications, 2018) as a go-to book on the topic of dependency management.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 888-893 | Añadido el sábado, 8 de julio de 2023 17:06:00

volatile dependency is a dependency that exhibits one of the following properties: It introduces a requirement to set up and configure a runtime environment in addition to what is installed on a developer’s machine by default. Databases and API services are good examples here. They require additional setup and are not installed on machines in your organization by default. It contains nondeterministic behavior. An example would be a random number generator or a class returning the current date and time. These dependencies are non-deterministic because they provide different results on each invocation.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 894-894 | Añadido el sábado, 8 de julio de 2023 17:06:11

a dependency on the database is both shared and volatile.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 897-897 | Añadido el sábado, 8 de julio de 2023 17:06:33

random number generator is volatile, but because you can supply a separate instance of it to each test, it isn’t shared.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 898-901 | Añadido el sábado, 8 de julio de 2023 17:07:54

Another reason for substituting shared dependencies is to increase the test execution speed. Shared dependencies almost always reside outside the execution process, while private dependencies usually don’t cross that boundary. Because of that, calls to shared dependencies, such as a database or the file system, take more time than calls to private dependencies.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 898-902 | Añadido el sábado, 8 de julio de 2023 17:08:13

Another reason for substituting shared dependencies is to increase the test execution speed. Shared dependencies almost always reside outside the execution process, while private dependencies usually don’t cross that boundary. Because of that, calls to shared dependencies, such as a database or the file system, take more time than calls to private dependencies. And since the necessity to run quickly is the second attribute of the unit test definition, such calls push the tests with shared dependencies out of the realm of unit testing and into the area of integration testing. I
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 903-905 | Añadido el sábado, 8 de julio de 2023 17:09:07

This alternative view of isolation also leads to a different take on what constitutes a unit (a small piece of code). A unit doesn’t necessarily have to be limited to a class. You can just as well unit test a group of classes, as long as none of them is a shared dependency.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 921-922 | Añadido el sábado, 8 de julio de 2023 17:14:51

How the classical and London schools handle dependencies
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 921-924 | Añadido el sábado, 8 de julio de 2023 17:15:16

How the classical and London schools handle dependencies Note that despite the ubiquitous use of test doubles, the London school still allows for using some dependencies in tests as-is. The litmus test here is whether a dependency is mutable. It’s fine not to substitute objects that don’t ever change—immutable objects.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 937-938 | Añadido el sábado, 8 de julio de 2023 17:18:27

Such immutable objects are called value objects or values. Their main trait is that they have no individual identity; they are identified solely by their content.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 942-944 | Añadido el sábado, 8 de julio de 2023 17:19:30

You can read more about value objects in my article “Entity vs. Value Object: The ultimate list of differences” at http://mng.bz/KE9O.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 961-963 | Añadido el sábado, 8 de julio de 2023 17:25:15

Collaborator vs. dependency A collaborator is a dependency that is either shared or mutable. For example, a class providing access to the database is a collaborator since the database is a shared dependency.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 974-977 | Añadido el sábado, 8 de julio de 2023 17:27:39

The relation between shared and out-of-process dependencies. An example of a dependency that is shared but not out-of-process is a singleton (an instance that is reused by all tests) or a static field in a class. A database is shared and out-of-process—it resides outside the main process and is mutable. A read-only API is out-of-process but not shared, since tests can’t modify it and thus can’t affect each other’s execution flow.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 983-985 | Añadido el sábado, 8 de julio de 2023 18:56:48

Having that said, in this book, I use the terms shared dependency and out-of-process dependency interchangeably unless I explicitly state otherwise. In real-world projects, you rarely have a shared dependency that isn’t
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 983-985 | Añadido el sábado, 8 de julio de 2023 18:56:54

Having that said, in this book, I use the terms shared dependency and out-of-process dependency interchangeably unless I explicitly state otherwise. In real-world projects, you rarely have a shared dependency that isn’t out-of-process. If
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 991-994 | Añadido el sábado, 8 de julio de 2023 19:01:35

As I mentioned previously, I prefer the classical school of unit testing. It tends to produce tests of higher quality and thus is better suited for achieving the ultimate goal of unit testing, which is the sustainable growth of your project. The reason is fragility: tests that use mocks tend to be more brittle than classical tests (more on this in chapter 5). For now, let’s take the main selling points of the London school and evaluate them one by one.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1002-1005 | Añadido el sábado, 8 de julio de 2023 19:10:32

The London school considers a class as such a unit. Coming from an object-oriented programming background, developers usually regard classes as the atomic building blocks that lie at the foundation of every code base. This naturally leads to treating classes as the atomic units to be verified in tests, too. This tendency is understandable but misleading.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1006-1010 | Añadido el sábado, 8 de julio de 2023 19:11:01

Tip Tests shouldn’t verify units of code. Rather, they should verify units of behavior: something that is meaningful for the problem domain and, ideally, something that a business person can recognize as useful. The number of classes it takes to implement such a unit of behavior is irrelevant. The unit could span across multiple classes or only one class, or even take up just a tiny method. And
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1006-1009 | Añadido el sábado, 8 de julio de 2023 19:11:08

Tip Tests shouldn’t verify units of code. Rather, they should verify units of behavior: something that is meaningful for the problem domain and, ideally, something that a business person can recognize as useful. The number of classes it takes to implement such a unit of behavior is irrelevant. The unit could span across multiple classes or only one class, or even take up just a tiny method.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 994-998 | Añadido el sábado, 8 de julio de 2023 19:11:22

The London school’s approach provides the following benefits: Better granularity. The tests are fine-grained and check only one class at a time. It’s easier to unit test a larger graph of interconnected classes. Since all collaborators are replaced by test doubles, you don’t need to worry about them at the time of writing the test. If a test fails, you know for sure which functionality has failed.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1010-1011 | Añadido el sábado, 8 de julio de 2023 19:12:26

And so, aiming at better code granularity isn’t helpful. As long as the test checks a single unit of behavior, it’s a good test.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1012-1013 | Añadido el sábado, 8 de julio de 2023 19:13:12

A test should tell a story about the problem your code helps to solve, and this story should be cohesive and meaningful to a non-programmer.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1012-1018 | Añadido el sábado, 8 de julio de 2023 19:14:30

A test should tell a story about the problem your code helps to solve, and this story should be cohesive and meaningful to a non-programmer. For instance, this is an example of a cohesive story: When I call my dog, he comes right to me. Now compare it to the following: When I call my dog, he moves his front left leg first, then the front right leg, his head turns, the tail start wagging... The second story makes much less sense. What’s the purpose of all those movements? Is the dog coming to me? Or is he running away? You can’t tell. This is what your tests start to look like when you target individual classes
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1012-1018 | Añadido el sábado, 8 de julio de 2023 19:14:37

A test should tell a story about the problem your code helps to solve, and this story should be cohesive and meaningful to a non-programmer. For instance, this is an example of a cohesive story: When I call my dog, he comes right to me. Now compare it to the following: When I call my dog, he moves his front left leg first, then the front right leg, his head turns, the tail start wagging... The second story makes much less sense. What’s the purpose of all those movements? Is the dog coming to me? Or is he running away? You can’t tell. This is what your tests start to look like when you target individual classes (the dog’s legs, head, and tail) instead
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1012-1018 | Añadido el sábado, 8 de julio de 2023 19:14:44

A test should tell a story about the problem your code helps to solve, and this story should be cohesive and meaningful to a non-programmer. For instance, this is an example of a cohesive story: When I call my dog, he comes right to me. Now compare it to the following: When I call my dog, he moves his front left leg first, then the front right leg, his head turns, the tail start wagging... The second story makes much less sense. What’s the purpose of all those movements? Is the dog coming to me? Or is he running away? You can’t tell. This is what your tests start to look like when you target individual classes (the dog’s legs, head, and tail) instead of the actual behavior (the dog coming to his master).
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- El marcador en la posición 1018 | Añadido el sábado, 8 de julio de 2023 19:15:19


==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1020-1020 | Añadido el domingo, 9 de julio de 2023 08:08:25

Unit testing a large graph of interconnected classes
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1021-1023 | Añadido el domingo, 9 de julio de 2023 08:09:00

where the class under test has dependencies, each of which relies on dependencies of its own, and so on, several layers deep. With test doubles, you can substitute the class’s immediate dependencies and thus break up the graph,
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1024-1025 | Añadido el domingo, 9 de julio de 2023 08:09:12

the full object graph (with the exception of shared dependencies) just for the sake of setting up the system under test, which can be a lot of work.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1023-1025 | Añadido el domingo, 9 de julio de 2023 08:09:18

If you follow the classical school, you have to re-create the full object graph (with the exception of shared dependencies) just for the sake of setting up the system under test, which can be a lot of work.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1023-1025 | Añadido el domingo, 9 de julio de 2023 08:09:23

If you follow the classical school, you have to re-create the full object graph (with the exception of shared dependencies) just for the sake of setting up the system under test, which can be a lot of work.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1023-1027 | Añadido el domingo, 9 de julio de 2023 08:09:34

If you follow the classical school, you have to re-create the full object graph (with the exception of shared dependencies) just for the sake of setting up the system under test, which can be a lot of work. Although this is all true, this line of reasoning focuses on the wrong problem. Instead of finding ways to test a large, complicated graph of interconnected classes, you should focus on not having such a graph of classes in the first place. More often than not, a large class graph is a result of a code design problem.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1030-1030 | Añadido el domingo, 9 de julio de 2023 08:10:40

The use of mocks only hides this problem; it doesn’t tackle the root cause.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1052-1052 | Añadido el domingo, 9 de julio de 2023 08:18:50

The London style of unit testing leads to outside-in TDD,
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1054-1055 | Añadido el domingo, 9 de julio de 2023 08:19:12

Mocks make this design process possible because you can focus on one class at a time.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1056-1057 | Añadido el domingo, 9 de julio de 2023 08:19:22

The classical school doesn’t provide quite the same guidance since you have to deal with the real objects in tests. Instead, you normally use the inside-out approach.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1059-1060 | Añadido el domingo, 9 de julio de 2023 08:19:33

The London style tends to produce tests that couple to the implementation more often than the classical style.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1098-1100 | Añadido el domingo, 9 de julio de 2023 08:33:09

End-to-end tests normally include all or almost all out-of-process dependencies in the scope. Integration tests check only one or two such dependencies—those that are easier to set up automatically, such as the database or the file system.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- El marcador en la posición 1137 | Añadido el domingo, 9 de julio de 2023 08:40:14


==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1196-1196 | Añadido el domingo, 9 de julio de 2023 09:22:29

Avoid multiple arrange, act, and assert sections
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1198-1199 | Añadido el domingo, 9 de julio de 2023 09:22:44

Multiple arrange, act, and assert sections are a hint that the test verifies too many things at once. Such a test needs to be split into several tests to fix the problem.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1210-1210 | Añadido el domingo, 9 de julio de 2023 09:26:10

enough. It’s always better to split a multistep unit test into several tests.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1211-1211 | Añadido el domingo, 9 de julio de 2023 09:27:20

Avoid if statements in tests
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1212-1214 | Añadido el domingo, 9 de julio de 2023 09:27:38

This is also an anti-pattern. A test—whether a unit test or an integration test—should be a simple sequence of steps with no branching. An if statement indicates that the test verifies too many things at once. Such a test, therefore, should be split into several tests.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1215-1215 | Añadido el domingo, 9 de julio de 2023 09:27:44

There are no benefits in branching within a test.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1215-1216 | Añadido el domingo, 9 de julio de 2023 09:27:56

There are no benefits in branching within a test. You only gain additional maintenance costs: if statements make the tests harder to read and understand.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1216-1217 | Añadido el domingo, 9 de julio de 2023 09:29:03

How large should each section be?
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1219-1222 | Añadido el domingo, 9 de julio de 2023 09:29:15

The arrange section is the largest The arrange section is usually the largest of the three. It can be as large as the act and assert sections combined. But if it becomes significantly larger than that, it’s better to extract the arrangements either into private methods within the same test class or to a separate factory class. Two popular patterns can help you reuse the code in the arrange sections: Object Mother and Test Data Builder.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1223-1225 | Añadido el domingo, 9 de julio de 2023 09:29:50

Watch out for act sections that are larger than a single line The act section is normally just a single line of code. If the act consists of two or more lines, it could indicate a problem with the SUT’s public API.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1277-1277 | Añadido el domingo, 9 de julio de 2023 09:40:33

always name the SUT in tests sut.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1298-1299 | Añadido el domingo, 9 de julio de 2023 09:41:29

Separating sections with empty lines works great in most unit tests.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1332-1338 | Añadido el domingo, 9 de julio de 2023 09:47:49

I particularly like the [Fact] attribute, specifically because it’s called Fact and not Test. It emphasizes the rule of thumb I mentioned in the previous chapter: each test should tell a story. This story is an individual, atomic scenario or fact about the problem domain, and the passing test is a proof that this scenario or fact holds true. If the test fails, it means either the story is no longer valid and you need to rewrite it, or the system itself has to be fixed. I encourage you to adopt this way of thinking when you write unit tests. Your tests shouldn’t be a dull enumeration of what the production code does. Rather, they should provide a higher-level description of the application’s behavior. Ideally, this description should be meaningful not just to programmers but also to business people.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1344-1348 | Añadido el domingo, 9 de julio de 2023 09:52:36

Test fixture The term test fixture has two common meanings: A test fixture is an object the test runs against. This object can be a regular dependency—an argument that is passed to the SUT. It can also be data in the database or a file on the hard disk. Such an object needs to remain in a known, fixed state before each test run, so it produces the same result. Hence the word fixture.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1368-1373 | Añadido el domingo, 9 de julio de 2023 09:58:21

The two tests in listing 3.7 have common configuration logic. In fact, their arrange sections are the same and thus can be fully extracted into CustomerTests’s constructor—which is precisely what I did here. The tests themselves no longer contain arrangements. With this approach, you can significantly reduce the amount of test code—you can get rid of most or even all test fixture configurations in tests. But this technique has two significant drawbacks: It introduces high coupling between tests. It diminishes test readability.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1374-1374 | Añadido el domingo, 9 de julio de 2023 10:00:48

High coupling between tests is an anti-pattern
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1380-1380 | Añadido el domingo, 9 de julio de 2023 10:01:00

That’s a violation of an important guideline: a modification of one test should not affect other tests.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1383-1383 | Añadido el domingo, 9 de julio de 2023 10:01:55

To follow this guideline, you need to avoid introducing shared state in test classes.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1385-1385 | Añadido el domingo, 9 de julio de 2023 10:02:17

The use of constructors in tests diminishes test readability
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1386-1387 | Añadido el domingo, 9 de julio de 2023 10:02:36

You no longer see the full picture just by looking at the test itself. You have to examine different places in the class to understand what the test method does.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1390-1390 | Añadido el domingo, 9 de julio de 2023 10:04:03

A better way to reuse test fixtures
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1391-1392 | Añadido el domingo, 9 de julio de 2023 10:04:09

The second way—the beneficial one—is to introduce private factory methods in the test class, as shown in the following listing.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1404-1405 | Añadido el domingo, 9 de julio de 2023 10:05:26

By extracting the common initialization code into private factory methods, you can also shorten the test code, but at the same time keep the full context of what’s going on in the tests.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1424-1426 | Añadido el domingo, 9 de julio de 2023 10:09:00

Naming a unit test It’s important to give expressive names to your tests. Proper naming helps you understand what the test verifies and how the underlying system behaves.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1453-1458 | Añadido el domingo, 9 de julio de 2023 10:18:35

Unit test naming guidelines Adhere to the following guidelines to write expressive, easily readable test names: Don’t follow a rigid naming policy. You simply can’t fit a high-level description of a complex behavior into the narrow box of such a policy. Allow freedom of expression. Name the test as if you were describing the scenario to a non-programmer who is familiar with the problem domain. A domain expert or a business analyst is a good example. Separate words with underscores. Doing so helps improve readability, especially in long names.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1460-1462 | Añadido el domingo, 9 de julio de 2023 10:19:17

Also notice that although I use the pattern [ClassName]Tests when naming test classes, it doesn’t mean the tests are limited to verifying only that class. Remember, the unit in unit testing is a unit of behavior, not a class. This unit can span across one or several classes; the actual size is irrelevant.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1478-1480 | Añadido el domingo, 9 de julio de 2023 10:21:39

Method under test in the test’s name Don’t include the name of the SUT’s method in the test’s name. Remember, you don’t test code, you test application behavior.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1494-1496 | Añadido el domingo, 9 de julio de 2023 10:24:33

The wording should be is another common anti-pattern. Earlier in this chapter, I mentioned that a test is a single, atomic fact about a unit of behavior. There’s no place for a wish or a desire when stating a fact. Name the test accordingly—replace should be with is:
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1550-1553 | Añadido el domingo, 9 de julio de 2023 10:37:09

As you can see, there’s a trade-off between the amount of test code and the readability of that code. As a rule of thumb, keep both positive and negative test cases together in a single method only when it’s self-evident from the input parameters which case stands for what. Otherwise, extract the positive test cases. And if the behavior is too complicated, don’t use the parameterized tests at all. Represent each negative and positive test case with its own test method.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1588-1593 | Añadido el domingo, 9 de julio de 2023 10:42:56

We as humans prefer to absorb information in the form of stories. All stories adhere to this specific pattern: [Subject] [action] [object]. For example, Bob opened the door. Here, Bob is a subject, opened is an action, and the door is an object. The same rule applies to code. result.Should().Be(30) reads better than Assert.Equal(30, result) precisely because it follows the story pattern. It’s a simple story in which result is a subject, should be is an action, and 30 is an object.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1594-1596 | Añadido el domingo, 9 de julio de 2023 10:43:26

Note The paradigm of object-oriented programming (OOP) has become a success partly because of this readability benefit. With OOP, you, too, can structure the code in a way that reads like a story.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- El marcador en la posición 1614 | Añadido el domingo, 9 de julio de 2023 10:48:53


==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1667-1668 | Añadido el lunes, 10 de julio de 2023 19:10:40

Tip To maximize the metric of protection against regressions, the test needs to aim at exercising as much code as possible.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1652-1655 | Añadido el lunes, 10 de julio de 2023 19:10:52

To evaluate how well a test scores on the metric of protecting against regressions, you need to take into account the following: The amount of code that is executed during the test The complexity of that code The code’s domain significance Generally, the larger the amount
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1652-1654 | Añadido el lunes, 10 de julio de 2023 19:10:56

To evaluate how well a test scores on the metric of protecting against regressions, you need to take into account the following: The amount of code that is executed during the test The complexity of that code
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1652-1655 | Añadido el lunes, 10 de julio de 2023 19:11:03

To evaluate how well a test scores on the metric of protecting against regressions, you need to take into account the following: The amount of code that is executed during the test The complexity of that code The code’s domain significance
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1672-1675 | Añadido el lunes, 10 de julio de 2023 19:13:40

Definition Refactoring means changing existing code without modifying its observable behavior. The intention is usually to improve the code’s nonfunctional characteristics: increase readability and reduce complexity. Some examples of refactoring are renaming a method and extracting a piece of code into a new class.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1681-1681 | Añadido el lunes, 10 de julio de 2023 19:19:28

positive. A false positive is a false alarm. It’s a result
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1681-1683 | Añadido el lunes, 10 de julio de 2023 19:19:38

positive. A false positive is a false alarm. It’s a result indicating that the test fails, although in reality, the functionality it covers works as intended. Such false positives usually take place when you refactor the code—when you modify the implementation but keep the observable behavior intact. Hence the name for this attribute of a good unit test: resistance to refactoring.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1681-1683 | Añadido el lunes, 10 de julio de 2023 19:19:47

A false positive is a false alarm. It’s a result indicating that the test fails, although in reality, the functionality it covers works as intended. Such false positives usually take place when you refactor the code—when you modify the implementation but keep the observable behavior intact. Hence the name for this attribute of a good unit test: resistance to refactoring.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1685-1688 | Añadido el lunes, 10 de julio de 2023 19:20:11

Why so much attention on false positives? Because they can have a devastating effect on your entire test suite. As you may recall from chapter 1, the goal of unit testing is to enable sustainable project growth. The mechanism by which the tests enable sustainable growth is that they allow you to add new features and conduct regular refactorings without introducing regressions. There are two specific benefits here:
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1689-1689 | Añadido el lunes, 10 de julio de 2023 19:20:23

Tests provide an early warning when you break existing functionality.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1689-1690 | Añadido el lunes, 10 de julio de 2023 19:20:33

you can fix an issue long before the faulty code is deployed to production,
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1691-1691 | Añadido el lunes, 10 de julio de 2023 19:20:41

You become confident that your code changes won’t lead to regressions.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1692-1698 | Añadido el lunes, 10 de julio de 2023 19:20:50

False positives interfere with both of these benefits: If tests fail with no good reason, they dilute your ability and willingness to react to problems in code. Over time, you get accustomed to such failures and stop paying as much attention. After a while, you start ignoring legitimate failures, too, allowing them to slip into production. On the other hand, when false positives are frequent, you slowly lose trust in the test suite. You no longer perceive it as a reliable safety net—the perception is diminished by false alarms. This lack of trust leads to fewer refactorings, because you try to reduce code changes to a minimum in order to avoid regressions.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1716-1717 | Añadido el lunes, 10 de julio de 2023 19:32:32

What causes false positives? So, what causes false positives? And how can you avoid them?
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1716-1718 | Añadido el lunes, 10 de julio de 2023 19:32:59

What causes false positives? So, what causes false positives? And how can you avoid them? The number of false positives a test produces is directly related to the way the test is structured. The more the test is coupled to the implementation details of the system under test (SUT), the more false alarms it
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1720-1721 | Añadido el lunes, 10 de julio de 2023 19:33:55

Tests should approach SUT verification from the end user’s point of view and check only the outcome meaningful to that end user.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1722-1724 | Añadido el lunes, 10 de julio de 2023 19:35:07

The best way to structure a test is to make it tell a story about the problem domain. Should such a test fail, that failure would mean there’s a disconnect between the story and the actual application behavior. It’s the only type of test failure that benefits you—such failures are always on point and help you quickly understand what went wrong.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1754-1756 | Añadido el lunes, 10 de julio de 2023 19:42:43

A test that couples to the SUT’s algorithm. Such a test expects to see one particular implementation (the specific steps the SUT must take to deliver the result) and therefore is brittle. Any refactoring of the SUT’s implementation would lead to a test failure.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1759-1760 | Añadido el lunes, 10 de julio de 2023 19:43:37

tests that couple to the SUT’s implementation details are not resistant to refactoring.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1761-1763 | Añadido el lunes, 10 de julio de 2023 19:44:51

They don’t provide an early warning in the event of regressions—you simply ignore those warnings due to little relevance. They hinder your ability and willingness to refactor. It’s no wonder—who would like to refactor, knowing that the tests can’t tell which way is up when it comes to finding bugs?
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1782-1783 | Añadido el lunes, 10 de julio de 2023 19:47:01

Aim at the end result instead of implementation details As I mentioned earlier, the
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1782-1784 | Añadido el lunes, 10 de julio de 2023 19:47:17

Aim at the end result instead of implementation details As I mentioned earlier, the only way to avoid brittleness in tests and increase their resistance to refactoring is to decouple them from the SUT’s implementation details—keep
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1819-1820 | Añadido el lunes, 10 de julio de 2023 19:54:39

Protection against regressions guards against false negatives (type II errors). Resistance to refactoring minimizes the number of false positives (type
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1837-1841 | Añadido el lunes, 10 de julio de 2023 19:59:57

This accuracy is what the first two pillars of a good unit test are all about. Protection against regressions and resistance to refactoring aim at maximizing the accuracy of the test suite. The accuracy metric itself consists of two components: How good the test is at indicating the presence of bugs (lack of false negatives, the sphere of protection against regressions) How good the test is at indicating the absence of bugs (lack of false positives, the sphere of resistance to refactoring)
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1842-1842 | Añadido el lunes, 10 de julio de 2023 20:00:33

Another way to think of false positives and false negatives is in terms of signal-to-noise ratio.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1843-1845 | Añadido el lunes, 10 de julio de 2023 20:01:03

The first is to increase the numerator, signal: that is, make the test better at finding regressions. The second is to reduce the denominator, noise: make the test better at not raising false alarms.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1837-1845 | Añadido el lunes, 10 de julio de 2023 20:01:14

This accuracy is what the first two pillars of a good unit test are all about. Protection against regressions and resistance to refactoring aim at maximizing the accuracy of the test suite. The accuracy metric itself consists of two components: How good the test is at indicating the presence of bugs (lack of false negatives, the sphere of protection against regressions) How good the test is at indicating the absence of bugs (lack of false positives, the sphere of resistance to refactoring) Another way to think of false positives and false negatives is in terms of signal-to-noise ratio. As you can see from the formula in figure 4.4, there are two ways to improve test accuracy. The first is to increase the numerator, signal: that is, make the test better at finding regressions. The second is to reduce the denominator, noise: make the test better at not raising false alarms. Figure 4.4. A
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1870-1870 | Añadido el lunes, 10 de julio de 2023 22:56:41

The third and fourth pillars: Fast feedback and maintainability
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1878-1885 | Añadido el lunes, 10 de julio de 2023 22:56:51

This metric consists of two major components: How hard it is to understand the test— This component is related to the size of the test. The fewer lines of code in the test, the more readable the test is. It’s also easier to change a small test when needed. Of course, that’s assuming you don’t try to compress the test code artificially just to reduce the line count. The quality of the test code matters as much as the production code. Don’t cut corners when writing tests; treat the test code as a first-class citizen. How hard it is to run the test— If the test works with out-of-process dependencies, you have to spend time keeping those dependencies operational: reboot the database server, resolve network connectivity issues, and so on.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1886-1889 | Añadido el lunes, 10 de julio de 2023 22:57:43

Here are the four attributes of a good unit test once again: Protection against regressions Resistance to refactoring Fast feedback Maintainability These four attributes, when multiplied together, determine the value of a test.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1886-1893 | Añadido el lunes, 10 de julio de 2023 22:58:08

Here are the four attributes of a good unit test once again: Protection against regressions Resistance to refactoring Fast feedback Maintainability These four attributes, when multiplied together, determine the value of a test. And by multiplied, I mean in a mathematical sense; that is, if a test gets zero in one of the attributes, its value turns to zero as well: Value estimate = [0..1] * [0..1] * [0..1] * [0..1] Tip In order to be valuable, the test needs to score at least something in all four categories.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1896-1897 | Añadido el lunes, 10 de julio de 2023 22:59:05

Remember, all code, including test code, is a liability.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1894-1897 | Añadido el lunes, 10 de julio de 2023 22:59:22

Of course, it’s impossible to measure these attributes precisely. There’s no code analysis tool you can plug a test into and get the exact numbers. But you can still evaluate the test pretty accurately to see where a test stands with regard to the four attributes. This evaluation, in turn, gives you the test’s value estimate, which you can use to decide whether to keep the test in the suite. Remember, all code, including test code, is a liability.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1900-1900 | Añadido el lunes, 10 de julio de 2023 23:00:42

Is it possible to create an ideal test?
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1902-1904 | Añadido el lunes, 10 de julio de 2023 23:00:51

Unfortunately, it’s impossible to create such an ideal test. The reason is that the first three attributes—protection against regressions, resistance to refactoring, and fast feedback—are mutually exclusive. It’s impossible to maximize them all: you have to sacrifice one of the three in order to max out the remaining two.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- El marcador en la posición 1910 | Añadido el miércoles, 12 de julio de 2023 18:59:40


==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1911-1914 | Añadido el miércoles, 12 de julio de 2023 19:00:51

Since end-to-end tests exercise a lot of code, they provide the best protection against regressions. In fact, of all types of tests, end-to-end tests exercise the most code—both your code and the code you didn’t write but use in the project, such as external libraries, frameworks, and third-party applications.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1914-1914 | Añadido el miércoles, 12 de julio de 2023 19:01:01

End-to-end tests are also immune to false positives and thus have a good resistance to refactoring.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1914-1914 | Añadido el miércoles, 12 de julio de 2023 19:01:15

End-to-end tests are also immune to false positives and thus have a good resistance to refactoring.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1914-1915 | Añadido el miércoles, 12 de julio de 2023 19:01:20

End-to-end tests are also immune to false positives and thus have a good resistance to refactoring. A refactoring, if done correctly, doesn’t change the system’s observable behavior and therefore doesn’t affect the end-to-end tests.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1917-1918 | Añadido el miércoles, 12 de julio de 2023 19:01:57

However, despite these benefits, end-to-end tests have a major drawback: they are slow.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 497 | posición 7052-7057 | Añadido el miércoles, 12 de julio de 2023 21:52:31

El primer método, el predictivo, también podría haberse llamado método cualitativo, ya que se basa especialmente en las perspectivas, el equipo directivo y otros factores no susceptibles de medición, aunque extraordinariamente importantes, que entrarían en el epígrafe de calidad. El segundo, el protector, podría llamarse método cuantitativo o estadístico, ya que hace hincapié en las relaciones susceptibles de medición entre el precio de venta y los beneficios, los activos, los dividendos y demás. Incidentalmente, el método cuantitativo es realmente una extensión, hacia el terreno de las acciones ordinarias, de la teoría que el análisis de valores ha descubierto que es adecuada para seleccionar obligaciones y acciones preferentes para inversión.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 497 | posición 7064-7065 | Añadido el miércoles, 12 de julio de 2023 21:54:08

Nuestro consejo para el inversor defensivo es que no se meta en este terreno. Que se interese más por la diversificación que por la selección individual.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 500 | posición 7088-7090 | Añadido el miércoles, 12 de julio de 2023 21:57:24

En tal caso, en vez de integrar toda su cartera en un fondo indexado de mercado total, emplee este tipo de fondo de inversión como cimiento de su cartera. Cuando ya haya instalado ese cimiento, podrá experimentar marginalmente con su propia selección de acciones. Mantenga el 90 por ciento del dinero invertido en acciones de un fondo indexado y deje el 10 por ciento aparte para poder elegir sus propias acciones.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 505 | posición 7150-7154 | Añadido el miércoles, 12 de julio de 2023 22:04:49

un inversor defensivo siempre puede prosperar si examina con calma y paciencia los restos del naufragio de un período bajista del mercado. El criterio de solidez financiera propuesto por Graham sigue funcionando: si crea una cesta diversificada de acciones de empresas cuyo activo circulante sea por lo menos el doble de su pasivo circulante, y cuya deuda a largo plazo no sea mayor que el capital de explotación, debería acabar con un grupo de empresas financiadas de una manera conservadora con gran capacidad de resistencia.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 504 | posición 7142 | Añadido el miércoles, 12 de julio de 2023 22:05:59


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 505 | posición 7156-7160 | Añadido el jueves, 13 de julio de 2023 09:19:14

Estabilidad del beneficio. Según Morgan Stanley, el 86 por ciento de las empresas del índice S&P 500 han tenido beneficio positivo en todos los años desde 1993 hasta 2002. Por lo tanto, la insistencia de Graham en que haya habido «algunos beneficios para las acciones ordinarias en todos y cada uno de los últimos diez años» sigue siendo una prueba válida para eliminar a las empresas con pérdidas crónicas, a la vez que no es tan restrictivo como para limitar sus opciones a una muestra injustificadamente reducida.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 506 | posición 7164-7173 | Añadido el jueves, 13 de julio de 2023 09:21:46

Crecimiento de los beneficios. ¿Cuántas empresas del S&P 500 han incrementado sus beneficios por acción «por lo menos en un tercio», como exigía Graham, durante los 10 años concluidos en 2002? (Calcularemos el promedio de los beneficios de cada una de las empresas de 1991 hasta 1993, y después determinaremos si el beneficio medio de 2000 a 2002 fue superior, por lo menos, en un 33 por ciento.) Según Morgan Stanley, 264 empresas del S&P 500 cumplían este criterio. Sin embargo, en ese terreno parece que Graham estableció un requisito muy poco exigente; un crecimiento acumulado del 33 por ciento durante una década es menos de un incremento anual medio del 3 por ciento. Un crecimiento acumulado del beneficio por acción de por lo menos el 50 por ciento, o lo que es lo mismo, un incremento anual medio del 4 por ciento, es un poquito menos conservador. Nada menos que 245 empresas del índice S&P 500 cumplían ese criterio a principios de 2003, con lo que el inversor defensivo tenía a su disposición una amplia lista para elegir. (Si se duplica el requisito de crecimiento acumulado hasta el cien por cien, o el 7 por ciento de crecimiento anual medio, serían 198 empresas las que superarían el corte.)
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 509 | posición 7298-7299 | Añadido el jueves, 13 de julio de 2023 09:26:19

PER moderado. Graham recomienda que se limite a acciones cuya cotización actual no sea más de 15 veces el beneficio medio de los tres últimos
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 509 | posición 7298-7304 | Añadido el jueves, 13 de julio de 2023 09:26:26

PER moderado. Graham recomienda que se limite a acciones cuya cotización actual no sea más de 15 veces el beneficio medio de los tres últimos años. Increíblemente, la práctica imperante en la actualidad en Wall Street consiste en valorar las acciones dividiendo su cotización actual por una cifra denominada «beneficio del siguiente año». De esta manera se obtiene lo que en ocasiones se denomina «PER adelantado». No obstante, es una insensatez calcular una ratio precio/beneficio dividiendo el precio actual conocido entre los beneficios futuros desconocidos. A largo plazo, el gestor de patrimonios David Dreman ha demostrado que el 59 por ciento de las previsiones de beneficio «de consenso» de Wall Street yerran el objetivo por un margen mortificantemente grande, ya sea al subestimar o al sobrevalorar los beneficios declarados reales en, como mínimo, el 15 por ciento.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 509 | posición 7306-7308 | Añadido el jueves, 13 de julio de 2023 09:26:39

Lo que tiene que hacer es calcular usted mismo el PER de la acción utilizando la fórmula de Graham del precio actual dividido entre el beneficio medio de los tres últimos años.300
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 509 | posición 7309-7310 | Añadido el jueves, 13 de julio de 2023 09:28:59

Según Morgan Stanley, un generoso total de 185 empresas superaba la prueba de Graham. Moderada
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 509 | posición 7310-7320 | Añadido el jueves, 13 de julio de 2023 09:29:13

Moderada ratio precio/valor contable. Graham recomendaba una «ratio de precio/activos» (o ratio de precio/valor contable) de no más del 1,5. En los últimos años, una creciente proporción del valor de las empresas ha provenido de activos intangibles como franquicias, nombres comerciales, patentes y marcas comerciales. Como estos factores (junto con el fondo de comercio derivado de adquisiciones) están excluidos de la definición ordinaria de valor contable, la mayor parte de las empresas actuales tienen un precio que entraña un mayor múltiplo de precio/valor contable que en la época de Graham. Según Morgan Stanley, 123 de las empresas del S&P 500 (o lo que es lo mismo, una de cada cuatro) tienen un precio inferior a 1,5 veces el valor contable. En conjunto, 273 empresas (o el 55 por ciento del índice) tienen unas ratios de precio/valor contable de menos de 2,5. ¿Qué ocurre con la sugerencia de Graham de que multiplique el PER por la ratio de precio/valor contable y compruebe si el número resultante queda por debajo de 22,5? Atendiendo a datos de Morgan Stanley, por lo menos 142 acciones del índice S&P 500 podrían superar esa prueba a principios de 2003, y entre ellas están Dana Corp., Electronic Data Systems, Sun Microsystems y Washington Mutual. Por lo tanto, el «multiplicador combinado» de Graham sigue funcionando como filtro inicial para identificar acciones con una cotización razonable.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 510 | posición 7320-7334 | Añadido el jueves, 13 de julio de 2023 09:30:46

Tareas obligatorias Por muy defensivo que sea usted como inversor, en el sentido que da Graham al término de estar interesado por reducir el trabajo que dedica a la selección de acciones, hay un par de cosas que no puede dejar de hacer: Hacer los deberes. A través de la base de datos EDGAR, en <www.sec.gov>, tendrá acceso instantáneo a los informes anuales y trimestrales de las empresas, junto con la declaración o folleto informativo que revela la retribución de los directivos, el número de acciones que poseen y los posibles conflictos de intereses. Lea por lo menos la información correspondiente a cinco años.301 Vigilar el vecindario. En sitios web como <http://quicktake.morningstar.com>, <http://finance.yahoo.com> y <www.quicken.com> puede comprobar fácilmente qué porcentaje de las acciones de una empresa pertenece a instituciones. Cualquier cifra por encima del 60 por ciento sugiere que una acción no es suficientemente conocida y que probablemente está repartida en un número demasiado limitado de participaciones de gran tamaño. (Cuando las grandes instituciones venden, suelen hacerlo al unísono, con resultados catastróficos para la acción. Imagine a todas las animadoras de un equipo de baloncesto cayéndose a la vez desde el borde del escenario, y se podrá hacer una idea de la situación.) Esos sitios web también le indicarán a quién pertenecen las mayores participaciones en la empresa. Si son firmas de gestión de fondos que invierten siguiendo un estilo similar al suyo es una buena señal.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 512 | posición 7335 | Añadido el jueves, 13 de julio de 2023 09:31:07


==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1955-1956 | Añadido el jueves, 13 de julio de 2023 09:32:41

The test is focusing on hows instead of whats and thus ingrains the SUT’s implementation details, preventing any further refactoring.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1967-1970 | Añadido el jueves, 13 de julio de 2023 09:34:40

fourth attribute, maintainability, is not correlated to the first three, with the exception of end-to-end tests. End-to-end tests are normally larger in size because of the necessity to set up all the dependencies such tests reach out to. They also require additional effort to keep those dependencies operational. Hence end-to-end tests tend to be more expensive in terms of maintenance costs. It’s hard to keep a balance between the attributes of a good
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1967-1972 | Añadido el jueves, 13 de julio de 2023 09:35:15

fourth attribute, maintainability, is not correlated to the first three, with the exception of end-to-end tests. End-to-end tests are normally larger in size because of the necessity to set up all the dependencies such tests reach out to. They also require additional effort to keep those dependencies operational. Hence end-to-end tests tend to be more expensive in terms of maintenance costs. It’s hard to keep a balance between the attributes of a good test. A test can’t have the maximum score in each of the first three categories, and you also have to keep an eye on the maintainability aspect so the test remains reasonably short and simple. Therefore, you have to make trade-offs. Moreover, you should make those trade-offs in such a way that no particular attribute turns to zero.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1975-1980 | Añadido el jueves, 13 de julio de 2023 09:36:35

resistance to refactoring is non-negotiable. You should aim at gaining as much of it as you can, provided that your tests remain reasonably quick and you don’t resort to the exclusive use of end-to-end tests. The trade-off, then, comes down to the choice between how good your tests are at pointing out bugs and how fast they do that: that is, between protection against regressions and fast feedback. You can view this choice as a slider that can be freely moved between protection against regressions and fast feedback. The more you gain in one attribute, the more you lose on the other (see figure 4.10).
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1983-1986 | Añadido el jueves, 13 de julio de 2023 09:37:39

The reason resistance to refactoring is non-negotiable is that whether a test possesses this attribute is mostly a binary choice: the test either has resistance to refactoring or it doesn’t. There are almost no intermediate stages in between. Thus you can’t concede just a little resistance to refactoring: you’ll have to lose it all. On the other hand, the metrics of protection against regressions and fast feedback are more malleable.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 1987-1989 | Añadido el jueves, 13 de julio de 2023 09:37:53

Tip Eradicating brittleness (false positives) in tests is the first priority on the path to a robust test suite.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2047-2051 | Añadido el jueves, 13 de julio de 2023 09:49:33

Black-box testing is a method of software testing that examines the functionality of a system without knowing its internal structure. Such testing is normally built around specifications and requirements: what the application is supposed to do, rather than how it does it. White-box testing is the opposite of that. It’s a method of testing that verifies the application’s inner workings. The tests are derived from the source code, not requirements or specifications.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2051-2054 | Añadido el jueves, 13 de julio de 2023 09:51:01

White-box testing tends to be more thorough. By analyzing the source code, you can uncover a lot of errors that you may miss when relying solely on external specifications. On the other hand, tests resulting from white-box testing are often brittle, as they tend to tightly couple to the specific implementation of the code under test. Such tests produce many false positives and thus fall short on the metric of resistance to refactoring.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2062-2064 | Añadido el jueves, 13 de julio de 2023 09:51:54

As you may remember from section 4.4.5, you can’t compromise on resistance to refactoring: a test either possesses resistance to refactoring or it doesn’t. Therefore, choose black-box testing over white-box testing by default.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2062-2067 | Añadido el jueves, 13 de julio de 2023 09:58:01

As you may remember from section 4.4.5, you can’t compromise on resistance to refactoring: a test either possesses resistance to refactoring or it doesn’t. Therefore, choose black-box testing over white-box testing by default. Make all tests—be they unit, integration, or end-to-end—view the system as a black box and verify behavior meaningful to the problem domain. If you can’t trace a test back to a business requirement, it’s an indication of the test’s brittleness. Either restructure or delete this test; don’t let it into the suite as-is. The only exception is when the test covers utility code with high algorithmic complexity (more on this in chapter 7).
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- El marcador en la posición 2103 | Añadido el jueves, 13 de julio de 2023 10:03:22


==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2133-2140 | Añadido el jueves, 13 de julio de 2023 17:49:35

following: Mocks help to emulate and examine outcoming interactions. These interactions are calls the SUT makes to its dependencies to change their state. Stubs help to emulate incoming interactions. These interactions are calls the SUT makes to its dependencies to get input data (figure 5.2). Figure 5.2. Sending an email is an outcoming interaction: an interaction that results in a side effect in the SMTP server. A test double emulating such an interaction is a mock. Retrieving data from the database is an incoming interaction; it doesn’t result in a side effect. The corresponding test double is a stub.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2142-2143 | Añadido el jueves, 13 de julio de 2023 17:50:10

spies serve the same role as mocks. The distinction is that spies are written manually, whereas mocks are created with the help of a mocking framework. Sometimes people refer to spies as handwritten mocks.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2142-2147 | Añadido el jueves, 13 de julio de 2023 17:51:55

spies serve the same role as mocks. The distinction is that spies are written manually, whereas mocks are created with the help of a mocking framework. Sometimes people refer to spies as handwritten mocks. On the other hand, the difference between a stub, a dummy, and a fake is in how intelligent they are. A dummy is a simple, hardcoded value such as a null value or a made-up string. It’s used to satisfy the SUT’s method signature and doesn’t participate in producing the final outcome. A stub is more sophisticated. It’s a fully fledged dependency that you configure to return different values for different scenarios. Finally, a fake is the same as a stub for most purposes. The difference is in the rationale for its creation: a fake is usually
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2142-2148 | Añadido el jueves, 13 de julio de 2023 17:52:01

spies serve the same role as mocks. The distinction is that spies are written manually, whereas mocks are created with the help of a mocking framework. Sometimes people refer to spies as handwritten mocks. On the other hand, the difference between a stub, a dummy, and a fake is in how intelligent they are. A dummy is a simple, hardcoded value such as a null value or a made-up string. It’s used to satisfy the SUT’s method signature and doesn’t participate in producing the final outcome. A stub is more sophisticated. It’s a fully fledged dependency that you configure to return different values for different scenarios. Finally, a fake is the same as a stub for most purposes. The difference is in the rationale for its creation: a fake is usually implemented to replace a dependency that doesn’t yet exist.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2166-2168 | Añadido el jueves, 13 de julio de 2023 17:54:21

In other words, the class Mock (or Mock<IEmailGateway>) is a mock (the tool), while the instance of that class, mock, is a mock (the test double). It’s important not to conflate a mock (the tool) with a mock (the test double) because you can use a mock (the tool) to create both types of test doubles: mocks and stubs.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2180-2185 | Añadido el jueves, 13 de julio de 2023 17:55:47

Don’t assert interactions with stubs As I mentioned in section 5.1.1, mocks help to emulate and examine outcoming interactions between the SUT and its dependencies, while stubs only help to emulate incoming interactions, not examine them. The difference between the two stems from the guideline of never asserting interactions with stubs. A call from the SUT to a stub is not part of the end result the SUT produces. Such a call is only a means to produce the end result: a stub provides input from which the SUT then generates the output.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2186-2186 | Añadido el jueves, 13 de julio de 2023 17:55:56

Asserting interactions with stubs is a common anti-pattern that leads to fragile tests.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2204-2206 | Añadido el jueves, 13 de julio de 2023 17:59:26

Checking for interactions with stubs is a flaw that’s quite easy to spot because tests shouldn’t check for any interactions with stubs. Mocks are a more complicated subject: not all uses of mocks lead to test fragility, but a lot of them do.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2203-2204 | Añadido el jueves, 13 de julio de 2023 17:59:32

This practice of verifying things that aren’t part of the end result is also called over-specification.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2233-2235 | Añadido el jueves, 13 de julio de 2023 18:05:17

To follow this principle, be sure that if a method produces a side effect, that method’s return type is void. And if the method returns a value, it must stay side-effect free. In other words, asking a question should not change the answer.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2236-2239 | Añadido el jueves, 13 de julio de 2023 18:06:06

Of course, it’s not always possible to follow the CQS principle. There are always methods for which it makes sense to both incur a side effect and return a value. A classical example is stack.Pop(). This method both removes a top element from the stack and returns it to the caller. Still, it’s a good idea to adhere to the CQS principle whenever you can.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2231-2232 | Añadido el jueves, 13 de julio de 2023 18:06:21

In the command query separation (CQS) principle, commands correspond to mocks, while queries are consistent with stubs.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- El marcador en la posición 2246 | Añadido el jueves, 13 de julio de 2023 18:07:12


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 514 | posición 7374-7381 | Añadido el jueves, 13 de julio de 2023 22:48:32

¿A qué se debe que lo sea? Se nos ocurren dos explicaciones diferentes, que pueden ser parcialmente aplicables cada una de ellas. La primera es la posibilidad de que el mercado de valores realmente refleje en los precios actuales no sólo todos los datos importantes sobre los resultados presentes y pasados de las empresas, sino también todas aquellas expectativas que se puedan formular razonablemente sobre su futuro. Si esto es así, los diferentes movimientos del mercado que tengan lugar posteriormente, y tales movimientos suelen ser frecuentemente extremos, deberían ser el resultado de nuevos acontecimientos y probabilidades que no podían haber sido previstos de manera fiable. Esto haría que las cotizaciones fuesen esencialmente fortuitas y aleatorias. En la medida en que esta hipótesis sea cierta, el trabajo del analista de valores, por inteligente y exhaustivo que sea, será ineficaz en lo sustancial, porque en esencia está tratando de predecir lo imprevisible.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 520 | posición 7459 | Añadido el jueves, 13 de julio de 2023 23:02:18


==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2325-2327 | Añadido el viernes, 14 de julio de 2023 10:54:30

There’s a good rule of thumb that can help you determine whether a class leaks its implementation details. If the number of operations the client has to invoke on the class to achieve a single goal is greater than one, then that class is likely leaking implementation details. Ideally, any individual goal should be achieved with a single operation.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2336-2337 | Añadido el viernes, 14 de julio de 2023 10:56:43

Exposing implementation details goes hand in hand with invariant violations—the former often leads to the latter.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2339-2340 | Añadido el viernes, 14 de julio de 2023 10:56:53

Encapsulation is crucial for code base maintainability in the long run. The reason why is complexity. Code complexity is one of the biggest challenges you’ll face in software development.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2345-2346 | Añadido el viernes, 14 de julio de 2023 10:57:47

You cannot trust yourself to do the right thing all the time—so, eliminate the very possibility of doing the wrong thing.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2345-2347 | Añadido el viernes, 14 de julio de 2023 10:58:03

You cannot trust yourself to do the right thing all the time—so, eliminate the very possibility of doing the wrong thing. The best way to do so is to maintain proper encapsulation so that your code base doesn’t even provide an option for you to do anything incorrectly.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2348-2348 | Añadido el viernes, 14 de julio de 2023 10:58:39

There’s a similar principle: tell-don’t-ask.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2349-2354 | Añadido el viernes, 14 de julio de 2023 10:58:59

You can view this principle as a corollary to the practice of encapsulation. Code encapsulation is a goal, whereas bundling data and functions together, as well as hiding implementation details, are the means to achieve that goal: Hiding implementation details helps you remove the class’s internals from the eyes of its clients, so there’s less risk of corrupting those internals. Bundling data and operations helps to make sure these operations don’t violate the class’s invariants.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2370-2371 | Añadido el viernes, 14 de julio de 2023 11:02:21

As you can see, there’s an intrinsic connection between good unit tests and a well-designed API.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2370-2372 | Añadido el viernes, 14 de julio de 2023 11:02:30

As you can see, there’s an intrinsic connection between good unit tests and a well-designed API. By making all implementation details private, you leave your tests no choice other than to verify the code’s observable behavior, which automatically improves their resistance to refactoring.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2375-2376 | Añadido el viernes, 14 de julio de 2023 11:02:56

Another guideline flows from the definition of a well-designed API: you should expose the absolute minimum number of operations and state. Only code that directly helps clients achieve their goals should be made public.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2409-2412 | Añadido el viernes, 14 de julio de 2023 11:08:26

The separation of concerns between the domain and application services layers— Business logic is the most important part of the application. Therefore, the domain layer should be accountable only for that business logic and exempted from all other responsibilities. Those responsibilities, such as communicating with external applications and retrieving data from the database, must be attributed to application services. Conversely, the application services shouldn’t
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2413-2415 | Añadido el viernes, 14 de julio de 2023 11:09:06

You can view the domain layer as a collection of the application’s domain knowledge (how-to’s) and the application services layer as a set of business use cases (what-to’s).
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2415-2417 | Añadido el viernes, 14 de julio de 2023 11:10:03

Communications inside your application— Hexagonal architecture prescribes a one-way flow of dependencies: from the application services layer to the domain layer. Classes inside the domain layer should only depend on each other;
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2419-2420 | Añadido el viernes, 14 de julio de 2023 11:13:24

Communications between applications— External applications connect to your application through a common interface maintained by the application services layer.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2426-2428 | Añadido el viernes, 14 de julio de 2023 11:14:44

When you make each layer’s API well-designed (that is, hide its implementation details), your tests also start to have a fractal structure; they verify behavior that helps achieve the same goals but at different levels.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2430-2431 | Añadido el viernes, 14 de julio de 2023 11:15:21

fractal nature: they verify the same behavior at different levels. A
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2439-2441 | Añadido el viernes, 14 de julio de 2023 11:18:26

For a piece of code to be part of observable behavior, it needs to help the client achieve one of its goals. For a domain class, the client is an application service; for the application service, it’s the external client itself.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2441-2442 | Añadido el viernes, 14 de julio de 2023 11:18:46

Tests that verify a code base with a well-designed API also have a connection to business requirements because those tests tie to the observable behavior only.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2450-2454 | Añadido el viernes, 14 de julio de 2023 11:21:11

Assuming that the external client doesn’t have a specific goal of normalizing user names, and all names are normalized solely due to restrictions from the application itself, the NormalizeName method in the User class can’t be traced to the client’s needs. Therefore, it’s an implementation detail and should be made private (we already did that earlier in this chapter). Moreover, tests shouldn’t check this method directly. They should verify it only as part of the class’s observable behavior—the Name property’s setter in this example.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2458-2460 | Añadido el viernes, 14 de julio de 2023 11:22:07

Intra-system communications are communications between classes inside your application. Inter-system communications are when your application talks to other applications (figure 5.11).
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2463-2464 | Añadido el viernes, 14 de julio de 2023 11:22:22

Intra-system communications are implementation details; inter-system communications are not.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2465-2467 | Añadido el viernes, 14 de julio de 2023 11:22:54

Intra-system communications are implementation details because the collaborations your domain classes go through in order to perform an operation are not part of their observable behavior. These collaborations don’t have an immediate connection to the client’s goal. Thus, coupling to such collaborations leads to fragile tests.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2467-2469 | Añadido el viernes, 14 de julio de 2023 11:24:50

Inter-system communications are a different matter. Unlike collaborations between classes inside your application, the way your system talks to the external world forms the observable behavior of that system as a whole. It’s part of the contract your application must hold at all times (figure 5.12).
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2476-2478 | Añadido el viernes, 14 de julio de 2023 11:27:04

The use of mocks is beneficial when verifying the communication pattern between your system and external applications. Conversely, using mocks to verify communications between classes inside your system results in tests that couple to implementation details and therefore fall short of the resistance-to-refactoring metric.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- El marcador en la posición 2531 | Añadido el viernes, 14 de julio de 2023 11:36:51


==========
17 Productivity Hacks For Peak Performance  
- La subrayado en la página 5-5 | Añadido el sábado, 15 de julio de 2023 10:39:01

The 80/20 rule states that 80% of results come from just 20% of your tasks
==========
17 Productivity Hacks For Peak Performance  
- La subrayado en la página 5-5 | Añadido el sábado, 15 de julio de 2023 10:39:15

To help you prioritize the most important tasks each day, ask yourself the following questions: ● If I could only complete 3 tasks today, what would they be? ● Which tasks, if completed today, have an impact that lasts for a few weeks, months, or even years? ● Which tasks occupy my valuable time and energy, but don’t move the needle forward that much in my overall life or career? — Follow Me On: Twitter & Medium
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2544-2544 | Añadido el martes, 18 de julio de 2023 09:12:03

between
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2544-2545 | Añadido el martes, 18 de julio de 2023 09:12:09

between classes just as much as they check communications between your application and external
==========
17 Productivity Hacks For Peak Performance  
- La subrayado en la página 14-14 | Añadido el martes, 18 de julio de 2023 21:38:29

“The secret of getting ahead is getting started. The secret of getting started is breaking your complex overwhelming tasks into small, manageable tasks, and then starting on the
==========
17 Productivity Hacks For Peak Performance  
- La subrayado en la página 14-14 | Añadido el martes, 18 de julio de 2023 21:38:34

“The secret of getting ahead is getting started. The secret of getting started is breaking your complex overwhelming
==========
17 Productivity Hacks For Peak Performance  
- La subrayado en la página 14-14 | Añadido el martes, 18 de julio de 2023 21:38:38

“The secret of getting ahead is getting started. The secret of getting started is breaking your complex overwhelming tasks into small, manageable tasks, and then starting on the first one.
==========
17 Productivity Hacks For Peak Performance  
- La subrayado en la página 14-14 | Añadido el martes, 18 de julio de 2023 21:38:51

The more precise we define our sub-tasks, the more we decrease mental resistance towards it and the easier it gets to take action.
==========
17 Productivity Hacks For Peak Performance  
- La subrayado en la página 15-15 | Añadido el martes, 18 de julio de 2023 21:39:14

Instead of having one big and abstract task, it’s divided into specific sub-tasks that are much less vague and intimidating than ‘study for exam.’ Besides, we get a sense of pride and accomplishment once a sub-task is completed, fueling further motivation to keep moving forward.
==========
17 Productivity Hacks For Peak Performance  
- La subrayado en la página 16-16 | Añadido el martes, 18 de julio de 2023 21:39:33

The 15-Minute Rule consists of three simple steps: 1. Pick one task you’ve been procrastinating on 2. Set a timer for 15 minutes 3. Get started and work until the timer rings
==========
17 Productivity Hacks For Peak Performance  
- La subrayado en la página 16-16 | Añadido el martes, 18 de julio de 2023 21:39:49

The power of the 15-Minute Rule is that it makes the ‘getting started’ part much less intimidating. With any task, getting started is usually the hardest step that triggers the most mental resistance
==========
17 Productivity Hacks For Peak Performance  
- La subrayado en la página 16-16 | Añadido el martes, 18 de julio de 2023 21:40:26

The advantage of the 15-Minute Rule is that, once the 15 minutes are over, you’ve already started. The biggest obstacle has already been conquered. Now, you’ve got some momentum going — you’re already in motion — and it’s much easier to keep going. It requires a lot less mental energy, self-discipline, and willpower to continue working once you’re already moving forward. This is one of the most powerful productivity rules: Once you’re already in motion, it’s much easier to stay in motion
==========
17 Productivity Hacks For Peak Performance  
- La subrayado en la página 17-17 | Añadido el martes, 18 de julio de 2023 21:44:54

you can use social accountability to your advantage to keep you from procrastinating on the goals you desire most. Here are a few ways to create social accountability: ● Tell one or more of your most motivated friends to regularly check in on your progress and habits (aka, they become your accountability partner) ● Join a mastermind (business, self-improvement, finance) where you regularly have to show your results to like-minded people ● Hire a personal coach or trainer that gets paid to check in on your progress and results ● Pursue goals together with people (e.g. get a workout- or study buddy) In my experience, when you stop doing things alone and start surrounding yourself with winners who hold you accountable for your actions, you will become the most effective version of yourself.
==========
17 Productivity Hacks For Peak Performance  
- La subrayado en la página 18-18 | Añadido el martes, 18 de julio de 2023 21:49:47

the way you start the day sets the tone for the rest of the day. For example, if you start the day by: ● Reviewing your long-term goals ● Eating a healthy breakfast ● Drinking enough water ● Getting some movement ● Making a detailed action plan for the day (making a schedule + list of top priorities) You’ll have an entirely different start of the day than someone who spends their first 30 minutes snoozing, followed by scrolling through social media and checking fearmongering news. These distractions leave them no time
==========
17 Productivity Hacks For Peak Performance  
- La subrayado en la página 18-18 | Añadido el martes, 18 de julio de 2023 21:50:00

the way you start the day sets the tone for the rest of the day. For example, if you start the day by: ● Reviewing your long-term goals ● Eating a healthy breakfast ● Drinking enough water ● Getting some movement ● Making a detailed action plan for the day (making a schedule + list of top priorities) You’ll have an entirely different start of the day than someone who spends their first 30 minutes snoozing, followed by scrolling through social media and checking fearmongering news. These distractions leave them no time to prepare a healthy breakfast, plan the day, or focus on their own goals.
==========
17 Productivity Hacks For Peak Performance  
- La subrayado en la página 19-19 | Añadido el martes, 18 de julio de 2023 21:51:51

Nurturing your energy levels will ultimately save you time, because you’ll be able to bring more energy and focus to your work, and get the same amount accomplished in less time.” — Chris Bailey
==========
17 Productivity Hacks For Peak Performance  
- La subrayado en la página 19-19 | Añadido el martes, 18 de julio de 2023 21:52:41

Research has shown that exercise leads to: ● Improved concentration ● Sharper memory ● Faster learning ● Prolonged mental stamina ● Enhanced creativity
==========
17 Productivity Hacks For Peak Performance  
- La subrayado en la página 19-19 | Añadido el martes, 18 de julio de 2023 21:52:46

Research has shown that exercise leads to: ● Improved concentration ● Sharper memory ● Faster learning ● Prolonged mental stamina ● Enhanced creativity ● Lower stress
==========
17 Productivity Hacks For Peak Performance  
- La subrayado en la página 20-20 | Añadido el martes, 18 de julio de 2023 21:53:21

As John Ratey, author of Spark: The Revolutionary New Science of Exercise and the Brain, said, “Exercise is the single most powerful tool you have to optimize your brain function
==========
17 Productivity Hacks For Peak Performance  
- La subrayado en la página 20-20 | Añadido el martes, 18 de julio de 2023 21:54:35

As Bailey continues, “Your tasks will take longer when you’re sleep deprived — you’ll have less energy and focus to bring to them, and you’ll make more mistakes that will take more time to fix. When you cut back on sleep, you always lose more time than you gain.” One study reported that people who regularly get seven to eight hours of sleep are 19–29% more productive than those who get less than seven hours of sleep. No wonder, as study after
==========
17 Productivity Hacks For Peak Performance  
- La subrayado en la página 20-20 | Añadido el martes, 18 de julio de 2023 21:57:08

To help you get 7–8 hours of deep sleep per night, follow these tips: ● Put your screens away at least one hour before going to bed to avoid the harmful effects of blue light ● Meditate or journal to calm your mind ● Consume caffeine no later than 3 pm ● Minimize sugar consumption (especially in the evening) — Follow Me On: Twitter & Medium
==========
17 Productivity Hacks For Peak Performance  
- La subrayado en la página 21-21 | Añadido el martes, 18 de julio de 2023 21:57:39

Exercise (but not too late, because your body temperature will be too high) ● Keep your bedroom at a cool temperature ● Keep your devices out of the bedroom as much as possible Once you make sleep a priority, you’ll be more effective because you’ll have more energy, sharper focus, a clearer mind, and increased self-control. Just like exercise, it’s one of the
==========
17 Productivity Hacks For Peak Performance  
- La subrayado en la página 21-21 | Añadido el martes, 18 de julio de 2023 21:57:42

Exercise (but not too late, because your body temperature will be too high) ● Keep your bedroom at a cool temperature ● Keep your devices out of the bedroom as much as possible Once you make sleep a priority, you’ll be more effective because you’ll have more energy, sharper focus, a clearer mind, and increased self-control. Just like exercise, it’s one of the
==========
17 Productivity Hacks For Peak Performance  
- La subrayado en la página 21-21 | Añadido el martes, 18 de julio de 2023 21:57:49

Exercise (but not too late, because your body temperature will be too high) ● Keep your bedroom at a cool temperature ● Keep your devices out of the bedroom as much as possible Once you make sleep a priority, you’ll be more effective because you’ll have more energy, sharper focus, a clearer mind, and increased self-control. Just like exercise, it’s one
==========
17 Productivity Hacks For Peak Performance  
- La subrayado en la página 21-21 | Añadido el martes, 18 de julio de 2023 21:57:55

Exercise (but not too late, because your body temperature will be too high) ● Keep your bedroom at a cool temperature ● Keep your devices out of the bedroom as much as possible Once you make sleep a priority, you’ll be more effective because you’ll have more energy, sharper focus, a clearer mind, and increased self-control. Just like exercise, it’s one of the activities with the highest return on investment on your productivity.
==========
17 Productivity Hacks For Peak Performance  
- La subrayado en la página 24-24 | Añadido el martes, 18 de julio de 2023 22:01:18

Batching tasks simply means you lump similar types of tasks together to complete them in one efficient session instead of scattered throughout the day/week in multiple (less efficient
==========
17 Productivity Hacks For Peak Performance  
- La subrayado en la página 24-24 | Añadido el martes, 18 de julio de 2023 22:01:24

Batching tasks simply means you lump similar types of tasks together to complete them in one efficient session instead of scattered throughout the day/week in multiple (less efficient) sessions.
==========
17 Productivity Hacks For Peak Performance  
- La subrayado en la página 24-24 | Añadido el martes, 18 de julio de 2023 22:01:36

Batching similar tasks helps you to save time because it allows you to stay in one mode of thinking instead of having to switch back and forth between different modes of thinking.
==========
17 Productivity Hacks For Peak Performance  
- La subrayado en la página 24-24 | Añadido el martes, 18 de julio de 2023 22:02:01

According to studies, the more times you switch between tasks per day, the less productive you are. You could even lose up to 40% in productivity.
==========
17 Productivity Hacks For Peak Performance  
- La subrayado en la página 26-26 | Añadido el martes, 18 de julio de 2023 22:03:55

This quote describes the idea behind Parkinson’s Law, which states that ‘work expands to fill the time available for it.’ In other words, give yourself a week to write an article, and it will likely take a week. Give yourself a day to write an article, and it will likely take a day.
==========
17 Productivity Hacks For Peak Performance  
- La subrayado en la página 26-26 | Añadido el martes, 18 de julio de 2023 22:04:35

Turns out that if we
==========
17 Productivity Hacks For Peak Performance  
- La subrayado en la página 26-26 | Añadido el martes, 18 de julio de 2023 22:04:41

Turns out that if we have time to waste, we will waste it. It’s wired into our psychology
==========
17 Productivity Hacks For Peak Performance  
- La subrayado en la página 26-26 | Añadido el jueves, 20 de julio de 2023 21:29:21

All in all, give yourself a tighter deadline to complete a task/project and see whether you can get it done without compromising on the quality of the outcome. If you succeed, you’ve found a way to work smarter and save valuable hours of your time. If you didn’t succeed, tweak with the deadline until you find the optimal balance between speed and quality
==========
17 Productivity Hacks For Peak Performance  
- La subrayado en la página 28-28 | Añadido el jueves, 20 de julio de 2023 21:34:11

Everyone has a natural time in the day in which they are most energized and productive. This is called your peak energy time.
==========
17 Productivity Hacks For Peak Performance  
- La subrayado en la página 28-28 | Añadido el jueves, 20 de julio de 2023 21:34:16

This is why one of my most effective productivity rules is: The morning is for making. The afternoon for managing.
==========
17 Productivity Hacks For Peak Performance  
- La subrayado en la página 28-28 | Añadido el jueves, 20 de julio de 2023 21:34:54

making-type tasks.
==========
17 Productivity Hacks For Peak Performance  
- La subrayado en la página 28-28 | Añadido el jueves, 20 de julio de 2023 21:35:07

managing-type tasks
==========
17 Productivity Hacks For Peak Performance  
- La subrayado en la página 29-29 | Añadido el jueves, 20 de julio de 2023 22:01:50

As Ron Friedman, author and founder of Ignite80 said, “To get the most out of every day, you need to guard the hours when you are at your most productive. Once you’ve identified high-potential hours, consider treating them differently — for example, by blocking them off on your calendar.
==========
17 Productivity Hacks For Peak Performance  
- La subrayado en la página 30-30 | Añadido el jueves, 20 de julio de 2023 22:05:47

And as Earl Nightingale said, “One hour per day of study will put you at the top of your field within three years. Within five years you’ll be a national authority. In seven years, you can be one of the best people in the world at what you do.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2545-2548 | Añadido el jueves, 20 de julio de 2023 22:10:15

This indiscriminate use of mocks is why following the London school often results in tests that couple to implementation details and thus lack resistance to refactoring. As you may remember from chapter 4, the metric of resistance to refactoring (unlike the other three) is mostly a binary choice: a test either has resistance to refactoring or it doesn’t. Compromising on this metric renders the test nearly worthless.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2554-2559 | Añadido el jueves, 20 de julio de 2023 22:12:27

Shared dependency— A dependency shared by tests (not production code) Out-of-process dependency— A dependency hosted by a process other than the program’s execution process (for example, a database, a message bus, or an SMTP service) Private dependency— Any dependency that is not shared The classical school recommends avoiding shared dependencies because they provide the means for tests to interfere with each other’s execution context and thus prevent those tests from running in parallel. The ability for tests to run in parallel, sequentially, and in any order is called test isolation.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2563-2565 | Añadido el jueves, 20 de julio de 2023 22:14:30

If an out-of-process dependency is only accessible through your application, then communications with such a dependency are not part of your system’s observable behavior. An out-of-process dependency that can’t be observed externally, in effect, acts as part of your application (figure 5.14).
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2563-2565 | Añadido el jueves, 20 de julio de 2023 22:14:35

Not all out-of-process dependencies should be mocked out, though. If an out-of-process dependency is only accessible through your application, then communications with such a dependency are not part of your system’s observable behavior. An out-of-process dependency that can’t be observed externally, in effect, acts as part of your application (figure 5.14).
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2563-2571 | Añadido el jueves, 20 de julio de 2023 22:17:20

Not all out-of-process dependencies should be mocked out, though. If an out-of-process dependency is only accessible through your application, then communications with such a dependency are not part of your system’s observable behavior. An out-of-process dependency that can’t be observed externally, in effect, acts as part of your application (figure 5.14). Figure 5.14. Communications with an out-of-process dependency that can’t be observed externally are implementation details. They don’t have to stay in place after refactoring and therefore shouldn’t be verified with mocks. Remember, the requirement to always preserve the communication pattern between your application and external systems stems from the necessity to maintain backward compatibility. You have to maintain the way your application talks to external systems. That’s because you can’t change those external systems simultaneously with your application; they may follow a different deployment cycle, or you might simply not have control over them.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2572-2574 | Añadido el jueves, 20 de julio de 2023 22:20:04

and no client can access it directly, the backward-compatibility requirement vanishes. Now you can deploy your application together with this external system, and it won’t affect the clients. The communication pattern with such a system becomes an implementation detail.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2577-2578 | Añadido el jueves, 20 de julio de 2023 22:20:56

The use of mocks for out-of-process dependencies that you have a full control over also leads to brittle tests.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2580-2581 | Añadido el jueves, 20 de julio de 2023 22:21:57

This obviously poses an issue. How would you test the work with such a dependency without compromising the feedback speed, the third attribute of a good unit test? You’ll see this subject covered in depth in the following two chapters.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2582-2584 | Añadido el jueves, 20 de julio de 2023 22:22:46

Using mocks to verify behavior Mocks are often said to verify behavior. In the vast majority of cases, they don’t. The way each individual class interacts with neighboring classes in order to achieve some goal has nothing to do with observable behavior; it’s an implementation detail.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2584-2585 | Añadido el jueves, 20 de julio de 2023 22:23:18

Verifying communications between classes is akin to trying to derive a person’s behavior by measuring the signals that neurons in the brain pass among each other.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2584-2586 | Añadido el jueves, 20 de julio de 2023 22:23:52

Verifying communications between classes is akin to trying to derive a person’s behavior by measuring the signals that neurons in the brain pass among each other. Such a level of detail is too granular. What matters is the behavior that can be traced back to the client goals.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2584-2586 | Añadido el jueves, 20 de julio de 2023 22:24:02

Verifying communications between classes is akin to trying to derive a person’s behavior by measuring the signals that neurons in the brain pass among each other. Such a level of detail is too granular. What matters is the behavior that can be traced back to the client goals. The client doesn’t care what neurons in your brain light up when they ask you to help.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2587-2588 | Añadido el jueves, 20 de julio de 2023 22:24:39

Mocks have something to do with behavior only when they verify interactions that cross the application boundary and only when the side effects of those interactions are visible to the external world.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2595-2597 | Añadido el jueves, 20 de julio de 2023 22:26:58

Asserting interactions with stubs leads to fragile tests. Such an interaction doesn’t correspond to the end result; it’s an intermediate step on the way to that result, an implementation detail.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- El marcador en la posición 2624 | Añadido el jueves, 20 de julio de 2023 22:32:27


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 521 | posición 7477-7478 | Añadido el jueves, 20 de julio de 2023 22:58:50

publica mensualmente y se pone a disposición del público mediante suscripción anual. Además, muchas agencias de bolsa distribuyen la guía entre sus
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 522 | posición 7490 | Añadido el jueves, 20 de julio de 2023 23:03:08


==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2639-2642 | Añadido el sábado, 22 de julio de 2023 08:15:40

there are three styles of unit testing: Output-based testing State-based testing Communication-based testing You can employ one, two, or even all three styles together in a single test.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2645-2646 | Añadido el sábado, 22 de julio de 2023 08:17:16

This style of unit testing is only applicable to code that doesn’t change a global or internal state, so the only component to verify is its return value.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2647-2648 | Añadido el sábado, 22 de julio de 2023 08:17:52

In output-based testing, tests verify the output the system generates. This style of testing assumes there are no side effects and the only result of the SUT’s work is the value it returns to the caller.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2681-2682 | Añadido el sábado, 22 de julio de 2023 08:28:17

In communication-based testing, tests substitute the SUT’s collaborators with mocks and verify that the SUT calls those collaborators correctly.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2688-2690 | Añadido el sábado, 22 de julio de 2023 08:28:32

Styles and schools of unit testing The classical school of unit testing prefers the state-based style over the communication-based one. The London school makes the opposite choice. Both schools use output-based testing.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2706-2708 | Añadido el domingo, 23 de julio de 2023 09:44:07

There’s little correlation between the styles of testing and the test’s feedback speed. As long as your tests don’t touch out-of-process dependencies and thus stay in the realm of unit testing, all styles produce tests of roughly equal speed of execution.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2706-2709 | Añadido el domingo, 23 de julio de 2023 09:44:21

There’s little correlation between the styles of testing and the test’s feedback speed. As long as your tests don’t touch out-of-process dependencies and thus stay in the realm of unit testing, all styles produce tests of roughly equal speed of execution. Communication-based testing can be slightly worse because mocks tend to introduce additional latency at runtime. But the difference is negligible, unless you have tens of thousands of such tests.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2711-2712 | Añadido el domingo, 23 de julio de 2023 09:47:36

Resistance to refactoring is the measure of how many false positives (false alarms) tests generate during refactorings. False positives, in turn, are a result of tests coupling to code’s implementation
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2711-2712 | Añadido el domingo, 23 de julio de 2023 09:47:40

Resistance to refactoring is the measure of how many false positives (false alarms) tests generate during refactorings. False positives, in turn, are a result of tests coupling to code’s implementation
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2711-2712 | Añadido el domingo, 23 de julio de 2023 09:47:46

Resistance to refactoring is the measure of how many false positives (false alarms) tests generate during refactorings. False positives, in turn, are a result of tests coupling to code’s implementation
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2711-2713 | Añadido el domingo, 23 de julio de 2023 09:47:53

Resistance to refactoring is the measure of how many false positives (false alarms) tests generate during refactorings. False positives, in turn, are a result of tests coupling to code’s implementation details as opposed to observable behavior.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2713-2715 | Añadido el domingo, 23 de julio de 2023 09:48:18

Output-based testing provides the best protection against false positives because the resulting tests couple only to the method under test. The only way for such tests to couple to implementation details is when the method under test is itself an implementation detail.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2715-2716 | Añadido el domingo, 23 de julio de 2023 09:49:07

State-based testing is usually more prone to false positives. In addition to the method under test, such tests also work with the class’s state.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2715-2718 | Añadido el domingo, 23 de julio de 2023 09:51:35

State-based testing is usually more prone to false positives. In addition to the method under test, such tests also work with the class’s state. Probabilistically speaking, the greater the coupling between the test and the production code, the greater the chance for this test to tie to a leaking implementation detail. State-based tests tie to a larger API surface, and hence the chances of coupling them to implementation details are also higher.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2718-2725 | Añadido el domingo, 23 de julio de 2023 09:53:33

Communication-based testing is the most vulnerable to false alarms. As you may remember from chapter 5, the vast majority of tests that check interactions with test doubles end up being brittle. This is always the case for interactions with stubs—you should never check such interactions. Mocks are fine only when they verify interactions that cross the application boundary and only when the side effects of those interactions are visible to the external world. As you can see, using communication-based testing requires extra prudence in order to maintain proper resistance to refactoring. But just like shallowness, brittleness is not a definitive feature of the communication-based style, either. You can reduce the number of false positives to a minimum by maintaining proper encapsulation and coupling tests to observable behavior only. Admittedly, though, the amount of due diligence varies depending on the style of unit testing.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2726-2727 | Añadido el domingo, 23 de julio de 2023 09:53:54

Finally, the maintainability metric is highly correlated with the styles of unit testing; but, unlike with resistance to refactoring, there’s not much you can do to mitigate that.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2726-2733 | Añadido el domingo, 23 de julio de 2023 09:57:18

Finally, the maintainability metric is highly correlated with the styles of unit testing; but, unlike with resistance to refactoring, there’s not much you can do to mitigate that. Maintainability evaluates the unit tests’ maintenance costs and is defined by the following two characteristics: How hard it is to understand the test, which is a function of the test’s size How hard it is to run the test, which is a function of how many out-of-process dependencies the test works with directly Larger tests are less maintainable because they are harder to grasp or change when needed. Similarly, a test that directly works with one or several out-of-process dependencies (such as the database) is less maintainable because you need to spend time keeping those out-of-process dependencies operational: rebooting the database server, resolving network connectivity issues, and so on.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2734-2734 | Añadido el domingo, 23 de julio de 2023 09:57:48

Compared with the other two types of testing, output-based testing is the most maintainable.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2734-2736 | Añadido el domingo, 23 de julio de 2023 09:59:13

Compared with the other two types of testing, output-based testing is the most maintainable. The resulting tests are almost always short and concise and thus are easier to maintain. This benefit of the output-based style stems from the fact that this style boils down to only two things: supplying an input to a method and verifying its output, which you can often do with just a couple lines of code.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2734-2737 | Añadido el domingo, 23 de julio de 2023 10:00:09

Compared with the other two types of testing, output-based testing is the most maintainable. The resulting tests are almost always short and concise and thus are easier to maintain. This benefit of the output-based style stems from the fact that this style boils down to only two things: supplying an input to a method and verifying its output, which you can often do with just a couple lines of code. Because
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2734-2738 | Añadido el domingo, 23 de julio de 2023 10:00:16

Compared with the other two types of testing, output-based testing is the most maintainable. The resulting tests are almost always short and concise and thus are easier to maintain. This benefit of the output-based style stems from the fact that this style boils down to only two things: supplying an input to a method and verifying its output, which you can often do with just a couple lines of code. Because the underlying code in output-based testing must not change the global or internal state, these tests don’t deal with out-of-process dependencies. Hence, output-based tests are best in terms of both maintainability characteristics.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2749-2753 | Añadido el domingo, 23 de julio de 2023 10:01:40

This test adds a comment to an article and then checks to see if the comment appears in the article’s list of comments. Although this test is simplified and contains just a single comment, its assertion part already spans four lines. State-based tests often need to verify much more data than that and, therefore, can grow in size significantly. You can mitigate this issue by introducing helper methods that hide most of the code and thus shorten the test (see listing 6.5), but these methods require significant effort to write and maintain.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2749-2754 | Añadido el domingo, 23 de julio de 2023 10:02:01

This test adds a comment to an article and then checks to see if the comment appears in the article’s list of comments. Although this test is simplified and contains just a single comment, its assertion part already spans four lines. State-based tests often need to verify much more data than that and, therefore, can grow in size significantly. You can mitigate this issue by introducing helper methods that hide most of the code and thus shorten the test (see listing 6.5), but these methods require significant effort to write and maintain. This effort is justified only when those methods are going to be reused across multiple tests, which is rarely the case.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2761-2763 | Añadido el domingo, 23 de julio de 2023 10:04:25

Another way to shorten a state-based test is to define equality members in the class that is being asserted. In listing 6.6, that’s the Comment class. You could turn it into a value object (a class whose instances are compared by value and not by reference),
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2771-2773 | Añadido el domingo, 23 de julio de 2023 10:05:55

This is a powerful technique, but it works only when the class is inherently a value and can be converted into a value object. Otherwise, it leads to code pollution (polluting production code base with code whose sole purpose is to enable or, as in this case, simplify unit testing).
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2774-2776 | Añadido el domingo, 23 de julio de 2023 10:06:26

As you can see, these two techniques—using helper methods and converting classes into value objects—are applicable only occasionally. And even when these techniques are applicable, state-based tests still take up more space than output-based tests and thus remain less maintainable.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2777-2778 | Añadido el domingo, 23 de julio de 2023 10:07:18

Communication-based tests score worse than output-based and state-based tests on the maintainability metric.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2795-2797 | Añadido el domingo, 23 de julio de 2023 10:09:17

Always prefer output-based testing over everything else. Unfortunately, it’s easier said than done. This style of unit testing is only applicable to code that is written in a functional way, which is rarely the case for most object-oriented programming languages. Still, there are techniques you can use to transition more of your tests toward the output-based style.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- El marcador en la posición 2800 | Añadido el domingo, 23 de julio de 2023 10:09:50


==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2804-2806 | Añadido el lunes, 24 de julio de 2023 22:28:50

For a deeper look at functional programming, see Scott Wlaschin’s website and books at https://fsharpforfunandprofit.com/books.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2839-2839 | Añadido el lunes, 24 de julio de 2023 22:32:06

Types of such hidden inputs and outputs include the following:
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2839-2841 | Añadido el lunes, 24 de julio de 2023 22:32:27

Types of such hidden inputs and outputs include the following: Side effects— A side effect is an output that isn’t expressed in the method signature and, therefore, is hidden. An operation creates a side effect when it mutates the state of a class instance, updates a file on the disk, and
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2839-2842 | Añadido el lunes, 24 de julio de 2023 22:32:34

Types of such hidden inputs and outputs include the following: Side effects— A side effect is an output that isn’t expressed in the method signature and, therefore, is hidden. An operation creates a side effect when it mutates the state of a class instance, updates a file on the disk, and so on.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2839-2844 | Añadido el lunes, 24 de julio de 2023 22:32:59

Types of such hidden inputs and outputs include the following: Side effects— A side effect is an output that isn’t expressed in the method signature and, therefore, is hidden. An operation creates a side effect when it mutates the state of a class instance, updates a file on the disk, and so on. Exceptions— When a method throws an exception, it creates a path in the program flow that bypasses the contract established by the method’s signature. The thrown exception can be caught anywhere in the call stack, thus introducing an additional output that the method signature doesn’t convey.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2839-2844 | Añadido el lunes, 24 de julio de 2023 22:33:22

Types of such hidden inputs and outputs include the following: Side effects— A side effect is an output that isn’t expressed in the method signature and, therefore, is hidden. An operation creates a side effect when it mutates the state of a class instance, updates a file on the disk, and so on. Exceptions— When a method throws an exception, it creates a path in the program flow that bypasses the contract established by the method’s signature. The thrown exception can be caught anywhere in the call stack, thus introducing an additional output that the method signature doesn’t convey.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2844-2847 | Añadido el lunes, 24 de julio de 2023 22:33:27

A reference to an internal or external state— For example, a method can get the current date and time using a static property such as DateTime.Now. It can query data from the database, or it can refer to a private mutable field. These are all inputs to the execution flow that aren’t present in the method signature and, therefore, are hidden.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2847-2849 | Añadido el lunes, 24 de julio de 2023 22:34:18

A good rule of thumb when determining whether a method is a mathematical function is to see if you can replace a call to that method with its return value without changing the program’s behavior. The ability to replace a method call with the corresponding value is known as referential transparency. Look at the following method, for example:
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2868-2870 | Añadido el lunes, 24 de julio de 2023 22:37:11

The goal of functional programming is not to eliminate side effects altogether but rather to introduce a separation between code that handles business logic and code that incurs side effects.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2871-2872 | Añadido el lunes, 24 de julio de 2023 22:37:53

play. It separates business logic from side effects by pushing those side effects to the edges of a business operation.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2873-2876 | Añadido el lunes, 24 de julio de 2023 22:38:01

Definition Functional architecture maximizes the amount of code written in a purely functional (immutable) way, while minimizing code that deals with side effects. Immutable means unchangeable: once an object is created, its state can’t be modified. This is in contrast to a mutable object (changeable object), which can be modified after it is created.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2877-2880 | Añadido el lunes, 24 de julio de 2023 22:38:49

The separation between business logic and side effects is done by segregating two types of code: Code that makes a decision— This code doesn’t require side effects and thus can be written using mathematical functions. Code that acts upon that decision— This code converts all the decisions made by the mathematical functions into visible bits, such as changes in the database or messages sent to a bus.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2881-2882 | Añadido el lunes, 24 de julio de 2023 22:39:22

The code that makes decisions is often referred to as a functional core (also known as an immutable core). The code that acts upon those decisions is a mutable shell
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2890-2891 | Añadido el lunes, 24 de julio de 2023 22:40:50

The goal is to cover the functional core extensively with output-based tests and leave the mutable shell to a much smaller number of integration
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2889-2891 | Añadido el lunes, 24 de julio de 2023 22:40:58

representing the decisions contain enough information for the mutable shell to act upon them without additional decision-making. In other words, the mutable shell should be as dumb as possible. The goal is to cover the functional core extensively with output-based tests and leave the mutable shell to a much smaller number of integration
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2890-2891 | Añadido el lunes, 24 de julio de 2023 22:41:07

the mutable shell should be as dumb as possible. The goal is to cover the functional core extensively with output-based tests and leave the mutable shell to a much smaller number of integration
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2903-2904 | Añadido el lunes, 24 de julio de 2023 22:44:49

Object-oriented programming makes code understandable by encapsulating moving parts. Functional programming makes code understandable by minimizing moving parts.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 2918-2919 | Añadido el lunes, 24 de julio de 2023 22:47:00

The difference between the two is in their treatment of side effects. Functional architecture pushes all side effects out of the immutable core to the edges of a business operation. These
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- El marcador en la posición 2926 | Añadido el lunes, 24 de julio de 2023 22:49:54


==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- El marcador en la posición 3165 | Añadido el martes, 25 de julio de 2023 23:08:52


==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 3204-3205 | Añadido el miércoles, 26 de julio de 2023 20:28:36

A class from the functional core should work not with a collaborator, but with the product of its work, a value.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 3210-3213 | Añadido el miércoles, 26 de julio de 2023 20:35:55

The choice between a functional architecture and a more traditional one is a trade-off between performance and code maintainability (both production and test code). In some systems where the performance impact is not as noticeable, it’s better to go with functional architecture for additional gains in maintainability. In others, you might need to make the opposite choice. There’s no one-size-fits-all solution.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 3224-3237 | Añadido el miércoles, 26 de julio de 2023 22:03:02

Summary Output-based testing is a style of testing where you feed an input to the SUT and check the output it produces. This style of testing assumes there are no hidden inputs or outputs, and the only result of the SUT’s work is the value it returns. State-based testing verifies the state of the system after an operation is completed. In communication-based testing, you use mocks to verify communications between the system under test and its collaborators. The classical school of unit testing prefers the state-based style over the communication-based one. The London school has the opposite preference. Both schools use output-based testing. Output-based testing produces tests of the highest quality. Such tests rarely couple to implementation details and thus are resistant to refactoring. They are also small and concise and thus are more maintainable. State-based testing requires extra prudence to avoid brittleness: you need to make sure you don’t expose a private state to enable unit testing. Because state-based tests tend to be larger than output-based tests, they are also less maintainable. Maintainability issues can sometimes be mitigated (but not eliminated) with the use of helper methods and value objects. Communication-based testing also requires extra prudence to avoid brittleness. You should only verify communications that cross the application boundary and whose side effects are visible to the external world. Maintainability of communication-based tests is worse compared to output-based and state-based tests. Mocks tend to occupy a lot of space, and that makes tests less readable.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 3224-3251 | Añadido el miércoles, 26 de julio de 2023 22:03:10

Summary Output-based testing is a style of testing where you feed an input to the SUT and check the output it produces. This style of testing assumes there are no hidden inputs or outputs, and the only result of the SUT’s work is the value it returns. State-based testing verifies the state of the system after an operation is completed. In communication-based testing, you use mocks to verify communications between the system under test and its collaborators. The classical school of unit testing prefers the state-based style over the communication-based one. The London school has the opposite preference. Both schools use output-based testing. Output-based testing produces tests of the highest quality. Such tests rarely couple to implementation details and thus are resistant to refactoring. They are also small and concise and thus are more maintainable. State-based testing requires extra prudence to avoid brittleness: you need to make sure you don’t expose a private state to enable unit testing. Because state-based tests tend to be larger than output-based tests, they are also less maintainable. Maintainability issues can sometimes be mitigated (but not eliminated) with the use of helper methods and value objects. Communication-based testing also requires extra prudence to avoid brittleness. You should only verify communications that cross the application boundary and whose side effects are visible to the external world. Maintainability of communication-based tests is worse compared to output-based and state-based tests. Mocks tend to occupy a lot of space, and that makes tests less readable. Functional programming is programming with mathematical functions. A mathematical function is a function (or method) that doesn’t have any hidden inputs or outputs. Side effects and exceptions are hidden outputs. A reference to an internal or external state is a hidden input. Mathematical functions are explicit, which makes them extremely testable. The goal of functional programming is to introduce a separation between business logic and side effects. Functional architecture helps achieve that separation by pushing side effects to the edges of a business operation. This approach maximizes the amount of code written in a purely functional way while minimizing code that deals with side effects. Functional architecture divides all code into two categories: functional core and mutable shell. The functional core makes decisions. The mutable shell supplies input data to the functional core and converts decisions the core makes into side effects. The difference between functional and hexagonal architectures is in their treatment of side effects. Functional architecture pushes all side effects out of the domain layer. Conversely, hexagonal architecture is fine with side effects made by the domain layer, as long as they are limited to that domain layer only. Functional architecture is hexagonal architecture taken to an extreme. The choice between a functional architecture and a more traditional one is a trade-off between performance and code maintainability. Functional architecture concedes performance for maintainability gains. Not all code bases are worth converting into functional architecture. Apply functional architecture strategically.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 3270-3270 | Añadido el miércoles, 26 de julio de 2023 22:07:21

It’s rarely possible to significantly improve a test suite without refactoring the underlying code.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 3274-3277 | Añadido el miércoles, 26 de julio de 2023 22:08:15

All production code can be categorized along two dimensions: Complexity or domain significance The number of collaborators Code complexity is defined by the number of decision-making (branching) points in the code. The greater that number, the higher the complexity.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 3282-3283 | Añadido el miércoles, 26 de julio de 2023 22:09:31

There’s another meaning to this metric. You can think of it in terms of the number of independent paths through the method from an entry to an exit, or the number of tests needed to get a 100% branch coverage.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 3286-3288 | Añadido el miércoles, 26 de julio de 2023 22:10:58

Domain significance shows how significant the code is for the problem domain of your project. Normally, all code in the domain layer has a direct connection to the end users’ goals and thus exhibits a high domain significance. On the other hand, utility code doesn’t have such a connection.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 3297-3301 | Añadido el miércoles, 26 de julio de 2023 22:15:53

The type of the collaborators also matters. Out-of-process collaborators are a no-go when it comes to the domain model. They add additional maintenance costs due to the necessity to maintain complicated mock machinery in tests. You also have to be extra prudent and only use mocks to verify interactions that cross the application boundary in order to maintain proper resistance to refactoring (refer to chapter 5 for more details). It’s better to delegate all communications with out-of-process dependencies to classes outside the domain layer. The domain classes then will only work with in-process dependencies.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 3295-3297 | Añadido el miércoles, 26 de julio de 2023 22:16:09

It takes space to bring collaborators to an expected condition and then check their state or interactions with them afterward. And the more collaborators there are, the larger the test becomes.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 3304-3305 | Añadido el miércoles, 26 de julio de 2023 22:17:12

The combination of code complexity, its domain significance, and the number of collaborators give us the four types of code shown in figure 7.1:
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 3317-3320 | Añadido el miércoles, 26 de julio de 2023 22:19:32

Unit testing the top-left quadrant (domain model and algorithms) gives you the best return for your efforts. The resulting unit tests are highly valuable and cheap. They’re valuable because the underlying code carries out complex or important logic, thus increasing tests’ protection against regressions. And they’re cheap because the code has few collaborators (ideally, none), thus decreasing tests’ maintenance costs. Trivial code shouldn’t be tested at all;
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 3322-3323 | Añadido el miércoles, 26 de julio de 2023 22:19:48

The most problematic type of code is the overcomplicated quadrant. It’s hard to unit test but too risky to leave without test coverage. Such code is one of the main reasons many people struggle with unit testing.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 3326-3327 | Añadido el miércoles, 26 de julio de 2023 22:20:12

Tip The more important or complex the code, the fewer collaborators it should have.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 3330-3333 | Añadido el miércoles, 26 de julio de 2023 22:21:25

Getting rid of the overcomplicated code and unit testing only the domain model and algorithms is the path to a highly valuable, easily maintainable test suite. With this approach, you won’t have 100% test coverage, but you don’t need to—100% coverage shouldn’t ever be your goal. Your goal is a test suite where each test adds significant value to the project. Refactor or get rid of all other tests.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 3334-3335 | Añadido el miércoles, 26 de julio de 2023 22:21:40

Note Remember that it’s better to not write a test at all than to write a bad test.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 3357-3360 | Añadido el miércoles, 26 de julio de 2023 22:26:01

The functional core in a functional architecture and the domain layer in a hexagonal architecture reside in the top-left quadrant: they have few collaborators and exhibit high complexity and domain significance. The functional core is closer to the vertical axis because it has no collaborators. The mutable shell (functional architecture) and the application services layer (hexagonal architecture) belong to the controllers’ quadrant.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 3361-3362 | Añadido el miércoles, 26 de julio de 2023 22:27:06

Another way to view the Humble Object pattern is as a means to adhere to the Single Responsibility principle, which states that each class should have only a single responsibility.[
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 3366-3369 | Añadido el miércoles, 26 de julio de 2023 22:28:03

our particular situation, we are interested in the separation of business logic and orchestration. You can think of these two responsibilities in terms of code depth versus code width. Your code can be either deep (complex or important) or wide (work with many collaborators), but never both (figure
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 3373-3373 | Añadido el miércoles, 26 de julio de 2023 22:28:52

stress enough how important this separation is. In fact, many
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 3369-3374 | Añadido el miércoles, 26 de julio de 2023 22:29:08

Code depth versus code width is a useful metaphor to apply when you think of the separation between the business logic and orchestration responsibilities. Controllers orchestrate many dependencies (represented as arrows in the figure) but aren’t complex on their own (complexity is represented as block height). Domain classes are the opposite of that. I can’t stress enough how important this separation is. In fact, many well-known principles and patterns can be described as a form of the Humble Object pattern: they are designed specifically to segregate complex code from the code that does orchestration.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 3378-3380 | Añadido el miércoles, 26 de julio de 2023 22:31:15

Another example is the Aggregate pattern from Domain-Driven Design.[2] One of its goals is to reduce connectivity between classes by grouping them into clusters—aggregates.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 3378-3381 | Añadido el miércoles, 26 de julio de 2023 22:31:41

Another example is the Aggregate pattern from Domain-Driven Design.[2] One of its goals is to reduce connectivity between classes by grouping them into clusters—aggregates. The classes are highly connected inside those clusters, but the clusters themselves are loosely coupled. Such a structure decreases the total number of communications in the code
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 3378-3381 | Añadido el miércoles, 26 de julio de 2023 22:31:47

Another example is the Aggregate pattern from Domain-Driven Design.[2] One of its goals is to reduce connectivity between classes by grouping them into clusters—aggregates. The classes are highly connected inside those clusters, but the clusters themselves are loosely coupled. Such a structure decreases the total number of communications in the
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 3378-3382 | Añadido el miércoles, 26 de julio de 2023 22:31:56

Another example is the Aggregate pattern from Domain-Driven Design.[2] One of its goals is to reduce connectivity between classes by grouping them into clusters—aggregates. The classes are highly connected inside those clusters, but the clusters themselves are loosely coupled. Such a structure decreases the total number of communications in the code base. The reduced connectivity, in turn, improves testability.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- El marcador en la posición 3400 | Añadido el miércoles, 26 de julio de 2023 22:36:34


==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 3436-3437 | Añadido el jueves, 27 de julio de 2023 22:09:28

This approach—when a domain class retrieves and persists itself to the database—is called the Active Record pattern.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 3442-3444 | Añadido el jueves, 27 de julio de 2023 22:10:53

From the perspective of the types-of-code diagram, it doesn’t matter if the domain model refers to out-of-process dependencies directly or via an interface. Such dependencies are still out-of-process; they are proxies to data that is not yet in memory.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 3498-3503 | Añadido el jueves, 27 de julio de 2023 22:30:54

Notice that I’ve put a safeguard in this method: a requirement to have at least three elements in the data array. Precondition is a simple custom class that throws an exception if the Boolean argument is false. The reason for this class is the more succinct code and the condition inversion: affirmative statements are more readable than negative ones. In our example, the data.Length >= 3 requirement reads better than if (data.Length < 3)     throw new Exception(); Note that while this reconstruction logic is somewhat complex, it doesn’t have domain significance: it isn’t directly related to the client’s goal of changing the user email. It’s an example of the utility code I refer to in previous chapters.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 3562-3564 | Añadido el jueves, 27 de julio de 2023 22:39:37

The fact that all side effects are contained in memory until the very last moment improves testability a lot. Your tests don’t need to examine out-of-process dependencies, nor do they need to resort to communication-based testing. All the verification can be done using output-based and state-based testing of objects in memory.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- El marcador en la posición 3564 | Añadido el jueves, 27 de julio de 2023 22:39:49


==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 3576-3579 | Añadido el viernes, 28 de julio de 2023 18:41:57

7.3.1. Testing the domain layer and utility code Testing methods in the top-left quadrant in table 7.1 provides the best results in cost-benefit terms. The code’s high complexity or domain significance guarantees great protection against regressions, while having few collaborators ensures the lowest maintenance costs.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 3598-3598 | Añadido el viernes, 28 de julio de 2023 18:52:09

Should you test preconditions?
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 3602-3607 | Añadido el viernes, 28 de julio de 2023 18:52:22

This precondition is a safeguard that’s activated only in exceptional cases. Such exceptional cases are usually the result of bugs. The only possible reason for the number of employees to go below zero is if there’s an error in code. The safeguard provides a mechanism for your software to fail fast and to prevent the error from spreading and being persisted in the database, where it would be much harder to deal with. Should you test such preconditions? In other words, would such tests be valuable enough to have in the test suite? There’s no hard rule here, but the general guideline I recommend is to test all preconditions that have domain significance.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 3624-3643 | Añadido el viernes, 28 de julio de 2023 19:06:27

A hexagonal architecture doesn’t work as well when you need to refer to out-of-process dependencies in the middle of the business operation. As also discussed in the previous chapter, you have three options in such a situation: Push all external reads and writes to the edges anyway. This approach preserves the read-decide-act structure but concedes performance: the controller will call out-of-process dependencies even when there’s no need for that. Inject the out-of-process dependencies into the domain model and allow the business logic to directly decide when to call those dependencies. Split the decision-making process into more granular steps and have the controller act on each of those steps separately. The challenge is to balance the following three attributes: Domain model testability, which is a function of the number and type of collaborators in domain classes Controller simplicity, which depends on the presence of decision-making (branching) points in the controller Performance, as defined by the number of calls to out-of-process dependencies Each option only gives you two out of the three attributes (figure 7.12): Pushing all external reads and writes to the edges of a business operation— Preserves controller simplicity and keeps the domain model isolated from out-of-process dependencies (thus allowing it to remain testable) but concedes performance. Injecting out-of-process dependencies into the domain model— Keeps performance and the controller’s simplicity intact but damages domain model testability. Splitting the decision-making process into more granular steps— Helps with both performance and domain model testability but concedes controller simplicity. You’ll need to introduce decision-making points in the controller in order to manage these granular steps. Figure 7.12. There’s no single solution that satisfies all three attributes: controller simplicity, domain model testability, and performance. You have to choose two out of the three.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 3644-3652 | Añadido el viernes, 28 de julio de 2023 19:07:39

In most software projects, performance is important, so the first approach (pushing external reads and writes to the edges of a business operation) is out of the question. The second option (injecting out-of-process dependencies into the domain model) brings most of your code into the overcomplicated quadrant on the types-of-code diagram. This is exactly what we refactored the initial CRM implementation away from. I recommend that you avoid this approach: such code no longer preserves the separation between business logic and communication with out-of-process dependencies and thus becomes much harder to test and maintain. That leaves you with the third option: splitting the decision-making process into smaller steps. With this approach, you will have to make your controllers more complex, which will also push them closer to the overcomplicated quadrant. But there are ways to mitigate this problem. Although you will rarely be able to factor all the complexity out of controllers as we did previously in the sample project, you can keep that complexity manageable.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- El marcador en la posición 3717 | Añadido el viernes, 28 de julio de 2023 19:15:37


==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 3732-3735 | Añadido el sábado, 29 de julio de 2023 06:42:24

Definition A domain event describes an event in the application that is meaningful to domain experts. The meaningfulness for domain experts is what differentiates domain events from regular events (such as button clicks). Domain events are often used to inform external applications about important changes that have happened in your system.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 3754-3755 | Añadido el sábado, 29 de julio de 2023 06:49:22

From an implementation standpoint, a domain event is a class that contains data needed to notify external systems.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 3758-3759 | Añadido el sábado, 29 de julio de 2023 06:49:40

Note Domain events should always be named in the past tense because they represent things that already happened. Domain events are values—they are immutable and interchangeable.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 3784-3790 | Añadido el sábado, 29 de julio de 2023 06:54:05

Notice that the Company and User instances are still persisted in the database unconditionally: the persistence logic doesn’t depend on domain events. This is due to the difference between changes in the database and messages in the bus. Assuming that no application has access to the database other than the CRM, communications with that database are not part of the CRM’s observable behavior—they are implementation details. As long as the final state of the database is correct, it doesn’t matter how many calls your application makes to that database. On the other hand, communications with the message bus are part of the application’s observable behavior. In order to maintain the contract with external systems, the CRM should put messages on the bus only when the email changes.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 3796-3797 | Añadido el sábado, 29 de julio de 2023 06:55:40

You can read about it in my article “Merging domain events before dispatching” at http://mng.bz/YeVe.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 3792-3796 | Añadido el sábado, 29 de julio de 2023 06:55:52

You can generalize the solution with domain events: extract a DomainEvent base class and introduce a base class for all domain classes, which would contain a collection of such events: List<DomainEvent> events. You can also write a separate event dispatcher instead of dispatching domain events manually in controllers. Finally, in larger projects, you might need a mechanism for merging domain events before dispatching them. That topic is outside the scope of this book, though.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 3797-3799 | Añadido el domingo, 30 de julio de 2023 22:00:08

Domain events remove the decision-making responsibility from the controller and put that responsibility into the domain model, thus simplifying unit testing communications with external systems. Instead of verifying the controller itself and using mocks to substitute out-of-process dependencies, you can test the domain event creation directly in unit tests, as shown next.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 3823-3825 | Añadido el domingo, 30 de julio de 2023 22:04:39

Just as you can’t avoid having some business logic in controllers, you will rarely be able to remove all collaborators from domain classes. And that’s fine. One, two, or even three collaborators won’t turn a domain class into overcomplicated code, as long as these collaborators don’t refer to out-of-process dependencies.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 3823-3825 | Añadido el domingo, 30 de julio de 2023 22:04:55

Just as you can’t avoid having some business logic in controllers, you will rarely be able to remove all collaborators from domain classes. And that’s fine. One, two, or even three collaborators won’t turn a domain class into overcomplicated code, as long as these collaborators don’t refer to out-of-process dependencies. Don’t use mocks to verify interactions with such collaborators, though.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 3823-3828 | Añadido el domingo, 30 de julio de 2023 22:06:01

Just as you can’t avoid having some business logic in controllers, you will rarely be able to remove all collaborators from domain classes. And that’s fine. One, two, or even three collaborators won’t turn a domain class into overcomplicated code, as long as these collaborators don’t refer to out-of-process dependencies. Don’t use mocks to verify interactions with such collaborators, though. These interactions have nothing to do with the domain model’s observable behavior. Only the very first call, which goes from a controller to a domain class, has an immediate connection to that controller’s goal. All the subsequent calls the domain class makes to its neighbor domain classes within the same operation are implementation details.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 3830-3833 | Añadido el domingo, 30 de julio de 2023 22:06:51

To be part of the observable behavior, the method must meet one of the following two criteria: Have an immediate connection to one of the client’s goals Incur a side effect in an out-of-process dependency that is visible to external applications
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 3835-3846 | Añadido el domingo, 30 de julio de 2023 22:09:47

The controller’s ChangeEmail() method is part of its observable behavior, and so is the call it makes to the message bus. The first method is the entry point for the external client, thereby meeting the first criterion. The call to the bus sends messages to external applications, thereby meeting the second criterion. You should verify both of these method calls (which is the topic of the next chapter). However, the subsequent call from the controller to User doesn’t have an immediate connection to the goals of the external client. That client doesn’t care how the controller decides to implement the change of email as long as the final state of the system is correct and the call to the message bus is in place. Therefore, you shouldn’t verify calls the controller makes to User when testing that controller’s behavior. When you step one level down the call stack, you get a similar situation. Now it’s the controller who is the client, and the ChangeEmail method in User has an immediate connection to that client’s goal of changing the user email and thus should be tested. But the subsequent calls from User to Company are implementation details from the controller’s point of view. Therefore, the test that covers the ChangeEmail method in User shouldn’t verify what methods User calls on Company. The same line of reasoning applies when you step one more level down and test the two methods in Company from User’s point of view.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 3846-3849 | Añadido el domingo, 30 de julio de 2023 22:11:37

Think of the observable behavior and implementation details as onion layers. Test each layer from the outer layer’s point of view, and disregard how that layer talks to the underlying layers. As you peel these layers one by one, you switch perspective: what previously was an implementation detail now becomes an observable behavior, which you then cover with another set of tests.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 3846-3849 | Añadido el domingo, 30 de julio de 2023 22:12:18

Think of the observable behavior and implementation details as onion layers. Test each layer from the outer layer’s point of view, and disregard how that layer talks to the underlying layers. As you peel these layers one by one, you switch perspective: what previously was an implementation detail now becomes an observable behavior, which you then cover with another set of tests. Summary
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 3850-3888 | Añadido el domingo, 30 de julio de 2023 22:12:35

Code complexity is defined by the number of decision-making points in the code, both explicit (made by the code itself) and implicit (made by the libraries the code uses). Domain significance shows how significant the code is for the problem domain of your project. Complex code often has high domain significance and vice versa, but not in 100% of all cases. Complex code and code that has domain significance benefit from unit testing the most because the corresponding tests have greater protection against regressions. Unit tests that cover code with a large number of collaborators have high maintenance costs. Such tests require a lot of space to bring collaborators to an expected condition and then check their state or interactions with them afterward. All production code can be categorized into four types of code by its complexity or domain significance and the number of collaborators: Domain model and algorithms (high complexity or domain significance, few collaborators) provide the best return on unit testing efforts. Trivial code (low complexity and domain significance, few collaborators) isn’t worth testing at all. Controllers (low complexity and domain significance, large number of collaborators) should be tested briefly by integration tests. Overcomplicated code (high complexity or domain significance, large number of collaborators) should be split into controllers and complex code. The more important or complex the code is, the fewer collaborators it should have. The Humble Object pattern helps make overcomplicated code testable by extracting business logic out of that code into a separate class. As a result, the remaining code becomes a controller—a thin, humble wrapper around the business logic. The hexagonal and functional architectures implement the Humble Object pattern. Hexagonal architecture advocates for the separation of business logic and communications with out-of-process dependencies. Functional architecture separates business logic from communications with all collaborators, not just out-of-process ones. Think of the business logic and orchestration responsibilities in terms of code depth versus code width. Your code can be either deep (complex or important) or wide (work with many collaborators), but never both. Test preconditions if they have a domain significance; don’t test them otherwise. There are three important attributes when it comes to separating business logic from orchestration: Domain model testability— A function of the number and the type of collaborators in domain classes Controller simplicity— Depends on the presence of decision-making points in the controller Performance— Defined by the number of calls to out-of-process dependencies You can have a maximum of two of these three attributes at any given moment: Pushing all external reads and writes to the edges of a business operation— Preserves controller simplicity and keeps the domain model testability, but concedes performance Injecting out-of-process dependencies into the domain model— Keeps performance and the controller’s simplicity, but damages domain model testability Splitting the decision-making process into more granular steps— Preserves performance and domain model testability, but gives up controller simplicity Splitting the decision-making process into more granular steps— Is a trade-off with the best set of pros and cons. You can mitigate the growth of controller complexity using the following two patterns: The CanExecute/Execute pattern introduces a CanDo() for each Do() method and makes its successful execution a precondition for Do(). This pattern essentially eliminates the controller’s decision-making because there’s no option not to call CanDo() before Do(). Domain events help track important changes in the domain model, and then convert those changes to calls to out-of-process dependencies. This pattern removes the tracking responsibility from the controller. It’s easier to test abstractions than the things they abstract. Domain events are abstractions on top of upcoming calls to out-of-process dependencies. Changes in domain classes are abstractions on top of upcoming modifications in the data storage.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- El marcador en la posición 3888 | Añadido el domingo, 30 de julio de 2023 22:18:45


==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- El marcador en la posición 3905 | Añadido el domingo, 30 de julio de 2023 22:21:12


==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 3909-3912 | Añadido el lunes, 31 de julio de 2023 22:18:10

unit test is a test that meets the following three requirements: Verifies a single unit of behavior, Does it quickly, And does it in isolation from other tests.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 3909-3913 | Añadido el lunes, 31 de julio de 2023 22:18:25

unit test is a test that meets the following three requirements: Verifies a single unit of behavior, Does it quickly, And does it in isolation from other tests. A test that doesn’t meet at least one of these three requirements falls into the category of integration tests. An integration test then is any test that is not a unit test.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 3909-3914 | Añadido el lunes, 31 de julio de 2023 22:19:55

unit test is a test that meets the following three requirements: Verifies a single unit of behavior, Does it quickly, And does it in isolation from other tests. A test that doesn’t meet at least one of these three requirements falls into the category of integration tests. An integration test then is any test that is not a unit test. In practice, integration tests almost always verify how your system works in integration with out-of-process dependencies.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 3933-3935 | Añadido el lunes, 31 de julio de 2023 22:23:40

check as many of the business scenario’s edge cases as possible with unit tests; use integration tests to cover one happy path, as well as any edge cases that can’t be covered by unit tests.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 3926-3930 | Añadido el lunes, 31 de julio de 2023 22:23:49

It’s important to maintain a balance between unit and integration tests. Working directly with out-of-process dependencies makes integration tests slow. Such tests are also more expensive to maintain. The increase in maintainability costs is due to The necessity to keep the out-of-process dependencies operational The greater number of collaborators involved, which inflates the test’s size
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 3926-3931 | Añadido el lunes, 31 de julio de 2023 22:24:05

It’s important to maintain a balance between unit and integration tests. Working directly with out-of-process dependencies makes integration tests slow. Such tests are also more expensive to maintain. The increase in maintainability costs is due to The necessity to keep the out-of-process dependencies operational The greater number of collaborators involved, which inflates the test’s size On the other hand, integration tests go through a larger amount of code (both your code and the code of the libraries used by the application), which makes them better than unit tests at protecting against regressions.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 3926-3932 | Añadido el lunes, 31 de julio de 2023 22:24:19

It’s important to maintain a balance between unit and integration tests. Working directly with out-of-process dependencies makes integration tests slow. Such tests are also more expensive to maintain. The increase in maintainability costs is due to The necessity to keep the out-of-process dependencies operational The greater number of collaborators involved, which inflates the test’s size On the other hand, integration tests go through a larger amount of code (both your code and the code of the libraries used by the application), which makes them better than unit tests at protecting against regressions. They are also more detached from the production
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 3935-3937 | Añadido el lunes, 31 de julio de 2023 22:24:34

Definition A happy path is a successful execution of a business scenario. An edge case is when the business scenario execution results in an error.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 3941-3944 | Añadido el lunes, 31 de julio de 2023 22:25:46

The Test Pyramid represents a trade-off that works best for most applications. Fast, cheap unit tests cover the majority of edge cases, while a smaller number of slow, more expensive integration tests ensure the correctness of the system as a whole. 
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 3953-3955 | Añadido el lunes, 31 de julio de 2023 22:27:08

For an integration test, select the longest happy path in order to verify interactions with all out-of-process dependencies. If there’s no one path that goes through all such interactions, write additional integration tests—as many as needed to capture communications with every external system.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 3970-3972 | Añadido el lunes, 31 de julio de 2023 22:29:02

Tip It’s better to not write a test at all than to write a bad test. A test that doesn’t provide significant value is a bad test.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 3976-3982 | Añadido el lunes, 31 de julio de 2023 22:31:57

The Fail Fast principle The Fail Fast principle stands for stopping the current operation as soon as any unexpected error occurs. This principle makes your application more stable by Shortening the feedback loop— The sooner you detect a bug, the easier it is to fix. A bug that is already in production is orders of magnitude more expensive to fix compared to a bug found during development. Protecting the persistence state— Bugs lead to corruption of the application’s state. Once that state penetrates into the database, it becomes much harder to fix. Failing fast helps you prevent the corruption from spreading.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 3973-3975 | Añadido el lunes, 31 de julio de 2023 22:32:05

Unlike the call from the controller to CanChangeEmail(), the presence of the precondition in User should be tested. But that is better done with a unit test; there’s no need for an integration test. Making bugs manifest themselves quickly is called the Fail Fast principle, and it’s a viable alternative to integration testing.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4005-4006 | Añadido el lunes, 31 de julio de 2023 22:34:29

Important Use real instances of managed dependencies; replace unmanaged dependencies with mocks.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- El marcador en la posición 3989 | Añadido el lunes, 31 de julio de 2023 22:35:55


==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 3992-4001 | Añadido el martes, 1 de agosto de 2023 22:15:02

All out-of-process dependencies fall into two categories: Managed dependencies (out-of-process dependencies you have full control over)— These dependencies are only accessible through your application; interactions with them aren’t visible to the external world. A typical example is a database. External systems normally don’t access your database directly; they do that through the API your application provides. Unmanaged dependencies (out-of-process dependencies you don’t have full control over)— Interactions with such dependencies are observable externally. Examples include an SMTP server and a message bus: both produce side effects visible to other applications. I mentioned in chapter 5 that communications with managed dependencies are implementation details. Conversely, communications with unmanaged dependencies are part of your system’s observable behavior (figure 8.4). This distinction leads to the difference in treatment of out-of-process dependencies in integration tests. Figure 8.4. Communications
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4015-4020 | Añadido el martes, 1 de agosto de 2023 22:18:41

The story usually goes like this. A system begins with its own dedicated database. After a while, another system begins to require data from the same database. And so the team decides to share access to a limited number of tables just for ease of integration with that other system. As a result, the database becomes a dependency that is both managed and unmanaged. It still contains parts that are visible to your application only; but, in addition to those parts, it also has a number of tables accessible by other applications. The use of a database is a poor way to implement integration between systems because it couples these systems to each other and complicates their further development.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4023-4025 | Añadido el martes, 1 de agosto de 2023 22:19:48

treat tables that are visible to other applications as an unmanaged dependency. Such tables in effect act as a message bus, with their rows playing the role of messages. Use mocks to make sure the communication pattern with these tables remains unchanged. At the same time, treat the rest of your database as a managed dependency and verify its final state, not the interactions
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4042-4043 | Añadido el martes, 1 de agosto de 2023 22:25:09

Remember to always put all your tests under close scrutiny. Tests that don’t provide a high enough value should have no place in your test suite.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4078-4082 | Añadido el martes, 1 de agosto de 2023 22:32:48

What about end-to-end testing? There will be no end-to-end tests in our sample project. An end-to-end test in a scenario with an API would be a test running against a deployed, fully functioning version of that API, which means no mocks for any of the out-of-process dependencies (figure 8.7). On the other hand, integration tests host the application within the same process and substitute unmanaged dependencies with mocks (figure 8.8). Figure 8.7. End-to-end tests emulate
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4078-4083 | Añadido el martes, 1 de agosto de 2023 22:33:07

What about end-to-end testing? There will be no end-to-end tests in our sample project. An end-to-end test in a scenario with an API would be a test running against a deployed, fully functioning version of that API, which means no mocks for any of the out-of-process dependencies (figure 8.7). On the other hand, integration tests host the application within the same process and substitute unmanaged dependencies with mocks (figure 8.8). Figure 8.7. End-to-end tests emulate the external client and therefore test a deployed version of the application with all out-of-process dependencies included in the testing scope. End-to-end tests shouldn’t check managed dependencies (such as the database)
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4078-4084 | Añadido el martes, 1 de agosto de 2023 22:33:12

What about end-to-end testing? There will be no end-to-end tests in our sample project. An end-to-end test in a scenario with an API would be a test running against a deployed, fully functioning version of that API, which means no mocks for any of the out-of-process dependencies (figure 8.7). On the other hand, integration tests host the application within the same process and substitute unmanaged dependencies with mocks (figure 8.8). Figure 8.7. End-to-end tests emulate the external client and therefore test a deployed version of the application with all out-of-process dependencies included in the testing scope. End-to-end tests shouldn’t check managed dependencies (such as the database) directly, only indirectly through the application.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- El marcador en la posición 4088 | Añadido el martes, 1 de agosto de 2023 22:36:30


==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4146-4149 | Añadido el miércoles, 2 de agosto de 2023 22:22:27

Both of these reasons are misconceptions. Interfaces with a single implementation are not abstractions and don’t provide loose coupling any more than concrete classes that implement those interfaces. Genuine abstractions are discovered, not invented. The discovery, by definition, takes place post factum, when the abstraction already exists but is not yet clearly defined in the code. Thus, for an interface to be a genuine abstraction, it must have at least two implementations.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4150-4152 | Añadido el miércoles, 2 de agosto de 2023 22:22:54

The second reason (the ability to add new functionality without changing the existing code) is a misconception because it violates a more foundational principle: YAGNI. YAGNI stands for “You aren’t gonna need it” and advocates against investing time in functionality that’s not needed right now.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4153-4159 | Añadido el miércoles, 2 de agosto de 2023 22:24:26

The two major reasons are as follows: Opportunity cost— If you spend time on a feature that business people don’t need at the moment, you steer that time away from features they do need right now. Moreover, when the business people finally come to require the developed functionality, their view on it will most likely have evolved, and you will still need to adjust the already-written code. Such activity is wasteful. It’s more beneficial to implement the functionality from scratch when the actual need for it emerges. The less code in the project, the better. Introducing code just in case without an immediate need unnecessarily increases your code base’s cost of ownership. It’s better to postpone introducing new functionality until as late a stage of your project as possible.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4160-4161 | Añadido el miércoles, 2 de agosto de 2023 22:24:39

Tip Writing code is an expensive way to solve problems. The less code the solution requires and the simpler that code is, the better.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4165-4167 | Añadido el miércoles, 2 de agosto de 2023 22:25:22

So, why use interfaces for out-of-process dependencies at all, assuming that each of those interfaces has only one implementation? The real reason is much more practical and down-to-earth. It’s to enable mocking—as simple as that.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4168-4170 | Añadido el miércoles, 2 de agosto de 2023 22:27:26

Therefore, don’t introduce interfaces for out-of-process dependencies unless you need to mock out those dependencies. You only mock out unmanaged dependencies, so the guideline can be boiled down to this: use interfaces for unmanaged dependencies only. Still inject managed dependencies into the controller explicitly, but use concrete classes for that.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4172-4173 | Añadido el miércoles, 2 de agosto de 2023 22:27:37

Introducing an interface with a single implementation for reasons other than mocking is a violation of YAGNI, however. And you might have noticed in listing
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- El marcador en la posición 4195 | Añadido el miércoles, 2 de agosto de 2023 22:32:20


==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4214-4215 | Añadido el jueves, 3 de agosto de 2023 21:49:10

All problems in computer science can be solved by another layer of indirection, except for the problem of too many layers of indirection.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4218-4222 | Añadido el jueves, 3 de agosto de 2023 21:50:37

An excessive number of abstractions doesn’t help unit or integration testing, either. Code bases with many layers of indirections tend not to have a clear boundary between controllers and the domain model (which, as you might remember from chapter 7, is a precondition for effective tests). There’s also a much stronger tendency to verify each layer separately. This tendency results in a lot of low-value integration tests, each of which exercises only the code from a specific layer and mocks out layers underneath.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4218-4222 | Añadido el jueves, 3 de agosto de 2023 21:50:44

An excessive number of abstractions doesn’t help unit or integration testing, either. Code bases with many layers of indirections tend not to have a clear boundary between controllers and the domain model (which, as you might remember from chapter 7, is a precondition for effective tests). There’s also a much stronger tendency to verify each layer separately. This tendency results in a lot of low-value integration tests, each of which exercises only the code from a specific layer and mocks out layers underneath. The end result is always the same: insufficient protection against regressions combined with low resistance to refactoring.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4232-4234 | Añadido el jueves, 3 de agosto de 2023 21:52:14

Definition A circular dependency (also known as cyclic dependency) is two or more classes that directly or indirectly depend on each other to function properly.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4242-4243 | Añadido el jueves, 3 de agosto de 2023 21:53:44

Just like an excessive number of abstraction layers, circular dependencies add tremendous cognitive load when you try to read and understand the code.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4242-4244 | Añadido el jueves, 3 de agosto de 2023 21:53:55

Just like an excessive number of abstraction layers, circular dependencies add tremendous cognitive load when you try to read and understand the code. The reason is that circular dependencies don’t give you a clear starting point from which you can begin exploring the solution.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4245-4245 | Añadido el jueves, 3 de agosto de 2023 21:54:17

Circular dependencies also interfere with testing.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4263-4264 | Añadido el jueves, 3 de agosto de 2023 21:56:18

As you might remember from chapter 3, having more than one arrange, act, or assert section in a test is a code smell.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4263-4264 | Añadido el jueves, 3 de agosto de 2023 21:56:33

As you might remember from chapter 3, having more than one arrange, act, or assert section in a test is a code smell. It’s a sign that this test checks multiple units of behavior, which, in turn, hinders the test’s maintainability.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4274-4275 | Añadido el jueves, 3 de agosto de 2023 21:58:13

Having each test focus on a single unit of behavior makes those tests easier to understand and modify when necessary.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4275-4276 | Añadido el jueves, 3 de agosto de 2023 21:58:26

The exception to this guideline is tests working with out-of-process dependencies that are hard to bring to a desirable state.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4280-4280 | Añadido el jueves, 3 de agosto de 2023 21:59:17

Hard-to-manage out-of-process dependencies are the only legitimate reason to write a test with more than one act section.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4310-4311 | Añadido el jueves, 3 de agosto de 2023 22:02:07

The answer to the question of whether you should test logging comes down to this: Is logging part of the application’s observable behavior, or is it an implementation detail?
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4312-4315 | Añadido el jueves, 3 de agosto de 2023 22:02:40

Logging ultimately results in side effects in an out-of-process dependency such as a text file or a database. If these side effects are meant to be observed by your customer, the application’s clients, or anyone else other than the developers themselves, then logging is an observable behavior and thus must be tested. If the only audience is the developers, then it’s an implementation detail that can be freely modified without anyone noticing, in which case it shouldn’t be tested.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4316-4317 | Añadido el jueves, 3 de agosto de 2023 22:03:25

Another example is when business people insist on logging key application workflows. In this case, logs also become a business requirement and thus have to be covered by tests.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4318-4322 | Añadido el jueves, 3 de agosto de 2023 22:04:32

Steve Freeman and Nat Pryce, in their book Growing Object-Oriented Software, Guided by Tests (Addison-Wesley Professional, 2009), call these two types of logging support logging and diagnostic logging: Support logging produces messages that are intended to be tracked by support staff or system administrators. Diagnostic logging helps developers understand what’s going on inside the application.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4322-4328 | Añadido el jueves, 3 de agosto de 2023 22:11:13

How should you test logging? Because logging involves out-of-process dependencies, when it comes to testing it, the same rules apply as with any other functionality that touches out-of-process dependencies. You need to use mocks to verify interactions between your application and the log storage. Introducing a wrapper on top of ILogger But don’t just mock out the ILogger interface. Because support logging is a business requirement, reflect that requirement explicitly in your code base. Create a special DomainLogger class where you explicitly list all the support logging needed for the business; verify interactions with that class instead of the raw ILogger.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4347-4353 | Añadido el jueves, 3 de agosto de 2023 22:11:19

Listing 8.5. DomainLogger as a wrapper on top of ILogger public class DomainLogger : IDomainLogger {     private readonly ILogger _logger;     public DomainLogger(ILogger logger)     {         _logger = logger;     }     public void UserTypeHasChanged(         int userId, UserType oldType, UserType newType)     {         _logger.Info(             $"User {userId} changed type " +             $"from {oldType} to {newType}");     } } DomainLogger
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4354-4355 | Añadido el jueves, 3 de agosto de 2023 22:11:34

In fact, this implementation is very similar to the concept of structured logging,
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4356-4357 | Añadido el jueves, 3 de agosto de 2023 22:11:44

Structured logging is a logging technique where capturing log data is decoupled from the rendering of that data. Traditional logging works with simple
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4356-4357 | Añadido el jueves, 3 de agosto de 2023 22:11:52

Structured logging is a logging technique where capturing log data is decoupled from the rendering of that data. Traditional logging works with simple
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4361-4367 | Añadido el jueves, 3 de agosto de 2023 22:14:40

structured logging introduces structure to your log storage. The use of a structured logging library looks similar on the surface: logger.Info("User Id is {UserId}", 12); But its underlying behavior differs significantly. Behind the scenes, this method computes a hash of the message template (the message itself is stored in a lookup storage for space efficiency) and combines that hash with the input parameters to form a set of captured data. The next step is the rendering of that data. You can still have a flat log file, as with traditional logging, but that’s just one possible rendering. You could also configure the logging library to render the captured data as a JSON or a CSV file, where it would be easier to analyze (figure 8.12).
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4370-4372 | Añadido el jueves, 3 de agosto de 2023 22:16:27

operates in the same spirit. Look at this method once again: public void UserTypeHasChanged(     int userId, UserType oldType, UserType newType) {     _logger.Info(
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4370-4375 | Añadido el jueves, 3 de agosto de 2023 22:16:36

DomainLogger in listing 8.5 isn’t a structured logger per se, but it operates in the same spirit. Look at this method once again: public void UserTypeHasChanged(     int userId, UserType oldType, UserType newType) {     _logger.Info(         $"User {userId} changed type " +         $"from {oldType} to {newType}"); } You can view UserTypeHasChanged() as the message template’s hash. Together with the userId, oldType, and newType parameters, that hash forms the log data. The method’s implementation renders the log data into a flat log file.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4423-4447 | Añadido el jueves, 3 de agosto de 2023 22:24:21

It’s important not to overuse diagnostic logging, for the following two reasons: Excessive logging clutters the code. This is especially true for the domain model. That’s why I don’t recommend using diagnostic logging in User even though such a use is fine from a unit testing perspective: it obscures the code. Logs’ signal-to-noise ratio is key. The more you log, the harder it is to find relevant information. Maximize the signal; minimize the noise. Try not to use diagnostic logging in the domain model at all. In most cases, you can safely move that logging from domain classes to controllers. And even then, resort to diagnostic logging only temporarily when you need to debug something. Remove it once you finish debugging. Ideally, you should use diagnostic logging for unhandled exceptions only. 8.6.4. How do you pass around logger instances? Finally, the last question is how to pass logger instances in the code. One way to resolve these instances is using static methods, as shown in the following listing. Listing 8.8. Storing ILogger in a static field public class User {     private static readonly ILogger _logger =     1         LogManager.GetLogger(typeof(User));       1     public void ChangeEmail(string newEmail, Company company)     {         _logger.Info(             $"Changing email for user {UserId} to {newEmail}");         /* ... */         _logger.Info($"Email is changed for user {UserId}");     } } 1 Resolves ILogger through a static method, and stores it in a private static field Steven van Deursen and Mark Seeman, in their book Dependency Injection Principles, Practices, Patterns (Manning Publications, 2018), call this type of dependency acquisition ambient context. This is an anti-pattern. Two of their arguments are that The dependency is hidden and hard to change. Testing becomes more difficult. I fully agree with this analysis. To me, though, the main drawback of ambient context is that it masks potential problems in code. If injecting a logger explicitly into a domain class becomes so inconvenient that you have to resort to ambient context, that’s a certain sign of trouble. You either log too much or use too many layers of indirection. In any case, ambient context is not a solution. Instead, tackle the root cause of the problem. The following listing shows one way to explicitly inject the logger: as a method argument. Another way is through the class constructor. Listing 8.9. Injecting
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4423-4427 | Añadido el jueves, 3 de agosto de 2023 22:24:48

It’s important not to overuse diagnostic logging, for the following two reasons: Excessive logging clutters the code. This is especially true for the domain model. That’s why I don’t recommend using diagnostic logging in User even though such a use is fine from a unit testing perspective: it obscures the code. Logs’ signal-to-noise ratio is key. The more you log, the harder it is to find relevant information. Maximize the signal; minimize the noise.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4454-4457 | Añadido el jueves, 3 de agosto de 2023 22:28:43

Conclusion View communications with all out-of-process dependencies through the lens of whether this communication is part of the application’s observable behavior or an implementation detail. The log storage isn’t any different in that regard. Mock logging functionality if the logs are observable by non-programmers; don’t test it otherwise. In the next chapter, we’ll dive deeper into the topic of mocking and best practices related to it.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4470-4475 | Añadido el jueves, 3 de agosto de 2023 22:31:35

Managed dependencies are out-of-process dependencies that are only accessible through your application. Interactions with managed dependencies aren’t observable externally. A typical example is the application database. Unmanaged dependencies are out-of-process dependencies that other applications have access to. Interactions with unmanaged dependencies are observable externally. Typical examples include an SMTP server and a message bus. Communications with managed dependencies are implementation details; communications with unmanaged dependencies are part of your system’s observable behavior.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4481-4483 | Añadido el jueves, 3 de agosto de 2023 22:32:53

Interfaces with a single implementation are not abstractions and don’t provide loose coupling any more than the concrete classes that implement those interfaces. Trying to anticipate future implementations for such interfaces violates the YAGNI (you aren’t gonna need it) principle.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4504-4505 | Añadido el jueves, 3 de agosto de 2023 22:34:00

either via the constructor or as a method argument.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4504-4505 | Añadido el jueves, 3 de agosto de 2023 22:34:04

Always inject all dependencies explicitly (including loggers), either via the constructor or as a method argument.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- El marcador en la posición 4505 | Añadido el jueves, 3 de agosto de 2023 22:35:09


==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4573-4574 | Añadido el viernes, 4 de agosto de 2023 19:09:11

Let’s discuss why the mocks used by the integration test in listing 9.3 aren’t ideal in terms of their protection against regressions and resistance to refactoring and how we can fix that.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4575-4577 | Añadido el viernes, 4 de agosto de 2023 19:09:17

Tip When mocking, always adhere to the following guideline: verify interactions with unmanaged dependencies at the very edges of your system.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4600-4602 | Añadido el sábado, 5 de agosto de 2023 15:21:54

Mocking IBus instead of IMessageBus maximizes the mock’s protection against regressions. As you might remember from chapter 4, protection against regressions is a function of the amount of code that is executed during the test.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4600-4603 | Añadido el sábado, 5 de agosto de 2023 15:22:14

Mocking IBus instead of IMessageBus maximizes the mock’s protection against regressions. As you might remember from chapter 4, protection against regressions is a function of the amount of code that is executed during the test. Mocking the very last type that communicates with the unmanaged dependency increases the number of classes the integration test goes through and thus improves the protection.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4630-4632 | Añadido el lunes, 7 de agosto de 2023 19:53:17

Tip A call to an unmanaged dependency goes through several stages before it leaves your application. Pick the last such stage. It is the best way to ensure backward compatibility with external systems, which is the goal that mocks help you achieve.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4661-4663 | Añadido el lunes, 7 de agosto de 2023 19:59:10

Tip You can rename BusSpy into BusMock. As I mentioned earlier, the difference between a mock and a spy is an implementation detail. Most programmers aren’t familiar with the term spy, though, so renaming the spy as BusMock can save your colleagues unnecessary confusion.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4672-4674 | Añadido el lunes, 7 de agosto de 2023 20:00:59

But there’s a crucial difference between the two: BusSpy is part of the test code, whereas MessageBus belongs to the production code. This difference is important because you shouldn’t rely on the production code when making assertions in tests.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4698-4703 | Añadido el lunes, 7 de agosto de 2023 20:06:28

You’ve learned two major mocking best practices so far: Applying mocks to unmanaged dependencies only Verifying the interactions with those dependencies at the very edges of your system In this section, I explain the remaining best practices: Using mocks in integration tests only, not in unit tests Always verifying the number of calls made to the mock Mocking only types that you own
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4703-4710 | Añadido el lunes, 7 de agosto de 2023 20:07:40

Mocks are for integration tests only The guideline saying that mocks are for integration tests only, and that you shouldn’t use mocks in unit tests, stems from the foundational principle described in chapter 7: the separation of business logic and orchestration. Your code should either communicate with out-of-process dependencies or be complex, but never both. This principle naturally leads to the formation of two distinct layers: the domain model (that handles complexity) and controllers (that handle the communication). Tests on the domain model fall into the category of unit tests; tests covering controllers are integration tests. Because mocks are for unmanaged dependencies only, and because controllers are the only code working with such dependencies, you should only apply mocking when testing controllers—in integration tests.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4715-4716 | Añadido el lunes, 7 de agosto de 2023 20:09:18

With mocks, the same principle is at play: it’s irrelevant how many mocks it takes to verify a unit of behavior.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4719-4722 | Añadido el lunes, 7 de agosto de 2023 20:10:12

Verifying the number of calls When it comes to communications with unmanaged dependencies, it’s important to ensure both of the following: The existence of expected calls The absence of unexpected calls
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4719-4723 | Añadido el lunes, 7 de agosto de 2023 20:10:24

Verifying the number of calls When it comes to communications with unmanaged dependencies, it’s important to ensure both of the following: The existence of expected calls The absence of unexpected calls This requirement, once again, stems from the need to maintain backward compatibility with unmanaged dependencies.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4739-4747 | Añadido el lunes, 7 de agosto de 2023 20:14:58

The guideline states that you should always write your own adapters on top of third-party libraries and mock those adapters instead of the underlying types. A few of their arguments are as follows: 1 See page 69 in Growing Object-Oriented Software, Guided by Tests by Steve Freeman and Nat Pryce (Addison-Wesley Professional, 2009). You often don’t have a deep understanding of how the third-party code works. Even if that code already provides built-in interfaces, it’s risky to mock those interfaces, because you have to be sure the behavior you mock matches what the external library actually does. Adapters abstract non-essential technical details of the third-party code and define the relationship with the library in your application’s terms.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4747-4748 | Añadido el lunes, 7 de agosto de 2023 20:15:16

Adapters, in effect, act as an anti-corruption layer between your code and the external world.[
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4752-4753 | Añadido el lunes, 7 de agosto de 2023 20:15:43

Abstract the underlying library’s complexity Only expose features you need from the library Do that using your project’s domain language
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4755-4756 | Añadido el lunes, 7 de agosto de 2023 20:17:42

You never know how the third-party code will change when you upgrade the library.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4755-4756 | Añadido el lunes, 7 de agosto de 2023 20:17:54

You never know how the third-party code will change when you upgrade the library. Such an upgrade could cause a ripple effect across the whole code base! The additional abstraction
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4755-4757 | Añadido el lunes, 7 de agosto de 2023 20:18:01

You never know how the third-party code will change when you upgrade the library. Such an upgrade could cause a ripple effect across the whole code base! The additional abstraction layer restricts that ripple effect to just one class: the adapter itself.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4757-4758 | Añadido el lunes, 7 de agosto de 2023 20:18:12

Note that the “mock your own types” guideline doesn’t apply to in-process dependencies.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4762-4778 | Añadido el lunes, 7 de agosto de 2023 20:22:42

Summary Verify interactions with an unmanaged dependency at the very edges of your system. Mock the last type in the chain of types between the controller and the unmanaged dependency. This helps you increase both protection against regressions (due to more code being validated by the integration test) and resistance to refactoring (due to detaching the mock from the code’s implementation details). Spies are handwritten mocks. When it comes to classes residing at the system’s edges, spies are superior to mocks. They help you reuse code in the assertion phase, thereby reducing the test’s size and improving readability. Don’t rely on production code when making assertions. Use a separate set of literals and constants in tests. Duplicate those literals and constants from the production code if necessary. Tests should provide a checkpoint independent of the production code. Otherwise, you risk producing tautology tests (tests that don’t verify anything and contain semantically meaningless assertions). Not all unmanaged dependencies require the same level of backward compatibility. If the exact structure of the message isn’t important, and you only want to verify the existence of that message and the information it carries, you can ignore the guideline of verifying interactions with unmanaged dependencies at the very edges of your system. The typical example is logging. Because mocks are for unmanaged dependencies only, and because controllers are the only code working with such dependencies, you should only apply mocking when testing controllers—in integration tests. Don’t use mocks in unit tests. The number of mocks used in a test is irrelevant. That number depends solely on the number of unmanaged dependencies participating in the operation. Ensure both the existence of expected calls and the absence of unexpected calls to mocks. Only mock types that you own. Write your own adapters on top of third-party libraries that provide access to unmanaged dependencies. Mock those adapters instead of the underlying types.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- El marcador en la posición 4790 | Añadido el miércoles, 9 de agosto de 2023 14:01:21


==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4803-4809 | Añadido el sábado, 12 de agosto de 2023 09:13:08

Having a dedicated instance as a model database is an anti-pattern. The database schema is best stored in a source control system. Using a model database is a horrible way to maintain database schema. That’s because there’s No change history— You can’t trace the database schema back to some point in the past, which might be important when reproducing bugs in production. No single source of truth— The model database becomes a competing source of truth about the state of development. Maintaining two such sources (Git and the model database) creates an additional burden.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4817-4818 | Añadido el sábado, 12 de agosto de 2023 09:17:44

Definition Reference data is data that must be prepopulated in order for the application to operate properly.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4824-4825 | Añadido el sábado, 12 de agosto de 2023 09:19:31

Tip There’s a simple way to differentiate reference data from regular data. If your application can modify the data, it’s regular data; if not, it’s reference data.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4830-4830 | Añadido el sábado, 12 de agosto de 2023 09:20:55

Separate instance for every developer
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4833-4834 | Añadido el sábado, 12 de agosto de 2023 09:21:01

Tests run by different developers interfere with each other. Non-backward-compatible changes can block the work of other developers.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4849-4941 | Añadido el sábado, 12 de agosto de 2023 09:24:00

The migration-based approach to database delivery emphasizes the use of explicit migrations that transition the database from one version to another. In the migration-based approach, migrations and not the database state become the artifacts you store in the source control. Migrations are usually represented with plain SQL scripts (popular tools include Flyway [https://flywaydb.org] and Liquibase [https://liquibase.org]), but they can also be written using a DSL-like language that gets translated into SQL. The following example shows a C# class that represents a database migration with the help of the FluentMigrator library (https://github.com/fluentmigrator/fluentmigrator): [Migration(1)]                            1 public class CreateUserTable : Migration {     public override void Up()             2     {         Create.Table("Users");     }     public override void Down()           3     {         Delete.Table("Users");     } } 1 Migration number 2 Forward migration 3 Backward migration (helpful when downgrading to an earlier database version to reproduce a bug) Prefer the migration-based approach over the state-based one The difference between the state-based and migration-based approaches to database delivery comes down to (as their names imply) state versus migrations (see figure 10.3): The state-based approach makes the state explicit (by virtue of storing that state in the source control) and lets the comparison tool implicitly control the migrations. The migration-based approach makes the migrations explicit but leaves the state implicit. It’s impossible to view the database state directly; you have to assemble it from the migrations. Figure 10.3. The state-based approach makes the state explicit and migrations implicit; the migration-based approach makes the opposite choice. Such a distinction leads to different sets of trade-offs. The explicitness of the database state makes it easier to handle merge conflicts, while explicit migrations help to tackle data motion. Definition Data motion is the process of changing the shape of existing data so that it conforms to the new database schema. Although the alleviation of merge conflicts and the ease of data motion might look like equally important benefits, in the vast majority of projects, data motion is much more important than merge conflicts. Unless you haven’t yet released your application to production, you always have data that you can’t simply discard. For example, when splitting a Name column into FirstName and LastName, you not only have to drop the Name column and create the new FirstName and LastName columns, but you also have to write a script to split all existing names into two pieces. There is no easy way to implement this change using the state-driven approach; comparison tools are awful when it comes to managing data. The reason is that while the database schema itself is objective, meaning there is only one way to interpret it, data is context-dependent. No tool can make reliable assumptions about data when generating upgrade scripts. You have to apply domain-specific rules in order to implement proper transformations. As a result, the state-based approach is impractical in the vast majority of projects. You can use it temporarily, though, while the project still has not been released to production. After all, test data isn’t that important, and you can re-create it every time you change the database. But once you release the first version, you will have to switch to the migration-based approach in order to handle data motion properly. Tip Apply every modification to the database schema (including reference data) through migrations. Don’t modify migrations once they are committed to the source control. If a migration is incorrect, create a new migration instead of fixing the old one. Make exceptions to this rule only when the incorrect migration can lead to data loss. 10.2. Database transaction management Database transaction management is a topic that’s important for both production and test code. Proper transaction management in production code helps you avoid data inconsistencies. In tests, it helps you verify integration with the database in a close-to-production setting. In this section, I’ll first show how to handle transactions in the production code (the controller) and then demonstrate how to use them in integration tests. I’ll continue using the same CRM project you saw in the earlier chapters as an example. 10.2.1. Managing database transactions in production code Our sample CRM project uses the Database class to work with User and Company. Database creates a separate SQL connection on each method call. Every such connection implicitly opens an independent transaction behind the scenes, as the following listing shows. Listing 10.1. Class that enables access to the database public class Database {     private readonly string _connectionString;     public Database(string connectionString)     {         _connectionString = connectionString;     }     public void SaveUser(User user)     {         bool isNewUser = user.UserId == 0;         using (var connection =             new SqlConnection(_connectionString))      1         {             /* Insert or update the user depending on isNewUser */         }     }     public void SaveCompany(Company company)     {         using (var connection =             new SqlConnection(_connectionString))      1         {             /* Update only; there's only one company */         }     } } 1 Opens a database transaction As a result, the user controller creates a total of four database transactions during a single business operation, as shown in the following listing. Listing 10.2. User controller public string ChangeEmail(int userId, string newEmail) {     object[] userData = _database.GetUserById(userId);     1      User user = UserFactory.Create(userData);     string error = user.CanChangeEmail();     if (error != null)         return error;     object[] companyData = _database.GetCompany();        1     Company company = CompanyFactory.Create(companyData); 1     user.ChangeEmail(newEmail, company);     _database.SaveCompany(company);                       1     _database.SaveUser(user);                             1     _eventDispatcher.Dispatch(user.DomainEvents);     return "OK"; } 1 Opens a new database transaction It’s fine to open multiple transactions during read-only operations: for example, when returning user information to the external client. But if the business operation involves data mutation, all updates taking place during that operation should be atomic in order to avoid inconsistencies. For example, the controller can successfully persist the company but then fail when saving the user due to a database connectivity issue. As a result, the company’s NumberOfEmployees can become inconsistent with the total number of Employee users in the database. Definition Atomic updates are executed in an all-or-nothing manner. Each update in the set of atomic updates must either be complete in its entirety or have no effect whatsoever. Separating database connections from database transactions To avoid potential inconsistencies, you need to introduce a separation between two types of decisions: What data to update Whether to keep the updates or roll them back Such a separation is important because the controller can’t make these decisions simultaneously. It only knows whether the updates can be kept when all the steps in the business operation have succeeded. And it can only take those steps by accessing the database and trying to make the updates. You can implement the separation between these responsibilities by splitting the Database class into repositories and a transaction: Repositories are classes that enable access to and modification of the data in the database. There will be two repositories in our sample project: one for User and the other for Company. A transaction is a class that either commits or rolls back data updates in full. This will be a custom class relying on the underlying database’s transactions to provide atomicity of data modification. Not only do repositories and transactions have different responsibilities, but they also have different lifespans. A transaction lives during the whole business operation and is disposed of at the very end of it. A repository, on the other hand, is short-lived. You can dispose of a repository as soon as the call to the database is completed. As a result, repositories always work on top of the current transaction. When connecting to the database, a repository enlists itself into the transaction so that any data modifications made during that connection can later be rolled
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4851-4852 | Añadido el sábado, 12 de agosto de 2023 09:24:49

state become the artifacts you store in the source control. Migrations are usually represented with plain SQL scripts (popular tools include
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4851-4853 | Añadido el sábado, 12 de agosto de 2023 09:24:55

In the migration-based approach, migrations and not the database state become the artifacts you store in the source control. Migrations are usually represented with plain SQL scripts (popular tools include Flyway [https://flywaydb.org] and Liquibase
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4863-4863 | Añadido el sábado, 12 de agosto de 2023 09:26:03

Prefer the migration-based approach over the state-based one
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4866-4869 | Añadido el sábado, 12 de agosto de 2023 09:26:36

The state-based approach makes the state explicit (by virtue of storing that state in the source control) and lets the comparison tool implicitly control the migrations. The migration-based approach makes the migrations explicit but leaves the state implicit. It’s impossible to view the database state directly; you have to assemble it from the migrations. Figure
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4873-4874 | Añadido el sábado, 12 de agosto de 2023 09:27:29

Definition Data motion is the process of changing the shape of existing data so that it conforms to the new database schema.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4876-4877 | Añadido el sábado, 12 de agosto de 2023 09:29:31

data motion is much more important than merge conflicts.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4877-4880 | Añadido el sábado, 12 de agosto de 2023 09:29:39

Unless you haven’t yet released your application to production, you always have data that you can’t simply discard. For example, when splitting a Name column into FirstName and LastName, you not only have to drop the Name column and create the new FirstName and LastName columns, but you also have to write a script to split all existing names into two pieces.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4877-4883 | Añadido el sábado, 12 de agosto de 2023 09:29:48

Unless you haven’t yet released your application to production, you always have data that you can’t simply discard. For example, when splitting a Name column into FirstName and LastName, you not only have to drop the Name column and create the new FirstName and LastName columns, but you also have to write a script to split all existing names into two pieces. There is no easy way to implement this change using the state-driven approach; comparison tools are awful when it comes to managing data. The reason is that while the database schema itself is objective, meaning there is only one way to interpret it, data is context-dependent. No tool can make reliable assumptions about data when generating upgrade scripts. You have to apply domain-specific rules in order to implement proper transformations.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4887-4889 | Añadido el sábado, 12 de agosto de 2023 09:31:53

Tip Apply every modification to the database schema (including reference data) through migrations. Don’t modify migrations once they are committed to the source control. If a migration is incorrect, create a new migration instead of fixing the old one. Make exceptions to this rule only when the incorrect migration can lead to data loss.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4920-4924 | Añadido el sábado, 12 de agosto de 2023 09:37:49

It’s fine to open multiple transactions during read-only operations: for example, when returning user information to the external client. But if the business operation involves data mutation, all updates taking place during that operation should be atomic in order to avoid inconsistencies. For example, the controller can successfully persist the company but then fail when saving the user due to a database connectivity issue. As a result, the company’s NumberOfEmployees can become inconsistent with the total number of Employee users in the database.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4925-4926 | Añadido el sábado, 12 de agosto de 2023 09:37:55

Definition Atomic updates are executed in an all-or-nothing manner. Each update in the set of atomic updates must either be complete in its entirety or have no effect whatsoever.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4928-4930 | Añadido el sábado, 12 de agosto de 2023 09:38:32

To avoid potential inconsistencies, you need to introduce a separation between two types of decisions: What data to update Whether to keep the updates or roll them back
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4935-4936 | Añadido el sábado, 12 de agosto de 2023 09:39:24

A transaction is a class that either commits or rolls back data updates in full.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4934-4934 | Añadido el sábado, 12 de agosto de 2023 09:40:02

Repositories are classes that enable access to and modification of the data in the database.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4930-4932 | Añadido el sábado, 12 de agosto de 2023 09:40:14

Such a separation is important because the controller can’t make these decisions simultaneously. It only knows whether the updates can be kept when all the steps in the business operation have succeeded. And it can only take those steps by accessing the database and trying to make the updates.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4937-4939 | Añadido el sábado, 12 de agosto de 2023 09:40:36

Not only do repositories and transactions have different responsibilities, but they also have different lifespans. A transaction lives during the whole business operation and is disposed of at the very end of it. A repository, on the other hand, is short-lived. You can dispose of a repository as soon as the call to the database is completed.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4937-4941 | Añadido el sábado, 12 de agosto de 2023 09:42:33

Not only do repositories and transactions have different responsibilities, but they also have different lifespans. A transaction lives during the whole business operation and is disposed of at the very end of it. A repository, on the other hand, is short-lived. You can dispose of a repository as soon as the call to the database is completed. As a result, repositories always work on top of the current transaction. When connecting to the database, a repository enlists itself into the transaction so that any data modifications made during that connection can later be rolled back by the transaction.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4979-4983 | Añadido el sábado, 12 de agosto de 2023 09:50:01

The important part about Transaction is that it contains two methods: Commit() marks the transaction as successful. This is only called when the business operation itself has succeeded and all data modifications are ready to be persisted. Dispose() ends the transaction. This is called indiscriminately at the end of the business operation. If Commit() was previously invoked, Dispose() persists all data updates; otherwise, it rolls them back.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4994-4996 | Añadido el sábado, 12 de agosto de 2023 09:52:28

Definition A unit of work maintains a list of objects affected by a business operation. Once the operation is completed, the unit of work figures out all updates that need to be done to alter the database and executes those updates as a single unit (hence the pattern name).
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 4997-5000 | Añadido el sábado, 12 de agosto de 2023 09:53:31

The main advantage of a unit of work over a plain transaction is the deferral of updates. Unlike a transaction, a unit of work executes all updates at the end of the business operation, thus minimizing the duration of the underlying database transaction and reducing data congestion (see figure 10.6). Often, this pattern also helps to reduce the number of database calls.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 5038-5041 | Añadido el sábado, 12 de agosto de 2023 09:58:47

Non-relational databases approach inconsistencies from a different angle: they require you to design your documents such that no business operation modifies more than one of those documents at a time. This is possible because documents are more flexible than rows in relational databases. A single document can store data of any shape and complexity and thus capture side effects of even the most sophisticated business operations.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 5042-5043 | Añadido el sábado, 12 de agosto de 2023 09:59:05

In domain-driven design, there’s a guideline saying that you shouldn’t modify more than one aggregate per business operation. This guideline serves the same goal: protecting you from data
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 5042-5043 | Añadido el sábado, 12 de agosto de 2023 09:59:15

In domain-driven design, there’s a guideline saying that you shouldn’t modify more than one aggregate per business operation. This guideline serves the same goal: protecting you from data inconsistencies.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 5042-5045 | Añadido el sábado, 12 de agosto de 2023 09:59:32

In domain-driven design, there’s a guideline saying that you shouldn’t modify more than one aggregate per business operation. This guideline serves the same goal: protecting you from data inconsistencies. The guideline is only applicable to systems that work with document databases, though, where each document corresponds to one aggregate. 10.2.2.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 5045-5047 | Añadido el sábado, 12 de agosto de 2023 10:00:50

When it comes to managing database transactions in integration tests, adhere to the following guideline: don’t reuse database transactions or units of work between sections of the test.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 5077-5078 | Añadido el sábado, 12 de agosto de 2023 10:03:45

This test uses the same instance of CrmContext in all three sections: arrange, act, and assert.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 5080-5082 | Añadido el sábado, 12 de agosto de 2023 10:04:33

To avoid the risk of inconsistent behavior, integration tests should replicate the production environment as closely as possible, which means the act section must not share CrmContext with anyone else. The arrange and assert sections must get their own instances of
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 5080-5084 | Añadido el sábado, 12 de agosto de 2023 10:04:58

To avoid the risk of inconsistent behavior, integration tests should replicate the production environment as closely as possible, which means the act section must not share CrmContext with anyone else. The arrange and assert sections must get their own instances of CrmContext too, because, as you might remember from chapter 8, it’s important to check the state of the database independently of the data used as input parameters.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 5080-5085 | Añadido el sábado, 12 de agosto de 2023 10:05:30

To avoid the risk of inconsistent behavior, integration tests should replicate the production environment as closely as possible, which means the act section must not share CrmContext with anyone else. The arrange and assert sections must get their own instances of CrmContext too, because, as you might remember from chapter 8, it’s important to check the state of the database independently of the data used as input parameters. And although the assert section does query the user and the company independently of the arrange section, these sections still share the same database context. That context can (and many ORMs
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 5080-5085 | Añadido el sábado, 12 de agosto de 2023 10:05:36

To avoid the risk of inconsistent behavior, integration tests should replicate the production environment as closely as possible, which means the act section must not share CrmContext with anyone else. The arrange and assert sections must get their own instances of CrmContext too, because, as you might remember from chapter 8, it’s important to check the state of the database independently of the data used as input parameters. And although the assert section does query the user and the company independently of the arrange section, these sections still share the same database context. That context can (and many ORMs
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 5080-5085 | Añadido el sábado, 12 de agosto de 2023 10:05:41

To avoid the risk of inconsistent behavior, integration tests should replicate the production environment as closely as possible, which means the act section must not share CrmContext with anyone else. The arrange and assert sections must get their own instances of CrmContext too, because, as you might remember from chapter 8, it’s important to check the state of the database independently of the data used as input parameters. And although the assert section does query the user and the company independently of the arrange section, these sections still share the same database context. That context can (and many ORMs do) cache the requested data for performance improvements.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 5086-5087 | Añadido el sábado, 12 de agosto de 2023 10:05:52

Tip Use at least three transactions or units of work in an integration test: one per each arrange, act, and assert section.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 5089-5092 | Añadido el sábado, 12 de agosto de 2023 10:12:20

Test data life cycle The shared database raises the problem of isolating integration tests from each other. To solve this problem, you need to Execute integration tests sequentially. Remove leftover data between test runs. Overall, your tests shouldn’t depend on the state of the database. Your tests should bring that state to the required condition on their own.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 5093-5095 | Añadido el sábado, 12 de agosto de 2023 10:12:56

Parallel execution of integration tests involves significant effort. You have to ensure that all test data is unique so no database constraints are violated and tests don’t accidentally pick up input data after each other.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 5096-5098 | Añadido el sábado, 12 de agosto de 2023 10:13:38

Most unit testing frameworks allow you to define separate test collections and selectively disable parallelization in them. Create two such collections (for unit and integration tests), and then disable test parallelization in the collection with the integration tests.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 5104-5105 | Añadido el sábado, 12 de agosto de 2023 10:14:54

don’t recommend using containers unless you absolutely need to minimize your integration tests’ execution time.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 5119-5120 | Añadido el sábado, 12 de agosto de 2023 10:17:21

Tip There’s no need for a separate teardown phase; implement that phase as part of the arrange section.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 5106-5118 | Añadido el sábado, 12 de agosto de 2023 10:17:30

Clearing data between test runs There are four options to clean up leftover data between test runs: Restoring a database backup before each test— This approach addresses the problem of data cleanup but is much slower than the other three options. Even with containers, the removal of a container instance and creation of a new one usually takes several seconds, which quickly adds to the total test suite execution time. Cleaning up data at the end of a test— This method is fast but susceptible to skipping the cleanup phase. If the build server crashes in the middle of the test, or you shut down the test in the debugger, the input data remains in the database and affects further test runs. Wrapping each test in a database transaction and never committing it— In this case, all changes made by the test and the SUT are rolled back automatically. This approach solves the problem of skipping the cleanup phase but poses another issue: the introduction of an overarching transaction can lead to inconsistent behavior between the production and test environments. It’s the same problem as with reusing a unit of work: the additional transaction creates a setup that’s different than that in production. Cleaning up data at the beginning of a test— This is the best option. It works fast, doesn’t result in inconsistent behavior, and isn’t prone to accidentally skipping the cleanup phase.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 5121-5122 | Añadido el sábado, 12 de agosto de 2023 10:18:14

The data removal itself must be done in a particular order, to honor the database’s foreign key constraints.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 5123-5124 | Añadido el sábado, 12 de agosto de 2023 10:18:19

Write the SQL script manually: it’s simpler and gives you more granular control over the deletion process.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 5124-5126 | Añadido el sábado, 12 de agosto de 2023 10:18:35

Introduce a base class for all integration tests, and put the deletion script there. With such a base class, you will have the script run automatically at the start of each test, as shown in the following listing.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 5136-5138 | Añadido el sábado, 12 de agosto de 2023 10:19:40

Tip The deletion script must remove all regular data but none of the reference data. Reference data, along with the rest of the database schema, should be controlled solely by migrations.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 5145-5146 | Añadido el sábado, 12 de agosto de 2023 10:20:32

This is, once again, the problem of a mismatch between production and test environments.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 5149-5150 | Añadido el sábado, 12 de agosto de 2023 10:20:54

Tip Use the same database management system (DBMS) in tests as in production. It’s usually fine for the version or edition to differ, but the vendor must remain the same.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 5152-5154 | Añadido el sábado, 12 de agosto de 2023 10:21:30

Integration tests can quickly grow too large and thus lose ground on the maintainability metric. It’s important to keep integration tests as short as possible but without coupling them to each other or affecting readability. Even the shortest tests shouldn’t depend on one another.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 5152-5155 | Añadido el sábado, 12 de agosto de 2023 10:21:54

Integration tests can quickly grow too large and thus lose ground on the maintainability metric. It’s important to keep integration tests as short as possible but without coupling them to each other or affecting readability. Even the shortest tests shouldn’t depend on one another. They also should preserve the full context of the test scenario and shouldn’t require you to examine different parts of the test class to understand what’s going on.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 5155-5156 | Añadido el sábado, 12 de agosto de 2023 10:22:10

The best way to shorten integration is by extracting technical, non-business-related bits into private methods or helper classes.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 5192-5201 | Añadido el sábado, 12 de agosto de 2023 10:26:51

Object Mother vs. Test Data Builder The pattern shown in listings 10.9 and 10.10 is called the Object Mother. The Object Mother is a class or method that helps create test fixtures (objects the test runs against). There’s another pattern that helps achieve the same goal of reusing code in arrange sections: Test Data Builder. It works similarly to Object Mother but exposes a fluent interface instead of plain methods. Here’s a Test Data Builder usage example: User user = new UserBuilder()     .WithEmail("user@mycorp.com")     .WithType(UserType.Employee)     .Build(); Test Data Builder slightly improves test readability but requires too much boilerplate. For that reason, I recommend sticking to the Object Mother (at least in C#, where you have optional arguments as a language feature). Where
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 5192-5201 | Añadido el sábado, 12 de agosto de 2023 10:27:33

Object Mother vs. Test Data Builder The pattern shown in listings 10.9 and 10.10 is called the Object Mother. The Object Mother is a class or method that helps create test fixtures (objects the test runs against). There’s another pattern that helps achieve the same goal of reusing code in arrange sections: Test Data Builder. It works similarly to Object Mother but exposes a fluent interface instead of plain methods. Here’s a Test Data Builder usage example: User user = new UserBuilder()     .WithEmail("user@mycorp.com")     .WithType(UserType.Employee)     .Build(); Test Data Builder slightly improves test readability but requires too much boilerplate. For that reason, I recommend sticking to the Object Mother (at least in C#, where you have optional arguments as a language feature). Where to put factory methods When you
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 5192-5200 | Añadido el sábado, 12 de agosto de 2023 10:27:44

Object Mother vs. Test Data Builder The pattern shown in listings 10.9 and 10.10 is called the Object Mother. The Object Mother is a class or method that helps create test fixtures (objects the test runs against). There’s another pattern that helps achieve the same goal of reusing code in arrange sections: Test Data Builder. It works similarly to Object Mother but exposes a fluent interface instead of plain methods. Here’s a Test Data Builder usage example: User user = new UserBuilder()     .WithEmail("user@mycorp.com")     .WithType(UserType.Employee)     .Build(); Test Data Builder slightly improves test readability but requires too much boilerplate. For that reason, I recommend sticking to the Object Mother (at least in C#, where you have optional arguments as a language feature).
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 5201-5205 | Añadido el sábado, 12 de agosto de 2023 10:27:50

Where to put factory methods When you start distilling the tests’ essentials and move the technicalities out to factory methods, you face the question of where to put those methods. Should they reside in the same class as the tests? The base IntegrationTests class? Or in a separate helper class? Start simple. Place the factory methods in the same class by default. Move them into separate helper classes only when code duplication becomes a significant issue. Don’t put the factory methods in the base class; reserve that class for code that has to run in every test, such as data cleanup.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 5238-5238 | Añadido el sábado, 12 de agosto de 2023 10:34:06

Does the test create too many database transactions?
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 5221-5221 | Añadido el sábado, 12 de agosto de 2023 10:35:31

Reusing code in assert sections
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 5206-5206 | Añadido el sábado, 12 de agosto de 2023 10:35:39

Reusing code in act sections
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 5260-5264 | Añadido el sábado, 12 de agosto de 2023 10:37:40

Is the increased number of database transactions a problem? And, if so, what can you do about it? The additional database contexts are a problem to some degree because they make the test slower, but there’s not much that can be done about it. It’s another example of a trade-off between different aspects of a valuable test: this time between fast feedback and maintainability. It’s worth it to make that trade-off and exchange performance for maintainability in this particular case. The performance degradation shouldn’t be that significant, especially when the database is located on the developer’s machine. At the same time, the gains in maintainability are quite substantial.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 5271-5275 | Añadido el sábado, 12 de agosto de 2023 10:41:28

It’s crucial to thoroughly test writes, because the stakes are high. Mistakes in write operations often lead to data corruption, which can affect not only your database but also external applications. Tests that cover writes are highly valuable due to the protection they provide against such mistakes. This is not the case for reads: a bug in a read operation usually doesn’t have consequences that are as detrimental. Therefore, the threshold for testing reads should be higher than that for writes. Test only the most complex or important read operations; disregard the rest.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 5275-5276 | Añadido el sábado, 12 de agosto de 2023 10:41:45

Note that there’s also no need for a domain model in reads.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 5276-5277 | Añadido el sábado, 12 de agosto de 2023 10:41:58

One of the main goals of domain modeling is encapsulation. And, as you might remember from chapters 5 and 6, encapsulation is about preserving data consistency in light of any changes.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 5276-5277 | Añadido el sábado, 12 de agosto de 2023 10:42:09

One of the main goals of domain modeling is encapsulation. And, as you might remember from chapters 5 and 6, encapsulation is about preserving data consistency in light of any changes.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 5276-5277 | Añadido el sábado, 12 de agosto de 2023 10:42:15

One of the main goals of domain modeling is encapsulation. And, as you might remember from chapters 5 and 6, encapsulation is about preserving data consistency in light of any changes.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 5276-5278 | Añadido el sábado, 12 de agosto de 2023 10:42:32

One of the main goals of domain modeling is encapsulation. And, as you might remember from chapters 5 and 6, encapsulation is about preserving data consistency in light of any changes. The lack of data changes makes encapsulation of reads pointless.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 5287-5290 | Añadido el sábado, 12 de agosto de 2023 10:45:51

It might seem beneficial to test how repositories map domain objects to the database. After all, there’s significant room for a mistake in this functionality. Still, such tests are a net loss to your test suite due to high maintenance costs and inferior protection against regressions. Let’s discuss these two drawbacks in more detail. High maintenance costs
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 5291-5292 | Añadido el sábado, 12 de agosto de 2023 10:46:27

They exhibit little complexity and communicate with an out-of-process dependency: the database. The presence of that out-of-process dependency is what inflates the tests’ maintenance costs.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 5297-5299 | Añadido el sábado, 12 de agosto de 2023 10:47:18

Repositories don’t carry that much complexity, and a lot of the gains in protection against regressions overlap with the gains provided by regular integration tests. Thus, tests on repositories don’t add significant enough value.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 5299-5301 | Añadido el sábado, 12 de agosto de 2023 10:47:38

The best course of action in testing a repository is to extract the little complexity it has into a self-contained algorithm and test that algorithm exclusively. That’s what UserFactory and CompanyFactory were for in earlier chapters.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 5299-5302 | Añadido el sábado, 12 de agosto de 2023 10:47:45

The best course of action in testing a repository is to extract the little complexity it has into a self-contained algorithm and test that algorithm exclusively. That’s what UserFactory and CompanyFactory were for in earlier chapters. These two classes performed all the mappings without taking on any collaborators, out-of-process or otherwise. The repositories (the Database class) only contained simple SQL queries.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 5302-5303 | Añadido el sábado, 12 de agosto de 2023 10:50:39

Unfortunately, such a separation between data mapping (formerly performed by the factories) and interactions with the database (formerly performed by Database) is impossible when using an ORM.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 5304-5305 | Añadido el sábado, 12 de agosto de 2023 10:50:44

Therefore, adhere to the following guideline: don’t test repositories directly, only as part of the overarching integration test suite.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 5314-5343 | Añadido el sábado, 12 de agosto de 2023 10:52:07

Summary Store database schema in a source control system, along with your source code. Database schema consists of tables, views, indexes, stored procedures, and anything else that forms a blueprint of how the database is constructed. Reference data is also part of the database schema. It is data that must be prepopulated in order for the application to operate properly. To differentiate between reference and regular data, look at whether your application can modify that data. If so, it’s regular data; otherwise, it’s reference data. Have a separate database instance for every developer. Better yet, host that instance on the developer’s own machine for maximum test execution speed. The state-based approach to database delivery makes the state explicit and lets a comparison tool implicitly control migrations. The migration-based approach emphasizes the use of explicit migrations that transition the database from one state to another. The explicitness of the database state makes it easier to handle merge conflicts, while explicit migrations help tackle data motion. Prefer the migration-based approach over state-based, because handling data motion is much more important than merge conflicts. Apply every modification to the database schema (including reference data) through migrations. Business operations must update data atomically. To achieve atomicity, rely on the underlying database’s transaction mechanism. Use the unit of work pattern when possible. A unit of work relies on the underlying database’s transactions; it also defers all updates to the end of the business operation, thus improving performance. Don’t reuse database transactions or units of work between sections of the test. Each arrange, act, and assert section should have its own transaction or unit of work. Execute integration tests sequentially. Parallel execution involves significant effort and usually is not worth it. Clean up leftover data at the start of a test. This approach works fast, doesn’t result in inconsistent behavior, and isn’t prone to accidentally skipping the cleanup phase. With this approach, you don’t have to introduce a separate teardown phase, either. Avoid in-memory databases such as SQLite. You’ll never gain good protection if your tests run against a database from a different vendor. Use the same database management system in tests as in production. Shorten tests by extracting non-essential parts into private methods or helper classes: For the arrange section, choose Object Mother over Test Data Builder. For act, create decorator methods. For assert, introduce a fluent interface. The threshold for testing reads should be higher than that for writes. Test only the most complex or important read operations; disregard the rest. Don’t test repositories directly, but only as part of the overarching integration test suite. Tests on repositories introduce too high maintenance costs for too few additional gains in protection against regressions. Part 4. Unit testing anti-patterns This final part of the book covers common unit testing anti-patterns. You’ve most likely encountered some of them in the past. Still, it’s interesting to look at this topic using the four attributes of a good unit test defined in chapter 4. You can use those attributes to analyze any unit testing concepts or patterns; anti-patterns aren’t an exception.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 5314-5339 | Añadido el sábado, 12 de agosto de 2023 10:52:18

Summary Store database schema in a source control system, along with your source code. Database schema consists of tables, views, indexes, stored procedures, and anything else that forms a blueprint of how the database is constructed. Reference data is also part of the database schema. It is data that must be prepopulated in order for the application to operate properly. To differentiate between reference and regular data, look at whether your application can modify that data. If so, it’s regular data; otherwise, it’s reference data. Have a separate database instance for every developer. Better yet, host that instance on the developer’s own machine for maximum test execution speed. The state-based approach to database delivery makes the state explicit and lets a comparison tool implicitly control migrations. The migration-based approach emphasizes the use of explicit migrations that transition the database from one state to another. The explicitness of the database state makes it easier to handle merge conflicts, while explicit migrations help tackle data motion. Prefer the migration-based approach over state-based, because handling data motion is much more important than merge conflicts. Apply every modification to the database schema (including reference data) through migrations. Business operations must update data atomically. To achieve atomicity, rely on the underlying database’s transaction mechanism. Use the unit of work pattern when possible. A unit of work relies on the underlying database’s transactions; it also defers all updates to the end of the business operation, thus improving performance. Don’t reuse database transactions or units of work between sections of the test. Each arrange, act, and assert section should have its own transaction or unit of work. Execute integration tests sequentially. Parallel execution involves significant effort and usually is not worth it. Clean up leftover data at the start of a test. This approach works fast, doesn’t result in inconsistent behavior, and isn’t prone to accidentally skipping the cleanup phase. With this approach, you don’t have to introduce a separate teardown phase, either. Avoid in-memory databases such as SQLite. You’ll never gain good protection if your tests run against a database from a different vendor. Use the same database management system in tests as in production. Shorten tests by extracting non-essential parts into private methods or helper classes: For the arrange section, choose Object Mother over Test Data Builder. For act, create decorator methods. For assert, introduce a fluent interface. The threshold for testing reads should be higher than that for writes. Test only the most complex or important read operations; disregard the rest. Don’t test repositories directly, but only as part of the overarching integration test suite. Tests on repositories introduce too high maintenance costs for too few additional gains in protection against regressions.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 5348-5349 | Añadido el sábado, 12 de agosto de 2023 10:57:28

An anti-pattern is a common solution to a recurring problem that looks appropriate on the surface but leads to problems further down the road.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 5362-5366 | Añadido el sábado, 12 de agosto de 2023 11:01:20

Assuming the observable behavior already has reasonable test coverage, there can be two issues at play: This is dead code. If the uncovered code isn’t being used, this is likely some extraneous code left after a refactoring. It’s best to delete this code. There’s a missing abstraction. If the private method is too complex (and thus is hard to test via the class’s public API), it’s an indication of a missing abstraction that should be extracted into a separate class.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 5444-5446 | Añadido el sábado, 12 de agosto de 2023 11:11:22

your tests should interact with the system under test (SUT) exactly the same way as the production code and shouldn’t have any special privileges.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 5489-5490 | Añadido el sábado, 12 de agosto de 2023 11:16:24

It can seem counterintuitive at first, but hardcoding the expected result is a good practice when it comes to unit testing.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 5495-5496 | Añadido el sábado, 12 de agosto de 2023 11:18:31

Definition Code pollution is adding production code that’s only needed for testing.
==========
Unit_Testing_Principles_Practices_and_ (Vladimir Khorikov)
- La subrayado en la posición 5574-5575 | Añadido el sábado, 12 de agosto de 2023 11:25:28

The necessity to mock a concrete class in order to preserve part of its functionality is a result of violating the Single Responsibility principle.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- El marcador en la posición 190 | Añadido el domingo, 13 de agosto de 2023 01:45:29


==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 232-233 | Añadido el domingo, 13 de agosto de 2023 18:15:43

one of Scrum’s most important tenets: knowledge acquisition.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 266-268 | Añadido el domingo, 13 de agosto de 2023 18:25:17

Questions about whether design is necessary or affordable are quite beside the point: design is inevitable. The alternative to good design is bad design, not no design at all. —Book Design: A Practical Introduction by Douglas Martin
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 270-272 | Añadido el domingo, 13 de agosto de 2023 18:26:28

No Design will actually produce an amalgamation of five different designs in one. That is, you get a blend of five different made-up business language interpretations that are developed without the benefit of the real Domain Experts. The bottom line: we model whether
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 275-275 | Añadido el domingo, 13 de agosto de 2023 18:27:48

but
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 281-282 | Añadido el domingo, 13 de agosto de 2023 18:31:22

word closely related to good is effective, and it possibly more accurately states what we should strive for in software design: effective design.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 279-281 | Añadido el domingo, 13 de agosto de 2023 18:31:31

If you are afraid that producing software with thoughtful design is expensive, think of how much more expensive it’s going to be to live with or even fix a bad design. This is especially so when we are talking about software that needs to distinguish your organization from all others and yield considerable competitive advantages.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 285-286 | Añadido el domingo, 13 de agosto de 2023 18:31:53

In Scrum, knowledge acquisition is done through experimentation and collaborative learning and is referred to as “buying information” [Essential
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 325-326 | Añadido el martes, 15 de agosto de 2023 07:31:17

DDD is primarily about modeling a Ubiquitous Language in an explicitly Bounded Context.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 327-328 | Añadido el martes, 15 de agosto de 2023 07:31:31

Bounded Context is a semantic contextual boundary.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 327-329 | Añadido el martes, 15 de agosto de 2023 07:31:57

Bounded Context is a semantic contextual boundary. This means that within the boundary each component of the software model has a specific meaning and does specific things. The components inside a Bounded Context are context specific and semantically motivated.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 339-340 | Añadido el martes, 15 de agosto de 2023 07:42:51

Your solution space is where you actually implement the solution that your problem space discussions identify as your Core Domain.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 339-344 | Añadido el martes, 15 de agosto de 2023 07:43:06

Your solution space is where you actually implement the solution that your problem space discussions identify as your Core Domain. When the Bounded Context is being developed as a key strategic initiative of your organization, it’s called the Core Domain. You develop your solution in the Bounded Context as code, both main source and test source. You will also produce code in your solution space that supports integration with other Bounded Contexts.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 337-339 | Añadido el martes, 15 de agosto de 2023 07:43:27

In practice, Context Maps work very well in the problem space. Note too that Bounded Contexts may be used in problem space discussions, when needed, but are also closely associated with your solution space.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 336-337 | Añadido el martes, 15 de agosto de 2023 07:43:47

Your problem space is where you perform high-level strategic analysis and design steps within the constraints of a given project.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 346-349 | Añadido el martes, 15 de agosto de 2023 07:46:30

The language is called the Ubiquitous Language because it is both spoken among the team members and implemented in the software model. Thus, it is necessary that the Ubiquitous Language be rigorous—strict, exact, stringent, and tight. In the diagram, the boxes inside the Bounded Context represent the concepts of the model, which may be implemented as classes. When the Bounded Context is being developed as a key strategic initiative of your organization, it’s called the Core Domain.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 364-366 | Añadido el martes, 15 de agosto de 2023 07:52:15

There should be one team assigned to work on one Bounded Context. There should also be a separate source code repository for each Bounded Context. It is possible that one team could work on multiple Bounded Contexts, but multiple teams should not work on a single Bounded Context.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 394-395 | Añadido el martes, 15 de agosto de 2023 07:59:54

Thus, a Big Ball of Mud is often the result of unbridled effort made by a team of software developers who don’t listen to the business experts.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 461-462 | Añadido el martes, 15 de agosto de 2023 08:26:44

You need at least two fundamental strategic design tools. One is the Bounded Context and the other is the Ubiquitous Language.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 462-464 | Añadido el martes, 15 de agosto de 2023 08:26:54

Employing a Bounded Context forces us to answer the question “What is core?” The Bounded Context should hold closely all concepts that are core to the strategic initiative and push out all others.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 477-478 | Añadido el martes, 15 de agosto de 2023 08:33:39

So, how do we know what is core? This is where we have to bring together two vital groups of individuals into one cohesive, collaborative team: Domain Experts and software developers.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 481-487 | Añadido el martes, 15 de agosto de 2023 08:35:42

Product Owner or Domain Expert? You may wonder what the difference is between a Scrum product owner and a DDD Domain Expert. Well, in some cases they might be one and the same, that is, one person capable of filling both roles. Yet it should not be surprising that a product owner is typically more focused on managing and prioritizing the product backlog and seeing to it that the conceptual and technical continuity of the project is maintained. This doesn’t mean, however, that the product owner is naturally an expert in the business’s core competency in which you are working. Make sure that you have a true Domain Expert on the team, and don’t substitute a product owner without the necessary know-how instead.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 495-495 | Añadido el martes, 15 de agosto de 2023 08:38:00

Focus on Business Complexity, Not Technical Complexity
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 495-499 | Añadido el martes, 15 de agosto de 2023 08:39:00

Focus on Business Complexity, Not Technical Complexity You are using DDD because the business model complexity is high. We never want to make the domain model more complex than it should be. Still, you are using DDD because the business model is more complex than the technical aspects of the project. That’s why the developers have to dig into the business model with Domain Experts!
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 500-502 | Añadido el martes, 15 de agosto de 2023 08:39:45

Both developers and Domain Experts should reject any tendency to allow documents to rule over conversation. The best Ubiquitous Language will be developed by a collaborative feedback loop that drives out the combined mental model of the team. Open conversation, exploration, and challenges to your current knowledge base result in deeper insights about the Core Domain.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 554-555 | Añadido el martes, 15 de agosto de 2023 08:50:01

Nouns are important, but often software developers put too much emphasis on the nouns within a domain model, forgetting that spoken language is composed of far more than nouns alone.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 562-564 | Añadido el martes, 15 de agosto de 2023 08:52:14

Don’t limit your Core Domain to nouns alone. Rather, consider expressing your Core Domain as a set of concrete scenarios about what the domain model is supposed to do.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 573-573 | Añadido el martes, 15 de agosto de 2023 08:56:21

we are constantly on the lookout for ways to improve the model.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 573-573 | Añadido el martes, 15 de agosto de 2023 08:56:51

and a perk of using DDD is that we are constantly on the lookout for ways to improve the model.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 576-580 | Añadido el martes, 15 de agosto de 2023 08:59:08

We can even draw simple pictures and diagrams. It’s all about doing whatever is needed to communicate well on the team. One word of warning is appropriate here. Be careful about the time spent in your domain-modeling efforts when it comes to keeping documents with written scenarios and drawings and diagrams up-to-date over the long haul. Those things are not the domain model. Rather, they are just tools to help you develop a domain model. In the end the code is the model and the model is the code.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 626-637 | Añadido el martes, 15 de agosto de 2023 09:12:14

Putting Scenarios to Work You may be wondering how you can make the transition from a written scenario to some sort of artifact that can be used to validate your domain model against the team’s specifications. There is a technique named Specification by Example [Specification] that can be used; it’s also called Behavior-Driven Development [BDD]. What you are trying to achieve with this approach is to collaboratively develop and refine a Ubiquitous Language, model with a shared understanding, and determine whether your model adheres to your specifications. You will do this by creating acceptance tests. Here is how we might restate the preceding scenario as an executable specification: Click here to view code image Scenario: The product owner commits a backlog item to a sprint Given a backlog item that is scheduled for release And the product owner of the backlog item And a sprint for commitment And a quorum of team approval for commitment When the product owner commits the backlog item to the sprint Then the backlog item is committed to the sprint And the backlog item committed event is created
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 658-659 | Añadido el martes, 15 de agosto de 2023 09:28:06

your domain model through a series of red results until you fully support your specification and the validations pass (you see all green). These
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 662-663 | Añadido el martes, 15 de agosto de 2023 09:28:55

takes place over a long period of time, even during what some might refer to as “maintenance.”
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 662-664 | Añadido el martes, 15 de agosto de 2023 09:28:59

Actually, some of the best learning, or knowledge acquisition, takes place over a long period of time, even during what some might refer to as “maintenance.” It is a mistake for teams to take the view that innovation ends when maintenance begins.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 677-679 | Añadido el martes, 15 de agosto de 2023 09:32:47

Technology-Free Domain Model Although there will be technology scattered throughout your architecture, the domain model should be free of technology. For one thing, that’s why transactions are managed by the application services and not by the domain model.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 718-722 | Añadido el martes, 15 de agosto de 2023 09:39:40

Because DDD strategic design was used, the teams achieved the most optimal modeling composition: one Subdomain per Bounded Context, and one Bounded Context per Subdomain. In other words, the Agile Project Management Core is both one clean Bounded Context and one clean Subdomain. In some situations, there may be multiple Subdomains in one Bounded Context, but that doesn’t achieve the most optimal modeling outcome.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 722-724 | Añadido el martes, 15 de agosto de 2023 09:39:57

What Is a Subdomain? Simply stated, a Subdomain is a sub-part of your overall business domain. You can think of a Subdomain as representing a single, logical domain model.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 727-730 | Añadido el martes, 15 de agosto de 2023 09:40:52

Another way to think of a Subdomain is that it is a clear area of expertise, assuming that it is responsible for providing a solution to a core area of your business. This implies that the particular Subdomain will have one or more Domain Experts who understand very well the aspects of the business that a specific Subdomain facilitates. The Subdomain also has greater or lesser strategic significance to your business.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 741-745 | Añadido el martes, 15 de agosto de 2023 09:43:22

Supporting Subdomain: This is a modeling situation that calls for custom development, because an off-the-shelf solution doesn’t exist. However, you will still not make the kind of investment that you have made for your Core Domain. You may want to consider outsourcing this kind of Bounded Context to avoid mistaking it for something strategically distinguishing, and thus investing heavily in it. This is still an important software model, because your Core Domain cannot be successful without it.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 746-746 | Añadido el martes, 15 de agosto de 2023 09:44:06

for purchase off the shelf but may also be outsourced or even
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 745-747 | Añadido el martes, 15 de agosto de 2023 09:44:15

Generic Subdomain: This kind of solution may be available for purchase off the shelf but may also be outsourced or even developed in house by a team that doesn’t have the kind of elite developers that you assign to your Core Domain or even a lesser Supporting Subdomain.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 735-737 | Añadido el martes, 15 de agosto de 2023 09:44:32

Core Domain: This is where you are making a strategic investment in a single, well-defined domain model, committing significant resources for carefully crafting your Ubiquitous Language in an explicit Bounded Context. This is very high on your organization’s list of projects because it will distinguish it from all competitors.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 771-772 | Añadido el martes, 15 de agosto de 2023 09:50:26

When using DDD, a Bounded Context should align one-to-one (1:1) with a single Subdomain. That is, when using DDD, if there is one Bounded Context, there is, as a goal, one Subdomain model in that Bounded Context.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 771-774 | Añadido el martes, 15 de agosto de 2023 09:50:39

When using DDD, a Bounded Context should align one-to-one (1:1) with a single Subdomain. That is, when using DDD, if there is one Bounded Context, there is, as a goal, one Subdomain model in that Bounded Context. It may not always be possible or practical to achieve, but where possible it is important to design in that way. This will keep your Bounded Contexts clean and focused on the core strategic initiative.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 774-778 | Añadido el martes, 15 de agosto de 2023 09:51:27

If you must create a second model in the same Bounded Context (within your Core Domain), you should segregate the secondary model from your Core Domain using a completely separate Module [IDDD]. (A DDD Module is basically a package in Scala and Java, and a namespace in F# and C#.) This makes a clear linguistic statement that one model is core and the other is merely supporting. This particular use of segregating a Subdomain is one that you would employ in your solution space.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 812-815 | Añadido el martes, 15 de agosto de 2023 09:58:32

When we talk about Context Mapping, what is of interest to us is what kind of inter-team relationship and integration is represented by the line between any two Bounded Contexts. Well-defined boundaries and contracts between them support controlled changes over time. There are several kinds of Context Mappings, both team and technical, that can be represented by the line. In some cases both an inter-team relationship and an integration mapping will be blended.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 818-823 | Añadido el martes, 15 de agosto de 2023 10:02:28

A Partnership relationship exists between two teams. Each team is responsible for one Bounded Context. They create a Partnership to align the two teams with a dependent set of goals. It is said that the two teams will succeed or fail together. Since they are so closely aligned, they will meet frequently to synchronize schedules and dependent work, and they will have to use continuous integration to keep their integrations in harmony. The synchronization is represented by the thick mapping line between the two teams. The thick line indicates the level of commitment required, which is quite high. It can be challenging to maintain
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- El marcador en la posición 817 | Añadido el martes, 15 de agosto de 2023 10:02:34


==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 828-832 | Añadido el martes, 15 de agosto de 2023 10:07:33

Bounded Contexts, describes the relationship between two (or more) teams that share a small but common model. The teams must agree on what model elements they are to share. It’s possible that only one of the teams will maintain the code, build, and test for what is shared. A Shared Kernel is often very difficult to conceive in the first place, and difficult to maintain, because you must have open communication between teams and constant agreement on what constitutes the model to be shared. Still, it is possible to be successful if all involved are committed to the idea that the kernel is better than going Separate Ways (see the later section).
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 834-837 | Añadido el martes, 15 de agosto de 2023 10:08:17

Customer-Supplier describes a relationship between two Bounded Contexts and respective teams, where the Supplier is upstream (the U in the diagram) and the Customer is downstream (the D in the diagram). The Supplier holds sway in this relationship because it must provide what the Customer needs. It’s up to the Customer to plan with the Supplier to meet various expectations, but in the end the Supplier determines what the Customer will get and when.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 834-839 | Añadido el martes, 15 de agosto de 2023 10:08:39

Customer-Supplier describes a relationship between two Bounded Contexts and respective teams, where the Supplier is upstream (the U in the diagram) and the Customer is downstream (the D in the diagram). The Supplier holds sway in this relationship because it must provide what the Customer needs. It’s up to the Customer to plan with the Supplier to meet various expectations, but in the end the Supplier determines what the Customer will get and when. This is a very typical and practical relationship between teams, even within the same organization, as long as corporate culture does not allow the Supplier to be completely autonomous and unresponsive to the real needs of Customers.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 840-846 | Añadido el martes, 15 de agosto de 2023 10:09:36

Conformist A Conformist relationship exists when there are upstream and downstream teams, and the upstream team has no motivation to support the specific needs of the downstream team. For various reasons the downstream team cannot sustain an effort to translate the Ubiquitous Language of the upstream model to fit its specific needs, so the team conforms to the upstream model as is. A team will often become a Conformist, for example, when integrating with a very large and complex model that is well established. Example: Consider the need to conform to the Amazon.com model when integrating as one of Amazon’s affiliate sellers.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 847-850 | Añadido el martes, 15 de agosto de 2023 10:11:49

An Anticorruption Layer is the most defensive Context Mapping relationship, where the downstream team creates a translation layer between its Ubiquitous Language (model) and the Ubiquitous Language (model) that is upstream to it. The layer isolates the downstream model from the upstream model and translates between the two. Thus, this is also an approach to integration. Whenever possible, you should try to create an Anticorruption
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 854-859 | Añadido el martes, 15 de agosto de 2023 10:13:23

Open Host Service defines a protocol or interface that gives access to your Bounded Context as a set of services. The protocol is “open” so that all who need to integrate with your Bounded Context can use it with relative ease. The services offered by the application programming interface (API) are well documented and a pleasure to use. Even if you were Team 2 in this diagram and could not take time to create an isolating Anticorruption Layer for your side of the integration, it would be much more tolerable to be a Conformist to this model than many legacy systems you may encounter. We might say that the language of the Open Host Service is much easier to consume than that of other types of systems.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 860-866 | Añadido el martes, 15 de agosto de 2023 10:14:56

Published Language A Published Language, illustrated in the image at the bottom of page 57, is a well-documented information exchange language enabling simple consumption and translation by any number of consuming Bounded Contexts. Consumers who both read and write can translate from and into the shared language with confidence that their integrations are correct. Such a Published Language can be defined with XML Schema, JSON Schema, or a more optimal wire format, such as Protobuf or Avro. Often an Open Host Service serves and consumes a Published Language, which provides the best integration experience for third parties. This combination makes the translations between two Ubiquitous Languages very convenient.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 867-871 | Añadido el martes, 15 de agosto de 2023 10:15:32

Separate Ways Separate Ways describes a situation where integration with one or more Bounded Contexts will not produce significant payoff through the consumption of various Ubiquitous Languages. Perhaps the functionality that you seek is not fully provided by any one Ubiquitous Language. In this case produce your own specialized solution in your Bounded Context and forget integrating for this special case.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 909-911 | Añadido el viernes, 18 de agosto de 2023 00:20:09

There is a very certain way of thinking when you use RESTful HTTP. I won’t get into the details in this book, but you should look into it before trying to employ REST. The book REST in Practice [RiP] is a good place to start.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 909-913 | Añadido el viernes, 18 de agosto de 2023 00:20:45

There is a very certain way of thinking when you use RESTful HTTP. I won’t get into the details in this book, but you should look into it before trying to employ REST. The book REST in Practice [RiP] is a good place to start. A service Bounded Context that sports a REST interface should provide an Open Host Service and a Published Language. Resources deserve to be defined as a Published Language, and combined with your REST URIs they will form a natural Open Host Service.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 917-922 | Añadido el viernes, 18 de agosto de 2023 00:22:31

A common mistake made when using REST is to design resources that directly reflect the Aggregates in the domain model. Doing this forces every client into a Conformist relationship, where if the model changes shape the resources will also. So you don’t want to do that. Instead, resources should be designed synthetically to follow client-driven use cases. By “synthetic” I mean that to the client the resources provided must have the shape and composition of what they need, not what the actual domain model looks like. Sometimes the model will look just like what the client needs. But what the client needs is what drives the design of the resources, and not the model’s current composition.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 928-929 | Añadido el viernes, 18 de agosto de 2023 00:28:13

Going Asynchronous with REST It’s possible to accomplish asynchronous
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 935-939 | Añadido el viernes, 18 de agosto de 2023 00:29:55

Avoid Integration Train Wrecks When a client Bounded Context (C1) integrates with a service Bounded Context (S1), C1 should usually not be making a synchronous, blocking request to S1 as a direct result of handling a request made to it. That is, while some other client (C0) makes a blocking request to C1, don’t allow C1 to make a blocking request to S1. Doing so has a very high potential for causing an integration train wreck between C0, C1, and S1. This can be avoided by using asynchronous messaging.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 955-959 | Añadido el viernes, 18 de agosto de 2023 00:35:24

In all cases of using messaging for integration, the quality of the overall solution will depend heavily on the quality of the chosen messaging mechanism. The messaging mechanism should support At-Least-Once Delivery [Reactive] to ensure that all messages will be received eventually. This also means that the subscribing Bounded Context must be implemented as an Idempotent Receiver [Reactive]
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- El marcador en la posición 959 | Añadido el viernes, 18 de agosto de 2023 00:36:11


==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 1031-1036 | Añadido el domingo, 20 de agosto de 2023 15:41:08

What Is an Entity? An Entity models an individual thing. Each Entity has a unique identity in that you can distinguish its individuality from among all other Entities of the same or a different type. Many times, perhaps even most times, an Entity will be mutable; that is, its state will change over time. Still, an Entity is not of necessity mutable and may be immutable. The main thing that separates an Entity from other modeling tools is its uniqueness—its individuality.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 1038-1041 | Añadido el domingo, 20 de agosto de 2023 15:41:15

What is an Aggregate? Two are represented here. Each Aggregate is composed of one or more Entities, where one Entity is called the Aggregate Root. Aggregates may also have Value Objects composed on them. As you see here, Value Objects are used inside both Aggregates.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 1041-1045 | Añadido el domingo, 20 de agosto de 2023 15:42:20

What Is a Value Object? A Value Object, or simply a Value, models an immutable conceptual whole. Within the model the Value is just that, a value. Unlike an Entity, it does not have a unique identity, and equivalence is determined by comparing the attributes encapsulated by the Value type. Furthermore, a Value Object is not a thing but is often used to describe, quantify, or measure an Entity.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 1048-1050 | Añadido el domingo, 20 de agosto de 2023 15:42:43

The Root Entity of each Aggregate owns all the other elements clustered inside it. The name of the Root Entity is the Aggregate’s conceptual name. You should choose a name that properly describes the conceptual whole that the Aggregate models.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 1051-1054 | Añadido el domingo, 20 de agosto de 2023 15:44:18

Each Aggregate forms a transactional consistency boundary. This means that within a single Aggregate, all composed parts must be consistent, according to business rules, when the controlling transaction is committed to the database. This doesn’t necessarily mean that you are not supposed to compose other elements within an Aggregate that don’t need to be consistent after a transaction. After all, an Aggregate also models a conceptual whole. But you should be first and foremost concerned with transactional consistency.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 1057-1065 | Añadido el domingo, 20 de agosto de 2023 15:47:00

Broader Meaning of Transaction To some degree, the use of transactions in your application is an implementation detail. For example, a typical use would have an Application Service [IDDD] controlling the atomic database transaction on behalf of the domain model. Under a different architecture, such as the Actor model [Reactive] where each Aggregate is implemented as an actor, transactions could be handled using Event Sourcing (see the next chapter) with a database that doesn’t support atomic transactions. Either way, what I mean by “transaction” is how modifications to an Aggregate are isolated and how business invariants—the rules to which the software must always adhere—are guaranteed to be consistent following each business operation. Whether this requirement is controlled by an atomic database transaction or by some other means, the Aggregate’s state, or its representation by means of Event Sourcing, must be safely and correctly transitioned and maintained at all times.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 1066-1067 | Añadido el domingo, 20 de agosto de 2023 15:47:12

The reasons for the transactional boundary are business motivated,
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 1067-1068 | Añadido el domingo, 20 de agosto de 2023 15:47:34

if the Aggregate was not stored in a whole and valid state, the business operation that was performed would be considered incorrect according to business rules.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 1082-1083 | Añadido el domingo, 20 de agosto de 2023 15:49:57

The main point to remember from this section is that business rules are the drivers for determining what must be whole, complete, and consistent at the end of a single transaction.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 1106-1107 | Añadido el domingo, 20 de agosto de 2023 15:54:02

This rule highlights that the memory footprint and transactional scope of each Aggregate should be relatively small.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- El marcador en la posición 1136 | Añadido el martes, 22 de agosto de 2023 17:19:11


==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 1179-1185 | Añadido el jueves, 31 de agosto de 2023 20:09:20

Anemic Domain Model [IDDD]. This is where you are using an object-oriented domain model, and all of your Aggregates have only public accessors (getters and setters) but no real business behavior. This tends to happen when there is a technical rather than business focus during modeling. Designing an Anemic Domain Model requires you to take on all the overhead of a domain model without realizing any of its benefits. Don’t take the bait! Also watch out for leaking business logic into the Application Services above your domain model. It can happen undetected, just like physical anemia. Delegating business logic from services to helper/utility classes isn’t going to work out well either. Service utilities always exhibit an identity crisis and can never keep their stories straight. Place your business logic in your domain model, or suffer bugs sponsored by an Anemic Domain Model.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 1224-1227 | Añadido el sábado, 2 de septiembre de 2023 00:39:05

You should be on a mission to fight the Anemic Domain Model [IDDD]. If you expose public setter methods, it could quickly lead to anemia, because the logic for setting values on Product would be implemented outside the model. Think hard before doing this, and keep this warning in mind.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 1232-1233 | Añadido el sábado, 2 de septiembre de 2023 00:39:48

Remember, when using DDD, we are always modeling a Ubiquitous Language inside a Bounded Context.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 1257-1263 | Añadido el sábado, 2 de septiembre de 2023 00:45:51

Do you see the problems with this approach? There are more than a few, but consider the following: • The language of the software model does not match the mental model of the Domain Experts. • The level of abstraction is too high, and you will get into deep trouble when you start to model the details of each of the individual types. • This will lead to creating special cases in each of the classes and likely result in a complex class hierarchy with general approaches to explicit problems. • You will have much more code than you need, because you are trying to solve an unsolvable problem that should not matter in the first place.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 1264-1278 | Añadido el sábado, 2 de septiembre de 2023 00:46:17

Often the language of the wrong abstractions will find its way even into the user interface, which will cause confusion for users. • You will waste considerable time and money. • You will never be able to address all future needs up front, which means if new Scrum concepts are ever added in the future, your existing model will prove to be a failure in foreseeing those needs. Following such a path may seem strange to some, but this incorrect level of abstractions is used often in technically inspired implementations. Don’t get taken in by this alluring, highly abstract implementation trap. Model the Ubiquitous Language explicitly according to the mental model of the Domain Experts that is refined by your team. By modeling what the business needs today, you will save a considerable amount of time, budget, code, and embarrassment. More still, you will do the business a great service by modeling an accurate and useful Bounded Context that reflects an effective design. Right-Sizing Aggregates You may be wondering how you can determine the boundaries of Aggregates and prevent the design of large clusters, while still maintaining consistency boundaries that will protect true business invariants. Here I have provided a worthy design approach. If you have already created large-cluster Aggregates, you can use this approach to refactor into smaller ones, but I am not going to start from that perspective. Consider these design steps that will help you reach consistency boundary goals:
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 1264-1268 | Añadido el sábado, 2 de septiembre de 2023 00:46:23

Often the language of the wrong abstractions will find its way even into the user interface, which will cause confusion for users. • You will waste considerable time and money. • You will never be able to address all future needs up front, which means if new Scrum concepts are ever added in the future, your existing model will prove to be a failure in foreseeing those
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 1268-1272 | Añadido el sábado, 2 de septiembre de 2023 00:49:11

Following such a path may seem strange to some, but this incorrect level of abstractions is used often in technically inspired implementations. Don’t get taken in by this alluring, highly abstract implementation trap. Model the Ubiquitous Language explicitly according to the mental model of the Domain Experts that is refined by your team. By modeling what the business needs today, you will save a considerable amount of time, budget, code, and embarrassment.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- El marcador en la posición 1278 | Añadido el sábado, 2 de septiembre de 2023 00:55:43


==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 1282-1284 | Añadido el sábado, 2 de septiembre de 2023 13:01:00

One big hint here is to define every field/attribute/property that is required to identify and find the Aggregate, as well as any additional intrinsic fields/attributes/properties that are required for the Aggregate to be constructed and left in a valid initial state.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 1278-1280 | Añadido el sábado, 2 de septiembre de 2023 13:01:29

Put your first focus on the second rule of Aggregate design, “Design small Aggregates.” Start by creating every Aggregate with just one Entity, which will serve as the Aggregate Root.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 1284-1285 | Añadido el sábado, 2 de septiembre de 2023 13:01:44

Now place your focus on the first rule of Aggregate design, “Protect business invariants inside Aggregate boundaries.”
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 1284-1291 | Añadido el sábado, 2 de septiembre de 2023 13:04:21

Now place your focus on the first rule of Aggregate design, “Protect business invariants inside Aggregate boundaries.” You have already asserted by the previous step that at a minimum all the intrinsic fields/attributes must be up-to-date when the single-Entity Aggregate is persisted. But now you need to look at each of your Aggregates one at a time. As you do so for Aggregate A1, ask the Domain Experts if any other Aggregates you have defined must be updated in reaction to changes made to Aggregate A1. Make a list of each of the Aggregates and their consistency rules, which will indicate the time frames for all reaction-based updates. In other words, “Aggregate A1” would be the heading of one list, and other Aggregate types would be listed under A1 if they will be updated in reaction to A1 updates.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 1291-1293 | Añadido el sábado, 2 de septiembre de 2023 13:08:16

Now ask the Domain Experts how much time may elapse until each of the reaction-based updates may take place. This will lead to two kinds of specifications: (a) immediately, and (b) within N seconds/minutes/hours/days.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 1299-1301 | Añadido el sábado, 2 de septiembre de 2023 13:09:52

For each of the reacting Aggregates that can be updated following a given elapsed time (3b), you will update these using the fourth rule of Aggregate design, “Update other Aggregates using eventual consistency.”
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 1295-1298 | Añadido el sábado, 2 de septiembre de 2023 13:09:59

For each of the immediate time frames (3a), you should strongly consider composing those two Entities within the same Aggregate boundary. That means, for example, that Aggregate A1 and Aggregate A2 will actually be composed into a new Aggregate A[1,2]. Now Aggregates A1 and A2 as they were previously defined will no longer exist. There is only Aggregate A[1,2].
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 1305-1307 | Añadido el sábado, 2 de septiembre de 2023 13:11:30

Be careful that the business doesn’t insist that every Aggregate fall within the 3a specification (immediate consistency). It can be an especially strong tendency when many in the design session are influenced by database design and data modeling. Those stakeholders will have a very transaction-centered point of view.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- El marcador en la posición 1304 | Añadido el sábado, 2 de septiembre de 2023 13:13:25


==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 1311-1311 | Añadido el martes, 5 de septiembre de 2023 19:23:11

This exercise indicates that eventual consistency is business driven, not technically driven.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 1312-1315 | Añadido el martes, 5 de septiembre de 2023 19:24:16

Even so, it is only the business that can determine the acceptable time frame for updates to occur between various Entities. Some are immediate, or transactional, which means they must be managed by the same Aggregate. Some are eventual, which means they may be managed through Domain Events and messaging, for example.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 1317-1318 | Añadido el martes, 5 de septiembre de 2023 19:25:16

You should also design your Aggregates to be a sound encapsulation for unit testing. Complex Aggregates are hard to test.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 1345-1347 | Añadido el martes, 5 de septiembre de 2023 19:43:26

the concept of causal consistency. A business domain provides causal consistency if its operations that are causally related—one operation causes another—are seen by every dependent node of a distributed system in the same order [Causal]
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 1427-1431 | Añadido el martes, 5 de septiembre de 2023 20:44:43

It’s important that the modified Aggregate and the Domain Event be saved together in the same transaction. If you are using an object-relational mapping tool, you would save the Aggregate to one table and the Domain Event to an event store table, and then commit the transaction. If you are using Event Sourcing, the state of the Aggregate is fully represented by the Domain Events themselves. I discuss Event Sourcing in the next section of this chapter. Either way, persisting the Domain Event in the event store preserves its causal ordering relative to what has happened across the domain model.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 1449-1451 | Añadido el domingo, 10 de septiembre de 2023 14:04:52

A command is different from a Domain Event in that a command can be rejected as inappropriate in some cases, such as due to supply and availability of some resources (product, funds, etc.), or another kind of business-level validation.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 1449-1452 | Añadido el domingo, 10 de septiembre de 2023 14:05:06

A command is different from a Domain Event in that a command can be rejected as inappropriate in some cases, such as due to supply and availability of some resources (product, funds, etc.), or another kind of business-level validation. So, a command may be rejected, but a Domain Event is a matter of history and cannot logically be denied.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 1455-1463 | Añadido el domingo, 10 de septiembre de 2023 14:11:49

Event Sourcing can be described as persisting all Domain Events that have occurred for an Aggregate instance as a record of what changed about that Aggregate instance. Rather than persisting the Aggregate state as a whole, you store all the individual Domain Events that have happened to it. Let’s step through how this is supported. All of the Domain Events that have occurred for one Aggregate instance, ordered as they originally occurred, make up its event stream. The event stream begins with the first Domain Event that ever occurred for the Aggregate instance and continues until the last Domain Event that occurred. As new Domain Events occur for a given Aggregate instance, they are appended to the end of its event stream. Reapplying the event stream to the Aggregate allows its state to be reconstituted from persistence back into memory. In other words, when using Event Sourcing, an Aggregate that was removed from memory for any reason is reconstituted entirely from its event stream.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 1471-1473 | Añadido el domingo, 10 de septiembre de 2023 14:11:59

The event store is just a sequential storage collection or table where all Domain Events are appended. Because the event store is append-only, it makes the storage mechanism extremely fast, so you can plan on a Core Domain that uses Event Sourcing to have very high throughput, low latency, and be capable of high scalability.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 1520-1521 | Añadido el domingo, 10 de septiembre de 2023 15:13:17

Event Storming is a rapid design technique that is meant to engage both Domain Experts and developers in a fast-paced learning process. It is focused on the business and business process rather than on nouns and data.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 1697-1698 | Añadido el sábado, 16 de septiembre de 2023 20:04:56

Specification by Example by Gojko Adzic [Specification]
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 1705-1706 | Añadido el sábado, 16 de septiembre de 2023 20:06:21

Look into User Story Mapping by Jeff Patton [User Story Mapping]. This is used to place your focus on the Core Domain and understand what software features you should be investing in.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 1707-1717 | Añadido el sábado, 16 de septiembre de 2023 20:06:52

The previous three add-on tools have a large overlap with the DDD philosophy and would be quite suitable to introduce into any DDD project. All of them are meant to be used in a highly accelerated project, are low ceremony, and are very cheap to use. Managing DDD on an Agile Project I previously mentioned that there has been a movement around what is called No Estimates. This is an approach that rejects typical estimation approaches such as story points or task hours. It focuses on delivering value over controlling cost, and not estimating any task that would likely require only a few months to complete. I don’t dismiss this approach. Yet, at the time of writing this, the clients I work with are still required to provide estimates and to timebox tasks, such as programming effort needed to implement even fine-grained features. If No Estimates works for you and your project situation, use it. I am also aware that some in the DDD community have basically defined their own process or process execution framework for using DDD and performing with it on a project. This may work well and be effective when it is accepted by a given team, but it can be more difficult to get buy-in from organizations that have already invested in an agile execution framework, such as Scrum.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 1707-1708 | Añadido el sábado, 16 de septiembre de 2023 20:06:57

The previous three add-on tools have a large overlap with the DDD philosophy and would be quite suitable to introduce into any DDD project. All of them are meant to be used in a highly accelerated project, are low ceremony, and are very cheap to use.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 1720-1721 | Añadido el sábado, 16 de septiembre de 2023 20:10:05

It’s just not the way Scrum was meant to be used on a software project. And, to repeat myself again, knowledge acquisition is both a Scrum tenet and a major goal of DDD but is largely ignored in exchange for relentless delivery with Scrum.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- El marcador en la posición 1728 | Añadido el domingo, 17 de septiembre de 2023 18:09:53


==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 1731-1734 | Añadido el domingo, 17 de septiembre de 2023 18:12:45

First Things First One of the most important means to successfully employing DDD on a project is to hire good people. There is simply no replacement for good people, and above-average developers for that matter. DDD is an advanced philosophy and technique for developing software, and it calls for above-average developers, even very good developers, to put it to use. Never underestimate the importance of hiring the right people with the right skills and self-motivation.
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 1739-1743 | Añadido el domingo, 17 de septiembre de 2023 18:13:48

Strengths: characteristics of the business or project that give it an advantage over others • Weaknesses: characteristics that place the business or project at a disadvantage relative to others • Opportunities: elements that the project could exploit to its advantage • Threats: elements in the environment that could cause trouble for the business or project
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 1796-1799 | Añadido el lunes, 18 de septiembre de 2023 22:39:45

If you are using Scrum and you have come to detest hour estimates, understand that this approach is much more forgiving and also much more accurate. As you learn your cadence, you will fine-tune your estimation metrics to be more accurate and realistic. It might require a few sprints to get it right. Also realize that as time and experience progress, you will probably either tune your numbers lower or use the Easy or Moderate columns more readily. If you are
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- La subrayado en la posición 1820-1823 | Añadido el lunes, 18 de septiembre de 2023 22:43:39

I introduced you to creating concrete scenarios around your domain model. This can be one of the best ways to acquire knowledge about your Core Domain, beyond what you can get out of Event Storming. Concrete scenarios and Event Storming are two tools that should be used together. Here’s how it works: • Perform a quick session of Event Storming,
==========
Domain-Driven Design Distilled (Vaughn Vernon)
- El marcador en la posición 1837 | Añadido el lunes, 18 de septiembre de 2023 22:46:44


==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- El marcador en la página 17 | posición 210 | Añadido el jueves, 28 de septiembre de 2023 09:08:24


==========
Rethinking Productivity in Software Engineering (Sadowski, Caitlin)
- El marcador en la página 37 | posición 801 | Añadido el jueves, 28 de septiembre de 2023 22:43:44


==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 18 | posición 239-241 | Añadido el jueves, 28 de septiembre de 2023 22:47:32

cosas: en vez de hacer caso a la opinión de los expertos y restringir el uso de combustibles fósiles, la humanidad casi ha duplicado su consumo, lo que, en teoría, debería habernos conducido a un desastre de proporciones épicas. Pero, en cambio, nos ha llevado a una mejora espectacular de la vida humana en todo
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 18 | posición 239-242 | Añadido el jueves, 28 de septiembre de 2023 22:47:37

cosas: en vez de hacer caso a la opinión de los expertos y restringir el uso de combustibles fósiles, la humanidad casi ha duplicado su consumo, lo que, en teoría, debería habernos conducido a un desastre de proporciones épicas. Pero, en cambio, nos ha llevado a una mejora espectacular de la vida humana en todo el mundo.
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 18 | posición 239-242 | Añadido el jueves, 28 de septiembre de 2023 22:47:42

cosas: en vez de hacer caso a la opinión de los expertos y restringir el uso de combustibles fósiles, la humanidad casi ha duplicado su consumo, lo que, en teoría, debería habernos conducido a un desastre de proporciones épicas. Pero, en cambio, nos ha llevado a una mejora espectacular de la vida humana en todo el mundo.
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- El marcador en la página 20 | posición 258 | Añadido el jueves, 28 de septiembre de 2023 22:52:03


==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- El marcador en la página 25 | posición 328 | Añadido el domingo, 1 de octubre de 2023 23:35:53


==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 32 | posición 398-404 | Añadido el lunes, 2 de octubre de 2023 06:52:56

más grave que se lanza en la actualidad contra los combustibles fósiles, y que normalmente se atribuye a una gran variedad de revistas y organismos científicos de reconocido prestigio. Aunque si repasamos los artículos de los años setenta y ochenta, veremos que esos mismos organismos estaban convencidos de la inminencia de un enfriamiento global, sólo para contradecirse unos años después. En 1975, la Asociación Meteorológica de Estados Unidos anunció a los norteamericanos que el clima se estaba enfriando y que ese fenómeno produciría un clima mucho más hostil: «Independientemente de las tendencias a largo plazo, como el regreso de una Edad de Hielo, la aparición de unas condiciones meteorológicas mucho más hostiles parece ahora más probable que en el periodo anormalmente favorable que concluyó en 1972».35
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 35 | posición 448-449 | Añadido el lunes, 2 de octubre de 2023 06:59:21

En los últimos ocho años, mientras las emisiones de CO2 aumentaban a una velocidad sin precedentes, la tasa anual de muertes asociadas al clima ha descendido un increíble 98 por ciento.
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- El marcador en la página 37 | posición 468 | Añadido el lunes, 2 de octubre de 2023 19:12:30


==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 41 | posición 524-528 | Añadido el lunes, 2 de octubre de 2023 19:22:03

En este libro, todos los gráficos se basan en datos extraídos de fuentes internacionales independientes e imparciales (incluyendo tres de las instituciones más prestigiosas entre la comunidad académica: el Banco Mundial, la Agencia Internacional de la Energía y el Análisis Estadístico de la Energía en el Mundo de BP). En la web <www.moralcaseforfossilfuels.com> puedes encontrar información más detallada sobre los gráficos y cómo recrearlos.
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- El marcador en la página 44 | posición 561 | Añadido el lunes, 2 de octubre de 2023 19:28:42


==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- El marcador en la página 51 | posición 670 | Añadido el martes, 3 de octubre de 2023 07:03:42


==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 52 | posición 698-701 | Añadido el martes, 3 de octubre de 2023 18:44:12

En nuestro debate se omiten dos hechos fundamentales: el primero es que los seres humanos, en todo el mundo, necesitan una gran cantidad de energía; el segundo, que es extremadamente difícil producir esa energía de una forma barata y fiable.
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- El marcador en la página 55 | posición 737 | Añadido el martes, 3 de octubre de 2023 18:49:58


==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 55 | posición 740-747 | Añadido el miércoles, 4 de octubre de 2023 06:48:15

El progreso industrial, las mejoras mecánicas, todas las grandes maravillas de la era moderna han significado poco para los más adinerados. Los ricos de la Grecia clásica apenas se habrían beneficiado de los sistemas modernos de fontanería, los siervos sustituían al agua corriente. La televisión y la radio: los patricios de Roma podían disfrutar de los mejores músicos y actores en sus casas. La ropa asequible y los supermercados; éstos y muchos otros inventos modernos habrían cambiado muy poco sus vidas. Habrían recibido con los brazos abiertos las mejoras en el transporte y la medicina, pero, en lo referente a todo lo demás, los grandes logros del capitalismo occidental han redundado sobre todo en beneficio de la gente corriente. Estos avances han puesto a disposición de las masas comodidades y servicios que anteriormente eran prerrogativa exclusiva de los ricos y poderosos.
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 57 | posición 764-768 | Añadido el miércoles, 4 de octubre de 2023 06:50:53

La tecnología que se usaba en el siglo XIX para quemar carbón es ilegal en la actualidad y con razón. El peligroso humo que se generaba por aquel entonces hoy se puede evitar gracias a una tecnología de combustión mucho más limpia y avanzada. Pero, en el siglo XIX, era perfectamente legal quemar carbón usando aquel sistema, porque la alternativa era morirse de frío, hambre o una pobreza miserable.
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 61 | posición 829-831 | Añadido el miércoles, 4 de octubre de 2023 07:01:59

subproductos derivados puedan ser muy perjudiciales (como el dióxido de azufre del carbón o los residuos radiactivos generados al extraer los metales que se utilizan en los molinos de viento).
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- El marcador en la página 61 | posición 829 | Añadido el miércoles, 4 de octubre de 2023 07:03:09


==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 70 | posición 935-936 | Añadido el miércoles, 4 de octubre de 2023 18:35:38

Sería más preciso decir que la solar y la eólica son parásitos que necesitan un huésped.
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 69 | posición 930-936 | Añadido el miércoles, 4 de octubre de 2023 18:36:22

picos. La única forma en que la solar y la eólica podrían convertirse en fuentes útiles y fiables pasaría por combinarlas con alguna clase de sistema de almacenamiento a gran escala que tuviera un coste extremadamente bajo. Pero ese sistema de almacenamiento no existe, porque almacenar energía en un espacio compacto requiere una gran cantidad de recursos. Esta es la razón por la cual, en todo el mundo, no existe una sola central solar o un sólo parque eólico —real o en proyecto— independiente y autosuficiente. Todas esas instalaciones necesitarían contar con sistemas de refuerzo, a pesar de que el término «refuerzo» podría sugerir que la solar y la eólica funcionan bien la mayoría del tiempo. Sería más preciso decir que la solar y la eólica son parásitos que necesitan un huésped.
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 71 | posición 956-959 | Añadido el miércoles, 4 de octubre de 2023 18:39:29

Independientemente del punto de vista de cada uno sobre los peligros de los combustibles fósiles, resulta profundamente irresponsable afirmar, como hacen muchos defensores de la eólica y la solar, que ambas fuentes dan energía a Alemania, por no hablar de que cubren el 50 por ciento de sus necesidades. La energía es un asunto de vida o muerte.
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 71 | posición 962-964 | Añadido el miércoles, 4 de octubre de 2023 18:40:34

Resulta profundamente irresponsable y perturbador que los líderes medioambientales nos digan que debemos privarnos de los combustibles fósiles por una promesa que podría considerarse, siendo muy generosos, como un experimento bastante especulativo, y, si somos menos caritativos, como un fracaso permanente, mal concebido y que representa un gran despilfarro de recursos.
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- El marcador en la página 75 | posición 1006 | Añadido el jueves, 5 de octubre de 2023 00:44:32


==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 86 | posición 1159-1161 | Añadido el jueves, 5 de octubre de 2023 08:13:10

La razón por la que resulta tan adecuado para producir electricidad es que hay abundantes reservas, está bien repartido por todo el mundo y puede extraerse con relativa facilidad.
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 95 | posición 1294-1295 | Añadido el sábado, 7 de octubre de 2023 12:31:57

En última instancia, un recurso energético es sólo materia y energía transformadas para satisfacer las necesidades humanas.
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 96 | posición 1300-1306 | Añadido el sábado, 7 de octubre de 2023 12:33:28

¿Qué recursos energéticos deberíamos usar en el presente y el futuro? Contamos con un sistema excelente para resolver esta cuestión: el sistema de precios de la oferta y la demanda. En igualdad de condiciones, si para producir algo hacen falta menos recursos, entre los que también se incluye el tiempo, el precio baja; si exige más recursos, el precio sube. Por lo tanto, los precios reflejan hasta qué punto es eficiente utilizar los recursos existentes para crear otros nuevos que satisfagan una necesidad concreta. Cuando el precio de los ordenadores baja, eso quiere decir que todos sus componentes y materiales pueden fabricarse a un coste inferior que en el pasado. De manera similar, la forma de energía que usemos será aquella que, en función de la mejor tecnología disponible (que se encuentra en constante evolución), puede hacer mejor el trabajo a un precio más bajo.
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- El marcador en la página 98 | posición 1328 | Añadido el sábado, 7 de octubre de 2023 12:37:03


==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- El marcador en la página 102 | posición 1386 | Añadido el domingo, 8 de octubre de 2023 23:26:25


==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 102 | posición 1392-1395 | Añadido el domingo, 8 de octubre de 2023 23:26:39

La agricultura es una actividad en la que la energía se convierte particularmente en una cuestión de vida o muerte. La industria de los combustibles fósiles ha revolucionado la agricultura en beneficio de miles de millones de personas, y nadie le ha reconocido el mérito.
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 103 | posición 1406-1409 | Añadido el lunes, 9 de octubre de 2023 07:07:16

Este aparente milagro se debió a la cooperación entre la industria de los combustibles fósiles y la ciencia genética; por ejemplo, gracias a los descubrimientos del gran Norman Borlaug, que cultivó nuevas y revolucionarias variedades de trigo e introdujo nuevas técnicas agrícolas en México, la India, Pakistán, China y partes de América Latina.
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 105 | posición 1438-1443 | Añadido el lunes, 9 de octubre de 2023 07:11:51

Las reservas de guano, que procedía de las costas de Sudamérica y Sudáfrica, empezaban a agotarse, lo que motivó que el eminente químico William Crookes declarara en 1898 que «todas las civilizaciones están en peligro de muerte por no tener suficiente para comer».110 La solución fue un proceso, inventado por Fritz Haber y Carl Bosch, que permite producir enormes cantidades de fertilizante de nitrógeno sintético usando un gran volumen de metano, el principal componente del gas natural.
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 106 | posición 1450-1451 | Añadido el lunes, 9 de octubre de 2023 07:13:09

La energía de los combustibles fósiles es el alimento de los alimentos.
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 107 | posición 1461-1462 | Añadido el lunes, 9 de octubre de 2023 07:15:07

Matar de hambre a nuestras máquinas significaría matar de hambre a la especie humana.
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 108 | posición 1482-1485 | Añadido el lunes, 9 de octubre de 2023 07:20:39

Sigo subrayando que más energía significa mayor capacidad para tomar las decisiones necesarias para prosperar, porque quiero que siempre tengamos presente que, cuando hablamos de más o menos energía, hablamos de más o menos capacidades, y todo lo que queremos en la vida depende de ellas. Así, en todos los ámbitos que afectan a nuestras vidas, deberíamos ser conscientes de que disponer de una mayor cantidad de energía puede desempeñar un papel increíblemente positivo.
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 108 | posición 1480-1485 | Añadido el lunes, 9 de octubre de 2023 07:20:46

precio tan bajo, no habría sido capaz de permitírmela. Más energía de los combustibles fósiles, más posibilidades de alcanzar la felicidad. Sigo subrayando que más energía significa mayor capacidad para tomar las decisiones necesarias para prosperar, porque quiero que siempre tengamos presente que, cuando hablamos de más o menos energía, hablamos de más o menos capacidades, y todo lo que queremos en la vida depende de ellas. Así, en todos los ámbitos que afectan a nuestras vidas, deberíamos ser conscientes de que disponer de una mayor cantidad de energía puede desempeñar un papel increíblemente positivo.
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- El marcador en la página 110 | posición 1507 | Añadido el lunes, 9 de octubre de 2023 07:25:58


==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 113 | posición 1545-1547 | Añadido el lunes, 9 de octubre de 2023 19:36:53

Y debemos recurrir a los expertos como asesores, no como autoridades, y exigirles explicaciones precisas sobre lo que sabemos y lo que no sabemos, para que entonces nosotros, como individuos, podamos tomar la decisión mejor informada.
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- El marcador en la página 118 | posición 1607 | Añadido el lunes, 9 de octubre de 2023 19:47:00


==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 120 | posición 1634-1636 | Añadido el martes, 10 de octubre de 2023 06:36:09

«Clima» es la tendencia meteorológica a largo plazo (que normalmente se mide en incrementos de treinta años) en una región determinada: las temperaturas mínimas y máximas, la cantidad de precipitaciones, la clase de tormentas que aparecen, etcétera.
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 120 | posición 1631-1633 | Añadido el martes, 10 de octubre de 2023 06:36:18

«Meteorológico» hace referencia a las condiciones atmosféricas actuales, a corto plazo, en especial a la cantidad de precipitaciones y al nivel de las temperaturas.
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 122 | posición 1684-1686 | Añadido el martes, 10 de octubre de 2023 06:41:03

Por lo tanto, cuando pensamos en las consecuencias del consumo de combustibles fósiles sobre la habitabilidad climática, en realidad no nos estamos preguntando: ¿estamos cambiando un clima estable y seguro hasta convertirlo en peligroso? Sino más bien: ¿estamos haciendo que nuestro clima volátil y peligroso sea más seguro o más peligroso?
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 125 | posición 1716-1721 | Añadido el martes, 10 de octubre de 2023 06:45:44

Mucho más significativas, las actividades humanas que requieren el uso de combustibles fósiles son perfectamente capaces de modificar el clima local. En las ciudades, los ladrillos, el asfalto y los edificios obstaculizan el flujo de las corrientes de aire, lo que aumenta las temperaturas, en especial las mínimas nocturnas y la frecuencia de las olas de calor. Muchas veces el calentamiento local causado por el hombre es más importante que la tendencia del calentamiento global durante los últimos 150 años, que es de 0,8 °C, una cantidad que no puede detectarse sin el instrumental adecuado.135
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 125 | posición 1727-1733 | Añadido el martes, 10 de octubre de 2023 06:47:43

Como con cualquier otro efecto, la cuestión fundamental es la siguiente: ¿cuál es su magnitud, incluyendo también la velocidad de los cambios que provoca todo ese CO2 adicional? Hay fenómenos que son lineales, lo que significa que cada molécula de CO2 que sumas al sistema añade una unidad de calor del mismo tamaño que la anterior. En otros fenómenos, el efecto aumenta o se acelera constantemente; en este caso, cada molécula de CO2 que añades al sistema es más potente que la última (esta es la percepción que extraemos de las explicaciones más habituales del efecto invernadero). Y, por último, tenemos fenómenos decrecientes o que se desaceleran: cada nueva molécula de CO2 que entra en el sistema es menos potente que la anterior.
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 126 | posición 1736-1737 | Añadido el martes, 10 de octubre de 2023 06:48:02

los «expertos» desconozcan esta cuestión, en particular aquellos que se centran en el impacto que tienen estos fenómenos sobre los seres humanos.
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 126 | posición 1742-1747 | Añadido el martes, 10 de octubre de 2023 06:48:51

Fíjate en que, justo antes de 400 ppm (lo que significa que el CO2 representa el 0,4 por ciento de la atmósfera), el efecto empieza a suavizarse. Las nuevas moléculas ya no tienen tanta capacidad para aumentar la temperatura. Figura 4.1 El decreciente y logarítmico efecto invernadero
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- El marcador en la página 127 | posición 1753 | Añadido el martes, 10 de octubre de 2023 06:49:53


==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 135 | posición 1862-1864 | Añadido el sábado, 14 de octubre de 2023 11:41:46

Me parece muy hipócrita que los activistas medioambientales echen las culpas al cambio climático por cada tormenta tropical, cuando hasta ahora el calentamiento ha sido mínimo y la tendencia ciclónica apenas ha tenido ningún cambio. Recuerda: el clima siempre es volátil, el clima siempre es peligroso.
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 139 | posición 1888-1893 | Añadido el sábado, 14 de octubre de 2023 11:45:20

Svante Arrhenius, quien consideraba que el aumento de las emisiones de CO2 era un fenómeno muy positivo. En 1896 dijo: «Por la influencia del creciente porcentaje de ácido carbónico en la atmósfera, podríamos disfrutar de años con un clima más favorable y equilibrado, en especial en lo que respecta a las regiones más frías del planeta, años en los que la Tierra nos ofrecerá cosechas mucho más abundantes que en el presente, en beneficio de una humanidad que se expande rápidamente».142 (Recordemos estas declaraciones cuando abordemos el apartado sobre el efecto fertilizante.)
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- El marcador en la página 139 | posición 1901 | Añadido el sábado, 14 de octubre de 2023 11:47:08


==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 141 | posición 1928-1931 | Añadido el domingo, 15 de octubre de 2023 12:59:30

Uno de los trabajos más importantes en los que se basa la teoría del 97 por ciento es obra de John Cook, quien dirige una página web bastante conocida llamada Skeptical-Science.com, una enciclopedia virtual que contiene un sinfín de argumentos para defender de cualquier ataque las predicciones que hablan de un cambio climático catastrófico.
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 150 | posición 2056-2059 | Añadido el domingo, 15 de octubre de 2023 13:16:33

Lo más sorprendente es que los efectos positivos del CO2 para las plantas no han despertado la menor controversia científica y, sin embargo, casi nunca se mencionan, incluso entre la comunidad de expertos en climatología. Es una gran negligencia. Tenemos la responsabilidad de observar la visión de conjunto, los efectos positivos y los negativos, sin prejuicios. Si creen que estos efectos positivos para las plantas son exagerados, podrían dar sus razones.
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 150 | posición 2056-2061 | Añadido el domingo, 15 de octubre de 2023 13:17:01

Lo más sorprendente es que los efectos positivos del CO2 para las plantas no han despertado la menor controversia científica y, sin embargo, casi nunca se mencionan, incluso entre la comunidad de expertos en climatología. Es una gran negligencia. Tenemos la responsabilidad de observar la visión de conjunto, los efectos positivos y los negativos, sin prejuicios. Si creen que estos efectos positivos para las plantas son exagerados, podrían dar sus razones. Pero ignorar el efecto fertilizante y negarse a mencionarlo cuando se habla de las consecuencias del CO2 es muy poco honesto.
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 151 | posición 2071-2075 | Añadido el domingo, 15 de octubre de 2023 13:20:31

Mi lectura de las pruebas es que tenemos un efecto invernadero leve, que va en la dirección que los seres humanos siempre han deseado —más calor—, y un efecto fertilizante significativo en la dirección que los seres humanos siempre han deseado —más vida vegetal—. Creo que el debate público está condicionado por la creencia de que cualquier alteración humana es siempre negativa, lo que nos hace temer y mostrar nuestro rechazo ante la idea de cambiar el clima, a pesar de que ese mismo clima es un fenómeno cambiante que nunca puede considerarse «perfecto» por naturaleza.
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- El marcador en la página 152 | posición 2080 | Añadido el domingo, 15 de octubre de 2023 13:21:35


==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 153 | posición 2096-2102 | Añadido el domingo, 15 de octubre de 2023 18:38:23

La mejor fuente que he encontrado para medir ese riesgo es la EM-DAT: la Base de Datos Internacional sobre Desastres de la OFDA/CRED (El Departamento para la Asistencia en Desastres en el Extranjero de EE. UU. y el Centro de Investigaciones sobre la Epidemiología de los Desastres), que tiene su sede en Bruselas, Bélgica.161 Recopila datos relacionados con los desastres naturales desde 1900. Incluyo aquí otra vez el gráfico del capítulo 1, que relaciona las emisiones de CO2, en teoría la mayor amenaza para el clima, con el número de muertes asociadas a los distintos fenómenos meteorológicos, que reflejan el peligro real que representa. Es sorprendente: a medida que aumentan las emisiones de CO2, las muertes asociadas al clima se desploman.
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 160 | posición 2181-2182 | Añadido el domingo, 15 de octubre de 2023 18:46:24

Históricamente, la sequía es la primera causa de muerte asociada al clima.
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 160 | posición 2181-2186 | Añadido el domingo, 15 de octubre de 2023 18:47:11

Históricamente, la sequía es la primera causa de muerte asociada al clima. En el mundo, la cifra se ha reducido en un 99,98 por ciento durante los últimos ochenta años por muchas razones relacionadas con la energía: convoyes para aliviar las sequías cuyos motores se alimentan de gasóleo; más disponibilidad de alimentos gracias a una agricultura más productiva basada en los combustibles fósiles, y la instalación de nuevos sistemas de irrigación.166, 167 Y, aun así, no dejamos de leer en multitud de artículos que los combustibles fósiles están empeorando las sequías.
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 161 | posición 2193-2197 | Añadido el domingo, 15 de octubre de 2023 18:49:35

El debate público sobre el clima está planteado a la inversa. Considera que el hombre es una fuerza destructiva para la habitabilidad climática, y que ha convertido la meteorología en una fuerza mucho más peligrosa debido al consumo de combustibles fósiles. De hecho, la realidad está diciendo precisamente todo lo contrario: no hemos recibido un clima seguro y lo hemos transformado en algo peligroso; hemos recibido un clima peligroso y lo hemos convertido en mucho más seguro.
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- El marcador en la página 164 | posición 2239 | Añadido el domingo, 15 de octubre de 2023 19:01:38


==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 165 | posición 2252-2253 | Añadido el martes, 17 de octubre de 2023 06:48:06

En lo que respecta al clima, la tecnología es lo único sin lo que no podemos vivir. Lo que significa, por tanto, que no podemos vivir sin el combustible de la tecnología: la energía.
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 165 | posición 2252-2254 | Añadido el martes, 17 de octubre de 2023 06:48:35

En lo que respecta al clima, la tecnología es lo único sin lo que no podemos vivir. Lo que significa, por tanto, que no podemos vivir sin el combustible de la tecnología: la energía. Lo que significa, a su vez, que no podemos vivir sin una energía que nos podamos permitir. Y lo que significa que, en un futuro próximo —los años más irrepetibles e irremplazables de nuestras vidas
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 170 | posición 2313-2315 | Añadido el martes, 17 de octubre de 2023 06:57:51

Si piensas en el clima desde una perspectiva realista, no en un «clima global» difuso y místico, sino en el que ahora mismo te rodea, te darás cuenta de que ya eres su dueño por el simple hecho de que puedes buscarte otro.
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 171 | posición 2326-2330 | Añadido el martes, 17 de octubre de 2023 07:00:09

Conclusión: la energía de los combustibles fósiles, como nos permite construir y manejar unas máquinas fascinantes que nos ofrecen la posibilidad de desplazarnos a otros climas, así como la capacidad de mejorar su habitabilidad, nos ha convertido en sus amos y señores. Esto no significa que seamos invulnerables, pero las cifras demuestran que, con el paso del tiempo, sí nos hemos vuelto menos vulnerables. Y si nos preocupa la habitabilidad del clima, la energía y la tecnología deberían estar en el epicentro de todo.
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 171 | posición 2337-2340 | Añadido el martes, 17 de octubre de 2023 07:01:47

Debemos cambiar nuestra perspectiva sobre el clima. La mejor manera de abordar los peligros relacionados con el clima consiste en adoptar las medidas necesarias que nos permitan afrontarlos con garantías, y que siempre se basan en un elevado consumo energético. La respuesta no es fomentar la inacción usando una menor cantidad de nuestra mejor fuente de energía. Una vez más, no nos han enseñado a pensar sobre estas cuestiones poniendo la vida humana como nuestro estándar de
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 171 | posición 2337-2341 | Añadido el martes, 17 de octubre de 2023 07:01:52

Debemos cambiar nuestra perspectiva sobre el clima. La mejor manera de abordar los peligros relacionados con el clima consiste en adoptar las medidas necesarias que nos permitan afrontarlos con garantías, y que siempre se basan en un elevado consumo energético. La respuesta no es fomentar la inacción usando una menor cantidad de nuestra mejor fuente de energía. Una vez más, no nos han enseñado a pensar sobre estas cuestiones poniendo la vida humana como nuestro estándar de valor.
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- El marcador en la página 171 | posición 2330 | Añadido el martes, 17 de octubre de 2023 07:02:08


==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 173 | posición 2364-2368 | Añadido el miércoles, 18 de octubre de 2023 07:58:29

La única cosa que una respuesta humanista a una gran amenaza climática no haría es intentar salvar a la especie tratando de implantar la energía eólica, la solar y los biocombustibles. Son las fuentes de energía que han demostrado tener un peor rendimiento, y si realmente estuviéramos en una situación desesperada, buscaríamos algo que funcionara de verdad, no obligaríamos a todo el mundo a usar lo peor que tenemos y esperar a que dé buen resultado.
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 173 | posición 2360-2368 | Añadido el miércoles, 18 de octubre de 2023 07:58:35

No nos opondríamos a la única fuente de energía libre de CO2 que podría exportarse a todo el mundo: la energía nuclear. Creo que las pruebas dejan bien claro que la energía nuclear es la tecnología más segura (más que los combustibles fósiles, la hidroeléctrica, la eólica y la solar).179 Pero, incluso si no fuera así, pero nos pudiera ayudar a evitar una catástrofe, hasta los peores agoreros no deberían oponerse a ella. Y lo mismo puede decirse de la energía hidroeléctrica a gran escala, que también recibe numerosas críticas. La única cosa que una respuesta humanista a una gran amenaza climática no haría es intentar salvar a la especie tratando de implantar la energía eólica, la solar y los biocombustibles. Son las fuentes de energía que han demostrado tener un peor rendimiento, y si realmente estuviéramos en una situación desesperada, buscaríamos algo que funcionara de verdad, no obligaríamos a todo el mundo a usar lo peor que tenemos y esperar a que dé buen resultado.
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 173 | posición 2360-2373 | Añadido el miércoles, 18 de octubre de 2023 07:59:21

No nos opondríamos a la única fuente de energía libre de CO2 que podría exportarse a todo el mundo: la energía nuclear. Creo que las pruebas dejan bien claro que la energía nuclear es la tecnología más segura (más que los combustibles fósiles, la hidroeléctrica, la eólica y la solar).179 Pero, incluso si no fuera así, pero nos pudiera ayudar a evitar una catástrofe, hasta los peores agoreros no deberían oponerse a ella. Y lo mismo puede decirse de la energía hidroeléctrica a gran escala, que también recibe numerosas críticas. La única cosa que una respuesta humanista a una gran amenaza climática no haría es intentar salvar a la especie tratando de implantar la energía eólica, la solar y los biocombustibles. Son las fuentes de energía que han demostrado tener un peor rendimiento, y si realmente estuviéramos en una situación desesperada, buscaríamos algo que funcionara de verdad, no obligaríamos a todo el mundo a usar lo peor que tenemos y esperar a que dé buen resultado. Por último, y desde un punto de vista más emocional, creo que, si los combustibles fósiles fueran en realidad una gran amenaza, la tristeza sería la reacción más adecuada. Piénsalo un momento: si la energía que alimenta nuestra civilización tiene un defecto estructural, sería algo muy triste. Sería incluso peor que, por ejemplo, descubrir que la tecnología inalámbrica causa tumores cerebrales. La respuesta adecuada sería de gratitud hacia las empresas de combustibles fósiles por todo lo que han hecho por nosotros, a lo que habría que sumar la aceptación de que vamos a sufrir mucho en los próximos años y el compromiso de usar las tecnologías que he mencionado antes.
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 174 | posición 2380-2382 | Añadido el miércoles, 18 de octubre de 2023 08:01:09

Resolver el calentamiento global no supondrá ningún lastre para la economía. Al contrario, liberará una de las mayores oleadas de riqueza de la historia», dice Fred Krupp, presidente del Environmental Defense Fund («Fondo de Defensa Medioambiental»), una organización contraria a los combustibles fósiles y la energía nuclear.
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 176 | posición 2404-2405 | Añadido el miércoles, 18 de octubre de 2023 08:05:47

Las muertes asociadas al clima han descendido un 98 por ciento en todo el mundo, incluso en los países en vías de desarrollo.
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 178 | posición 2446-2446 | Añadido el miércoles, 18 de octubre de 2023 08:11:29

a día de hoy, mil trescientos millones de personas no tienen electricidad.
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- El marcador en la página 180 | posición 2460 | Añadido el miércoles, 18 de octubre de 2023 08:13:29


==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- El marcador en la página 189 | posición 2578 | Añadido el jueves, 19 de octubre de 2023 23:02:39


==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 193 | posición 2620-2621 | Añadido el sábado, 21 de octubre de 2023 00:58:21

No hemos convertido en un lugar peligroso lo que antes era un entorno seguro, hemos convertido en un entorno seguro lo que antes era un lugar mucho más peligroso.
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 194 | posición 2634-2641 | Añadido el sábado, 21 de octubre de 2023 01:01:24

El carbón calentó los hogares de la gente y alimentó la Revolución Industrial en Inglaterra, pero también convirtió algunas partes del país, en concreto las ciudades echadas a perder por el esmog, en lugares prácticamente inhabitables. En 1812, en Londres, la mezcla del humo del carbón y la niebla se volvió tan densa que, según un artículo de la época, «durante la mayor parte del día era imposible leer o escribir junto a una ventana sin luz artificial. Por la mañana apenas se podía ver a la gente que paseaba por la calle a menos de dos metros de distancia». Hoy, doscientos años después, muchos de aquellos problemas asolan China. En Datong, conocida como «la ciudad del carbón», la contaminación atmosférica durante algunas semanas del invierno es tan grave que «incluso a plena luz del día, la gente conduce con las luces encendidas».193
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 195 | posición 2644-2653 | Añadido el sábado, 21 de octubre de 2023 01:02:51

Aquí tienes un gráfico sobre la contaminación atmosférica en Estados Unidos durante los últimos cincuenta años. La imagen recoge las emisiones de seis grandes contaminantes que, según la EPA (la Agencia de Protección del Medio Ambiente de Estados Unidos), se derivan de los combustibles fósiles. Fíjate en el descenso espectacular de las emisiones, a pesar de que usamos más combustibles fósiles que nunca. Figura 7.1 Descenso de la contaminación atmosférica en Estados Unidos Fuente: EPA, Inventario de datos sobre emisiones de contaminantes del aire. ¿Cómo lo hemos conseguido? Sobre todo, usando tecnologías anticontaminación para poder disfrutar al máximo de las ventajas de los combustibles fósiles mientras reducimos sus efectos negativos en la medida de lo posible.
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- El marcador en la página 198 | posición 2691 | Añadido el sábado, 21 de octubre de 2023 01:11:07


==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 200 | posición 2719-2722 | Añadido el sábado, 21 de octubre de 2023 11:29:50

En Mánchester no hubo ningún movimiento contra la contaminación atmosférica, incluso cuando era tan intensa que el aire que hoy se respira en China nos parecería puro y cristalino. ¿Por qué no? Porque, como comentó un observador, el humo era «el inevitable e inocuo acompañante del meritorio acto de fabricar».
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 200 | posición 2719-2724 | Añadido el sábado, 21 de octubre de 2023 11:30:00

En Mánchester no hubo ningún movimiento contra la contaminación atmosférica, incluso cuando era tan intensa que el aire que hoy se respira en China nos parecería puro y cristalino. ¿Por qué no? Porque, como comentó un observador, el humo era «el inevitable e inocuo acompañante del meritorio acto de fabricar».195 Acabar con el carbón era sinónimo de pobreza y hambre, algo a tener en cuenta cuando pedimos a los países subdesarrollados que adopten tecnologías imprácticas en vez de combustibles fósiles.
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 202 | posición 2748-2749 | Añadido el sábado, 21 de octubre de 2023 11:34:24

Para nuestro estudio, el aspecto a tener en cuenta es el siguiente: claramente, es posible aumentar el consumo de combustibles fósiles mientras se reduce la contaminación.
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 203 | posición 2762-2765 | Añadido el sábado, 21 de octubre de 2023 11:36:00

En comparación, en la década de 1870, según Daniel Yergin en The Prize [‘El Premio’], cada año morían unas cinco mil personas en sus casas por la explosión de las lámparas de queroseno.199 La gasolina es más volátil que el queroseno y, sin embargo, no tenemos miedo de que el coche salte por los aires cuando nos ponemos al volante.
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 206 | posición 2806-2810 | Añadido el sábado, 21 de octubre de 2023 11:41:21

Hoy en día se recurre a cuatro grandes falacias para desincentivar la adopción de una visión global y alimentar la oposición a los combustibles fósiles: la falacia del uso y el abuso, la falacia de la falsa imputación, la falacia de la ausencia de umbral y la falacia «artificial». Debes tener en cuenta estas cosas cuando sigas el debate cultural, están en todas partes y las cuatro se utilizan para atacar una tecnología que podría ser la más importante de nuestra generación.
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- El marcador en la página 205 | posición 2799 | Añadido el sábado, 21 de octubre de 2023 11:41:25


==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 212 | posición 2892-2897 | Añadido el domingo, 22 de octubre de 2023 18:24:33

El mercurio, un elemento metálico, existe de forma natural en todo el mundo, sobre todo en los océanos, que contienen una cantidad estimada de entre cuarenta y doscientos millones de toneladas, pero también en la mayoría de los organismos vegetales y animales. El mercurio se libera a la atmósfera por la acción de los volcanes, los incendios forestales y, en cantidades muy inferiores, la combustión del carbón. Las causas naturales explican por qué la región con los niveles más elevados de mercurio de Estados Unidos es el sudoeste, mientras son mucho más bajos en estados tan asociados al carbón como Virginia Occidental y Kentucky.
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 212 | posición 2892-2902 | Añadido el domingo, 22 de octubre de 2023 18:25:25

El mercurio, un elemento metálico, existe de forma natural en todo el mundo, sobre todo en los océanos, que contienen una cantidad estimada de entre cuarenta y doscientos millones de toneladas, pero también en la mayoría de los organismos vegetales y animales. El mercurio se libera a la atmósfera por la acción de los volcanes, los incendios forestales y, en cantidades muy inferiores, la combustión del carbón. Las causas naturales explican por qué la región con los niveles más elevados de mercurio de Estados Unidos es el sudoeste, mientras son mucho más bajos en estados tan asociados al carbón como Virginia Occidental y Kentucky.209 El mercurio, como cualquier otra sustancia, es tóxica en ciertas formas y dosis e inocua en otras. La forma de mercurio que debería preocuparnos por sus efectos en la salud es el metilmercurio (o monometil-mercurio), una combinación de mercurio, carbón e hidrógeno. Los debates sobre el «envenenamiento por mercurio» son engañosos, porque el mercurio sólo se convierte en metilmercurio en ciertas circunstancias, y los seres humanos sólo pueden absorberlo en cantidades significativas bajo condiciones muy concretas (por ejemplo, el elemento selenio parece prevenir la absorción del metilmercurio).
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 215 | posición 2938-2941 | Añadido el domingo, 22 de octubre de 2023 18:29:21

La falacia de la ausencia de umbral se utilizó con particular insidia contra la energía nuclear. Muchos decían que debíamos tener una tolerancia cero con el tema de la radiación, ya que desconocían, por lo visto, que el potasio de su tejido óseo emite radiación, tanta como para que dormir con tu mujer te exponga a una cantidad similar a la que recibirías si estuvieras en la puerta de una central nuclear. Ambas actividades no suponen ningún riesgo. La «ausencia de umbral» más la «falsa imputación»
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 215 | posición 2938-2941 | Añadido el domingo, 22 de octubre de 2023 18:29:33

La falacia de la ausencia de umbral se utilizó con particular insidia contra la energía nuclear. Muchos decían que debíamos tener una tolerancia cero con el tema de la radiación, ya que desconocían, por lo visto, que el potasio de su tejido óseo emite radiación, tanta como para que dormir con tu mujer te exponga a una cantidad similar a la que recibirías si estuvieras en la puerta de una central nuclear. Ambas actividades no suponen ningún riesgo. La «ausencia de umbral» más la «falsa imputación»
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 217 | posición 2969-2971 | Añadido el domingo, 22 de octubre de 2023 18:33:49

Como hemos visto, al usar los combustibles fósiles para mejorar nuestras vidas —y aquí hay que incluir nuestro entorno—, creamos nuevos problemas medioambientales que debemos resolver, muchos menos de los que causa la naturaleza en estado salvaje, aunque sean reales e importantes.
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 220 | posición 3012-3015 | Añadido el domingo, 22 de octubre de 2023 23:08:03

Cuando hablamos de recursos, debemos recordar que el único que no podemos volver a crear, aquel que debemos guardar celosamente, es el tiempo: es irremplazable e irrepetible. Podemos fabricar más plástico, pero no podemos recuperar el tiempo. Y el tiempo es lo que nos permite disfrutar de la naturaleza. Cuanto más productivos seamos, más tiempo tendremos para disfrutar de actividades lúdicas. (Si la gente decide aprovecharlo o no ya sería otra cuestión.)
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- El marcador en la página 231 | posición 3164 | Añadido el martes, 24 de octubre de 2023 23:18:40


==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 235 | posición 3218-3220 | Añadido el jueves, 26 de octubre de 2023 06:42:42

La producción de energía incrementa la creación de conocimientos, el factor que permite que una generación retome el trabajo donde lo dejó la anterior. Además de ideas y conocimientos, una de las acciones del pasado que más nos beneficia en el presente es la creación previa de riqueza.
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 236 | posición 3227-3232 | Añadido el jueves, 26 de octubre de 2023 06:45:57

El proceso de creación de recursos proporciona el material necesario para poner en marcha su siguiente fase. Significa coger el mineral de hierro y convertirlo en algo más valioso, acero; después, coger ese acero y convertirlo en algo aún más valioso, unas cuantas vigas; a continuación, coger esas vigas y utilizarlas para construir algo aún más valioso, un rascacielos; que, asimismo, se transforma en un recurso aún más valioso cuando se convierte en el lugar de trabajo de miles de personas productivas, que incrementan el valor de cada uno de esos espacios de trabajo creando nuevas empresas, que, en última instancia, vuelven a extraer más materias primas para multiplicar su valor mediante una ingeniosa combinación de potencia mecánica, fuerza humana y métodos más perfeccionados.
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 236 | posición 3236-3244 | Añadido el jueves, 26 de octubre de 2023 06:47:03

La última idea que querría destacar sobre el consumo, los residuos y la eficiencia es que la cosa más valiosa que tenemos a nuestra disposición es el tiempo. Si queremos hablar de un recurso, si la vida humana es nuestro estándar de valor, entonces deberíamos centrar toda nuestra atención en el tiempo. Usar combustibles fósiles nos da más tiempo. Nos da más vida. Nos da más oportunidades. Nos da más recursos. Los combustibles fósiles son una herramienta fascinante con la cual podemos crear la mayor forma de riqueza, el recurso definitivo: tiempo para usar nuestros cuerpos y nuestras mentes para poder disfrutar de la vida tanto como sea posible. La cantidad de tiempo, y la calidad de vida que podemos disfrutar con ese tiempo, siempre es menor de la que debería ser, pero corremos el riesgo de que se convierta en una cifra muchísimo más pequeña porque, a pesar de que usar combustibles fósiles es ético, nuestra sociedad no lo sabe. Las voces que guían nuestra sociedad han convencido a muchos de que la energía de la vida es inmoral y por eso exigen unas restricciones que, según todas las pruebas que tenemos, serían una pesadilla.
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 241 | posición 3302-3303 | Añadido el jueves, 26 de octubre de 2023 06:55:28

No diré quién salió vencedor, es mejor que lo decidas tú mismo en <www.moralcaseforfossilfuels.com>.
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 246 | posición 3367-3369 | Añadido el jueves, 26 de octubre de 2023 07:04:18

Ésta es mi respuesta: la principal razón por la que nos oponemos a los combustibles fósiles y somos incapaces de reconocer sus virtudes no tiene nada que ver con una supuesta falta de información, sino con la existencia de un prejuicio moral irracional entre nuestros líderes y, en cierto modo, en toda nuestra cultura.
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- El marcador en la página 246 | posición 3370 | Añadido el jueves, 26 de octubre de 2023 07:04:49


==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 249 | posición 3403-3406 | Añadido el miércoles, 1 de noviembre de 2023 16:35:13

Estoy diciendo que si los combustibles fósiles no generaran residuos (incluso con cero emisiones de CO2), si aún fueran más baratos, si pudieran durar eternamente y si el agotamiento de las reservas no supusiera ningún problema, el movimiento ecologista seguiría estando en su contra.
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 249 | posición 3403-3420 | Añadido el miércoles, 1 de noviembre de 2023 16:39:28

Estoy diciendo que si los combustibles fósiles no generaran residuos (incluso con cero emisiones de CO2), si aún fueran más baratos, si pudieran durar eternamente y si el agotamiento de las reservas no supusiera ningún problema, el movimiento ecologista seguiría estando en su contra. Sé que es difícil de creer. Por eso tienes que conocer la historia que voy a contar a continuación. Durante décadas, la fantasía definitiva del sector energético ha sido lo que se denomina «fusión nuclear». La energía nuclear tradicional recibe el nombre de «fisión nuclear», que genera una potencia extraordinaria mediante la descomposición de átomos pesados, como el uranio. La fusión desencadena muchísima más energía a través de la combinación de dos átomos ligeros, de hidrógeno, por ejemplo. La fusión es la energía que utiliza el sol. Pero todos los intentos de crear una fusión nuclear controlada han sido ineficientes, consumen más energía de la que producen. Pero, si lográramos que funcionase, sería la fuente de energía más barata, limpia y abundante que jamás habríamos creado. Sería como esos combustibles fósiles sin problemas que, como he dicho antes, también despertarían el rechazo de los líderes ecologistas. A finales de los años ochenta, el anuncio de que la viabilidad económica de la fusión estaba más cerca de hacerse realidad consiguió atraer la atención de los medios. Los periodistas entrevistaron a algunos de los líderes ecologistas del momento para preguntarles qué pensaban sobre la fusión, un poco con la idea de captar sus sensaciones, no para hablar de los peligros o los residuos de la nueva tecnología, sino de su poder transformador. ¿Qué dijeron? A continuación, incluyo algunas frases recogidas en un artículo de Los Angeles Times titulado «Miedo a la fusión: ¿y si funciona?». Jeremy Rifkin, uno de los principales líderes ecologistas: «Es lo peor que le podría ocurrir a nuestro planeta».238 Paul Ehrlich: desarrollar la fusión para los seres humanos sería «como darle una ametralladora a un niño idiota».239
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 249 | posición 3403-3423 | Añadido el miércoles, 1 de noviembre de 2023 16:39:35

Estoy diciendo que si los combustibles fósiles no generaran residuos (incluso con cero emisiones de CO2), si aún fueran más baratos, si pudieran durar eternamente y si el agotamiento de las reservas no supusiera ningún problema, el movimiento ecologista seguiría estando en su contra. Sé que es difícil de creer. Por eso tienes que conocer la historia que voy a contar a continuación. Durante décadas, la fantasía definitiva del sector energético ha sido lo que se denomina «fusión nuclear». La energía nuclear tradicional recibe el nombre de «fisión nuclear», que genera una potencia extraordinaria mediante la descomposición de átomos pesados, como el uranio. La fusión desencadena muchísima más energía a través de la combinación de dos átomos ligeros, de hidrógeno, por ejemplo. La fusión es la energía que utiliza el sol. Pero todos los intentos de crear una fusión nuclear controlada han sido ineficientes, consumen más energía de la que producen. Pero, si lográramos que funcionase, sería la fuente de energía más barata, limpia y abundante que jamás habríamos creado. Sería como esos combustibles fósiles sin problemas que, como he dicho antes, también despertarían el rechazo de los líderes ecologistas. A finales de los años ochenta, el anuncio de que la viabilidad económica de la fusión estaba más cerca de hacerse realidad consiguió atraer la atención de los medios. Los periodistas entrevistaron a algunos de los líderes ecologistas del momento para preguntarles qué pensaban sobre la fusión, un poco con la idea de captar sus sensaciones, no para hablar de los peligros o los residuos de la nueva tecnología, sino de su poder transformador. ¿Qué dijeron? A continuación, incluyo algunas frases recogidas en un artículo de Los Angeles Times titulado «Miedo a la fusión: ¿y si funciona?». Jeremy Rifkin, uno de los principales líderes ecologistas: «Es lo peor que le podría ocurrir a nuestro planeta».238 Paul Ehrlich: desarrollar la fusión para los seres humanos sería «como darle una ametralladora a un niño idiota».239 Amory Lovins ya había manifestado en público que «cualquier tipo de tecnología compleja es un ataque contra la dignidad humana. Sería poco menos que un desastre que descubriéramos una fuente de energía limpia, barata y abundante, por todo lo que podríamos llegar a hacer con ella».240
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 251 | posición 3434-3436 | Añadido el miércoles, 1 de noviembre de 2023 16:39:57

Pero si tu estándar de valor es la naturaleza inalterada, entonces Lovins hace bien en preocuparse. Con más energía, tenemos más capacidad para transformar la naturaleza, y así lo haremos: porque transformar nuestro medio ambiente, transformar la naturaleza, es nuestra forma de sobrevivir y prosperar.
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 251 | posición 3437-3440 | Añadido el miércoles, 1 de noviembre de 2023 16:40:55

El príncipe Felipe, duque de Edimburgo, expresidente del Word Wildlife Fund (Fondo Mundial para la Naturaleza, WWF por sus siglas en inglés), dijo en una ocasión: «En el caso de que fuera a reencarnarme, me gustaría volver como un virus mortal, con el fin de poder contribuir a resolver el problema de la superpoblación».
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 251 | posición 3437-3441 | Añadido el miércoles, 1 de noviembre de 2023 16:41:15

El príncipe Felipe, duque de Edimburgo, expresidente del Word Wildlife Fund (Fondo Mundial para la Naturaleza, WWF por sus siglas en inglés), dijo en una ocasión: «En el caso de que fuera a reencarnarme, me gustaría volver como un virus mortal, con el fin de poder contribuir a resolver el problema de la superpoblación».242 Recuerda que, en el capítulo 1, David M. Graber, al elogiar el tema del libro de Bill McKibben, dijo: «Hasta que llegue un momento en que el Homo sapiens decida reintegrarse con la naturaleza, algunos de
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 251 | posición 3437-3442 | Añadido el miércoles, 1 de noviembre de 2023 16:41:24

El príncipe Felipe, duque de Edimburgo, expresidente del Word Wildlife Fund (Fondo Mundial para la Naturaleza, WWF por sus siglas en inglés), dijo en una ocasión: «En el caso de que fuera a reencarnarme, me gustaría volver como un virus mortal, con el fin de poder contribuir a resolver el problema de la superpoblación».242 Recuerda que, en el capítulo 1, David M. Graber, al elogiar el tema del libro de Bill McKibben, dijo: «Hasta que llegue un momento en que el Homo sapiens decida reintegrarse con la naturaleza, algunos de nosotros sólo podemos confiar en que aparezca el virus adecuado».
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 251 | posición 3445-3448 | Añadido el miércoles, 1 de noviembre de 2023 16:42:28

Pero mientras defendamos la ausencia de impacto humano como estándar de valor, iremos en contra de aquello que nuestra supervivencia exige. Y nuestra cultura ha aceptado ese estándar tóxico, y a grandes dosis, bajo la simpática etiqueta de «verde».
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- El marcador en la página 254 | posición 3479 | Añadido el miércoles, 1 de noviembre de 2023 16:49:32


==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- El marcador en la página 255 | posición 3494 | Añadido el miércoles, 1 de noviembre de 2023 16:51:22


==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- El marcador en la página 258 | posición 3542 | Añadido el jueves, 2 de noviembre de 2023 00:12:10


==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 258 | posición 3543-3545 | Añadido el jueves, 2 de noviembre de 2023 17:52:38

Sólo hay una manera de derrotar a los ataques de los ecologistas contra los combustibles fósiles: refutar su falsa idea básica, o sea, que los combustibles fósiles están destruyendo el planeta.
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 266 | posición 3652-3654 | Añadido el jueves, 2 de noviembre de 2023 18:08:49

Por eso este libro también tiene una página web (www.moralcaseforfossilfuels.com), donde podrás descubrir distintas vías para luchar por la liberación energética,
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- El marcador en la página 266 | posición 3654 | Añadido el jueves, 2 de noviembre de 2023 18:09:03


==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 266 | posición 3657-3659 | Añadido el jueves, 2 de noviembre de 2023 19:54:42

el consumo de combustibles fósiles es sumamente virtuoso, porque la vida humana es el estándar de valor; y porque utilizarlos transforma nuestro entorno para convertirlo en un lugar maravilloso para la vida humana.
==========
Rethinking Productivity in Software Engineering (Sadowski, Caitlin)
- La subrayado en la página 39 | posición 840-843 | Añadido el jueves, 2 de noviembre de 2023 20:04:13

Key Ideas Here are the key ideas from this chapter in a nutshell: The low end of productivity can be really low. Quality matters, too, not only raw development speed. Assign critical tasks to your best engineers. Do your best not to have very weak engineers on your team at all.
==========
Rethinking Productivity in Software Engineering (Sadowski, Caitlin)
- La subrayado en la página 42 | posición 871-874 | Añadido el jueves, 2 de noviembre de 2023 20:06:03

“Measuring software productivity by lines of code is like measuring progress on an airplane by how much it weighs.” —Bill Gates “The purpose of software engineering is to control complexity, not to create it.” —Pamela Zave The urge to measure
==========
Rethinking Productivity in Software Engineering (Sadowski, Caitlin)
- La subrayado en la página 42 | posición 871-874 | Añadido el jueves, 2 de noviembre de 2023 20:06:11

“Measuring software productivity by lines of code is like measuring progress on an airplane by how much it weighs.” —Bill Gates “The purpose of software engineering is to control complexity, not to create it.” —Pamela Zave
==========
Rethinking Productivity in Software Engineering (Sadowski, Caitlin)
- La subrayado en la página 42 | posición 881-883 | Añadido el jueves, 2 de noviembre de 2023 20:08:37

We argue that there is no metric that adequately captures the full space of developer productivity and that attempting to find one is counterproductive. Instead, we encourage the design of a set of metrics tailored for answering a specific goal.
==========
Rethinking Productivity in Software Engineering (Sadowski, Caitlin)
- La subrayado en la página 43 | posición 884-885 | Añadido el jueves, 2 de noviembre de 2023 20:10:29

Tracking individual performance can create a morale issue, which perversely could bring down overall productivity. Research has shown that developers do not like having metrics focused on identifying the productivity of individual engineers
==========
Rethinking Productivity in Software Engineering (Sadowski, Caitlin)
- La subrayado en la página 43 | posición 890-892 | Añadido el jueves, 2 de noviembre de 2023 20:11:45

It is our experience that managers (and peers) frequently already know who the low performers are. In that case, metrics serve only to validate a preexisting conception for why an individual is a low performer,
==========
Rethinking Productivity in Software Engineering (Sadowski, Caitlin)
- La subrayado en la página 44 | posición 910-913 | Añadido el jueves, 2 de noviembre de 2023 20:16:43

Developers engage in a variety of other development tasks beyond just writing code, including providing guidance and reviewing code for other developers, designing systems and features, and managing releases and configuration of software systems. Developers also engage in a variety of social tasks such as mentoring or coordination that can have a significant impact on overall team or organization output.
==========
Rethinking Productivity in Software Engineering (Sadowski, Caitlin)
- La subrayado en la página 44 | posición 921-926 | Añadido el jueves, 2 de noviembre de 2023 20:18:23

An additional problem with flattening or combining metrics is that flattened metrics may not make intuitive sense and so may be distrusted or misinterpreted. For example, if a variety of factors (e.g., cyclomatic complexity, time to complete, test coverage, size) are compressed into one number representing the productivity impact of a patch, it will not be immediately clear why one patch scores 24 and another one scores 37. Furthermore, a single score is not directly actionable since a variety of interrelated factors contribute to that score.
==========
Rethinking Productivity in Software Engineering (Sadowski, Caitlin)
- La subrayado en la página 44 | posición 929-931 | Añadido el jueves, 2 de noviembre de 2023 20:20:06

As another example, a Google team wanted to show that high test coverage improves code quality. To do this, they compared the test coverage of different teams with the number of bugs filed. They found no correlation.
==========
Rethinking Productivity in Software Engineering (Sadowski, Caitlin)
- El marcador en la página 45 | posición 935 | Añadido el jueves, 2 de noviembre de 2023 20:22:02


==========
Rethinking Productivity in Software Engineering (Sadowski, Caitlin)
- La subrayado en la página 45 | posición 951-954 | Añadido el viernes, 3 de noviembre de 2023 07:02:57

We can likewise find improvements for other tools, investigate the current cost on developers, and then put those into a Return on Investment (ROI) calculation. For example, we have determined how much time is lost because of waiting for builds (or because of unnecessary context switching as a result of builds). After contrasting this with the cost of speeding up builds (through human or machine resources), we have provided an estimated ROI for different build improvements. We often see teams that
==========
Rethinking Productivity in Software Engineering (Sadowski, Caitlin)
- La subrayado en la página 45 | posición 951-954 | Añadido el viernes, 3 de noviembre de 2023 07:03:02

We can likewise find improvements for other tools, investigate the current cost on developers, and then put those into a Return on Investment (ROI) calculation. For example, we have determined how much time is lost because of waiting for builds (or because of unnecessary context switching as a result of builds). After contrasting this with the cost of speeding up builds (through human or machine resources), we have
==========
Rethinking Productivity in Software Engineering (Sadowski, Caitlin)
- La subrayado en la página 45 | posición 951-954 | Añadido el viernes, 3 de noviembre de 2023 07:03:08

We can likewise find improvements for other tools, investigate the current cost on developers, and then put those into a Return on Investment (ROI) calculation. For example, we have determined how much time is lost because of waiting for builds (or because of unnecessary context switching as a result of builds). After contrasting this with the cost of speeding up builds (through human or machine resources), we have provided an estimated ROI for different build improvements.
==========
Rethinking Productivity in Software Engineering (Sadowski, Caitlin)
- La subrayado en la página 46 | posición 962-963 | Añadido el viernes, 3 de noviembre de 2023 07:05:53

Our approach works because we explicitly do not attempt to create a single metric to measure engineering productivity.
==========
Rethinking Productivity in Software Engineering (Sadowski, Caitlin)
- La subrayado en la página 46 | posición 968-970 | Añadido el viernes, 3 de noviembre de 2023 07:07:06

Key Ideas The following are the key ideas from this chapter: There is no single productivity metric for software engineers. Instead, focus on a set of custom metrics targeted to a specific question.
==========
Rethinking Productivity in Software Engineering (Sadowski, Caitlin)
- La subrayado en la página 49 | posición 1006-1008 | Añadido el viernes, 3 de noviembre de 2023 08:56:04

In pursuit of productivity, however, there can be unintended consequences from trying to measure it. Here are some examples: Measuring productivity can warp incentives, especially if not measured well. Sloppy inferences from measurements could result in worse management decisions rather than better ones.
==========
Rethinking Productivity in Software Engineering (Sadowski, Caitlin)
- La subrayado en la página 50 | posición 1025-1032 | Añadido el viernes, 3 de noviembre de 2023 09:02:14

Would a holistic, multidimensional metric of productivity be any better? It would certainly make the activities of a team more observable. Developers and managers would know every aspect of every developer’s work, able to observe every dimension of progress or lack thereof. It would provide a perfect model of developer activity. But this omniscient vision of software development work still comes with significant unintended consequences. First, if this monitoring were done at a team or organization level by managers, how would being monitored change developers’ behavior? The effect of being observed so thoroughly might actually result in developers self-monitoring their every action, unintentionally reducing productivity. Even if this were a net increase in productivity, it might also lead to developers leaving the organization, moving to organizations that were a little less like Big Brother.
==========
Rethinking Productivity in Software Engineering (Sadowski, Caitlin)
- El marcador en la página 51 | posición 1053 | Añadido el viernes, 3 de noviembre de 2023 09:15:22


==========
Rethinking Productivity in Software Engineering (Sadowski, Caitlin)
- La subrayado en la página 52 | posición 1065-1069 | Añadido el lunes, 6 de noviembre de 2023 23:17:38

Even with a perfect model of productivity, a perfect understanding of its causes in an organization, and a perfect policy for improving productivity, developers will have to learn new skills, changing how they program, communicate, coordinate, and collaborate to implement more productive processes. And if you’ve had any experience changing developer or team behavior, you know how hard it is to change even small things about individual and team behavior. Moreover, once a team changes its behavior, one has to understand the causes of behavior all over again.
==========
Rethinking Productivity in Software Engineering (Sadowski, Caitlin)
- La subrayado en la página 52 | posición 1065-1070 | Añadido el lunes, 6 de noviembre de 2023 23:18:11

Even with a perfect model of productivity, a perfect understanding of its causes in an organization, and a perfect policy for improving productivity, developers will have to learn new skills, changing how they program, communicate, coordinate, and collaborate to implement more productive processes. And if you’ve had any experience changing developer or team behavior, you know how hard it is to change even small things about individual and team behavior. Moreover, once a team changes its behavior, one has to understand the causes of behavior all over again. This thought experiment suggests that regardless of how accurately or elaborately one can measure productivity, the ultimate bottleneck
==========
Rethinking Productivity in Software Engineering (Sadowski, Caitlin)
- La subrayado en la página 52 | posición 1065-1071 | Añadido el lunes, 6 de noviembre de 2023 23:18:18

Even with a perfect model of productivity, a perfect understanding of its causes in an organization, and a perfect policy for improving productivity, developers will have to learn new skills, changing how they program, communicate, coordinate, and collaborate to implement more productive processes. And if you’ve had any experience changing developer or team behavior, you know how hard it is to change even small things about individual and team behavior. Moreover, once a team changes its behavior, one has to understand the causes of behavior all over again. This thought experiment suggests that regardless of how accurately or elaborately one can measure productivity, the ultimate bottleneck in realizing productivity improvements is behavior change.
==========
Rethinking Productivity in Software Engineering (Sadowski, Caitlin)
- La subrayado en la página 52 | posición 1082-1084 | Añadido el lunes, 6 de noviembre de 2023 23:22:51

The whole idea of measuring productivity is really just an effort to be more objective about the subjective factors that are actually driving software development work.
==========
Rethinking Productivity in Software Engineering (Sadowski, Caitlin)
- La subrayado en la página 53 | posición 1093-1096 | Añadido el lunes, 6 de noviembre de 2023 23:27:17

Key Ideas The following are the key ideas from the chapter: Improving productivity requires explaining the factors that affect it, but that requires qualitative insights into team behavior. Teams are always changing, making it even harder to get insights about team behavior through data. Managers are best positioned to get these qualitative insights by interacting with their team.
==========
Rethinking Productivity in Software Engineering (Sadowski, Caitlin)
- La subrayado en la página 56 | posición 1114-1115 | Añadido el lunes, 6 de noviembre de 2023 23:29:25

Successful software systems are subject to perpetual change as they need to be continuously improved and adapted to continuously changing requirements. Software evolution
==========
Rethinking Productivity in Software Engineering (Sadowski, Caitlin)
- La subrayado en la página 56 | posición 1118-1121 | Añadido el lunes, 6 de noviembre de 2023 23:29:54

With the present yet increasing dependency on large-scale software systems, the ability to develop and change existing software in a timely and economical manner is essential for numerous enterprises and organizations in most domains. We commonly call this productivity, which across disciplines and domains refers to the ratio between output and input.
==========
Rethinking Productivity in Software Engineering (Sadowski, Caitlin)
- La subrayado en la página 57 | posición 1128-1131 | Añadido el lunes, 6 de noviembre de 2023 23:32:19

We discuss the terms frequently associated with productivity, namely, efficiency, effectiveness, performance, and profitability, and explain their mutual dependencies. As a first constructive step, we propose a clear and integrated terminology. To better put the terminology in the perspective of software engineering, we start with a description of the history of software productivity.
==========
Rethinking Productivity in Software Engineering (Sadowski, Caitlin)
- La subrayado en la página 57 | posición 1144-1145 | Añadido el lunes, 6 de noviembre de 2023 23:34:55

Function points provide a basis for productivity measures such as function points per week or work-hours per function point.
==========
Rethinking Productivity in Software Engineering (Sadowski, Caitlin)
- La subrayado en la página 57 | posición 1141-1142 | Añadido el lunes, 6 de noviembre de 2023 23:35:09

In 1979, Albrecht introduced function points to express the amount of functionality of an information system rather than the size of its code.
==========
Rethinking Productivity in Software Engineering (Sadowski, Caitlin)
- El marcador en la página 58 | posición 1153 | Añadido el lunes, 6 de noviembre de 2023 23:37:47


==========
Rethinking Productivity in Software Engineering (Sadowski, Caitlin)
- La subrayado en la página 58 | posición 1178-1178 | Añadido el jueves, 9 de noviembre de 2023 17:42:30

Productivity = Output / Input
==========
Rethinking Productivity in Software Engineering (Sadowski, Caitlin)
- La subrayado en la página 58 | posición 1178-1178 | Añadido el jueves, 9 de noviembre de 2023 17:42:36

Productivity = Output / Input
==========
Rethinking Productivity in Software Engineering (Sadowski, Caitlin)
- La subrayado en la página 59 | posición 1191-1191 | Añadido el jueves, 9 de noviembre de 2023 17:42:48

Profitability = Revenue / Cost
==========
Rethinking Productivity in Software Engineering (Sadowski, Caitlin)
- La subrayado en la página 59 | posición 1191-1192 | Añadido el jueves, 9 de noviembre de 2023 17:43:19

The number of factors that influence profitability is even greater than the number of factors that influence productivity.
==========
Rethinking Productivity in Software Engineering (Sadowski, Caitlin)
- La subrayado en la página 59 | posición 1194-1195 | Añadido el jueves, 9 de noviembre de 2023 17:43:32

The term performance is even broader than productivity and profitability and covers a plethora of factors that influence a company’s success. Hence,
==========
Rethinking Productivity in Software Engineering (Sadowski, Caitlin)
- La subrayado en la página 59 | posición 1200-1201 | Añadido el jueves, 9 de noviembre de 2023 17:44:28

The difference between efficiency and effectiveness is usually explained informally as “efficiency is doing things right” and “effectiveness is doing the right things.”
==========
Rethinking Productivity in Software Engineering (Sadowski, Caitlin)
- La subrayado en la página 59 | posición 1202-1204 | Añadido el jueves, 9 de noviembre de 2023 17:45:26

efficiency refers to the utilization of resources and mainly influences the required input of the productivity ratio. Effectiveness mainly aims at the usefulness and appropriateness of the output as it has direct consequences for the customer.
==========
Rethinking Productivity in Software Engineering (Sadowski, Caitlin)
- La subrayado en la página 60 | posición 1218-1228 | Añadido el jueves, 9 de noviembre de 2023 17:53:35

we suggest a purpose-based definition of software value. Given a purpose (a business goal or an application vision), we ask, how well does the software address its purpose in terms of functional and nonfunctional requirements? The answer to this question is determined by the functionality as well as the nonfunctional quality of the software. On the basis of the purpose-based view, we build a consolidated summary of the productivity-related terms. As shown in Figure 4-1, from the purpose, we derive an ideal functionality and quality as well as the ideal effort to serve the purpose correctly. The ideal functionality means the optimal set of features (nothing missing, nothing too much) to fulfil the purpose. Similarly, the ideal quality is the level of the various quality attributes that fit to the purpose in an optimal way. For example, the application scales easily to the needed number of parallel users but not beyond. The ideal effort denotes the number of person-hours if people trained well for the problems to be solved (i.e., the ideal functionality and quality) would have worked in a supportive environment on the software. Comparing the ideal with the actually produced functionality and quality shows the effectiveness of the software development activities; the relation of the ideal to the actual effort gives the efficiency. Both have an influence on productivity.
==========
Rethinking Productivity in Software Engineering (Sadowski, Caitlin)
- El marcador en la página 67 | posición 1294 | Añadido el jueves, 9 de noviembre de 2023 17:59:35


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 8 | posición 126-127 | Añadido el viernes, 10 de noviembre de 2023 10:37:49

People tend to assess the relative importance of issues by the ease with which they are retrieved from memory—and this is largely determined by the extent of coverage in the media.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 9 | posición 139-141 | Añadido el viernes, 10 de noviembre de 2023 10:41:46

The use of demonstrations provided scholars from diverse disciplines—notably philosophers and economists—an unusual opportunity to observe possible flaws in their own thinking. Having seen themselves fail, they became more likely to question the dogmatic assumption, prevalent at the time, that the human mind is rational and logical.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 10 | posición 160 | Añadido el viernes, 10 de noviembre de 2023 17:14:08


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 10 | posición 165-167 | Añadido el sábado, 11 de noviembre de 2023 00:52:17

Amos and I did not address accurate intuitions beyond the casual statement that judgment heuristics “are quite useful, but sometimes lead to severe and systematic errors.” We focused on biases, both because we found them interesting in their own right and because they provided evidence for the heuristics of judgment.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 10 | posición 165-169 | Añadido el sábado, 11 de noviembre de 2023 00:53:16

Amos and I did not address accurate intuitions beyond the casual statement that judgment heuristics “are quite useful, but sometimes lead to severe and systematic errors.” We focused on biases, both because we found them interesting in their own right and because they provided evidence for the heuristics of judgment. We did not ask ourselves whether all intuitive judgments under uncertainty are produced by the heuristics we studied; it is now clear that they are not. In particular, the accurate intuitions of experts are better explained by the effects of prolonged practice than by heuristics. We can now draw a richer and more balanced picture, in which skill and heuristics
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 10 | posición 165-169 | Añadido el sábado, 11 de noviembre de 2023 00:53:24

Amos and I did not address accurate intuitions beyond the casual statement that judgment heuristics “are quite useful, but sometimes lead to severe and systematic errors.” We focused on biases, both because we found them interesting in their own right and because they provided evidence for the heuristics of judgment. We did not ask ourselves whether all intuitive judgments under uncertainty are produced by the heuristics we studied; it is now clear that they are not. In particular, the accurate intuitions of experts are better explained by the effects of prolonged practice than by heuristics. We can now draw a richer and more balanced picture, in which skill and heuristics
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 10 | posición 165-170 | Añadido el sábado, 11 de noviembre de 2023 00:53:32

Amos and I did not address accurate intuitions beyond the casual statement that judgment heuristics “are quite useful, but sometimes lead to severe and systematic errors.” We focused on biases, both because we found them interesting in their own right and because they provided evidence for the heuristics of judgment. We did not ask ourselves whether all intuitive judgments under uncertainty are produced by the heuristics we studied; it is now clear that they are not. In particular, the accurate intuitions of experts are better explained by the effects of prolonged practice than by heuristics. We can now draw a richer and more balanced picture, in which skill and heuristics are alternative sources of intuitive judgments and choices.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 11 | posición 183-185 | Añadido el sábado, 11 de noviembre de 2023 00:59:02

“The situation has provided a cue; this cue has given the expert access to information stored in memory, and the information provides the answer. Intuition is nothing more and nothing less than recognition.”
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 12 | posición 204-206 | Añadido el sábado, 11 de noviembre de 2023 01:04:16

This is the essence of intuitive heuristics: when faced with a difficult question, we often answer an easier one instead, usually without noticing the substitution. The spontaneous search for an intuitive
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 12 | posición 204-207 | Añadido el sábado, 11 de noviembre de 2023 01:11:23

This is the essence of intuitive heuristics: when faced with a difficult question, we often answer an easier one instead, usually without noticing the substitution. The spontaneous search for an intuitive solution sometimes fails—neither an expert solution nor a heuristic answer comes to mind. In such cases we often find ourselves switching to a slower, more deliberate and effortful form of thinking. This is the slow thinking of the title.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 12 | posición 204-214 | Añadido el sábado, 11 de noviembre de 2023 01:14:08

This is the essence of intuitive heuristics: when faced with a difficult question, we often answer an easier one instead, usually without noticing the substitution. The spontaneous search for an intuitive solution sometimes fails—neither an expert solution nor a heuristic answer comes to mind. In such cases we often find ourselves switching to a slower, more deliberate and effortful form of thinking. This is the slow thinking of the title. Fast thinking includes both variants of intuitive thought—the expert and the heuristic—as well as the entirely automatic mental activities of perception and memory, the operations that enable you to know there is a lamp on your desk or retrieve the name of the capital of Russia. The distinction between fast and slow thinking has been explored by many psychologists over the last twenty-five years. For reasons that I explain more fully in the next chapter, I describe mental life by the metaphor of two agents, called System 1 and System 2, which respectively produce fast and slow thinking. I speak of the features of intuitive and deliberate thought as if they were traits and dispositions of two characters in your mind. In the picture that emerges from recent research, the intuitive System 1 is more influential than your experience tells you, and it is the secret author of many of the choices and judgments you make. Most of this book is about the workings of
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 12 | posición 204-215 | Añadido el sábado, 11 de noviembre de 2023 01:14:16

This is the essence of intuitive heuristics: when faced with a difficult question, we often answer an easier one instead, usually without noticing the substitution. The spontaneous search for an intuitive solution sometimes fails—neither an expert solution nor a heuristic answer comes to mind. In such cases we often find ourselves switching to a slower, more deliberate and effortful form of thinking. This is the slow thinking of the title. Fast thinking includes both variants of intuitive thought—the expert and the heuristic—as well as the entirely automatic mental activities of perception and memory, the operations that enable you to know there is a lamp on your desk or retrieve the name of the capital of Russia. The distinction between fast and slow thinking has been explored by many psychologists over the last twenty-five years. For reasons that I explain more fully in the next chapter, I describe mental life by the metaphor of two agents, called System 1 and System 2, which respectively produce fast and slow thinking. I speak of the features of intuitive and deliberate thought as if they were traits and dispositions of two characters in your mind. In the picture that emerges from recent research, the intuitive System 1 is more influential than your experience tells you, and it is the secret author of many of the choices and judgments you make. Most of this book is about the workings of System 1 and the mutual influences between it and System 2.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 14 | posición 224-225 | Añadido el sábado, 11 de noviembre de 2023 01:16:59

We are prone to overestimate how much we understand about the world and to underestimate the role of chance in events.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 14 | posición 232 | Añadido el sábado, 11 de noviembre de 2023 01:22:49


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 24 | posición 334-335 | Añadido el sábado, 11 de noviembre de 2023 13:52:34

The gorilla study illustrates two important facts about our minds: we can be blind to the obvious, and we are also blind to our blindness.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 25 | posición 350 | Añadido el sábado, 11 de noviembre de 2023 13:59:09


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 26 | posición 374-376 | Añadido el domingo, 12 de noviembre de 2023 14:07:19

One of the tasks of System 2 is to overcome the impulses of System 1. In other words, System 2 is in charge of self-control.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 28 | posición 406-408 | Añadido el domingo, 12 de noviembre de 2023 14:23:21

The best we can do is a compromise: learn to recognize situations in which mistakes are likely and try harder to avoid significant mistakes when the stakes are high. The premise of this book is that it is easier to recognize other people’s mistakes than our own.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 31 | posición 441 | Añadido el domingo, 12 de noviembre de 2023 18:41:00


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 31 | posición 442-444 | Añadido el domingo, 12 de noviembre de 2023 18:41:23

The defining feature of System 2, in this story, is that its operations are effortful, and one of its main characteristics is laziness, a reluctance to invest more effort than is strictly necessary.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 31 | posición 442-445 | Añadido el domingo, 12 de noviembre de 2023 18:41:45

The defining feature of System 2, in this story, is that its operations are effortful, and one of its main characteristics is laziness, a reluctance to invest more effort than is strictly necessary. As a consequence, the thoughts and actions that System 2 believes it has chosen are often guided by the figure at the center of the story, System 1.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 34 | posición 493 | Añadido el lunes, 13 de noviembre de 2023 06:47:59


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 35 | posición 526-529 | Añadido el martes, 14 de noviembre de 2023 07:07:52

A general “law of least effort” applies to cognitive as well as physical exertion. The law asserts that if there are several ways of achieving the same goal, people will eventually gravitate to the least demanding course of action. In the economy of action, effort is a cost, and the acquisition of skill is driven by the balance of benefits and costs. Laziness is built deep into our nature.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 36 | posición 541-541 | Añadido el martes, 14 de noviembre de 2023 07:13:01

System 2 is the only one that can follow rules, compare objects on several
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 36 | posición 541-542 | Añadido el martes, 14 de noviembre de 2023 07:13:11

System 2 is the only one that can follow rules, compare objects on several attributes, and make deliberate choices between options.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 37 | posición 555-556 | Añadido el martes, 14 de noviembre de 2023 07:16:47

One of the significant discoveries of cognitive psychologists in recent decades is that switching from one task to another is effortful, especially under time pressure.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 37 | posición 566-567 | Añadido el martes, 14 de noviembre de 2023 07:20:08

The most effortful forms of slow thinking are those that require you to think fast.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 39 | posición 580 | Añadido el martes, 14 de noviembre de 2023 07:22:27


==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 25 | posición 204-205 | Añadido el martes, 14 de noviembre de 2023 07:31:51

The word pragmatic comes from the Latin pragmaticus—“skilled in business”—which in turn is derived from the Greek πραγματικός, meaning “fit for use.”
==========
Pragmatic Programmer, The (Thomas, David)
- El marcador en la página 31 | posición 251 | Añadido el martes, 14 de noviembre de 2023 07:41:20


==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 31 | posición 254-254 | Añadido el miércoles, 15 de noviembre de 2023 06:42:05

engineering in software construction. However, this doesn’t preclude
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 31 | posición 258-259 | Añadido el miércoles, 15 de noviembre de 2023 06:43:27

We who cut mere stones must always be envisioning cathedrals.
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 32 | posición 267-267 | Añadido el miércoles, 15 de noviembre de 2023 06:45:22

“Kaizen” is a Japanese term that captures the concept of continuously making many small improvements.
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 33 | posición 275-277 | Añadido el miércoles, 15 de noviembre de 2023 06:46:58

an attitude, a style, a philosophy of approaching problems and their solutions. They think beyond the immediate problem, placing it in its larger context and seeking out the bigger picture. After
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 33 | posición 275-278 | Añadido el miércoles, 15 de noviembre de 2023 06:47:28

an attitude, a style, a philosophy of approaching problems and their solutions. They think beyond the immediate problem, placing it in its larger context and seeking out the bigger picture. After all, without this larger context, how can you be pragmatic? How can you make intelligent compromises and informed decisions?
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 38 | posición 322-325 | Añadido el miércoles, 15 de noviembre de 2023 06:55:53

Imagine a high-tech, stealth ninja team infiltrating the villain’s evil lair. After months of planning and delicate execution, you’ve made it on site. Now it’s your turn to set up the laser guidance grid: “Sorry, folks, I don’t have the laser. The cat was playing with the red dot and I left it at home.” That sort of breach of trust might be hard to repair.
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 38 | posición 332-334 | Añadido el miércoles, 15 de noviembre de 2023 06:58:16

If there was a risk that the vendor wouldn’t come through for you, then you should have had a contingency plan. If your mass storage melts—taking all of your source code with it—and you don’t have a backup, it’s your fault. Telling your boss “the cat ate my source code’’ just won’t
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 40 | posición 349-352 | Añadido el miércoles, 15 de noviembre de 2023 07:01:47

Challenges How do you react when someone—such as a bank teller, an auto mechanic, or a clerk—comes to you with a lame excuse? What do you think of them and their company as a result? When you find yourself saying, “I don’t know,” be sure to follow it up with “—but I’ll find out.” It’s a great way to admit what you don’t know, but then take responsibility like a pro.
==========
Pragmatic Programmer, The (Thomas, David)
- El marcador en la página 41 | posición 362 | Añadido el miércoles, 15 de noviembre de 2023 07:04:18


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 41 | posición 616-617 | Añadido el jueves, 16 de noviembre de 2023 18:48:21

Several psychological studies have shown that people who are simultaneously challenged by a demanding cognitive task and by a temptation are more likely to yield to the temptation.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 41 | posición 628-630 | Añadido el jueves, 16 de noviembre de 2023 18:52:14

Baumeister’s group has repeatedly found that an effort of will or self-control is tiring; if you have had to force yourself to do something, you are less willing or less able to exert self-control when the next challenge comes around. The phenomenon has been named ego depletion.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 43 | posición 668 | Añadido el jueves, 16 de noviembre de 2023 19:02:08


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 43 | posición 650-651 | Añadido el jueves, 16 de noviembre de 2023 19:02:42

The nervous system consumes more glucose than most other parts of the body, and effortful mental activity appears to be especially expensive in the currency of glucose.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 42 | posición 645-646 | Añadido el jueves, 16 de noviembre de 2023 19:03:00

The evidence is persuasive: activities that impose high demands on System 2 require self-control, and the exertion of self-control is depleting and unpleasant. Unlike cognitive load, ego depletion is at least in part a loss of motivation
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 45 | posición 691-692 | Añadido el jueves, 16 de noviembre de 2023 23:07:09

many people are overconfident, prone to place too much faith in their intuitions. They apparently find cognitive effort at least mildly unpleasant and avoid it as much as possible.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 45 | posición 699-701 | Añadido el jueves, 16 de noviembre de 2023 23:09:47

This experiment has discouraging implications for reasoning in everyday life. It suggests that when people believe a conclusion is true, they are also very likely to believe arguments that appear to support it, even when these arguments are unsound. If System 1 is involved, the conclusion comes first and the arguments follow.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 46 | posición 713-714 | Añadido el jueves, 16 de noviembre de 2023 23:14:24

Intelligence is not only the ability to reason; it is also the ability to find relevant material in memory and to deploy attention when
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 46 | posición 713-714 | Añadido el jueves, 16 de noviembre de 2023 23:14:30

Intelligence is not only the ability to reason; it is also the ability to find relevant material in memory and to deploy attention when needed.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 46 | posición 721-725 | Añadido el jueves, 16 de noviembre de 2023 23:18:04

“Lazy” is a harsh judgment about the self-monitoring of these young people and their System 2, but it does not seem to be unfair. Those who avoid the sin of intellectual sloth could be called “engaged.” They are more alert, more intellectually active, less willing to be satisfied with superficially attractive answers, more skeptical about their intuitions. The psychologist Keith Stanovich would call them more rational.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 46 | posición 715 | Añadido el jueves, 16 de noviembre de 2023 23:18:12


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 48 | posición 754-758 | Añadido el viernes, 17 de noviembre de 2023 18:12:07

Frederick’s findings suggest that the characters of our psychodrama have different “personalities.” System 1 is impulsive and intuitive; System 2 is capable of reasoning, and it is cautious, but at least for some people it is also lazy. We recognize related differences among individuals: some people are more like their System 2; others are closer to their System 1. This simple test has emerged as one of the better predictors of lazy thinking.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 49 | posición 767-768 | Añadido el viernes, 17 de noviembre de 2023 18:15:27

The core of his argument is that rationality should be distinguished from intelligence. In his view, superficial or “lazy” thinking is a flaw in the reflective mind, a failure of rationality.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 51 | posición 811-813 | Añadido el viernes, 17 de noviembre de 2023 18:23:46

the Scottish philosopher David Hume reduced the principles of association to three: resemblance, contiguity in time and place, and causality. Our concept of association has changed radically since Hume’s days, but his three principles still provide a good start.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 52 | posición 823-825 | Añadido el viernes, 17 de noviembre de 2023 18:26:21

The notion that we have limited access to the workings of our minds is difficult to accept because, naturally, it is alien to our experience, but it is true: you know far less about yourself than you feel you do.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 52 | posición 813-814 | Añadido el viernes, 17 de noviembre de 2023 18:26:59

I will adopt an expansive view of what an idea is. It can be concrete or abstract, and it can be expressed in many ways: as a verb, as a noun, as an adjective, or as a clenched fist.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 52 | posición 813-815 | Añadido el viernes, 17 de noviembre de 2023 18:27:09

I will adopt an expansive view of what an idea is. It can be concrete or abstract, and it can be expressed in many ways: as a verb, as a noun, as an adjective, or as a clenched fist. Psychologists think of ideas as nodes in a vast network, called associative memory, in which each idea is linked to many others.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 52 | posición 829-830 | Añadido el viernes, 17 de noviembre de 2023 18:28:01

ease with which many related words can be evoked. If you have
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 52 | posición 825 | Añadido el viernes, 17 de noviembre de 2023 18:30:44


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 53 | posición 851-852 | Añadido el domingo, 19 de noviembre de 2023 19:21:30

This remarkable priming phenomenon—the influencing of an action by the idea—is known as the ideomotor effect.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 54 | posición 866-866 | Añadido el domingo, 19 de noviembre de 2023 19:21:48

Simple, common gestures can also unconsciously influence our thoughts and feelings.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 54 | posición 871-873 | Añadido el domingo, 19 de noviembre de 2023 19:23:37

You can see why the common admonition to “act calm and kind regardless of how you feel” is very good advice: you are likely to be rewarded by actually feeling calm and kind.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 55 | posición 873-874 | Añadido el domingo, 19 de noviembre de 2023 19:26:10

Studies of priming effects have yielded discoveries that threaten our self-image as conscious and autonomous authors of our judgments and our choices.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 55 | posición 883-883 | Añadido el domingo, 19 de noviembre de 2023 19:30:01

became “a high-paying salary”). Other primes were much more subtle,
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 55 | posición 882 | Añadido el domingo, 19 de noviembre de 2023 19:32:05


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 55 | posición 891-893 | Añadido el domingo, 19 de noviembre de 2023 23:24:40

The general theme of these findings is that the idea of money primes individualism: a reluctance to be involved with others, to depend on others, or to accept demands from others.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 56 | posición 903-904 | Añadido el domingo, 19 de noviembre de 2023 23:29:00

Feeling that one’s soul is stained appears to trigger a desire to cleanse one’s body, an impulse that has been dubbed the “Lady Macbeth effect.”
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 56 | posición 904 | Añadido el domingo, 19 de noviembre de 2023 23:29:27


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 56 | posición 907-908 | Añadido el martes, 21 de noviembre de 2023 18:43:49

When I describe priming studies to audiences, the reaction is often disbelief. This is not a surprise: System 2 believes that it is in charge and that it knows the reasons for its choices.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 57 | posición 912-914 | Añadido el martes, 21 de noviembre de 2023 18:46:30

The idea you should focus on, however, is that disbelief is not an option. The results are not made up, nor are they statistical flukes. You have no choice but to accept that the major conclusions of these studies are true. More important, you must accept that they are true about you.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 57 | posición 916-917 | Añadido el martes, 21 de noviembre de 2023 18:47:58

But your subjective experience consists largely of the story that your System 2 tells itself about what is going on. Priming phenomena arise in System 1, and you have no conscious access to
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 57 | posición 916-917 | Añadido el martes, 21 de noviembre de 2023 18:48:03

But your subjective experience consists largely of the story that your System 2 tells itself about what is going on. Priming phenomena arise
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 57 | posición 916-918 | Añadido el martes, 21 de noviembre de 2023 18:48:13

But your subjective experience consists largely of the story that your System 2 tells itself about what is going on. Priming phenomena arise in System 1, and you have no conscious access to them.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 59 | posición 945 | Añadido el martes, 21 de noviembre de 2023 18:55:10


==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 42 | posición 372-372 | Añadido el jueves, 23 de noviembre de 2023 09:50:06

Don’t Live with Broken Windows
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 42 | posición 372-373 | Añadido el jueves, 23 de noviembre de 2023 09:50:22

Don’t leave “broken windows’’ (bad designs, wrong decisions, or poor code) unrepaired.
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 42 | posición 372-375 | Añadido el jueves, 23 de noviembre de 2023 09:50:58

Don’t leave “broken windows’’ (bad designs, wrong decisions, or poor code) unrepaired. Fix each one as soon as it is discovered. If there is insufficient time to fix it properly, then board it up. Perhaps you can comment out the offending code, or display a “Not Implemented” message, or substitute dummy data instead. Take some action to prevent further
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 43 | posición 385-386 | Añadido el jueves, 23 de noviembre de 2023 09:53:55

That’s the way it must be with software: don’t cause collateral damage just because there’s a crisis of some sort. One broken window is one too many.
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 44 | posición 391-393 | Añadido el jueves, 23 de noviembre de 2023 09:55:34

if you find yourself on a project where the code is pristinely beautiful—cleanly written, well designed, and elegant—you will likely take extra special care not to mess it up, just like the firefighters. Even if there’s a fire raging (deadline, release date, trade show demo, etc.),
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 44 | posición 391-393 | Añadido el jueves, 23 de noviembre de 2023 09:55:42

if you find yourself on a project where the code is pristinely beautiful—cleanly written, well designed, and elegant—you will likely take extra special care not to mess it up, just like the firefighters. Even if there’s a fire raging (deadline, release date, trade show demo, etc.), you don’t want to be the first one to make a mess and inflict additional damage.
==========
Pragmatic Programmer, The (Thomas, David)
- El marcador en la página 45 | posición 409 | Añadido el jueves, 23 de noviembre de 2023 10:01:52


==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 46 | posición 421-422 | Añadido el jueves, 23 de noviembre de 2023 22:59:31

Be a Catalyst for Change
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 46 | posición 419-420 | Añadido el jueves, 23 de noviembre de 2023 22:59:41

People find it easier to join an ongoing success. Show them a glimpse of the future and you’ll get them to rally around.
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 47 | posición 427-428 | Añadido el jueves, 23 de noviembre de 2023 23:02:19

Remember the Big Picture
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 47 | posición 432-433 | Añadido el jueves, 23 de noviembre de 2023 23:03:39

Don’t be like the fabled frog. Keep an eye on the big picture. Constantly review what’s happening around you, not just what you personally are doing.
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 50 | posición 464-466 | Añadido el jueves, 23 de noviembre de 2023 23:11:34

The scope and quality of the system you produce should be discussed as part of that system’s requirements. Tip 8 Make Quality a Requirements Issue
==========
Pragmatic Programmer, The (Thomas, David)
- El marcador en la página 50 | posición 464 | Añadido el jueves, 23 de noviembre de 2023 23:12:48


==========
Pragmatic Programmer, The (Thomas, David)
- El marcador en la página 51 | posición 473 | Añadido el jueves, 23 de noviembre de 2023 23:16:42


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 62 | posición 999-1000 | Añadido el domingo, 26 de noviembre de 2023 13:29:55

The impression of familiarity is produced by System 1, and System 2 relies on that impression for a true/false judgment.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 62 | posición 1002-1002 | Añadido el domingo, 26 de noviembre de 2023 13:32:25

A reliable way to make people believe in falsehoods is frequent repetition, because familiarity is not easily distinguished from truth.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 62 | posición 1002-1003 | Añadido el domingo, 26 de noviembre de 2023 13:32:35

A reliable way to make people believe in falsehoods is frequent repetition, because familiarity is not easily distinguished from truth. Authoritarian institutions and marketers have always known this fact.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 62 | posición 1002-1003 | Añadido el domingo, 26 de noviembre de 2023 13:33:55

A reliable way to make people believe in falsehoods is frequent repetition, because familiarity is not easily distinguished from truth. Authoritarian institutions and marketers have always known this fact. But it was psychologists who discovered that you do not have to repeat the entire
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 62 | posición 1002-1004 | Añadido el domingo, 26 de noviembre de 2023 13:34:05

A reliable way to make people believe in falsehoods is frequent repetition, because familiarity is not easily distinguished from truth. Authoritarian institutions and marketers have always known this fact. But it was psychologists who discovered that you do not have to repeat the entire statement of a fact or idea to make it appear true.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 62 | posición 1005-1006 | Añadido el domingo, 26 de noviembre de 2023 13:34:19

The familiarity of one phrase in the statement sufficed to make the whole statement feel familiar, and therefore true.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 62 | posición 1011-1012 | Añadido el domingo, 26 de noviembre de 2023 13:35:45

The general principle is that anything you can do to reduce cognitive strain will help, so you should first maximize legibility.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 63 | posición 1015-1017 | Añadido el domingo, 26 de noviembre de 2023 13:36:25

if your message is to be printed, use high-quality paper to maximize the contrast between characters and their background. If you use color, you are more likely to be believed if your text is printed in bright blue or red than in middling shades of green, yellow, or pale blue.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 63 | posición 1017-1018 | Añadido el domingo, 26 de noviembre de 2023 13:36:40

If you care about being thought credible and intelligent, do not use complex language where simpler language will do.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 63 | posición 1021-1022 | Añadido el domingo, 26 de noviembre de 2023 13:38:21

Put your ideas in verse if you can; they will be more likely to be taken as truth. Participants in a much cited experiment read dozens of unfamiliar aphorisms, such as:
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 64 | posición 1032-1033 | Añadido el domingo, 26 de noviembre de 2023 13:39:37

Remember that System 2 is lazy and that mental effort is aversive. If possible, the recipients of your message want to stay away from anything that reminds them of effort, including a source with a complicated name.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 64 | posición 1028-1028 | Añadido el domingo, 26 de noviembre de 2023 13:39:48

Finally, if you quote a source, choose one with a name that is easy to pronounce.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 64 | posición 1035-1038 | Añadido el domingo, 26 de noviembre de 2023 13:41:11

The psychologists who do these experiments do not believe that people are stupid or infinitely gullible. What psychologists do believe is that all of us live much of our life guided by the impressions of System 1—and we often do not know the source of these impressions. How do you know that a statement is true? If it is strongly linked by logic or association to other beliefs or preferences you hold, or comes from a source you trust and like, you will feel a sense of cognitive ease.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 64 | posición 1040-1043 | Añadido el domingo, 26 de noviembre de 2023 13:42:49

This is the message of figure 5: the sense of ease or strain has multiple causes, and it is difficult to tease them apart. Difficult, but not impossible. People can overcome some of the superficial factors that produce illusions of truth when strongly motivated to do so. On most occasions, however, the lazy System 2 will adopt the suggestions of System 1 and march on.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 65 | posición 1060-1062 | Añadido el domingo, 26 de noviembre de 2023 13:53:58

You read this correctly: performance was better with the bad font. Cognitive strain, whatever its source, mobilizes System 2, which is more likely to reject the intuitive answer suggested by System 1.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 66 | posición 1081-1083 | Añadido el domingo, 26 de noviembre de 2023 14:20:28

the words that were presented more frequently were rated much more favorably than the words that had been shown only once or twice. The finding has been confirmed in many experiments, using Chinese ideographs, faces, and randomly shaped polygons.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 67 | posición 1083-1087 | Añadido el domingo, 26 de noviembre de 2023 14:21:32

The mere exposure effect does not depend on the conscious experience of familiarity. In fact, the effect does not depend on consciousness at all: it occurs even when the repeated words or pictures are shown so quickly that the observers never become aware of having seen them. They still end up liking the words or pictures that were presented more frequently. As should be clear by now, System 1 can respond to impressions of events of which System 2 is unaware. Indeed, the mere exposure effect is actually stronger for stimuli that the individual never consciously sees.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 67 | posición 1087-1089 | Añadido el domingo, 26 de noviembre de 2023 14:22:06

Zajonc argued that the effect of repetition on liking is a profoundly important biological fact, and that it extends to all animals. To survive in a frequently dangerous world, an organism should react cautiously to a novel stimulus, with withdrawal and fear.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 67 | posición 1087-1089 | Añadido el domingo, 26 de noviembre de 2023 14:22:18

Zajonc argued that the effect of repetition on liking is a profoundly important biological fact, and that it extends to all animals. To survive in a frequently dangerous world, an organism should react cautiously to a novel stimulus, with withdrawal and fear. Survival prospects are poor for an animal that is not suspicious of novelty.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 67 | posición 1090-1091 | Añadido el domingo, 26 de noviembre de 2023 14:22:52

The mere exposure effect occurs, Zajonc claimed, because the repeated exposure of a stimulus is followed by nothing bad.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 67 | posición 1094-1098 | Añadido el domingo, 26 de noviembre de 2023 14:24:03

The consequences of repeated exposures benefit the organism in its relations to the immediate animate and inanimate environment. They allow the organism to distinguish objects and habitats that are safe from those that are not, and they are the most primitive basis of social attachments. Therefore, they form the basis for social organization and cohesion—the basic sources of psychological and social stability.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 69 | posición 1122-1122 | Añadido el domingo, 26 de noviembre de 2023 14:28:36

Mood evidently affects the operation of System 1: when we are uncomfortable and unhappy, we lose touch with our intuition.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 69 | posición 1122-1126 | Añadido el domingo, 26 de noviembre de 2023 14:29:32

These findings add to the growing evidence that good mood, intuition, creativity, gullibility, and increased reliance on System 1 form a cluster. At the other pole, sadness, vigilance, suspicion, an analytic approach, and increased effort also go together. A happy mood loosens the control of System 2 over performance: when in a good mood, people become more intuitive and more creative but also less vigilant and more prone to logical errors. Here again, as in the mere exposure effect, the connection makes biological sense.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 69 | posición 1122-1128 | Añadido el domingo, 26 de noviembre de 2023 14:31:50

These findings add to the growing evidence that good mood, intuition, creativity, gullibility, and increased reliance on System 1 form a cluster. At the other pole, sadness, vigilance, suspicion, an analytic approach, and increased effort also go together. A happy mood loosens the control of System 2 over performance: when in a good mood, people become more intuitive and more creative but also less vigilant and more prone to logical errors. Here again, as in the mere exposure effect, the connection makes biological sense. A good mood is a signal that things are generally going well, the environment is safe, and it is all right to let one’s guard down. A bad mood indicates that things are not going very well, there may be a threat, and vigilance is required. Cognitive ease is both a cause and a consequence of a pleasant feeling.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 70 | posición 1139-1141 | Añadido el domingo, 26 de noviembre de 2023 14:37:09

The finding shows that the brief emotional response that follows the presentation of a triad of words (pleasant if the triad is coherent, unpleasant otherwise) is actually the basis of judgments of coherence. There is nothing here that System 1 cannot do. Emotional changes are now expected, and because they are unsurprising they are not linked causally to the words.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 70 | posición 1146-1152 | Añadido el domingo, 26 de noviembre de 2023 14:39:10

Speaking of Cognitive Ease “Let’s not dismiss their business plan just because the font makes it hard to read.” “We must be inclined to believe it because it has been repeated so often, but let’s think it through again.” “Familiarity breeds liking. This is a mere exposure effect.” “I’m in a very good mood today, and my System 2 is weaker than usual. I should be extra careful.”
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 71 | posición 1154 | Añadido el domingo, 26 de noviembre de 2023 14:39:42


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 72 | posición 1170-1171 | Añadido el domingo, 26 de noviembre de 2023 22:16:13

my wife and I were vacationing in a small island resort on the Great Barrier Reef. There are only forty guest rooms on the island.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 77 | posición 1266-1272 | Añadido el lunes, 27 de noviembre de 2023 19:19:09

The psychologist Paul Bloom, writing in The Atlantic in 2005, presented the provocative claim that our inborn readiness to separate physical and intentional causality explains the near universality of religious beliefs. He observes that “we perceive the world of objects as essentially separate from the world of minds, making it possible for us to envision soulless bodies and bodiless souls.” The two modes of causation that we are set to perceive make it natural for us to accept the two central beliefs of many religions: an immaterial divinity is the ultimate cause of the physical world, and immortal souls temporarily control our bodies while we live and leave them behind as we die. In Bloom’s view, the two concepts of causality were shaped separately by evolutionary forces, building the origins of religion into the structure of System
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 77 | posición 1264 | Añadido el lunes, 27 de noviembre de 2023 19:19:22


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 79 | posición 1290 | Añadido el martes, 28 de noviembre de 2023 22:25:06


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 81 | posición 1331-1334 | Añadido el martes, 28 de noviembre de 2023 22:51:32

The operations of associative memory contribute to a general confirmation bias. When asked, “Is Sam friendly?” different instances of Sam’s behavior will come to mind than would if you had been asked “Is Sam unfriendly?” A deliberate search for confirming evidence, known as positive test strategy, is also how System 2 tests a hypothesis.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 82 | posición 1342-1343 | Añadido el sábado, 2 de diciembre de 2023 16:41:00

the halo effect is a good name for a common bias that plays a large role in shaping our view of people and situations.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 83 | posición 1361-1363 | Añadido el sábado, 2 de diciembre de 2023 16:45:28

The sequence in which we observe characteristics of a person is often determined by chance. Sequence matters, however, because the halo effect increases the weight of first impressions, sometimes to the point that subsequent information is mostly wasted.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 85 | posición 1398-1402 | Añadido el miércoles, 6 de diciembre de 2023 23:53:31

The principle of independent judgments (and decorrelated errors) has immediate applications for the conduct of meetings, an activity in which executives in organizations spend a great deal of their working days. A simple rule can help: before an issue is discussed, all members of the committee should be asked to write a very brief summary of their position. This procedure makes good use of the value of the diversity of knowledge and opinion in the group. The standard practice of open discussion gives too much weight to the opinions of those who speak early and assertively, causing others to line up behind them.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 86 | posición 1425-1425 | Añadido el jueves, 7 de diciembre de 2023 15:19:13

WYSIATI, which stands for what you see is all there is.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 86 | posición 1425-1426 | Añadido el jueves, 7 de diciembre de 2023 15:19:28

WYSIATI, which stands for what you see is all there is. System 1 is radically insensitive to both the quality and the quantity of the information that gives rise to impressions and intuitions.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 89 | posición 1476 | Añadido el jueves, 7 de diciembre de 2023 15:35:11


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 89 | posición 1472-1475 | Añadido el viernes, 8 de diciembre de 2023 10:04:03

System 2 receives questions or generates them: in either case it directs attention and searches memory to find the answers. System 1 operates differently. It continuously monitors what is going on outside and inside the mind, and continuously generates assessments of various aspects of the situation without specific intention and with little or no effort.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 91 | posición 1510-1511 | Añadido el viernes, 8 de diciembre de 2023 10:18:58

As expected, the effect of facial competence on voting is about three times larger for information-poor and TV-prone voters than for others who are better informed and watch less television
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 91 | posición 1506 | Añadido el viernes, 8 de diciembre de 2023 10:23:09


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 91 | posición 1512-1515 | Añadido el sábado, 9 de diciembre de 2023 15:01:31

System 1 understands language, of course, and understanding depends on the basic assessments that are routinely carried out as part of the perception of events and the comprehension of messages. These assessments include computations of similarity and representativeness, attributions of causality, and evaluations of the availability of associations and exemplars. They are performed even in the absence of a specific task set, although the results are used to meet task demands as they arise.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 93 | posición 1536-1538 | Añadido el sábado, 9 de diciembre de 2023 15:05:29

System 1 represents categories by a prototype or a set of typical exemplars, it deals well with averages but poorly with sums. The size of the category, the number of instances it contains, tends to be ignored in judgments of what I will call sum-like variables.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 95 | posición 1574-1576 | Añadido el sábado, 9 de diciembre de 2023 15:16:06

I call this excess computation the mental shotgun. It is impossible to aim at a single point with a shotgun because it shoots pellets that scatter, and it seems almost equally difficult for System 1 not to do more than System 2 charges it to do.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 96 | posición 1590-1592 | Añadido el sábado, 9 de diciembre de 2023 15:19:23

the correct answer prevailed in the conflict, but the conflict with the irrelevant answer disrupted performance. In the next chapter we will see that the combination of a mental shotgun with intensity matching explains why we have intuitive judgments about many things that we know little about.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 97 | posición 1602 | Añadido el sábado, 9 de diciembre de 2023 15:22:29


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 97 | posición 1610-1613 | Añadido el sábado, 9 de diciembre de 2023 17:19:09

I call the operation of answering one question in place of another substitution. I also adopt the following terms: The target question is the assessment you intend to produce. The heuristic question is the simpler question that you answer instead.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 97 | posición 1610-1614 | Añadido el sábado, 9 de diciembre de 2023 17:19:25

I call the operation of answering one question in place of another substitution. I also adopt the following terms: The target question is the assessment you intend to produce. The heuristic question is the simpler question that you answer instead. The technical definition of heuristic is a simple procedure that helps find adequate, though often imperfect, answers to difficult questions. The word comes from the same root as eureka.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 99 | posición 1648 | Añadido el sábado, 9 de diciembre de 2023 17:27:44


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 100 | posición 1656-1675 | Añadido el domingo, 10 de diciembre de 2023 13:46:55

The 3-D Heuristic Have a look at the picture of the three men and answer the question that follows. Figure 9 As printed on the page, is the figure on the right larger than the figure on the left? The obvious answer comes quickly to mind: the figure on the right is larger. If you take a ruler to the two figures, however, you will discover that in fact the figures are exactly the same size. Your impression of their relative size is dominated by a powerful illusion, which neatly illustrates the process of substitution. The corridor in which the figures are seen is drawn in perspective and appears to go into the depth plane. Your perceptual system automatically interprets the picture as a three-dimensional scene, not as an image printed on a flat paper surface. In the 3-D interpretation, the person on the right is both much farther away and much larger than the person on the left. For most of us, this impression of 3-D size is overwhelming. Only visual artists and experienced photographers have developed the skill of seeing the drawing as an object on the page. For the rest of us, substitution occurs: the dominant impression of 3-D size dictates the judgment of 2-D size. The illusion is due to a 3-D heuristic. What happens here is a true illusion, not a misunderstanding of the question. You knew that the question was about the size of the figures in the picture, as printed on the page. If you had been asked to estimate the size of the figures, we know from experiments that your answer would have been in inches, not feet. You were not confused about the question, but you were influenced by the answer to a question that you were not asked: “How tall are the three people?” The essential step in the heuristic—the substitution of three-dimensional for two-dimensional size—occurred automatically. The picture contains cues that suggest a 3-D interpretation. These cues are irrelevant to the task at hand—the judgment of size of the figure on the page—and you should have ignored them, but you could not. The bias associated with the heuristic is that objects that appear to be more distant also appear to be larger on the page. As this example illustrates, a judgment that is based on substitution will inevitably be biased in predictable ways. In this case, it happens so deep in the perceptual system that you simply cannot help it.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 102 | posición 1689-1700 | Añadido el domingo, 10 de diciembre de 2023 13:50:07

The psychology of what happened is precisely analogous to the psychology of the size illusion in figure 9. “Happiness these days” is not a natural or an easy assessment. A good answer requires a fair amount of thinking. However, the students who had just been asked about their dating did not need to think hard because they already had in their mind an answer to a related question: how happy they were with their love life. They substituted the question to which they had a readymade answer for the question they were asked. Here again, as we did for the illusion, we can ask: Are the students confused? Do they really think that the two questions—the one they were asked and the one they answer—are synonymous? Of course not. The students do not temporarily lose their ability to distinguish romantic life from life as a whole. If asked about the two concepts, they would say they are different. But they were not asked whether the concepts are different. They were asked how happy they were, and System 1 has a ready answer. Dating is not unique. The same pattern is found if a question about the students’ relations with their parents or about their finances immediately precedes the question about general happiness. In both cases, satisfaction in the particular domain dominates happiness reports. Any emotionally significant question that alters a person’s mood will have the same effect. WYSIATI. The present state of mind looms very large when people evaluate their happiness.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 102 | posición 1691 | Añadido el domingo, 10 de diciembre de 2023 13:52:19


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 103 | posición 1700-1701 | Añadido el lunes, 11 de diciembre de 2023 07:29:34

The dominance of conclusions over arguments is most pronounced where emotions are involved.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 103 | posición 1700-1702 | Añadido el lunes, 11 de diciembre de 2023 07:29:45

The dominance of conclusions over arguments is most pronounced where emotions are involved. The psychologist Paul Slovic has proposed an affect heuristic in which people let their likes and dislikes determine their beliefs about the world.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 103 | posición 1707-1710 | Añadido el lunes, 11 de diciembre de 2023 07:32:49

The primacy of conclusions does not mean that your mind is completely closed and that your opinions are wholly immune to information and sensible reasoning. Your beliefs, and even your emotional attitude, may change (at least a little) when you learn that the risk of an activity you disliked is smaller than you thought. However, the information about lower risks will also change your view of the benefits (for the better) even if nothing was said about benefits in the information you received.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 103 | posición 1707-1718 | Añadido el lunes, 11 de diciembre de 2023 07:35:13

The primacy of conclusions does not mean that your mind is completely closed and that your opinions are wholly immune to information and sensible reasoning. Your beliefs, and even your emotional attitude, may change (at least a little) when you learn that the risk of an activity you disliked is smaller than you thought. However, the information about lower risks will also change your view of the benefits (for the better) even if nothing was said about benefits in the information you received. We see here a new side of the “personality” of System 2. Until now I have mostly described it as a more or less acquiescent monitor, which allows considerable leeway to System 1. I have also presented System 2 as active in deliberate memory search, complex computations, comparisons, planning, and choice. In the bat-and-ball problem and in many other examples of the interplay between the two systems, it appeared that System 2 is ultimately in charge, with the ability to resist the suggestions of System 1, slow things down, and impose logical analysis. Self-criticism is one of the functions of System 2. In the context of attitudes, however, System 2 is more of an apologist for the emotions of System 1 than a critic of those emotions—an endorser rather than an enforcer. Its search for information and arguments is mostly constrained to information that is consistent with existing beliefs, not with an intention to examine them. An active, coherence-seeking System 1 suggests solutions to an undemanding System 2.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 104 | posición 1718-1725 | Añadido el lunes, 11 de diciembre de 2023 07:37:09

Speaking of Substitution and Heuristics “Do we still remember the question we are trying to answer? Or have we substituted an easier one?” “The question we face is whether this candidate can succeed. The question we seem to answer is whether she interviews well. Let’s not substitute.” “He likes the project, so he thinks its costs are low and its benefits are high. Nice example of the affect heuristic.” “We are using last year’s performance as a heuristic to predict the value of the firm several years from now. Is this heuristic good enough? What other information do we need?”
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 106 | posición 1735 | Añadido el lunes, 11 de diciembre de 2023 07:42:36


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 110 | posición 1763-1764 | Añadido el lunes, 11 de diciembre de 2023 07:50:57

the main lesson to be learned is not about epidemiology, it is about the difficult relationship between our mind and statistics.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 110 | posición 1763-1765 | Añadido el lunes, 11 de diciembre de 2023 07:51:20

the main lesson to be learned is not about epidemiology, it is about the difficult relationship between our mind and statistics. System 1 is highly adept in one form of thinking—it automatically and effortlessly identifies causal connections between events, sometimes even when the connection is spurious.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 112 | posición 1801 | Añadido el lunes, 11 de diciembre de 2023 08:04:46


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 113 | posición 1828-1832 | Añadido el lunes, 11 de diciembre de 2023 18:53:48

Amos and I called our first joint article “Belief in the Law of Small Numbers.” We explained, tongue-in-cheek, that “intuitions about random sampling appear to satisfy the law of small numbers, which asserts that the law of large numbers applies to small numbers as well.” We also included a strongly worded recommendation that researchers regard their “statistical intuitions with proper suspicion and replace impression formation by computation whenever possible.”
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 114 | posición 1840-1842 | Añadido el lunes, 11 de diciembre de 2023 18:55:45

Naturally, you focus on the story rather than on the reliability of the results. When the reliability is obviously low, however, the message will be discredited.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 114 | posición 1846-1850 | Añadido el miércoles, 13 de diciembre de 2023 23:39:23

System 1 is not prone to doubt. It suppresses ambiguity and spontaneously constructs stories that are as coherent as possible. Unless the message is immediately negated, the associations that it evokes will spread as if the message were true. System 2 is capable of doubt, because it can maintain incompatible possibilities at the same time. However, sustaining doubt is harder work than sliding into certainty. The law of small numbers is a manifestation of a general bias that favors certainty over doubt,
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 116 | posición 1888 | Añadido el miércoles, 13 de diciembre de 2023 23:51:28


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 118 | posición 1918-1921 | Añadido el jueves, 14 de diciembre de 2023 07:09:39

The exaggerated faith in small samples is only one example of a more general illusion—we pay more attention to the content of messages than to information about their reliability, and as a result end up with a view of the world around us that is simpler and more coherent than the data justify. Jumping to conclusions is a safer sport in the world of our imagination than it is in reality.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 118 | posición 1921-1923 | Añadido el jueves, 14 de diciembre de 2023 07:10:49

Statistics produce many observations that appear to beg for causal explanations but do not lend themselves to such explanations. Many facts of the world are due to chance, including accidents of sampling. Causal explanations of chance events are inevitably wrong.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 119 | posición 1942-1943 | Añadido el jueves, 14 de diciembre de 2023 07:16:16

particular value for an unknown quantity before estimating that quantity. What happens is one of the most reliable and
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 119 | posición 1942-1942 | Añadido el jueves, 14 de diciembre de 2023 07:16:30

anchoring effect. It occurs when people consider a particular value for an unknown quantity before estimating that quantity.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 120 | posición 1947-1948 | Añadido el jueves, 14 de diciembre de 2023 07:17:51

the list of anchoring effects is endless. Any number that you are asked to consider as a possible solution to an estimation problem will induce an anchoring effect.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 120 | posición 1953-1956 | Añadido el jueves, 14 de diciembre de 2023 07:19:21

Two different mechanisms produce anchoring effects—one for each system. There is a form of anchoring that occurs in a deliberate process of adjustment, an operation of System 2. And there is anchoring that occurs by a priming effect, an automatic manifestation of System 1.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 121 | posición 1963 | Añadido el jueves, 14 de diciembre de 2023 07:21:27


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 122 | posición 1995-1996 | Añadido el jueves, 14 de diciembre de 2023 21:07:30

suggestion is a priming effect, which selectively evokes compatible evidence
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 122 | posición 1997-1998 | Añadido el jueves, 14 de diciembre de 2023 21:07:42

System 1 understands sentences by trying to make them true, and the selective activation of compatible thoughts produces a family of systematic errors that make us gullible and prone to believe too strongly whatever we believe.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 126 | posición 2069-2074 | Añadido el viernes, 15 de diciembre de 2023 19:46:56

As in many other games, moving first is an advantage in single-issue negotiations—for example, when price is the only issue to be settled between a buyer and a seller. As you may have experienced when negotiating for the first time in a bazaar, the initial anchor has a powerful effect. My advice to students when I taught negotiations was that if you think the other side has made an outrageous proposal, you should not come back with an equally outrageous counteroffer, creating a gap that will be difficult to bridge in further negotiations. Instead you should make a scene, storm out or threaten to do so, and make it clear—to yourself as well as to the other side—that you will not continue the negotiation with that number on the table.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 127 | posición 2076-2079 | Añadido el viernes, 15 de diciembre de 2023 19:48:00

For example, the anchoring effect is reduced or eliminated when the second mover focuses his attention on the minimal offer that the opponent would accept, or on the costs to the opponent of failing to reach an agreement. In general, a strategy of deliberately “thinking the opposite” may be a good defense against anchoring effects, because it negates the biased recruitment of thoughts that produces these effects.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 127 | posición 2083 | Añadido el viernes, 15 de diciembre de 2023 19:50:37


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 128 | posición 2101-2104 | Añadido el sábado, 16 de diciembre de 2023 00:26:21

Anchoring effects are threatening in a similar way. You are always aware of the anchor and even pay attention to it, but you do not know how it guides and constrains your thinking, because you cannot imagine how you would have thought if the anchor had been different (or absent). However, you should assume that any number that is on the table has had an anchoring effect on you, and if the stakes are high you should mobilize yourself (your System 2) to combat the effect.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 129 | posición 2125-2126 | Añadido el sábado, 16 de diciembre de 2023 16:31:32

We defined the availability heuristic as the process of judging frequency by “the ease with which instances come to mind.”
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 129 | posición 2125-2129 | Añadido el sábado, 16 de diciembre de 2023 16:32:33

We defined the availability heuristic as the process of judging frequency by “the ease with which instances come to mind.” The statement seemed clear when we formulated it, but the concept of availability has been refined since then. The two-system approach had not yet been developed when we studied availability, and we did not attempt to determine whether this heuristic is a deliberate problem-solving strategy or an automatic operation. We now know that both systems are involved.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 131 | posición 2149-2150 | Añadido el sábado, 16 de diciembre de 2023 16:38:36

One of the best-known studies of availability suggests that awareness of your own biases can contribute to peace in marriages, and probably in other joint projects.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 131 | posición 2149-2163 | Añadido el sábado, 16 de diciembre de 2023 16:42:29

One of the best-known studies of availability suggests that awareness of your own biases can contribute to peace in marriages, and probably in other joint projects. In a famous study, spouses were asked, “How large was your personal contribution to keeping the place tidy, in percentages?” They also answered similar questions about “taking out the garbage,” “initiating social engagements,” etc. Would the self-estimated contributions add up to 100%, or more, or less? As expected, the self-assessed contributions added up to more than 100%. The explanation is a simple availability bias: both spouses remember their own individual efforts and contributions much more clearly than those of the other, and the difference in availability leads to a difference in judged frequency. The bias is not necessarily self-serving: spouses also overestimated their contribution to causing quarrels, although to a smaller extent than their contributions to more desirable outcomes. The same bias contributes to the common observation that many members of a collaborative team feel they have done more than their share and also feel that the others are not adequately grateful for their individual contributions. I am generally not optimistic about the potential for personal control of biases, but this is an exception. The opportunity for successful debiasing exists because the circumstances in which issues of credit allocation come up are easy to identify, the more so because tensions often arise when several people at once feel that their efforts are not adequately recognized. The mere observation that there is usually more than 100% credit to go around is sometimes sufficient to defuse the situation. In any event, it is a good thing for every individual to remember. You will occasionally do more than your share, but it is useful to know that you are likely to have that feeling even when each member of the team feels the same way.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 131 | posición 2156 | Añadido el sábado, 16 de diciembre de 2023 16:48:59


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 133 | posición 2185-2189 | Añadido el lunes, 18 de diciembre de 2023 23:12:05

Psychologists enjoy experiments that yield paradoxical results, and they have applied Schwarz’s discovery with gusto. For example, people: believe that they use their bicycles less often after recalling many rather than few instances are less confident in a choice when they are asked to produce more arguments to support it are less confident that an event was avoidable after listing more ways it could have been avoided are less impressed by a car after listing many of its advantages
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 133 | posición 2196-2199 | Añadido el lunes, 18 de diciembre de 2023 23:15:11

The results suggest that the participants make an inference: if I am having so much more trouble than expected coming up with instances of my assertiveness, then I can’t be very assertive. Note that this inference rests on a surprise—fluency being worse than expected. The availability heuristic that the subjects apply is better described as an “unexplained unavailability” heuristic.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 135 | posición 2226-2228 | Añadido el lunes, 18 de diciembre de 2023 23:21:36

The conclusion is that the ease with which instances come to mind is a System 1 heuristic, which is replaced by a focus on content when System 2 is more engaged. Multiple lines of evidence converge on the conclusion that people who let themselves be guided by System 1 are more strongly susceptible to availability biases than others who are in a state of higher vigilance.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 137 | posición 2245 | Añadido el lunes, 18 de diciembre de 2023 23:25:15


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 139 | posición 2278-2279 | Añadido el martes, 19 de diciembre de 2023 23:12:33

The affect heuristic is an instance of substitution, in which the answer to an easy question (How do I feel about it?) serves as an answer to a much harder question (What do I think about it?).
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 140 | posición 2309-2311 | Añadido el martes, 19 de diciembre de 2023 23:22:49

Slovic argues from such observations that the public has a richer conception of risks than the experts do. Consequently, he strongly resists the view that the experts should rule, and that their opinions should be accepted without question when they conflict with the opinions and wishes of other citizens.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 141 | posición 2313-2317 | Añadido el martes, 19 de diciembre de 2023 23:24:10

Slovic has challenged the foundation of their expertise: the idea that risk is objective. “Risk” does not exist “out there,” independent of our minds and culture, waiting to be measured. Human beings have invented the concept of “risk” to help them understand and cope with the dangers and uncertainties of life. Although these dangers are real, there is no such thing as “real risk” or “objective risk.”
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 140 | posición 2308 | Añadido el martes, 19 de diciembre de 2023 23:25:23


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 144 | posición 2376 | Añadido el miércoles, 20 de diciembre de 2023 23:29:28


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 145 | posición 2391-2394 | Añadido el jueves, 21 de diciembre de 2023 06:45:39

Democracy is inevitably messy, in part because the availability and affect heuristics that guide citizens’ beliefs and attitudes are inevitably biased, even if they generally point in the right direction. Psychology should inform the design of risk policies that combine the experts’ knowledge with the public’s emotions and intuitions.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 158 | posición 2616-2619 | Añadido el domingo, 24 de diciembre de 2023 00:30:43

The word fallacy is used, in general, when people fail to apply a logical rule that is obviously relevant. Amos and I introduced the idea of a conjunction fallacy, which people commit when they judge a conjunction of two events (here, bank teller and feminist) to be more probable than one of the events (bank teller) in a direct comparison.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 159 | posición 2634-2635 | Añadido el domingo, 24 de diciembre de 2023 00:37:14

The uncritical substitution of plausibility for probability has pernicious effects on judgments when scenarios are used as tools of forecasting.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 159 | posición 2632-2635 | Añadido el domingo, 24 de diciembre de 2023 00:37:23

The most representative outcomes combine with the personality description to produce the most coherent stories. The most coherent stories are not necessarily the most probable, but they are plausible, and the notions of coherence, plausibility, and probability are easily confused by the unwary. The uncritical substitution of plausibility for probability has pernicious effects on judgments when scenarios are used as tools of forecasting.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 160 | posición 2642 | Añadido el domingo, 24 de diciembre de 2023 00:39:37


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 160 | posición 2648-2649 | Añadido el domingo, 24 de diciembre de 2023 09:59:40

In the absence of a competing intuition, logic prevails.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 163 | posición 2712-2718 | Añadido el domingo, 24 de diciembre de 2023 10:18:15

What have we learned from these studies about the workings of System 2? One conclusion, which is not new, is that System 2 is not impressively alert. The undergraduates and graduate students who participated in our studies of the conjunction fallacy certainly “knew” the logic of Venn diagrams, but they did not apply it reliably even when all the relevant information was laid out in front of them. The absurdity of the less-is-more pattern was obvious in Hsee’s dinnerware study and was easily recognized in the “how many?” representation, but it was not apparent to the thousands of people who have committed the conjunction fallacy in the original Linda problem and in others like it. In all these cases, the conjunction appeared plausible, and that sufficed for an endorsement of System 2. The laziness of System 2 is part of
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 163 | posición 2712-2718 | Añadido el domingo, 24 de diciembre de 2023 10:18:22

What have we learned from these studies about the workings of System 2? One conclusion, which is not new, is that System 2 is not impressively alert. The undergraduates and graduate students who participated in our studies of the conjunction fallacy certainly “knew” the logic of Venn diagrams, but they did not apply it reliably even when all the relevant information was laid out in front of them. The absurdity of the less-is-more pattern was obvious in Hsee’s dinnerware study and was easily recognized in the “how many?” representation, but it was not apparent to the thousands of people who have committed the conjunction fallacy in the original Linda problem and in others like it. In all these cases, the conjunction appeared plausible, and that sufficed for an endorsement of System 2. The laziness of System 2 is part of the story.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 165 | posición 2738-2739 | Añadido el domingo, 24 de diciembre de 2023 10:27:10

lawyers apply two styles of criticism: to demolish a case they raise doubts about the strongest arguments that favor it; to discredit a witness, they focus on the weakest part of the testimony
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 168 | posición 2782-2787 | Añadido el domingo, 24 de diciembre de 2023 10:37:36

Statistical base rates are facts about a population to which a case belongs, but they are not relevant to the individual case. Causal base rates change your view of how the individual case came to be. The two types of base-rate information are treated differently: Statistical base rates are generally underweighted, and sometimes neglected altogether, when specific information about the case at hand is available. Causal base rates are treated as information about the individual case and are easily combined with other case-specific information.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 168 | posición 2795-2797 | Añadido el domingo, 24 de diciembre de 2023 10:40:08

Stereotyping is a bad word in our culture, but in my usage it is neutral. One of the basic characteristics of System 1 is that it represents categories as norms and prototypical exemplars.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 168 | posición 2797-2798 | Añadido el domingo, 24 de diciembre de 2023 10:40:25

we hold in memory a representation of one or more “normal” members of each of these categories.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 169 | posición 2803-2811 | Añadido el domingo, 24 de diciembre de 2023 10:45:10

In sensitive social contexts, we do not want to draw possibly erroneous conclusions about the individual from the statistics of the group. We consider it morally desirable for base rates to be treated as statistical facts about the group rather than as presumptive facts about individuals. In other words, we reject causal base rates. The social norm against stereotyping, including the opposition to profiling, has been highly beneficial in creating a more civilized and more equal society. It is useful to remember, however, that neglecting valid stereotypes inevitably results in suboptimal judgments. Resistance to stereotyping is a laudable moral position, but the simplistic idea that the resistance is costless is wrong. The costs are worth paying to achieve a better society, but denying that the costs exist, while satisfying to the soul and politically correct, is not scientifically defensible. Reliance on the affect heuristic is common in politically charged arguments. The positions we favor have no cost and those we oppose have no benefits. We should be able to do better.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 170 | posición 2825-2828 | Añadido el domingo, 24 de diciembre de 2023 10:49:10

System 1 can deal with stories in which the elements are causally linked, but it is weak in statistical reasoning. For a Bayesian thinker, of course, the versions are equivalent. It is tempting to conclude that we have reached a satisfactory conclusion: causal base rates are used; merely statistical facts are (more or less) neglected. The next study, one of my all-time favorites, shows that the situation is rather more complex.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 170 | posición 2824 | Añadido el domingo, 24 de diciembre de 2023 10:53:13


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 174 | posición 2895-2897 | Añadido el domingo, 24 de diciembre de 2023 18:29:01

Subjects’ unwillingness to deduce the particular from the general was matched only by their willingness to infer the general from the particular.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 174 | posición 2902-2909 | Añadido el domingo, 24 de diciembre de 2023 18:31:29

surprising individual cases have a powerful impact and are a more effective tool for teaching psychology because the incongruity must be resolved and embedded in a causal story. That is why this book contains questions that are addressed personally to the reader. You are more likely to learn something by finding surprises in your own behavior than by hearing surprising facts about people in general. Speaking of Causes and Statistics “We can’t assume that they will really learn anything from mere statistics. Let’s show them one or two representative individual cases to influence their System 1.” “No need to worry about this statistical information being ignored. On the contrary, it will immediately be used to feed a stereotype.”
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 175 | posición 2910 | Añadido el domingo, 24 de diciembre de 2023 18:31:58


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 176 | posición 2928-2934 | Añadido el martes, 26 de diciembre de 2023 15:15:23

The challenge called for a response, but a lesson in the algebra of prediction would not be enthusiastically received. Instead, I used chalk to mark a target on the floor. I asked every officer in the room to turn his back to the target and throw two coins at it in immediate succession, without looking. We measured the distances from the target and wrote the two results of each contestant on the blackboard. Then we rewrote the results in order, from the best to the worst performance on the first try. It was apparent that most (but not all) of those who had done best the first time deteriorated on their second try, and those who had done poorly on the first attempt generally improved. I pointed out to the instructors that what they saw on the board coincided with what we had heard about the performance of aerobatic maneuvers on successive attempts: poor performance was typically followed by improvement and good performance by deterioration, without any help from either praise or punishment.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 178 | posición 2969-2971 | Añadido el martes, 26 de diciembre de 2023 15:29:47

The fact that you observe regression when you predict an early event from a later event should help convince you that regression does not have a causal explanation.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 178 | posición 2971-2971 | Añadido el martes, 26 de diciembre de 2023 15:31:33

Regression effects are ubiquitous, and so are misguided causal stories to explain them.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 178 | posición 2969-2971 | Añadido el martes, 26 de diciembre de 2023 15:31:41

The fact that you observe regression when you predict an early event from a later event should help convince you that regression does not have a causal explanation. Regression effects are ubiquitous, and so are misguided causal stories to explain them.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 179 | posición 2977-2984 | Añadido el martes, 26 de diciembre de 2023 15:33:42

“Norway had a great first jump; he will be tense, hoping to protect his lead and will probably do worse” or “Sweden had a bad first jump and now he knows he has nothing to lose and will be relaxed, which should help him do better.” The commentator had obviously detected regression to the mean and had invented a causal story for which there was no evidence. The story itself could even be true. Perhaps if we measured the athletes’ pulse before each jump we might find that they are indeed more relaxed after a bad first jump. And perhaps not. The point to remember is that the change from the first to the second jump does not need a causal explanation. It is a mathematically inevitable consequence of the fact that luck played a role in the outcome of the first jump. Not a very satisfactory story—we would all prefer a causal account—but that is all there is.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 179 | posición 2984-2987 | Añadido el martes, 26 de diciembre de 2023 15:34:46

Whether undetected or wrongly explained, the phenomenon of regression is strange to the human mind. So strange, indeed, that it was first identified and understood two hundred years after the theory of gravitation and differential calculus. Furthermore, it took one of the best minds of nineteenth-century Britain to make sense of it, and that with great difficulty. Regression to the mean was discovered
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 179 | posición 2984-2986 | Añadido el martes, 26 de diciembre de 2023 15:34:52

Whether undetected or wrongly explained, the phenomenon of regression is strange to the human mind. So strange, indeed, that it was first identified and understood two hundred years after the theory of gravitation and differential calculus. Furthermore, it took one of the best minds of nineteenth
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 179 | posición 2984-2987 | Añadido el martes, 26 de diciembre de 2023 15:35:00

Whether undetected or wrongly explained, the phenomenon of regression is strange to the human mind. So strange, indeed, that it was first identified and understood two hundred years after the theory of gravitation and differential calculus. Furthermore, it took one of the best minds of nineteenth-century Britain to make sense of it, and that with great difficulty.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 181 | posición 3013-3014 | Añadido el martes, 26 de diciembre de 2023 15:45:41

The correlation coefficient between two measures, which varies between 0 and 1, is a measure of the relative weight of the factors they share.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 181 | posición 3015-3024 | Añadido el martes, 26 de diciembre de 2023 15:48:11

To appreciate the meaning of the correlation measure, the following are some examples of coefficients: The correlation between the size of objects measured with precision in English or in metric units is 1. Any factor that influences one measure also influences the other; 100% of determinants are shared. The correlation between self-reported height and weight among adult American males is .41. If you included women and children, the correlation would be much higher, because individuals’ gender and age influence both their height and their weight, boosting the relative weight of shared factors. The correlation between SAT scores and college GPA is approximately .60. However, the correlation between aptitude tests and success in graduate school is much lower, largely because measured aptitude varies little in this selected group. If everyone has similar aptitude, differences in this measure are unlikely to play a large role in measures of success. The correlation between income and education level in the United States is approximately .40. The correlation between family income and the last four digits of their phone number is 0.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 181 | posición 3024-3026 | Añadido el martes, 26 de diciembre de 2023 15:48:54

took Francis Galton several years to figure out that correlation and regression are not two concepts—they are different perspectives on the same concept. The general rule is straightforward but has surprising consequences: whenever the correlation between two scores is imperfect, there will be regression to the mean.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 181 | posición 3027 | Añadido el martes, 26 de diciembre de 2023 15:52:41


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 182 | posición 3040-3041 | Añadido el miércoles, 27 de diciembre de 2023 00:27:19

The main reason for the difficulty is a recurrent theme of this book: our mind is strongly biased toward causal explanations and does not deal well with “mere statistics.”
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 182 | posición 3040-3043 | Añadido el miércoles, 27 de diciembre de 2023 00:27:43

The main reason for the difficulty is a recurrent theme of this book: our mind is strongly biased toward causal explanations and does not deal well with “mere statistics.” When our attention is called to an event, associative memory will look for its cause—more precisely, activation will automatically spread to any cause that is already stored in memory. Causal explanations will be evoked when regression is detected, but they will be wrong because the truth is that regression to the mean has an explanation but does not have a cause.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 185 | posición 3092 | Añadido el miércoles, 27 de diciembre de 2023 00:41:39


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 188 | posición 3153-3154 | Añadido el miércoles, 27 de diciembre de 2023 00:58:08

the prediction of the future is not distinguished from an evaluation of current evidence—prediction matches evaluation
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 188 | posición 3153-3157 | Añadido el miércoles, 27 de diciembre de 2023 00:58:35

the prediction of the future is not distinguished from an evaluation of current evidence—prediction matches evaluation. This is perhaps the best evidence we have for the role of substitution. People are asked for a prediction but they substitute an evaluation of the evidence, without noticing that the question they answer is not the one they were asked. This process is guaranteed to generate predictions that are systematically biased; they completely ignore regression to the mean.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 189 | posición 3169 | Añadido el miércoles, 27 de diciembre de 2023 01:05:17


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 190 | posición 3181-3190 | Añadido el miércoles, 27 de diciembre de 2023 06:35:58

Here are the directions for how to get there in four simple steps: Start with an estimate of average GPA. Determine the GPA that matches your impression of the evidence. Estimate the correlation between your evidence and GPA. If the correlation is .30, move 30% of the distance from the average to the matching GPA. Step 1 gets you the baseline, the GPA you would have predicted if you were told nothing about Julie beyond the fact that she is a graduating senior. In the absence of information, you would have predicted the average. (This is similar to assigning the base-rate probability of business administration graduates when you are told nothing about Tom W.) Step 2 is your intuitive prediction, which matches your evaluation of the evidence. Step 3 moves you from the baseline toward your intuition, but the distance you are allowed to move depends on your estimate of the correlation. You end up, at step 4, with a prediction that is influenced by your intuition but is far more moderate. This approach to prediction is general. You can apply it whenever you need to predict a quantitative variable, such as GPA, profit from an investment, or the growth of a company.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 190 | posición 3192-3193 | Añadido el miércoles, 27 de diciembre de 2023 06:36:36

Intuitive predictions need to be corrected because they are not regressive and therefore are biased.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 191 | posición 3199-3201 | Añadido el miércoles, 27 de diciembre de 2023 06:38:24

The corrected intuitive predictions eliminate these biases, so that predictions (both high and low) are about equally likely to overestimate and to underestimate the true value. You still make errors when your predictions are unbiased, but the errors are smaller and do not favor either high or low outcomes.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 191 | posición 3205-3213 | Añadido el miércoles, 27 de diciembre de 2023 06:41:13

The biases we find in predictions that are expressed on a scale, such as GPA or the revenue of a firm, are similar to the biases observed in judging the probabilities of outcomes. The corrective procedures are also similar: Both contain a baseline prediction, which you would make if you knew nothing about the case at hand. In the categorical case, it was the base rate. In the numerical case, it is the average outcome in the relevant category. Both contain an intuitive prediction, which expresses the number that comes to your mind, whether it is a probability or a GPA. In both cases, you aim for a prediction that is intermediate between the baseline and your intuitive response. In the default case of no useful evidence, you stay with the baseline. At the other extreme, you also stay with your initial prediction. This will happen, of course, only if you remain completely confident in your initial prediction after a critical review of the evidence that supports it. In most cases you will find some reason to doubt that the correlation between your intuitive judgment and the truth is perfect, and you will end up somewhere between the two poles.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 192 | posición 3215-3217 | Añadido el miércoles, 27 de diciembre de 2023 06:41:57

intuitive predictions tend to be overconfident and overly extreme.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 192 | posición 3215-3217 | Añadido el miércoles, 27 de diciembre de 2023 06:42:14

The two procedures are intended to address the same bias: intuitive predictions tend to be overconfident and overly extreme.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 192 | posición 3217-3219 | Añadido el miércoles, 27 de diciembre de 2023 06:42:44

Significant effort is required to find the relevant reference category, estimate the baseline prediction, and evaluate the quality of the evidence. The effort is justified only when the stakes are high and when you are particularly keen not to make mistakes.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 192 | posición 3215-3219 | Añadido el miércoles, 27 de diciembre de 2023 06:42:50

The two procedures are intended to address the same bias: intuitive predictions tend to be overconfident and overly extreme. Correcting your intuitive predictions is a task for System 2. Significant effort is required to find the relevant reference category, estimate the baseline prediction, and evaluate the quality of the evidence. The effort is justified only when the stakes are high and when you are particularly keen not to make mistakes.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 192 | posición 3219-3222 | Añadido el miércoles, 27 de diciembre de 2023 06:44:34

A characteristic of unbiased predictions is that they permit the prediction of rare or extreme events only when the information is very good. If you expect your predictions to be of modest validity, you will never guess an outcome that is either rare or far from the mean. If your predictions are unbiased, you will never have the satisfying experience of correctly calling an extreme case.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 193 | posición 3237-3240 | Añadido el miércoles, 27 de diciembre de 2023 06:47:39

A rational person will invest a large sum in an enterprise that is most likely to fail if the rewards of success are large enough, without deluding herself about the chances of success. However, we are not all rational, and some of us may need the security of distorted estimates to avoid paralysis. If you choose to delude yourself by accepting extreme predictions, however, you will do well to remain aware of your self-indulgence.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 193 | posición 3245 | Añadido el miércoles, 27 de diciembre de 2023 06:50:40


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 194 | posición 3248-3248 | Añadido el jueves, 28 de diciembre de 2023 18:43:35

choice favors Kim, because she left a stronger impression, and WYSIATI.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 194 | posición 3259-3263 | Añadido el jueves, 28 de diciembre de 2023 18:48:48

Extreme predictions and a willingness to predict rare events from weak evidence are both manifestations of System 1. It is natural for the associative machinery to match the extremeness of predictions to the perceived extremeness of evidence on which it is based—this is how substitution works. And it is natural for System 1 to generate overconfident judgments, because confidence, as we have seen, is determined by the coherence of the best story you can tell from the evidence at hand. Be warned: your intuitions will deliver predictions that are too extreme and you will be inclined to put far too much faith in them.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 194 | posición 3259-3269 | Añadido el jueves, 28 de diciembre de 2023 18:49:54

Extreme predictions and a willingness to predict rare events from weak evidence are both manifestations of System 1. It is natural for the associative machinery to match the extremeness of predictions to the perceived extremeness of evidence on which it is based—this is how substitution works. And it is natural for System 1 to generate overconfident judgments, because confidence, as we have seen, is determined by the coherence of the best story you can tell from the evidence at hand. Be warned: your intuitions will deliver predictions that are too extreme and you will be inclined to put far too much faith in them. Regression is also a problem for System 2. The very idea of regression to the mean is alien and difficult to communicate and comprehend. Galton had a hard time before he understood it. Many statistics teachers dread the class in which the topic comes up, and their students often end up with only a vague understanding of this crucial concept. This is a case where System 2 requires special training. Matching predictions to the evidence is not only something we do intuitively; it also seems a reasonable thing to do. We will not learn to understand regression from experience. Even when a regression is identified, as we saw in the story of the flight instructors, it will be given a causal interpretation that is almost always wrong.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 199 | posición 3280 | Añadido el jueves, 28 de diciembre de 2023 18:51:22


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 201 | posición 3320-3322 | Añadido el jueves, 28 de diciembre de 2023 19:17:11

You cannot help dealing with the limited information you have as if it were all there is to know. You build the best possible story from the information available to you, and if it is a good story, you believe it. Paradoxically, it is easier to construct a coherent story when you know little, when there are fewer pieces to fit into the puzzle.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 201 | posición 3323-3323 | Añadido el jueves, 28 de diciembre de 2023 19:17:30

our almost unlimited ability to ignore our ignorance.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 201 | posición 3326-3328 | Añadido el jueves, 28 de diciembre de 2023 19:18:45

a misuse of an important concept. In everyday language, we apply the word know only when what was known is true and can be shown to be true. We can know something only if it is both true and knowable.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 201 | posición 3322 | Añadido el jueves, 28 de diciembre de 2023 19:22:31


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 204 | posición 3390-3392 | Añadido el domingo, 7 de enero de 2024 23:44:29

The sense-making machinery of System 1 makes us see the world as more tidy, simple, predictable, and coherent than it really is. The illusion that one has understood the past feeds the further illusion that one can predict and control the future. These illusions are comforting. They reduce the anxiety that we would experience if we allowed ourselves to fully acknowledge the uncertainties of existence.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 212 | posición 3516-3520 | Añadido el lunes, 8 de enero de 2024 00:17:22

Subjective confidence in a judgment is not a reasoned evaluation of the probability that this judgment is correct. Confidence is a feeling, which reflects the coherence of the information and the cognitive ease of processing it. It is wise to take admissions of uncertainty seriously, but declarations of high confidence mainly tell you that an individual has constructed a coherent story in his mind, not necessarily that the story is true.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 212 | posición 3510 | Añadido el lunes, 8 de enero de 2024 00:17:30


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 216 | posición 3588 | Añadido el martes, 9 de enero de 2024 00:02:38


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 217 | posición 3606-3609 | Añadido el martes, 9 de enero de 2024 22:56:10

Why do investors, both amateur and professional, stubbornly believe that they can do better than the market, contrary to an economic theory that most of them accept, and contrary to what they could learn from a dispassionate evaluation of their personal experience? Many of the themes of previous chapters come up again in the explanation of the prevalence and persistence of an illusion of skill in the financial world.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 217 | posición 3614-3616 | Añadido el martes, 9 de enero de 2024 22:57:48

As I had discovered from watching cadets on the obstacle field, subjective confidence of traders is a feeling, not a judgment. Our understanding of cognitive ease and associative coherence locates subjective confidence firmly in System 1.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 217 | posición 3614-3620 | Añadido el martes, 9 de enero de 2024 22:58:44

As I had discovered from watching cadets on the obstacle field, subjective confidence of traders is a feeling, not a judgment. Our understanding of cognitive ease and associative coherence locates subjective confidence firmly in System 1. Finally, the illusions of validity and skill are supported by a powerful professional culture. We know that people can maintain an unshakable faith in any proposition, however absurd, when they are sustained by a community of like-minded believers. Given the professional culture of the financial community, it is not surprising that large numbers of individuals in that world believe themselves to be among the chosen few who can do what they believe others cannot.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 218 | posición 3627-3628 | Añadido el martes, 9 de enero de 2024 23:02:31

The idea that large historical events are determined by luck is profoundly shocking, although it is demonstrably true.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 219 | posición 3648-3650 | Añadido el martes, 9 de enero de 2024 23:09:19

Even in the region they knew best, experts were not significantly better than nonspecialists. Those who know more forecast very slightly better than those who know less. But those with the most knowledge are often less reliable. The reason is that the person who acquires more knowledge develops an enhanced illusion of her skill and becomes unrealistically overconfident.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 219 | posición 3648-3651 | Añadido el martes, 9 de enero de 2024 23:10:04

Even in the region they knew best, experts were not significantly better than nonspecialists. Those who know more forecast very slightly better than those who know less. But those with the most knowledge are often less reliable. The reason is that the person who acquires more knowledge develops an enhanced illusion of her skill and becomes unrealistically overconfident. “We reach the point of diminishing marginal predictive returns for knowledge disconcertingly quickly,”
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 220 | posición 3670-3672 | Añadido el martes, 9 de enero de 2024 23:18:18

The first lesson is that errors of prediction are inevitable because the world is unpredictable. The second is that high subjective confidence is not to be trusted as an indicator of accuracy (low confidence could be more informative).
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 224 | posición 3722 | Añadido el martes, 9 de enero de 2024 23:31:39


==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 53 | posición 493-494 | Añadido el miércoles, 10 de enero de 2024 10:16:48

Your knowledge and experience are your most important day-to-day professional assets. Unfortunately, they’re expiring assets.
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 53 | posición 496-497 | Añadido el miércoles, 10 de enero de 2024 10:16:55

As the value of your knowledge declines, so does your value to your company or client. We want to prevent this from ever happening.
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 53 | posición 497-498 | Añadido el miércoles, 10 de enero de 2024 10:17:16

Your ability to learn new things is your most important strategic asset.
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 54 | posición 500-503 | Añadido el miércoles, 10 de enero de 2024 10:18:05

knowledge portfolios. Managing a knowledge portfolio is very similar to managing a financial portfolio: Serious investors invest regularly—as a habit. Diversification is the key to long-term success. Smart investors balance their portfolios between conservative and high-risk, high-reward investments. Investors try to buy low and sell high for maximum return. Portfolios should be reviewed and rebalanced periodically.
==========
Pragmatic Programmer, The (Thomas, David)
- El marcador en la página 55 | posición 516 | Añadido el miércoles, 10 de enero de 2024 10:20:36


==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 54 | posición 506-521 | Añadido el miércoles, 10 de enero de 2024 17:20:09

Building Your Portfolio Invest regularly Just as in financial investing, you must invest in your knowledge portfolio regularly, even if it’s just a small amount. The habit is as important as the sums, so plan to use a consistent time and place, away from interruptions. A few sample goals are listed in the next section. Diversify The more different things you know, the more valuable you are. As a baseline, you need to know the ins and outs of the particular technology you are working with currently. But don’t stop there. The face of computing changes rapidly—hot technology today may well be close to useless (or at least not in demand) tomorrow. The more technologies you are comfortable with, the better you will be able to adjust to change. And don’t forget all the other skills you need, including those in non-technical areas. Manage risk Technology exists along a spectrum from risky, potentially high-reward to low-risk, low-reward standards. It’s not a good idea to invest all of your money in high-risk stocks that might collapse suddenly, nor should you invest all of it conservatively and miss out on possible opportunities. Don’t put all your technical eggs in one basket. Buy low, sell high Learning an emerging technology before it becomes popular can be just as hard as finding an undervalued stock, but the payoff can be just as rewarding. Learning Java back when it was first introduced and unknown may have been risky at the time, but it paid off handsomely for the early adopters when it became an industry mainstay later. Review and rebalance This is a very dynamic industry. That hot technology you started investigating last month might be stone cold by now. Maybe you need to brush up on that database technology that you haven’t used in a while. Or perhaps you could be better positioned for that new job opening if you tried out that other language….
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 56 | posición 523-541 | Añadido el miércoles, 10 de enero de 2024 17:24:49

Goals Now that you have some guidelines on what and when to add to your knowledge portfolio, what’s the best way to go about acquiring intellectual capital with which to fund your portfolio? Here are a few suggestions: Learn at least one new language every year Different languages solve the same problems in different ways. By learning several different approaches, you can help broaden your thinking and avoid getting stuck in a rut. Additionally, learning many languages is easy thanks to the wealth of freely available software. Read a technical book each month While there’s a glut of short-form essays and occasionally reliable answers on the web, for deep understanding you need long-form books. Browse the booksellers for technical books on interesting topics related to your current project.[10] Once you’re in the habit, read a book a month. After you’ve mastered the technologies you’re currently using, branch out and study some that don’t relate to your project. Read nontechnical books, too It is important to remember that computers are used by people—people whose needs you are trying to satisfy. You work with people, are employed by people, and get hacked by people. Don’t forget the human side of the equation, as that requires an entirely different skill set (we ironically call these soft skills, but they are actually quite hard to master). Take classes Look for interesting courses at a local or online college or university, or perhaps at the next nearby trade show or conference. Participate in local user groups and meetups Isolation can be deadly to your career; find out what people are working on outside of your company. Don’t just go and listen: actively participate. Experiment with different environments If you’ve worked only in Windows, spend some time with Linux. If you’ve used only makefiles and an editor, try a sophisticated IDE with cutting-edge features, and vice versa. Stay current Read news and posts online on technology different from that of your current project. It’s a great way to find out what experiences other people are having with it, the particular jargon they use, and so on. It’s important to continue investing. Once you feel comfortable with some new language or bit of technology, move on. Learn another one.
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 59 | posición 560-561 | Añadido el miércoles, 10 de enero de 2024 17:27:40

Critically Analyze What You Read and Hear
==========
Pragmatic Programmer, The (Thomas, David)
- El marcador en la página 65 | posición 618 | Añadido el miércoles, 10 de enero de 2024 17:41:16


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 225 | posición 3750-3752 | Añadido el jueves, 11 de enero de 2024 06:31:33

Because you have little direct knowledge of what goes on in your mind, you will never know that you might have made a different judgment or reached a different decision under very slightly different circumstances. Formulas do not suffer from such problems. Given the same input, they always return the same answer. When predictability is poor—which it is in most of the studies reviewed by Meehl and his followers
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 225 | posición 3750-3753 | Añadido el jueves, 11 de enero de 2024 06:31:40

Because you have little direct knowledge of what goes on in your mind, you will never know that you might have made a different judgment or reached a different decision under very slightly different circumstances. Formulas do not suffer from such problems. Given the same input, they always return the same answer. When predictability is poor—which it is in most of the studies reviewed by Meehl and his followers—inconsistency is destructive of any predictive validity.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 225 | posición 3755-3758 | Añadido el jueves, 11 de enero de 2024 06:32:51

conducting an interview is likely to diminish the accuracy of a selection procedure, if the interviewers also make the final admission decisions. Because interviewers are overconfident in their intuitions, they will assign too much weight to their personal impressions and too little weight to other sources of information, lowering validity.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 226 | posición 3768-3769 | Añadido el jueves, 11 de enero de 2024 06:36:03

formulas that assign equal weights to all the predictors are often superior, because they are not affected by accidents of sampling.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 226 | posición 3773-3776 | Añadido el jueves, 11 de enero de 2024 06:37:42

The important conclusion from this research is that an algorithm that is constructed on the back of an envelope is often good enough to compete with an optimally weighted formula, and certainly good enough to outdo expert judgment. This logic can be applied in many domains, ranging from the selection of stocks by portfolio managers to the choices of medical treatments by doctors or patients.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 227 | posición 3788-3790 | Añadido el jueves, 11 de enero de 2024 06:40:28

Atul Gawande’s recent A Checklist Manifesto provides many other examples of the virtues of checklists and simple rules.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 228 | posición 3807-3810 | Añadido el jueves, 11 de enero de 2024 06:44:39

This is an attitude we can all recognize. When a human competes with a machine, whether it is John Henry a-hammerin’ on the mountain or the chess genius Garry Kasparov facing off against the computer Deep Blue, our sympathies lie with our fellow human. The aversion to algorithms making decisions that affect humans is rooted in the strong preference that many people have for the natural over the synthetic or artificial.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 229 | posición 3819-3823 | Añadido el jueves, 11 de enero de 2024 06:47:51

Meehl remarked, “I do not quite know how to alleviate the horror some clinicians seem to experience when they envisage a treatable case being denied treatment because a ‘blind, mechanical’ equation misclassifies him.” In contrast, Meehl and other proponents of algorithms have argued strongly that it is unethical to rely on intuitive judgments for important decisions if an algorithm is available that will make fewer mistakes. Their rational argument is compelling, but it runs against a stubborn psychological reality: for most people, the cause of a mistake matters.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 229 | posición 3823 | Añadido el jueves, 11 de enero de 2024 06:49:29


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 230 | posición 3846-3846 | Añadido el jueves, 11 de enero de 2024 23:07:51

statistical rules are superior to intuitive “clinical” judgments.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 231 | posición 3873-3874 | Añadido el jueves, 11 de enero de 2024 23:14:46

I learned from this finding a lesson that I have never forgotten: intuition adds value even in the justly derided selection interview, but only after a disciplined collection of objective information and disciplined scoring of separate traits.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 234 | posición 3903 | Añadido el jueves, 11 de enero de 2024 23:20:46


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 237 | posición 3962-3963 | Añadido el sábado, 13 de enero de 2024 00:53:12

The moral of Simon’s remark is that the mystery of knowing without knowing is not a distinctive feature of intuition; it is the norm of mental life.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 237 | posición 3965-3966 | Añadido el sábado, 13 de enero de 2024 13:58:20

We have inherited from our ancestors a great facility to learn when to be afraid. Indeed, one experience is often sufficient to establish a long-term aversion and fear.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 238 | posición 3975-3975 | Añadido el sábado, 13 de enero de 2024 14:00:27

Fear can also be learned—quite easily, in fact—by words rather than by experience.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 238 | posición 3979-3981 | Añadido el sábado, 13 de enero de 2024 14:01:50

Emotional learning may be quick, but what we consider as “expertise” usually takes a long time to develop. The acquisition of expertise in complex tasks such as high-level chess, professional basketball, or firefighting is intricate and slow because expertise in a domain is not a single skill but rather a large collection of miniskills.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 240 | posición 4010-4011 | Añadido el sábado, 13 de enero de 2024 14:06:38

In other words, do not trust anyone—including yourself—to tell you how much you should trust their judgment.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 240 | posición 4011-4014 | Añadido el sábado, 13 de enero de 2024 14:07:12

If subjective confidence is not to be trusted, how can we evaluate the probable validity of an intuitive judgment? When do judgments reflect true expertise? When do they display an illusion of validity? The answer comes from the two basic conditions for acquiring a skill: an environment that is sufficiently regular to be predictable an opportunity to learn these regularities through prolonged practice
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 240 | posición 4017-4019 | Añadido el sábado, 13 de enero de 2024 14:08:14

In contrast, stock pickers and political scientists who make long-term forecasts operate in a zero-validity environment. Their failures reflect the basic unpredictability of the events that they try to forecast.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 240 | posición 4023 | Añadido el sábado, 13 de enero de 2024 14:09:00


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 241 | posición 4032-4033 | Añadido el lunes, 15 de enero de 2024 23:01:26

It is wrong to blame anyone for failing to forecast accurately in an unpredictable world. However, it seems fair to blame professionals for believing they can succeed in an impossible task.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 247 | posición 4142-4147 | Añadido el lunes, 15 de enero de 2024 23:25:59

I eventually learned three lessons from it. The first was immediately apparent: I had stumbled onto a distinction between two profoundly different approaches to forecasting, which Amos and I later labeled the inside view and the outside view. The second lesson was that our initial forecasts of about two years for the completion of the project exhibited a planning fallacy. Our estimates were closer to a best-case scenario than to a realistic assessment. I was slower to accept the third lesson, which I call irrational perseverance: the folly we displayed that day in failing to abandon the project. Facing a choice, we gave up rationality rather than give up the enterprise.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 247 | posición 4144 | Añadido el lunes, 15 de enero de 2024 23:32:12


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 248 | posición 4154-4154 | Añadido el martes, 16 de enero de 2024 07:12:26

“unknown unknowns.”
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 248 | posición 4164-4164 | Añadido el martes, 16 de enero de 2024 07:15:17

the baseline prediction should be the anchor for further adjustments.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 248 | posición 4164-4165 | Añadido el martes, 16 de enero de 2024 07:15:32

the baseline prediction should be the anchor for further adjustments. If you are asked to guess the height of a woman about whom you know only that she lives in New York City, your baseline prediction is your best guess of the average height of women in the city.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 248 | posición 4168-4171 | Añadido el martes, 16 de enero de 2024 07:16:41

The spectacular accuracy of the outside-view forecast in our problem was surely a fluke and should not count as evidence for the validity of the outside view. The argument for the outside view should be made on general grounds: if the reference class is properly chosen, the outside view will give an indication of where the ballpark is, and it may suggest, as it did in our case, that the inside-view forecasts are not even close to it.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 249 | posición 4181-4183 | Añadido el martes, 16 de enero de 2024 07:18:36

“Pallid” statistical information is routinely discarded when it is incompatible with one’s personal impressions of a case. In the competition with the inside view, the outside view doesn’t stand a chance.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 249 | posición 4181-4184 | Añadido el martes, 16 de enero de 2024 07:18:47

“Pallid” statistical information is routinely discarded when it is incompatible with one’s personal impressions of a case. In the competition with the inside view, the outside view doesn’t stand a chance. The preference for the inside view sometimes carries moral overtones.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 249 | posición 4189 | Añadido el martes, 16 de enero de 2024 07:19:41


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 250 | posición 4192-4194 | Añadido el martes, 16 de enero de 2024 23:37:44

Amos and I coined the term planning fallacy to describe plans and forecasts that are unrealistically close to best-case scenarios could be improved by consulting the statistics of similar cases
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 251 | posición 4215-4217 | Añadido el martes, 16 de enero de 2024 23:43:15

The prevalent tendency to underweight or ignore distributional information is perhaps the major source of error in forecasting. Planners should therefore make every effort to frame the forecasting problem so as to facilitate utilizing all the distributional information that is available.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 251 | posición 4219-4220 | Añadido el martes, 16 de enero de 2024 23:43:35

The treatment for the planning fallacy has now acquired a technical name, reference class forecasting, and Flyvbjerg
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 252 | posición 4233-4235 | Añadido el martes, 16 de enero de 2024 23:46:22

A well-run organization will reward planners for precise execution and penalize them for failing to anticipate difficulties, and for failing to allow for difficulties that they could not have anticipated—the unknown unknowns.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 252 | posición 4238-4238 | Añadido el martes, 16 de enero de 2024 23:47:21

the optimistic bias is a significant source of risk taking.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 252 | posición 4242 | Añadido el martes, 16 de enero de 2024 23:49:23


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 254 | posición 4264-4271 | Añadido el jueves, 18 de enero de 2024 23:01:32

“He’s taking an inside view. He should forget about his own case and look for what happened in other cases.” “She is the victim of a planning fallacy. She’s assuming a best-case scenario, but there are too many different ways for the plan to fail, and she cannot foresee them all.” “Suppose you did not know a thing about this particular legal case, only that it involves a malpractice claim by an individual against a surgeon. What would be your baseline prediction? How many of these cases succeed in court? How many settle? What are the amounts? Is the case we are discussing stronger or weaker than similar claims?” “We are making an additional investment because we do not want to admit failure. This is an instance of the sunk-cost fallacy.”
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 255 | posición 4282-4285 | Añadido el jueves, 18 de enero de 2024 23:06:19

If you were allowed one wish for your child, seriously consider wishing him or her optimism. Optimists are normally cheerful and happy, and therefore popular; they are resilient in adapting to failures and hardships, their chances of clinical depression are reduced, their immune system is stronger, they take better care of their health, they feel healthier than others and are in fact likely to live longer.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 256 | posición 4288-4290 | Añadido el jueves, 18 de enero de 2024 23:07:29

Optimistic individuals play a disproportionate role in shaping our lives. Their decisions make a difference; they are the inventors, the entrepreneurs, the political and military leaders—not average people.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 258 | posición 4327 | Añadido el jueves, 18 de enero de 2024 23:17:43


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 259 | posición 4345-4346 | Añadido el viernes, 19 de enero de 2024 23:34:07

The optimistic risk taking of entrepreneurs surely contributes to the economic dynamism of a capitalistic society, even if most risk takers end up disappointed.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 261 | posición 4381 | Añadido el viernes, 19 de enero de 2024 23:42:05


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 262 | posición 4397-4400 | Añadido el sábado, 20 de enero de 2024 07:53:55

Overconfidence is another manifestation of WYSIATI: when we estimate a quantity, we rely on information that comes to mind and construct a coherent story in which the estimate makes sense. Allowing for the information that does not come to mind—perhaps because one never knew it—is impossible.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 261 | posición 4393-4397 | Añadido el sábado, 20 de enero de 2024 07:55:28

In addition to their best guess about S&P returns, the participants provided two other estimates: a value that they were 90% sure would be too high, and one that they were 90% sure would be too low. The range between the two values is called an “80% confidence interval” and outcomes that fall outside the interval are labeled “surprises.” An individual who sets confidence intervals on multiple occasions expects about 20% of the outcomes to be surprises. As frequently happens in such exercises, there were far too many surprises; their incidence was 67%, more than 3 times higher than expected.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 262 | posición 4400-4403 | Añadido el sábado, 20 de enero de 2024 07:55:40

The authors calculated the confidence intervals that would have reduced the incidence of surprises to 20%. The results were striking. To maintain the rate of surprises at the desired level, the CFOs should have said, year after year, “There is an 80% chance that the S&P return next year will be between –10% and +30%.” The confidence interval that properly reflects the CFOs’ knowledge (more precisely, their ignorance) is more than 4 times wider than the intervals they actually stated.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 262 | posición 4405-4406 | Añadido el sábado, 20 de enero de 2024 07:56:39

The wide confidence interval is a confession of ignorance, which is not socially acceptable for someone who is paid to be knowledgeable in financial matters.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 262 | posición 4410-4411 | Añadido el sábado, 20 de enero de 2024 07:58:14

As Nassim Taleb has argued, inadequate appreciation of the uncertainty of the environment inevitably leads economic agents to take risks they should avoid.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 262 | posición 4410-4413 | Añadido el sábado, 20 de enero de 2024 07:58:39

As Nassim Taleb has argued, inadequate appreciation of the uncertainty of the environment inevitably leads economic agents to take risks they should avoid. However, optimism is highly valued, socially and in the market; people and firms reward the providers of dangerously misleading information more than they reward truth tellers.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 263 | posición 4419-4419 | Añadido el sábado, 20 de enero de 2024 08:00:43

“clinicians who were ‘completely certain’ of the diagnosis antemortem were wrong 40% of the time.”
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 263 | posición 4419-4421 | Añadido el sábado, 20 de enero de 2024 08:01:22

“clinicians who were ‘completely certain’ of the diagnosis antemortem were wrong 40% of the time.” Here again, expert overconfidence is encouraged by their clients: “Generally, it is considered a weakness and a sign of vulnerability for clinicians to appear unsure. Confidence is valued over uncertainty and there is a prevailing censure against disclosing uncertainty to patients.”
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 263 | posición 4419-4425 | Añadido el sábado, 20 de enero de 2024 08:02:46

“clinicians who were ‘completely certain’ of the diagnosis antemortem were wrong 40% of the time.” Here again, expert overconfidence is encouraged by their clients: “Generally, it is considered a weakness and a sign of vulnerability for clinicians to appear unsure. Confidence is valued over uncertainty and there is a prevailing censure against disclosing uncertainty to patients.” Experts who acknowledge the full extent of their ignorance may expect to be replaced by more confident competitors, who are better able to gain the trust of clients. An unbiased appreciation of uncertainty is a cornerstone of rationality—but it is not what people and organizations want. Extreme uncertainty is paralyzing under dangerous circumstances, and the admission that one is merely guessing is especially unacceptable when the stakes are high. Acting on pretended knowledge is often the preferred solution.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 263 | posición 4428-4429 | Añadido el sábado, 20 de enero de 2024 08:03:43

“bold forecasts and timid decisions” to describe the background of risk taking.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 263 | posición 4427-4429 | Añadido el sábado, 20 de enero de 2024 08:03:51

Dan Lovallo and I coined the phrase “bold forecasts and timid decisions” to describe the background of risk taking.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 263 | posición 4429-4432 | Añadido el sábado, 20 de enero de 2024 08:08:46

The effects of high optimism on decision making are, at best, a mixed blessing, but the contribution of optimism to good implementation is certainly positive. The main benefit of optimism is resilience in the face of setbacks. According to Martin Seligman, the founder of positive psychology, an “optimistic explanation style” contributes to resilience by defending one’s self-image. In essence, the optimistic style involves taking credit for successes but little blame for failures.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 264 | posición 4443-4444 | Añadido el sábado, 20 de enero de 2024 08:15:14

overconfidence is a direct consequence of features of System 1 that can be tamed—but not vanquished.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 264 | posición 4443-4445 | Añadido el sábado, 20 de enero de 2024 08:15:29

overconfidence is a direct consequence of features of System 1 that can be tamed—but not vanquished. The main obstacle is that subjective confidence is determined by the coherence of the story one has constructed, not by the quality and amount of the information that supports it.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 264 | posición 4447-4451 | Añadido el sábado, 20 de enero de 2024 08:18:18

the premortem. The procedure is simple: when the organization has almost come to an important decision but has not formally committed itself, Klein proposes gathering for a brief session a group of individuals who are knowledgeable about the decision. The premise of the session is a short speech: “Imagine that we are a year into the future. We implemented the plan as it now exists. The outcome was a disaster. Please take 5 to 10 minutes to write a brief history of that disaster.”
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 264 | posición 4453-4455 | Añadido el sábado, 20 de enero de 2024 08:18:33

The premortem has two main advantages: it overcomes the groupthink that affects many teams once a decision appears to have been made, and it unleashes the imagination of knowledgeable individuals in a much-needed direction.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 266 | posición 4457-4458 | Añadido el sábado, 20 de enero de 2024 08:19:12

The main virtue of the premortem is that it legitimizes doubts.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 266 | posición 4457-4460 | Añadido el sábado, 20 de enero de 2024 08:19:36

The main virtue of the premortem is that it legitimizes doubts. Furthermore, it encourages even supporters of the decision to search for possible threats that they had not considered earlier. The premortem is not a panacea and does not provide complete protection against nasty surprises, but it goes some way toward reducing the damage of plans that are subject to the biases of WYSIATI and uncritical optimism.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 270 | posición 4485-4486 | Añadido el sábado, 20 de enero de 2024 08:31:00

What rules govern people’s choices between different simple gambles and between gambles and sure things?
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 273 | posición 4552-4553 | Añadido el sábado, 20 de enero de 2024 08:50:43

The psychological value of a gamble is therefore not the weighted average of its possible dollar outcomes; it is the average of the utilities of these outcomes, each weighted by its probability.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 274 | posición 4555-4556 | Añadido el sábado, 20 de enero de 2024 08:52:30

Bernoulli proposed that the diminishing marginal value of wealth (in the modern jargon) is what explains risk aversion—
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 272 | posición 4535-4535 | Añadido el sábado, 20 de enero de 2024 08:56:54

desirability of money (now called utility)
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 274 | posición 4554-4555 | Añadido el sábado, 20 de enero de 2024 08:58:42

You can see that adding 1 million to a wealth of 1 million yields an increment of 20 utility points, but adding 1 million to a wealth of 9 million adds only 4 points.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 274 | posición 4568-4570 | Añadido el sábado, 20 de enero de 2024 08:59:48

His utility function explained why poor people buy insurance and why richer people sell it to them. As you can see in the table, the loss of 1 million causes a loss of 4 points of utility (from 100 to 96) to someone who has 10 million and a much larger loss of 18 points (from 48 to 30) to someone who starts off with 3 million.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 274 | posición 4568-4571 | Añadido el sábado, 20 de enero de 2024 09:00:33

His utility function explained why poor people buy insurance and why richer people sell it to them. As you can see in the table, the loss of 1 million causes a loss of 4 points of utility (from 100 to 96) to someone who has 10 million and a much larger loss of 18 points (from 48 to 30) to someone who starts off with 3 million. The poorer man will happily pay a premium to transfer the risk to the richer one, which is what insurance is about.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 277 | posición 4618-4620 | Añadido el sábado, 20 de enero de 2024 09:12:25

“This theory is seriously wrong because it ignores the fact that utility depends on the history of one’s wealth, not only on present wealth.” As the psychologist Daniel Gilbert observed, disbelieving is hard work, and System 2 is easily tired.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 277 | posición 4623 | Añadido el sábado, 20 de enero de 2024 09:30:59


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 278 | posición 4628 | Añadido el sábado, 20 de enero de 2024 09:31:15


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 280 | posición 4670-4680 | Añadido el sábado, 20 de enero de 2024 19:03:39

Problem 3: In addition to whatever you own, you have been given $1,000. You are now asked to choose one of these options: 50% chance to win $1,000 OR get $500 for sure Problem 4: In addition to whatever you own, you have been given $2,000. You are now asked to choose one of these options: 50% chance to lose $1,000 OR lose $500 for sure You can easily confirm that in terms of final states of wealth—all that matters for Bernoulli’s theory—problems 3 and 4 are identical. In both cases you have a choice between the same two options: you can have the certainty of being richer than you currently are by $1,500, or accept a gamble in which you have equal chances to be richer by $1,000 or by $2,000. In Bernoulli’s theory, therefore, the two problems should elicit similar preferences. Check your intuitions, and you will probably guess what other people did. In the first choice, a large majority of respondents preferred the sure thing. In the second choice, a large majority preferred the gamble.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 281 | posición 4681-4682 | Añadido el sábado, 20 de enero de 2024 19:07:04

The comparison of the problems highlights the all-important role of the reference point from which the options are evaluated.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 281 | posición 4684-4687 | Añadido el sábado, 20 de enero de 2024 19:07:14

How much attention did you pay to the gift of $1,000 or $2,000 that you were “given” prior to making your choice? If you are like most people, you barely noticed it. Indeed, there was no reason for you to attend to it, because the gift is included in the reference point, and reference points are generally ignored.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 281 | posición 4688-4691 | Añadido el sábado, 20 de enero de 2024 19:07:42

And you also know that your attitudes to gains and losses are not derived from your evaluation of your wealth. The reason you like the idea of gaining $100 and dislike the idea of losing $100 is not that these amounts change your wealth. You just like winning and dislike losing—and you almost certainly dislike losing more than you like winning.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 281 | posición 4688-4691 | Añadido el sábado, 20 de enero de 2024 19:07:59

And you also know that your attitudes to gains and losses are not derived from your evaluation of your wealth. The reason you like the idea of gaining $100 and dislike the idea of losing $100 is not that these amounts change your wealth. You just like winning and dislike losing—and you almost certainly dislike losing more than you like winning. The four problems highlight the weakness of Bernoulli’s model. His theory is too simple and lacks
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 281 | posición 4688-4692 | Añadido el sábado, 20 de enero de 2024 19:08:10

And you also know that your attitudes to gains and losses are not derived from your evaluation of your wealth. The reason you like the idea of gaining $100 and dislike the idea of losing $100 is not that these amounts change your wealth. You just like winning and dislike losing—and you almost certainly dislike losing more than you like winning. The four problems highlight the weakness of Bernoulli’s model. His theory is too simple and lacks a moving part. The missing variable is the reference point,
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 282 | posición 4698-4709 | Añadido el sábado, 20 de enero de 2024 19:13:43

Evaluation is relative to a neutral reference point, which is sometimes referred to as an “adaptation level.” You can easily set up a compelling demonstration of this principle. Place three bowls of water in front of you. Put ice water into the left-hand bowl and warm water into the right-hand bowl. The water in the middle bowl should be at room temperature. Immerse your hands in the cold and warm water for about a minute, then dip both in the middle bowl. You will experience the same temperature as heat in one hand and cold in the other. For financial outcomes, the usual reference point is the status quo, but it can also be the outcome that you expect, or perhaps the outcome to which you feel entitled, for example, the raise or bonus that your colleagues receive. Outcomes that are better than the reference points are gains. Below the reference point they are losses. A principle of diminishing sensitivity applies to both sensory dimensions and the evaluation of changes of wealth. Turning on a weak light has a large effect in a dark room. The same increment of light may be undetectable in a brightly illuminated room. Similarly, the subjective difference between $900 and $1,000 is much smaller than the difference between $100 and $200. The third principle is loss aversion. When directly compared or weighted against each other, losses loom larger than gains. This asymmetry between the power of positive and negative expectations or experiences has an evolutionary history. Organisms that treat threats as more urgent than opportunities have a better chance to survive and reproduce.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 282 | posición 4714-4716 | Añadido el sábado, 20 de enero de 2024 19:17:42

The slope of the function changes abruptly at the reference point: the response to losses is stronger than the response to corresponding gains. This is loss aversion.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 284 | posición 4727-4728 | Añadido el sábado, 20 de enero de 2024 19:20:23

We concluded from many such observations that “losses loom larger than gains” and that people are loss averse.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 283 | posición 4719 | Añadido el sábado, 20 de enero de 2024 19:20:43


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 284 | posición 4727-4731 | Añadido el sábado, 20 de enero de 2024 22:35:05

We concluded from many such observations that “losses loom larger than gains” and that people are loss averse. You can measure the extent of your aversion to losses by asking yourself a question: What is the smallest gain that I need to balance an equal chance to lose $100? For many people the answer is about $200, twice as much as the loss. The “loss aversion ratio” has been estimated in several experiments and is usually in the range of 1.5 to 2.5.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 284 | posición 4734-4739 | Añadido el sábado, 20 de enero de 2024 22:37:15

In order to examine your loss aversion ratio for different stakes, consider the following questions. Ignore any social considerations, do not try to appear either bold or cautious, and focus only on the subjective impact of the possible loss and the off setting gain. Consider a 5 0–5 0 gamble in which you can lose $10. What is the smallest gain that makes the gamble attractive? If you say $10, then you are indifferent to risk. If you give a number less than $10, you seek risk. If your answer is above $10, you are loss averse. What about a possible loss of $500 on a coin toss? What possible gain do you require to off set it? What about a loss of $2,000?
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 284 | posición 4742-4749 | Añadido el sábado, 20 de enero de 2024 22:39:42

Another look at figure 10 may help prevent a common confusion. In this chapter I have made two claims, which some readers may view as contradictory: In mixed gambles, where both a gain and a loss are possible, loss aversion causes extremely risk-averse choices. In bad choices, where a sure loss is compared to a larger loss that is merely probable, diminishing sensitivity causes risk seeking. There is no contradiction. In the mixed case, the possible loss looms twice as large as the possible gain, as you can see by comparing the slopes of the value function for losses and gains. In the bad case, the bending of the value curve (diminishing sensitivity) causes risk seeking. The pain of losing $900 is more than 90% of the pain of losing $1,000. These two insights are the essence of prospect theory.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 286 | posición 4776-4779 | Añadido el sábado, 20 de enero de 2024 22:46:33

Furthermore, the failure of rationality that is built into prospect theory is often irrelevant to the predictions of economic theory, which work out with great precision in some situations and provide good approximations in many others. In some contexts, however, the difference becomes significant: the Humans described by prospect theory are guided by the immediate emotional impact of gains and losses, not by long-term prospects of wealth and global utility.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 288 | posición 4802-4803 | Añadido el sábado, 20 de enero de 2024 22:51:54

The emotions of regret and disappointment are real, and decision makers surely anticipate these emotions when making their choices.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 288 | posición 4806-4809 | Añadido el sábado, 20 de enero de 2024 22:52:58

Richer and more realistic assumptions do not suffice to make a theory successful. Scientists use theories as a bag of working tools, and they will not take on the burden of a heavier bag unless the new tools are very useful. Prospect theory was accepted by many scholars not because it is “true” but because the concepts that it added to utility theory, notably the reference point and loss aversion, were worth the trouble; they yielded new predictions that turned out to be true.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 288 | posición 4806-4810 | Añadido el sábado, 20 de enero de 2024 22:53:02

Richer and more realistic assumptions do not suffice to make a theory successful. Scientists use theories as a bag of working tools, and they will not take on the burden of a heavier bag unless the new tools are very useful. Prospect theory was accepted by many scholars not because it is “true” but because the concepts that it added to utility theory, notably the reference point and loss aversion, were worth the trouble; they yielded new predictions that turned out to be true. We were lucky.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 288 | posición 4810-4813 | Añadido el sábado, 20 de enero de 2024 22:53:44

“He suffers from extreme loss aversion, which makes him turn down very favorable opportunities.” “Considering her vast wealth, her emotional response to trivial gains and losses makes no sense.” “He weighs losses about twice as much as gains, which is normal.”
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 290 | posición 4822-4825 | Añadido el sábado, 20 de enero de 2024 22:57:42

The convex shape indicates diminishing marginal utility: the more leisure you have, the less you care for an extra day of it, and each added day is worth less than the one before. Similarly, the more income you have, the less you care for an extra dollar, and the amount you are willing to give up for an extra day of leisure increases.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 290 | posición 4822-4829 | Añadido el sábado, 20 de enero de 2024 22:58:51

The convex shape indicates diminishing marginal utility: the more leisure you have, the less you care for an extra day of it, and each added day is worth less than the one before. Similarly, the more income you have, the less you care for an extra dollar, and the amount you are willing to give up for an extra day of leisure increases. All locations on an indifference curve are equally attractive. This is literally what indifference means: you don’t care where you are on an indifference curve. So if A and B are on the same indifference curve for you, you are indifferent between them and will need no incentive to move from one to the other, or back. Some version of this figure has appeared in every economics textbook written in the last hundred years, and many millions of students have stared at it. Few have noticed what is missing. Here again, the power and elegance of a theoretical model have blinded students and scholars to a serious deficiency.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 290 | posición 4822-4830 | Añadido el sábado, 20 de enero de 2024 22:59:04

The convex shape indicates diminishing marginal utility: the more leisure you have, the less you care for an extra day of it, and each added day is worth less than the one before. Similarly, the more income you have, the less you care for an extra dollar, and the amount you are willing to give up for an extra day of leisure increases. All locations on an indifference curve are equally attractive. This is literally what indifference means: you don’t care where you are on an indifference curve. So if A and B are on the same indifference curve for you, you are indifferent between them and will need no incentive to move from one to the other, or back. Some version of this figure has appeared in every economics textbook written in the last hundred years, and many millions of students have stared at it. Few have noticed what is missing. Here again, the power and elegance of a theoretical model have blinded students and scholars to a serious deficiency. What is missing from the figure is an indication of the individual’s current income and leisure.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 290 | posición 4821 | Añadido el sábado, 20 de enero de 2024 23:00:19


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 292 | posición 4862-4865 | Añadido el domingo, 21 de enero de 2024 22:59:35

Loss aversion implies only that choices are strongly biased in favor of the reference situation (and generally biased to favor small rather than large changes). Conventional indifference maps and Bernoulli’s representation of outcomes as states of wealth share a mistaken assumption: that your utility for a state of affairs depends only on that state and is not affected by your history.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 294 | posición 4898 | Añadido el domingo, 21 de enero de 2024 23:09:38


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 297 | posición 4952 | Añadido el lunes, 22 de enero de 2024 22:58:17


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 299 | posición 4994-4996 | Añadido el martes, 23 de enero de 2024 19:35:17

“These negotiations are going nowhere because both sides find it difficult to make concessions, even when they can get something in return. Losses loom larger than gains.”
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 299 | posición 4991-4996 | Añadido el martes, 23 de enero de 2024 19:35:24

Speaking of the Endowment Effect “She didn’t care which of the two offices she would get, but a day after the announcement was made, she was no longer willing to trade. Endowment effect!” “These negotiations are going nowhere because both sides find it difficult to make concessions, even when they can get something in return. Losses loom larger than gains.”
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 299 | posición 4991-4999 | Añadido el martes, 23 de enero de 2024 19:35:53

Speaking of the Endowment Effect “She didn’t care which of the two offices she would get, but a day after the announcement was made, she was no longer willing to trade. Endowment effect!” “These negotiations are going nowhere because both sides find it difficult to make concessions, even when they can get something in return. Losses loom larger than gains.” “When they raised their prices, demand dried up.” “He just hates the idea of selling his house for less money than he paid for it. Loss aversion is at work.” “He is a miser, and treats any dollar he spends as a loss.”
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 300 | posición 5000 | Añadido el martes, 23 de enero de 2024 19:36:08


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 300 | posición 5002-5004 | Añadido el martes, 23 de enero de 2024 22:52:48

The concept of loss aversion is certainly the most significant contribution of psychology to behavioral economics. This is odd, because the idea that people evaluate many outcomes as gains and losses, and that losses loom larger than gains, surprises no one.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 301 | posición 5021-5023 | Añadido el martes, 23 de enero de 2024 22:56:48

Some experimenters have reported that an angry face “pops out” of a crowd of happy faces, but a single happy face does not stand out in an angry crowd. The brains of humans and other animals contain a mechanism that is designed to give priority to bad news.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 301 | posición 5021-5025 | Añadido el martes, 23 de enero de 2024 22:58:11

Some experimenters have reported that an angry face “pops out” of a crowd of happy faces, but a single happy face does not stand out in an angry crowd. The brains of humans and other animals contain a mechanism that is designed to give priority to bad news. By shaving a few hundredths of a second from the time needed to detect a predator, this circuit improves the animal’s odds of living long enough to reproduce. The automatic operations of System 1 reflect this evolutionary history. No comparably rapid mechanism for recognizing good news has been detected.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 302 | posición 5044 | Añadido el martes, 23 de enero de 2024 23:05:45


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 302 | posición 5051-5051 | Añadido el jueves, 25 de enero de 2024 06:29:08

A reference point is sometimes the status quo, but it can also be a goal in the future: not achieving a goal is a loss, exceeding the goal is a gain.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 304 | posición 5079-5081 | Añadido el jueves, 25 de enero de 2024 06:36:09

The existing terms define reference points, and a proposed change in any aspect of the agreement is inevitably viewed as a concession that one side makes to the other.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 304 | posición 5079-5082 | Añadido el jueves, 25 de enero de 2024 06:36:35

The existing terms define reference points, and a proposed change in any aspect of the agreement is inevitably viewed as a concession that one side makes to the other. Loss aversion creates an asymmetry that makes agreements difficult to reach. The concessions you make to me are my gains, but they are your losses; they cause you much more pain than they give me pleasure.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 305 | posición 5087-5089 | Añadido el jueves, 25 de enero de 2024 06:38:14

Because negotiators are influenced by a norm of reciprocity, a concession that is presented as painful calls for an equally painful (and perhaps equally inauthentic) concession from the other side.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 305 | posición 5091-5093 | Añadido el jueves, 25 de enero de 2024 06:40:33

In human affairs, the same simple rule explains much of what happens when institutions attempt to reform themselves, in “reorganizations” and “restructuring” of companies, and in efforts to rationalize a bureaucracy, simplify the tax code, or reduce medical costs.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 305 | posición 5091-5098 | Añadido el jueves, 25 de enero de 2024 06:42:26

In human affairs, the same simple rule explains much of what happens when institutions attempt to reform themselves, in “reorganizations” and “restructuring” of companies, and in efforts to rationalize a bureaucracy, simplify the tax code, or reduce medical costs. As initially conceived, plans for reform almost always produce many winners and some losers while achieving an overall improvement. If the affected parties have any political influence, however, potential losers will be more active and determined than potential winners; the outcome will be biased in their favor and inevitably more expensive and less effective than initially planned. Reforms commonly include grandfather clauses that protect current stake-holders—for example, when the existing workforce is reduced by attrition rather than by dismissals, or when cuts in salaries and benefits apply only to future workers. Loss aversion is a powerful conservative force that favors minimal changes from the status quo in the lives of both institutions and individuals.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 306 | posición 5118-5120 | Añadido el jueves, 25 de enero de 2024 06:47:15

A basic rule of fairness, we found, is that the exploitation of market power to impose losses on others is unacceptable. The following example illustrates this rule in another context (the dollar values should be adjusted for about 100% inflation since these data were collected in 1984):
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 307 | posición 5130 | Añadido el jueves, 25 de enero de 2024 06:50:23


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 308 | posición 5145-5146 | Añadido el jueves, 25 de enero de 2024 19:09:51

Employers who violate rules of fairness are punished by reduced productivity, and merchants who follow unfair pricing policies can expect to lose sales.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 308 | posición 5155-5156 | Añadido el jueves, 25 de enero de 2024 19:12:42

our brains are not designed to reward generosity as reliably as they punish meanness. Here again, we find a marked asymmetry between losses and gains.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 308 | posición 5153-5154 | Añadido el jueves, 25 de enero de 2024 19:13:04

Remarkably, altruistic punishment is accompanied by increased activity in the “pleasure centers” of the brain.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 308 | posición 5160-5163 | Añadido el jueves, 25 de enero de 2024 19:14:43

The familiar rule that possession is nine-tenths of the law confirms the moral status of the reference point. In a more recent discussion, Eyal Zamir makes the provocative point that the distinction drawn in the law between restoring losses and compensating for foregone gains may be justified by their asymmetrical effects on individual well-being. If people who lose suffer more than people who merely fail to gain, they may also deserve more protection from the law.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 309 | posición 5163-5172 | Añadido el jueves, 25 de enero de 2024 19:14:57

Speaking of Losses “This reform will not pass. Those who stand to lose will fight harder than those who stand to gain.” “Each of them thinks the other’s concessions are less painful. They are both wrong, of course. It’s just the asymmetry of losses.” “They would find it easier to renegotiate the agreement if they realized the pie was actually expanding. They’re not allocating losses; they are allocating gains.” “Rental prices around here have gone up recently, but our tenants don’t think it’s fair that we should raise their rent, too. They feel entitled to their current terms.” “My clients don’t resent the price hike because they know my costs have gone up, too. They accept my right to stay profitable.”
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 312 | posición 5217-5220 | Añadido el jueves, 25 de enero de 2024 23:14:50

The conclusion is straightforward: the decision weights that people assign to outcomes are not identical to the probabilities of these outcomes, contrary to the expectation principle. Improbable outcomes are overweighted—this is the possibility effect. Outcomes that are almost certain are underweighted relative to actual certainty. The expectation principle, by which values are weighted by their probability, is poor psychology.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 312 | posición 5222 | Añadido el jueves, 25 de enero de 2024 23:20:04


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 314 | posición 5259-5262 | Añadido el viernes, 26 de enero de 2024 19:08:28

We retained utility theory as a logic of rational choice but abandoned the idea that people are perfectly rational choosers. We took on the task of developing a psychological theory that would describe the choices people make, regardless of whether they are rational. In prospect theory, decision weights would not be identical to probabilities.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 315 | posición 5281-5283 | Añadido el viernes, 26 de enero de 2024 19:13:42

Probabilities that are extremely low or high (below 1% or above 99%) are a special case. It is difficult to assign a unique decision weight to very rare events, because they are sometimes ignored altogether, effectively assigned a decision weight of zero. On the other hand, when you do not ignore the very rare events, you will certainly overweight them.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 316 | posición 5295 | Añadido el viernes, 26 de enero de 2024 19:24:36


==========
Clean Code - A Handbook of Agile Software Craftsmanship  
- La subrayado en la página 51-51 | Añadido el sábado, 27 de enero de 2024 01:16:23

Programmers create problems for themselves when they write code solely to satisfy a compiler or interpreter. For example, because you can’t use the same name to refer to two different things in the same scope, you might be tempted to change one name in an arbitrary way. Sometimes this is done by misspelling one, leading to the surprising situation where correcting spelling errors leads to an inability
==========
Clean Code - A Handbook of Agile Software Craftsmanship  
- El marcador en la página 52 | Añadido el sábado, 27 de enero de 2024 01:20:57


==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 64 | posición 609-610 | Añadido el martes, 30 de enero de 2024 11:38:58

Plan what you want to say. Write an outline. Then ask yourself, “Does this communicate what I want to express to my audience in a way that works for them?” Refine it until it does.
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 65 | posición 623-624 | Añadido el martes, 30 de enero de 2024 23:24:08

Make It Look Good Your ideas are important. They deserve a good-looking vehicle to convey them to your audience.
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 66 | posición 633-634 | Añadido el martes, 30 de enero de 2024 23:26:20

Be a Listener There’s one technique that you must use if you want people to listen to you: listen to them.
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 67 | posición 642-643 | Añadido el martes, 30 de enero de 2024 23:27:47

It’s Both What You Say and the Way You Say It
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 67 | posición 646-647 | Añadido el martes, 30 de enero de 2024 23:28:55

Pragmatic Programmers embrace documentation as an integral part of the overall development process.
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 70 | posición 674-678 | Añadido el martes, 30 de enero de 2024 23:35:33

Challenges There are several good books that contain sections on communications within teams, including The Mythical Man-Month: Essays on Software Engineering [Bro96] and Peopleware: Productive Projects and Teams [DL13]. Make it a point to try to read these over the next 18 months. In addition, Dinosaur Brains: Dealing with All Those Impossible People at Work [BR89] discusses the emotional baggage we all bring to the work environment.
==========
Pragmatic Programmer, The (Thomas, David)
- El marcador en la página 72 | posición 698 | Añadido el martes, 30 de enero de 2024 23:35:47


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 316 | posición 5300-5301 | Añadido el miércoles, 31 de enero de 2024 20:18:13

people attach values to gains and losses rather than to wealth, and the decision weights that they assign to outcomes are different from probabilities.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 317 | posición 5302-5309 | Añadido el miércoles, 31 de enero de 2024 20:23:54

fourfold pattern. The name has stuck. The scenarios are illustrated below. Figure 13 The top row in each cell shows an illustrative prospect. The second row characterizes the focal emotion that the prospect evokes. The third row indicates how most people behave when offered a choice between a gamble and a sure gain (or loss) that corresponds to its expected value (for example, between “95% chance to win $10,000” and “$9,500 with certainty”). Choices are said to be risk averse if the sure thing is preferred, risk seeking if the gamble is preferred. The fourth row describes the expected attitudes of a defendant and a plaintiff as they discuss a settlement of a civil suit.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 317 | posición 5311-5318 | Añadido el miércoles, 31 de enero de 2024 20:24:02

The top left is the one that Bernoulli discussed: people are averse to risk when they consider prospects with a substantial chance to achieve a large gain. They are willing to accept less than the expected value of a gamble to lock in a sure gain. The possibility effect in the bottom left cell explains why lotteries are popular. When the top prize is very large, ticket buyers appear indifferent to the fact that their chance of winning is minuscule. A lottery ticket is the ultimate example of the possibility effect. Without a ticket you cannot win, with a ticket you have a chance, and whether the chance is tiny or merely small matters little. Of course, what people acquire with a ticket is more than a chance to win; it is the right to dream pleasantly of winning. The bottom right cell is where insurance is bought. People are willing to pay much more for insurance than expected value—which is how insurance companies cover their costs and make their profits. Here again, people buy more than protection against an unlikely disaster; they eliminate a worry and purchase peace of mind.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 318 | posición 5323-5328 | Añadido el miércoles, 31 de enero de 2024 20:31:57

First, there is diminishing sensitivity. The sure loss is very aversive because the reaction to a loss of $900 is more than 90% as intense as the reaction to a loss of $1,000. The second factor may be even more powerful: the decision weight that corresponds to a probability of 90% is only about 71, much lower than the probability. The result is that when you consider a choice between a sure loss and a gamble with a high probability of a larger loss, diminishing sensitivity makes the sure loss more aversive, and the certainty effect reduces the aversiveness of the gamble. The same two factors enhance the attractiveness of the sure thing and reduce the attractiveness of the gamble when the outcomes are positive.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 318 | posición 5329-5331 | Añadido el miércoles, 31 de enero de 2024 20:35:21

In the bottom row, however, the two factors operate in opposite directions: diminishing sensitivity continues to favor risk aversion for gains and risk seeking for losses, but the overweighting of low probabilities overcomes this effect and produces the observed pattern of gambling for gains and caution for losses.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 318 | posición 5329-5337 | Añadido el miércoles, 31 de enero de 2024 20:36:04

In the bottom row, however, the two factors operate in opposite directions: diminishing sensitivity continues to favor risk aversion for gains and risk seeking for losses, but the overweighting of low probabilities overcomes this effect and produces the observed pattern of gambling for gains and caution for losses. Many unfortunate human situations unfold in the top right cell. This is where people who face very bad options take desperate gambles, accepting a high probability of making things worse in exchange for a small hope of avoiding a large loss. Risk taking of this kind often turns manageable failures into disasters. The thought of accepting the large sure loss is too painful, and the hope of complete relief too enticing, to make the sensible decision that it is time to cut one’s losses. This is where businesses that are losing ground to a superior technology waste their remaining assets in futile attempts to catch up. Because defeat is so difficult to accept, the losing side in wars often fights long past the point at which the victory of the other side is certain, and only a matter of time.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 321 | posición 5371-5374 | Añadido el miércoles, 31 de enero de 2024 20:46:38

When you take the long view of many similar decisions, you can see that paying a premium to avoid a small risk of a large loss is costly. A similar analysis applies to each of the cells of the fourfold pattern: systematic deviations from expected value are costly in the long run—and this rule applies to both risk aversion and risk seeking. Consistent overweighting of improbable outcomes—a feature of intuitive decision making—eventually leads to inferior outcomes.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 320 | posición 5369-5374 | Añadido el miércoles, 31 de enero de 2024 20:46:45

the city litigates all 200 cases, it will lose 10, for a total loss of $10 million. If the city settles every case for $100,000, its total loss will be $20 million. When you take the long view of many similar decisions, you can see that paying a premium to avoid a small risk of a large loss is costly. A similar analysis applies to each of the cells of the fourfold pattern: systematic deviations from expected value are costly in the long run—and this rule applies to both risk aversion and risk seeking. Consistent overweighting of improbable outcomes—a feature of intuitive decision making—eventually leads to inferior outcomes.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 322 | posición 5383 | Añadido el miércoles, 31 de enero de 2024 20:46:52


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 324 | posición 5424 | Añadido el jueves, 1 de febrero de 2024 23:59:56


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 324 | posición 5418-5420 | Añadido el sábado, 3 de febrero de 2024 09:55:16

Although overestimation and overweighting are distinct phenomena, the same psychological mechanisms are involved in both: focused attention, confirmation bias, and cognitive ease.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 326 | posición 5452-5454 | Añadido el sábado, 3 de febrero de 2024 10:05:33

Entrepreneurs and the investors who evaluate their prospects are prone both to overestimate their chances and to overweight their estimates.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 326 | posición 5455-5459 | Añadido el sábado, 3 de febrero de 2024 10:07:39

In utility theory, decision weights and probabilities are the same. The decision weight of a sure thing is 100, and the weight that corresponds to a 90% chance is exactly 90, which is 9 times more than the decision weight for a 10% chance. In prospect theory, variations of probability have less effect on decision weights. An experiment that I mentioned earlier found that the decision weight for a 90% chance was 71.2 and the decision weight for a 10% chance was 18.6. The ratio of the probabilities was 9.0, but the ratio of the decision weights was only 3.83, indicating insufficient sensitivity to probability in that range.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 326 | posición 5455-5460 | Añadido el sábado, 3 de febrero de 2024 10:07:54

In utility theory, decision weights and probabilities are the same. The decision weight of a sure thing is 100, and the weight that corresponds to a 90% chance is exactly 90, which is 9 times more than the decision weight for a 10% chance. In prospect theory, variations of probability have less effect on decision weights. An experiment that I mentioned earlier found that the decision weight for a 90% chance was 71.2 and the decision weight for a 10% chance was 18.6. The ratio of the probabilities was 9.0, but the ratio of the decision weights was only 3.83, indicating insufficient sensitivity to probability in that range. In both theories, the decision weights depend only on probability, not on the outcome.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 328 | posición 5499 | Añadido el sábado, 3 de febrero de 2024 10:22:27


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 329 | posición 5518-5520 | Añadido el domingo, 4 de febrero de 2024 10:16:29

As predicted by denominator neglect, low-probability events are much more heavily weighted when described in terms of relative frequencies (how many) than when stated in more abstract terms of “chances,” “risk,” or “probability” (how likely). As we have seen, System 1 is much better at dealing with individuals than categories.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 329 | posición 5513-5520 | Añadido el domingo, 4 de febrero de 2024 10:16:41

The idea of denominator neglect helps explain why different ways of communicating risks vary so much in their effects. You read that “a vaccine that protects children from a fatal disease carries a 0.001% risk of permanent disability.” The risk appears small. Now consider another description of the same risk: “One of 100,000 vaccinated children will be permanently disabled.” The second statement does something to your mind that the first does not: it calls up the image of an individual child who is permanently disabled by a vaccine; the 99,999 safely vaccinated children have faded into the background. As predicted by denominator neglect, low-probability events are much more heavily weighted when described in terms of relative frequencies (how many) than when stated in more abstract terms of “chances,” “risk,” or “probability” (how likely). As we have seen, System 1 is much better at dealing with individuals than categories.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 330 | posición 5535-5536 | Añadido el domingo, 4 de febrero de 2024 10:19:53

The power of format creates opportunities for manipulation, which people with an axe to grind know how to exploit.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 333 | posición 5586-5588 | Añadido el domingo, 4 de febrero de 2024 10:33:19

The conditions under which rare events are ignored or overweighted are better understood now than they were when prospect theory was formulated. The probability of a rare event will (often, not always) be overestimated, because of the confirmatory bias of memory. Thinking about that event, you try to make it true in
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 333 | posición 5586-5588 | Añadido el domingo, 4 de febrero de 2024 10:33:32

The conditions under which rare events are ignored or overweighted are better understood now than they were when prospect theory was formulated. The probability of a rare event will (often, not always) be overestimated, because of the confirmatory bias of memory. Thinking about that event, you try to make it true in your mind.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 333 | posición 5586-5593 | Añadido el domingo, 4 de febrero de 2024 10:36:02

The conditions under which rare events are ignored or overweighted are better understood now than they were when prospect theory was formulated. The probability of a rare event will (often, not always) be overestimated, because of the confirmatory bias of memory. Thinking about that event, you try to make it true in your mind. A rare event will be overweighted if it specifically attracts attention. Separate attention is effectively guaranteed when prospects are described explicitly (“99% chance to win $1,000, and 1% chance to win nothing”). Obsessive concerns (the bus in Jerusalem), vivid images (the roses), concrete representations (1 of 1,000), and explicit reminders (as in choice from description) all contribute to overweighting. And when there is no overweighting, there will be neglect. When it comes to rare probabilities, our mind is not designed to get things quite right. For the residents of a planet that may be exposed to events no one has yet experienced, this is not good news.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 334 | posición 5601 | Añadido el domingo, 4 de febrero de 2024 10:45:03


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 335 | posición 5619 | Añadido el domingo, 4 de febrero de 2024 23:40:40


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 338 | posición 5669 | Añadido el lunes, 5 de febrero de 2024 23:58:15


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 338 | posición 5671-5683 | Añadido el martes, 6 de febrero de 2024 23:17:56

I sympathize with your aversion to losing any gamble, but it is costing you a lot of money. Please consider this question: Are you on your deathbed? Is this the last offer of a small favorable gamble that you will ever consider? Of course, you are unlikely to be offered exactly this gamble again, but you will have many opportunities to consider attractive gambles with stakes that are very small relative to your wealth. You will do yourself a large financial favor if you are able to see each of these gambles as part of a bundle of small gambles and rehearse the mantra that will get you significantly closer to economic rationality: you win a few, you lose a few. The main purpose of the mantra is to control your emotional response when you do lose. If you can trust it to be effective, you should remind yourself of it when deciding whether or not to accept a small risk with positive expected value. Remember these qualifications when using the mantra: It works when the gambles are genuinely independent of each other; it does not apply to multiple investments in the same industry, which would all go bad together. It works only when the possible loss does not cause you to worry about your total wealth. If you would take the loss as significant bad news about your economic future, watch it! It should not be applied to long shots, where the probability of winning is very small for each bet. If you have the emotional discipline that this rule requires, you will never consider a small gamble in isolation or be loss averse for a small gamble until you are actually on your deathbed—and not even then.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 339 | posición 5690 | Añadido el martes, 6 de febrero de 2024 23:23:25


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 339 | posición 5697-5701 | Añadido el miércoles, 7 de febrero de 2024 20:43:40

The typical short-term reaction to bad news is increased loss aversion. Investors who get aggregated feedback receive such news much less often and are likely to be less risk averse and to end up richer. You are also less prone to useless churning of your portfolio if you don’t know how every stock in it is doing every day (or every week or even every month). A commitment not to change one’s position for several periods (the equivalent of “locking in” an investment) improves financial performance.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 340 | posición 5707-5710 | Añadido el miércoles, 7 de febrero de 2024 20:47:05

A risk policy that aggregates decisions is analogous to the outside view of planning problems that I discussed earlier. The outside view shifts the focus from the specifics of the current situation to the statistics of outcomes in similar situations. The outside view is a broad frame for thinking about plans. A risk policy is a broad frame that embeds a particular risky choice in a set of similar choices.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 340 | posición 5707-5711 | Añadido el miércoles, 7 de febrero de 2024 20:47:23

A risk policy that aggregates decisions is analogous to the outside view of planning problems that I discussed earlier. The outside view shifts the focus from the specifics of the current situation to the statistics of outcomes in similar situations. The outside view is a broad frame for thinking about plans. A risk policy is a broad frame that embeds a particular risky choice in a set of similar choices. The outside view and the risk policy are remedies against two distinct biases that affect many decisions: the exaggerated optimism of the planning fallacy and the exaggerated caution induced by loss aversion. The
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 340 | posición 5716-5722 | Añadido el miércoles, 7 de febrero de 2024 20:49:45

Richard Thaler tells of a discussion about decision making he had with the top managers of the 25 divisions of a large company. He asked them to consider a risky option in which, with equal probabilities, they could lose a large amount of the capital they controlled or earn double that amount. None of the executives was willing to take such a dangerous gamble. Thaler then turned to the CEO of the company, who was also present, and asked for his opinion. Without hesitation, the CEO answered, “I would like all of them to accept their risks.” In the context of that conversation, it was natural for the CEO to adopt a broad frame that encompassed all 25 bets. Like Sam facing 100 coin tosses, he could count on statistical aggregation to mitigate the overall risk.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 342 | posición 5735-5737 | Añadido el miércoles, 7 de febrero de 2024 20:52:56

we refuse to cut losses when doing so would admit failure, we are biased against actions that could lead to regret, and we draw an illusory but sharp distinction between omission and commission, not doing and doing, because the sense of responsibility is greater for one than for the other.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 342 | posición 5731-5737 | Añadido el miércoles, 7 de febrero de 2024 20:53:24

Except for the very poor, for whom income coincides with survival, the main motivators of money-seeking are not necessarily economic. For the billionaire looking for the extra billion, and indeed for the participant in an experimental economics project looking for the extra dollar, money is a proxy for points on a scale of self-regard and achievement. These rewards and punishments, promises and threats, are all in our heads. We carefully keep score of them. They shape our preferences and motivate our actions, like the incentives provided in the social environment. As a result, we refuse to cut losses when doing so would admit failure, we are biased against actions that could lead to regret, and we draw an illusory but sharp distinction between omission and commission, not doing and doing, because the sense of responsibility is greater for one than fo <Has llegado al límite de recortes para este elemento>
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 344 | posición 5771-5772 | Añadido el miércoles, 7 de febrero de 2024 21:00:36

 <Has llegado al límite de recortes para este elemento>
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 345 | posición 5789-5791 | Añadido el jueves, 8 de febrero de 2024 06:52:19

 <Has llegado al límite de recortes para este elemento>
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 346 | posición 5800-5802 | Añadido el jueves, 8 de febrero de 2024 06:54:41

 <Has llegado al límite de recortes para este elemento>
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 345 | posición 5797-5802 | Añadido el jueves, 8 de febrero de 2024 06:55:00

 <Has llegado al límite de recortes para este elemento>
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 345 | posición 5797-5802 | Añadido el jueves, 8 de febrero de 2024 06:55:07

 <Has llegado al límite de recortes para este elemento>
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 346 | posición 5805-5805 | Añadido el jueves, 8 de febrero de 2024 06:56:44

 <Has llegado al límite de recortes para este elemento>
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 346 | posición 5807-5808 | Añadido el jueves, 8 de febrero de 2024 06:57:20

 <Has llegado al límite de recortes para este elemento>
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 347 | posición 5818-5820 | Añadido el jueves, 8 de febrero de 2024 06:59:28

 <Has llegado al límite de recortes para este elemento>
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 347 | posición 5827-5832 | Añadido el jueves, 8 de febrero de 2024 07:01:25

 <Has llegado al límite de recortes para este elemento>
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 348 | posición 5841-5843 | Añadido el jueves, 8 de febrero de 2024 07:03:09

 <Has llegado al límite de recortes para este elemento>
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 349 | posición 5854-5855 | Añadido el jueves, 8 de febrero de 2024 07:07:08

 <Has llegado al límite de recortes para este elemento>
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 348 | posición 5845-5846 | Añadido el jueves, 8 de febrero de 2024 07:09:17

 <Has llegado al límite de recortes para este elemento>
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 349 | posición 5861-5863 | Añadido el jueves, 8 de febrero de 2024 07:11:03

 <Has llegado al límite de recortes para este elemento>
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 352 | posición 5917-5920 | Añadido el jueves, 8 de febrero de 2024 18:33:28

 <Has llegado al límite de recortes para este elemento>
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 351 | posición 5908-5909 | Añadido el jueves, 8 de febrero de 2024 18:33:48

 <Has llegado al límite de recortes para este elemento>
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 352 | posición 5923-5923 | Añadido el jueves, 8 de febrero de 2024 21:00:57

 <Has llegado al límite de recortes para este elemento>
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 353 | posición 5928 | Añadido el jueves, 8 de febrero de 2024 21:04:20


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 354 | posición 5948 | Añadido el jueves, 8 de febrero de 2024 21:15:27


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 362 | posición 6096-6103 | Añadido el sábado, 10 de febrero de 2024 08:52:33

 <Has llegado al límite de recortes para este elemento>
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 363 | posición 6104 | Añadido el sábado, 10 de febrero de 2024 08:53:13


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 363 | posición 6114 | Añadido el sábado, 10 de febrero de 2024 08:55:38


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 364 | posición 6128-6128 | Añadido el sábado, 10 de febrero de 2024 09:14:50

 <Has llegado al límite de recortes para este elemento>
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 364 | posición 6131-6132 | Añadido el sábado, 10 de febrero de 2024 09:14:58

 <Has llegado al límite de recortes para este elemento>
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 366 | posición 6155 | Añadido el sábado, 10 de febrero de 2024 09:19:28


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 367 | posición 6182-6188 | Añadido el lunes, 12 de febrero de 2024 20:14:59

 <Has llegado al límite de recortes para este elemento>
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 368 | posición 6203-6205 | Añadido el lunes, 12 de febrero de 2024 20:17:48

 <Has llegado al límite de recortes para este elemento>
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 370 | posición 6240 | Añadido el lunes, 12 de febrero de 2024 20:32:45


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 373 | posición 6294 | Añadido el martes, 13 de febrero de 2024 23:42:11


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 374 | posición 6303-6308 | Añadido el miércoles, 14 de febrero de 2024 06:55:58

 <Has llegado al límite de recortes para este elemento>
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 374 | posición 6308-6315 | Añadido el miércoles, 14 de febrero de 2024 06:56:55

 <Has llegado al límite de recortes para este elemento>
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 377 | posición 6322-6325 | Añadido el miércoles, 14 de febrero de 2024 07:03:21

 <Has llegado al límite de recortes para este elemento>
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 377 | posición 6325-6327 | Añadido el miércoles, 14 de febrero de 2024 07:03:38

 <Has llegado al límite de recortes para este elemento>
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 378 | posición 6341 | Añadido el miércoles, 14 de febrero de 2024 07:05:00


==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 74 | posición 725-725 | Añadido el miércoles, 14 de febrero de 2024 17:59:28

Why is decoupling good? Because by
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 74 | posición 725-725 | Añadido el miércoles, 14 de febrero de 2024 17:59:33

Why is decoupling good? Because by isolating concerns we make each easier to change. ETC.
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 74 | posición 725-726 | Añadido el miércoles, 14 de febrero de 2024 17:59:43

Why is the single responsibility principle useful? Because a change in requirements is mirrored by a change in just one module. ETC.
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 75 | posición 726-727 | Añadido el miércoles, 14 de febrero de 2024 18:00:14

Why is naming important? Because good names make code easier to read, and you have to read it to change it. ETC!
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 75 | posición 727-728 | Añadido el miércoles, 14 de febrero de 2024 18:02:20

ETC Is a Value, Not a Rule
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 75 | posición 730-732 | Añadido el miércoles, 14 de febrero de 2024 18:02:30

But how do you make that happen? Our experience is that it requires some initial conscious reinforcement. You may need to spend a week or so deliberately asking yourself “did the thing I just did make the overall system easier or harder to change?” Do it when you save a file. Do it when you write a test. Do it when you fix a
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 75 | posición 734-735 | Añadido el miércoles, 14 de febrero de 2024 18:04:01

First, given that you’re not sure what form change will take, you can always fall back on the ultimate “easy to change” path: try to make what you write replaceable.
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 76 | posición 745-761 | Añadido el miércoles, 14 de febrero de 2024 18:06:15

Challenges Think about a design principle you use regularly. Is it intended to make things easy-to-change? Also think about languages and programming paradigms (OO, FP, Reactive, and so on). Do any have either big positives or big negatives when it comes to helping you write ETC code? Do any have both? When coding, what can you do to eliminate the negatives and accentuate the positives?[13] Many editors have support (either built-in or via extensions) to run commands when you save a file. Get your editor to popup an ETC? message every time you save[14] and use it as a cue to think about the code you just wrote. Is it easy to change?  Topic 9 DRY—The Evils of Duplication Giving a computer two contradictory pieces of knowledge was Captain James T. Kirk’s preferred way of disabling a marauding artificial intelligence. Unfortunately, the same principle can be effective in bringing down your code. As programmers, we collect, organize, maintain, and harness knowledge. We document knowledge in specifications, we make it come alive in running code, and we use it to provide the checks needed during testing. Unfortunately, knowledge isn’t stable. It changes—often rapidly. Your understanding of a requirement may change following a meeting with the client. The government changes a regulation and some business logic gets outdated. Tests may show that the chosen algorithm won’t work. All this instability means that we spend a large part of our time in maintenance mode, reorganizing and reexpressing the knowledge in our systems. Most people assume that maintenance begins when an application is released, that maintenance means fixing bugs and enhancing features. We think these people are wrong. Programmers are constantly in maintenance mode. Our understanding changes day by day. New requirements arrive and existing requirements evolve as we’re heads-down
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 76 | posición 745-751 | Añadido el miércoles, 14 de febrero de 2024 18:06:32

Challenges Think about a design principle you use regularly. Is it intended to make things easy-to-change? Also think about languages and programming paradigms (OO, FP, Reactive, and so on). Do any have either big positives or big negatives when it comes to helping you write ETC code? Do any have both? When coding, what can you do to eliminate the negatives and accentuate the positives?[13] Many editors have support (either built-in or via extensions) to run commands when you save a file. Get your editor to popup an ETC? message every time you save[14] and use it as a cue to think about the code you just wrote. Is it easy to change?
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 78 | posición 761-762 | Añadido el miércoles, 14 de febrero de 2024 18:10:03

maintenance is not a discrete activity, but a routine part of the entire development process.
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 79 | posición 766-766 | Añadido el miércoles, 14 de febrero de 2024 18:11:20

Every piece of knowledge must have a single, unambiguous, authoritative representation within a
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 79 | posición 766-767 | Añadido el miércoles, 14 de febrero de 2024 18:11:26

Every piece of knowledge must have a single, unambiguous, authoritative representation within a system.
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 80 | posición 774-777 | Añadido el miércoles, 14 de febrero de 2024 18:13:41

Many people took it to refer to code only: they thought that DRY means “don’t copy-and-paste lines of source.” That is part of DRY, but it’s a tiny and fairly trivial part. DRY is about the duplication of knowledge, of intent. It’s about expressing the same thing in two different places, possibly in two totally different ways.
==========
Pragmatic Programmer, The (Thomas, David)
- El marcador en la página 83 | posición 899 | Añadido el miércoles, 14 de febrero de 2024 18:21:59


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 381 | posición 6387-6390 | Añadido el viernes, 16 de febrero de 2024 23:05:18

 <Has llegado al límite de recortes para este elemento>
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 381 | posición 6395-6399 | Añadido el viernes, 16 de febrero de 2024 23:08:13

 <Has llegado al límite de recortes para este elemento>
==========
Clean Code - A Handbook of Agile Software Craftsmanship (1) (A Handbook of Agile Software Craftsmanship (1))
- La subrayado en la posición 742-747 | Añadido el sábado, 17 de febrero de 2024 11:10:38

We are unprofessional. This may be a bitter pill to swallow. How could this mess be our fault? What about the requirements? What about the schedule? What about the stupid managers and the useless marketing types? Don’t they bear some of the blame? No. The managers and marketers look to us for the information they need to make promises and commitments; and even when they don’t look to us, we should not be shy about telling them what we think. The users look to us to validate the way the requirements will fit into the system. The project managers look to us to help work out the schedule.
==========
Clean Code - A Handbook of Agile Software Craftsmanship (1) (A Handbook of Agile Software Craftsmanship (1))
- La subrayado en la posición 756-757 | Añadido el sábado, 17 de febrero de 2024 11:12:11

So too it is unprofessional for programmers to bend to the will of managers who don’t understand the risks of making messes.
==========
Clean Code - A Handbook of Agile Software Craftsmanship (1) (A Handbook of Agile Software Craftsmanship (1))
- La subrayado en la posición 768-770 | Añadido el sábado, 17 de febrero de 2024 11:14:20

When hand-washing was first recommended to physicians by Ignaz Semmelweis in 1847, it was rejected on the basis that doctors were too busy and wouldn’t have time to wash their hands between patient visits.
==========
Clean Code - A Handbook of Agile Software Craftsmanship (1) (A Handbook of Agile Software Craftsmanship (1))
- La subrayado en la posición 775-778 | Añadido el sábado, 17 de febrero de 2024 11:16:49

A programmer without “code-sense” can look at a messy module and recognize the mess but will have no idea what to do about it. A programmer with “code-sense” will look at a messy module and see options and variations. The “code-sense” will help that programmer choose the best variation and guide him or her to plot a sequence of behavior preserving transformations to get from here to there.
==========
Clean Code - A Handbook of Agile Software Craftsmanship (1) (A Handbook of Agile Software Craftsmanship (1))
- La subrayado en la posición 840-841 | Añadido el sábado, 17 de febrero de 2024 11:25:18

not clean. No matter how elegant it is, no matter
==========
Clean Code - A Handbook of Agile Software Craftsmanship (1) (A Handbook of Agile Software Craftsmanship (1))
- La subrayado en la posición 840-840 | Añadido el sábado, 17 de febrero de 2024 11:25:23

Code, without tests, is not clean.
==========
Clean Code - A Handbook of Agile Software Craftsmanship (1) (A Handbook of Agile Software Craftsmanship (1))
- La subrayado en la posición 958-962 | Añadido el sábado, 17 de febrero de 2024 11:41:00

You get the drift. Indeed, the ratio of time spent reading vs. writing is well over 10:1. We are constantly reading old code as part of the effort to write new code. Because this ratio is so high, we want the reading of code to be easy, even if it makes the writing harder. Of course there’s no way to write code without reading it, so making it easy to read actually makes it easier to write.
==========
Clean Code - A Handbook of Agile Software Craftsmanship (1) (A Handbook of Agile Software Craftsmanship (1))
- La subrayado en la posición 958-963 | Añadido el sábado, 17 de febrero de 2024 11:41:28

You get the drift. Indeed, the ratio of time spent reading vs. writing is well over 10:1. We are constantly reading old code as part of the effort to write new code. Because this ratio is so high, we want the reading of code to be easy, even if it makes the writing harder. Of course there’s no way to write code without reading it, so making it easy to read actually makes it easier to write. There is no escape from this logic. You cannot write code if you cannot read the surrounding code. The code you are trying to write today will be hard or easy to write depending on how hard or easy the surrounding code is to read.
==========
Clean Code - A Handbook of Agile Software Craftsmanship (1) (A Handbook of Agile Software Craftsmanship (1))
- La subrayado en la posición 1002-1002 | Añadido el sábado, 17 de febrero de 2024 11:43:56

It is easy to say that names should reveal intent.
==========
Clean Code - A Handbook of Agile Software Craftsmanship (1) (A Handbook of Agile Software Craftsmanship (1))
- La subrayado en la posición 1066-1068 | Añadido el sábado, 17 de febrero de 2024 11:50:44

It is not sufficient to add number series or noise words, even though the compiler is satisfied. If names must be different, then they should also mean something different. 2.
==========
Clean Code - A Handbook of Agile Software Craftsmanship (1) (A Handbook of Agile Software Craftsmanship (1))
- La subrayado en la posición 1075-1075 | Añadido el sábado, 17 de febrero de 2024 11:53:10

Noise words are another meaningless distinction.
==========
Clean Code - A Handbook of Agile Software Craftsmanship (1) (A Handbook of Agile Software Craftsmanship (1))
- La subrayado en la posición 1107-1109 | Añadido el sábado, 17 de febrero de 2024 11:58:13

Use Searchable Names Single-letter names and numeric constants have a particular problem in that they are not easy to locate across a body of text.
==========
Clean Code - A Handbook of Agile Software Craftsmanship (1) (A Handbook of Agile Software Craftsmanship (1))
- La subrayado en la posición 1114-1116 | Añadido el sábado, 17 de febrero de 2024 11:58:36

My personal preference is that single-letter names can ONLY be used as local variables inside short methods. The length of a name should correspond to the size of its scope
==========
Clean Code - A Handbook of Agile Software Craftsmanship (1) (A Handbook of Agile Software Craftsmanship (1))
- La subrayado en la posición 1154-1160 | Añadido el sábado, 17 de febrero de 2024 12:05:50

Interfaces and Implementations These are sometimes a special case for encodings. For example, say you are building an ABSTRACT FACTORY for the creation of shapes. This factory will be an interface and will be implemented by a concrete class. What should you name them? IShapeFactory and ShapeFactory? I prefer to leave interfaces unadorned. The preceding I, so common in today’s legacy wads, is a distraction at best and too much information at worst. I don’t want my users knowing that I’m handing them an interface. I just want them to know that it’s a ShapeFactory. So if I must encode either the interface or the implementation, I choose the implementation. Calling it ShapeFactoryImp, or even the hideous CShapeFactory, is preferable to encoding the interface.
==========
Clean Code - A Handbook of Agile Software Craftsmanship (1) (A Handbook of Agile Software Craftsmanship (1))
- La subrayado en la posición 1171-1173 | Añadido el sábado, 17 de febrero de 2024 12:07:51

Classes and objects should have noun or noun phrase names like Customer, WikiPage, Account, and AddressParser. Avoid words like Manager, Processor, Data, or Info in the name of a class. A class name should not be a verb.
==========
Clean Code - A Handbook of Agile Software Craftsmanship (1) (A Handbook of Agile Software Craftsmanship (1))
- La subrayado en la posición 1174-1175 | Añadido el sábado, 17 de febrero de 2024 12:08:32

Methods should have verb or verb phrase names like postPayment, deletePage, or save.
==========
Clean Code - A Handbook of Agile Software Craftsmanship (1) (A Handbook of Agile Software Craftsmanship (1))
- La subrayado en la posición 1175-1176 | Añadido el sábado, 17 de febrero de 2024 12:08:42

Accessors, mutators, and predicates should be named for their value and prefixed with get, set, and is according to the javabean standard.4
==========
Clean Code - A Handbook of Agile Software Craftsmanship (1) (A Handbook of Agile Software Craftsmanship (1))
- La subrayado en la posición 1214-1220 | Añadido el sábado, 17 de febrero de 2024 12:14:26

Use Solution Domain Names Remember that the people who read your code will be programmers. So go ahead and use computer science (CS) terms, algorithm names, pattern names, math terms, and so forth. It is not wise to draw every name from the problem domain because we don’t want our coworkers to have to run back and forth to the customer asking what every name means when they already know the concept by a different name. The name AccountVisitor means a great deal to a programmer who is familiar with the VISITOR pattern. What programmer would not know what a JobQueue was? There are lots of very technical things that programmers have to do. Choosing technical names for those things is usually the most appropriate course. Use
==========
Clean Code - A Handbook of Agile Software Craftsmanship (1) (A Handbook of Agile Software Craftsmanship (1))
- El marcador en la posición 1227 | Añadido el sábado, 17 de febrero de 2024 12:16:33


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 388 | posición 6512-6513 | Añadido el sábado, 17 de febrero de 2024 16:44:31

 <Has llegado al límite de recortes para este elemento>
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 388 | posición 6512-6518 | Añadido el sábado, 17 de febrero de 2024 16:45:39

 <Has llegado al límite de recortes para este elemento>
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 389 | posición 6532-6534 | Añadido el sábado, 17 de febrero de 2024 16:49:39

 <Has llegado al límite de recortes para este elemento>
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 390 | posición 6548-6549 | Añadido el sábado, 17 de febrero de 2024 16:52:28

 <Has llegado al límite de recortes para este elemento>
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 390 | posición 6549-6556 | Añadido el sábado, 17 de febrero de 2024 16:53:23

 <Has llegado al límite de recortes para este elemento>
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 391 | posición 6557 | Añadido el sábado, 17 de febrero de 2024 16:53:33


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 395 | posición 6641-6642 | Añadido el martes, 20 de febrero de 2024 23:10:54

 <Has llegado al límite de recortes para este elemento>
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 395 | posición 6642-6644 | Añadido el martes, 20 de febrero de 2024 23:11:24

 <Has llegado al límite de recortes para este elemento>
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 397 | posición 6671-6674 | Añadido el martes, 20 de febrero de 2024 23:18:43

 <Has llegado al límite de recortes para este elemento>
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 397 | posición 6674-6679 | Añadido el martes, 20 de febrero de 2024 23:19:17

 <Has llegado al límite de recortes para este elemento>
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 398 | posición 6681 | Añadido el martes, 20 de febrero de 2024 23:20:05


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 401 | posición 6728-6730 | Añadido el miércoles, 21 de febrero de 2024 23:14:13

 <Has llegado al límite de recortes para este elemento>
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 402 | posición 6761-6763 | Añadido el miércoles, 21 de febrero de 2024 23:21:49

 <Has llegado al límite de recortes para este elemento>
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 404 | posición 6794-6795 | Añadido el miércoles, 21 de febrero de 2024 23:29:10

 <Has llegado al límite de recortes para este elemento>
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 406 | posición 6829-6832 | Añadido el miércoles, 21 de febrero de 2024 23:37:34

 <Has llegado al límite de recortes para este elemento>
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 406 | posición 6829-6838 | Añadido el miércoles, 21 de febrero de 2024 23:38:48

 <Has llegado al límite de recortes para este elemento>
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 406 | posición 6829-6839 | Añadido el miércoles, 21 de febrero de 2024 23:38:58

 <Has llegado al límite de recortes para este elemento>
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 406 | posición 6837 | Añadido el miércoles, 21 de febrero de 2024 23:39:39


==========
Clean Code - A Handbook of Agile Software Craftsmanship (1) (A Handbook of Agile Software Craftsmanship (1))
- La subrayado en la posición 1274-1278 | Añadido el jueves, 22 de febrero de 2024 19:41:26

Shorter names are generally better than longer ones, so long as they are clear. Add no more context to a name than is necessary. The names accountAddress and customerAddress are fine names for instances of the class Address but could be poor names for classes. Address is a fine name for a class. If I need to differentiate between MAC addresses, port addresses, and Web addresses, I might consider PostalAddress, MAC, and URI. The resulting names are more precise, which is the point of all naming.
==========
Clean Code - A Handbook of Agile Software Craftsmanship (1) (A Handbook of Agile Software Craftsmanship (1))
- La subrayado en la posición 1350-1351 | Añadido el jueves, 22 de febrero de 2024 19:56:42

Small! The first rule of functions is that they should be small. The second rule of functions is that they should be smaller than that.
==========
Clean Code - A Handbook of Agile Software Craftsmanship (1) (A Handbook of Agile Software Craftsmanship (1))
- La subrayado en la posición 1359-1359 | Añadido el jueves, 22 de febrero de 2024 19:56:57

Functions should hardly ever be 20 lines long.
==========
Clean Code - A Handbook of Agile Software Craftsmanship (1) (A Handbook of Agile Software Craftsmanship (1))
- La subrayado en la posición 1370-1371 | Añadido el jueves, 22 de febrero de 2024 19:57:08

Do One Thing 35 How short should your functions be? They should usually be shorter than Listing 3-2!
==========
Clean Code - A Handbook of Agile Software Craftsmanship (1) (A Handbook of Agile Software Craftsmanship (1))
- La subrayado en la posición 1376-1380 | Añadido el jueves, 22 de febrero de 2024 19:58:22

Blocks and Indenting This implies that the blocks within if statements, else statements, while statements, and so on should be one line long. Probably that line should be a function call. Not only does this keep the enclosing function small, but it also adds documentary value because the function called within the block can have a nicely descriptive name. This also implies that functions should not be large enough to hold nested structures.
==========
Clean Code - A Handbook of Agile Software Craftsmanship (1) (A Handbook of Agile Software Craftsmanship (1))
- La subrayado en la posición 1388-1390 | Añadido el jueves, 22 de febrero de 2024 19:59:33

FUNCTIONS SHOULD DO ONE THING. THEY SHOULD DO IT WELL. THEY SHOULD DO IT ONLY.
==========
Clean Code - A Handbook of Agile Software Craftsmanship (1) (A Handbook of Agile Software Craftsmanship (1))
- La subrayado en la posición 1393-1399 | Añadido el jueves, 22 de febrero de 2024 20:01:29

So which is it? Is the function doing one thing or three things? Notice that the three steps of the function are one level of abstraction below the stated name of the function. We can describe the function by describing it as a brief TO 4 paragraph: TO RenderPageWithSetupsAndTeardowns, we check to see whether the page is a test page and if so, we include the setups and teardowns. In either case we render the page in HTML. If a function does only those steps that are one level below the stated name of the function, then the function is doing one thing. After all, the reason we write functions is to decompose a larger concept (in other words, the name of the function) into a set of steps at the next level of abstraction.
==========
Clean Code - A Handbook of Agile Software Craftsmanship (1) (A Handbook of Agile Software Craftsmanship (1))
- La subrayado en la posición 1403-1404 | Añadido el jueves, 22 de febrero de 2024 20:02:47

another way to know that a function is doing more than “one thing” is if you can extract another function from it with a name that is not merely a restatement of its implementation [G34].
==========
Clean Code - A Handbook of Agile Software Craftsmanship (1) (A Handbook of Agile Software Craftsmanship (1))
- La subrayado en la posición 1406-1407 | Añadido el jueves, 22 de febrero de 2024 20:03:11

Functions that do one thing cannot be reasonably divided into sections.
==========
Clean Code - A Handbook of Agile Software Craftsmanship (1) (A Handbook of Agile Software Craftsmanship (1))
- La subrayado en la posición 1407-1409 | Añadido el jueves, 22 de febrero de 2024 20:03:28

One Level of Abstraction per Function In order to make sure our functions are doing “one thing,” we need to make sure that the statements within our function are all at the same level of abstraction. It is easy to see how Listing 3-1 violates this rule.
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 409 | posición 6877-6877 | Añadido el jueves, 22 de febrero de 2024 23:38:02

 <Has llegado al límite de recortes para este elemento>
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 409 | posición 6877-6882 | Añadido el jueves, 22 de febrero de 2024 23:39:25

 <Has llegado al límite de recortes para este elemento>
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 409 | posición 6882-6883 | Añadido el jueves, 22 de febrero de 2024 23:39:52

 <Has llegado al límite de recortes para este elemento>
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 409 | posición 6883-6884 | Añadido el jueves, 22 de febrero de 2024 23:40:31

 <Has llegado al límite de recortes para este elemento>
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 411 | posición 6917-6918 | Añadido el jueves, 22 de febrero de 2024 23:48:31

 <Has llegado al límite de recortes para este elemento>
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 412 | posición 6931 | Añadido el jueves, 22 de febrero de 2024 23:54:06


==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 410 | posición 6900-6900 | Añadido el viernes, 23 de febrero de 2024 07:45:43

 <Has llegado al límite de recortes para este elemento>
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 410 | posición 6900-6901 | Añadido el viernes, 23 de febrero de 2024 07:46:28

 <Has llegado al límite de recortes para este elemento>
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 410 | posición 6897-6901 | Añadido el viernes, 23 de febrero de 2024 07:46:39

 <Has llegado al límite de recortes para este elemento>
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 410 | posición 6897-6901 | Añadido el viernes, 23 de febrero de 2024 07:46:48

 <Has llegado al límite de recortes para este elemento>
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 411 | posición 6914-6916 | Añadido el viernes, 23 de febrero de 2024 07:49:52

 <Has llegado al límite de recortes para este elemento>
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 411 | posición 6918-6919 | Añadido el viernes, 23 de febrero de 2024 07:50:43

 <Has llegado al límite de recortes para este elemento>
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 411 | posición 6924-6925 | Añadido el viernes, 23 de febrero de 2024 07:51:43

 <Has llegado al límite de recortes para este elemento>
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 411 | posición 6929-6930 | Añadido el viernes, 23 de febrero de 2024 07:52:33

 <Has llegado al límite de recortes para este elemento>
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 413 | posición 6958-6959 | Añadido el viernes, 23 de febrero de 2024 08:00:27

 <Has llegado al límite de recortes para este elemento>
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 413 | posición 6966-6967 | Añadido el viernes, 23 de febrero de 2024 08:02:27

 <Has llegado al límite de recortes para este elemento>
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 415 | posición 6991-6991 | Añadido el viernes, 23 de febrero de 2024 08:07:17

 <Has llegado al límite de recortes para este elemento>
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 416 | posición 7009-7010 | Añadido el viernes, 23 de febrero de 2024 08:10:44

 <Has llegado al límite de recortes para este elemento>
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 417 | posición 7037-7038 | Añadido el viernes, 23 de febrero de 2024 08:16:35

 <Has llegado al límite de recortes para este elemento>
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 417 | posición 7037-7038 | Añadido el viernes, 23 de febrero de 2024 08:16:44

 <Has llegado al límite de recortes para este elemento>
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 417 | posición 7042-7043 | Añadido el viernes, 23 de febrero de 2024 08:17:57

 <Has llegado al límite de recortes para este elemento>
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 417 | posición 7044-7045 | Añadido el viernes, 23 de febrero de 2024 08:18:26

 <Has llegado al límite de recortes para este elemento>
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 418 | posición 7054-7055 | Añadido el viernes, 23 de febrero de 2024 08:20:34

 <Has llegado al límite de recortes para este elemento>
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 418 | posición 7061-7063 | Añadido el viernes, 23 de febrero de 2024 08:23:00

 <Has llegado al límite de recortes para este elemento>
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 417 | posición 7046-7047 | Añadido el viernes, 23 de febrero de 2024 08:25:59

 <Has llegado al límite de recortes para este elemento>
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 418 | posición 7048-7049 | Añadido el viernes, 23 de febrero de 2024 08:26:07

 <Has llegado al límite de recortes para este elemento>
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 417 | posición 7031-7033 | Añadido el viernes, 23 de febrero de 2024 08:26:31

 <Has llegado al límite de recortes para este elemento>
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- La subrayado en la página 415 | posición 6995-6997 | Añadido el viernes, 23 de febrero de 2024 08:27:30

 <Has llegado al límite de recortes para este elemento>
==========
Thinking, Fast and Slow (Kahneman, Daniel)
- El marcador en la página 418 | posición 7048 | Añadido el viernes, 23 de febrero de 2024 08:28:19


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 529 | posición 7582-7585 | Añadido el domingo, 25 de febrero de 2024 00:34:57

La lección que debe extraer el inversor inteligente es, por supuesto, que tiene que evitar las acciones de empresas de segundo nivel a la hora de configurar una cartera, salvo que, en el caso del inversor emprendedor, sean gangas contrastadamente demostrables. Los demás resultados obtenidos
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 531 | posición 7614-7615 | Añadido el domingo, 25 de febrero de 2024 00:41:20

Nuestra propia preferencia, sin embargo, sigue correspondiendo a otros tipos que muestran una combinación de factores de inversión favorables, incluido un valor de los activos que sea por lo menos dos tercios del precio de mercado.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 531 | posición 7613 | Añadido el domingo, 25 de febrero de 2024 00:43:50


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 533 | posición 7641 | Añadido el domingo, 25 de febrero de 2024 00:49:19


==========
progit (Scott Chacon)
- La subrayado en la posición 447-448 | Añadido el domingo, 25 de febrero de 2024 23:20:28

Git thinks of its data more like a series of snapshots of a miniature filesystem.
==========
progit (Scott Chacon)
- La subrayado en la posición 448-450 | Añadido el domingo, 25 de febrero de 2024 23:21:56

With Git, every time you commit, or save the state of your project, Git basically takes a picture of what all your files look like at that moment and stores a reference to that snapshot. To be efficient, if files have not changed, Git doesn’t store the file again, just a link to the previous identical file it has already stored. Git thinks about its data more like a stream of snapshots.
==========
progit (Scott Chacon)
- La subrayado en la posición 469-471 | Añadido el domingo, 25 de febrero de 2024 23:25:14

Git Has Integrity Everything in Git is checksummed before it is stored and is then referred to by that checksum. This means it’s impossible to change the contents of any file or directory without Git knowing about it.
==========
progit (Scott Chacon)
- La subrayado en la posición 472-478 | Añadido el domingo, 25 de febrero de 2024 23:26:27

The mechanism that Git uses for this checksumming is called a SHA-1 hash. This is a 40-character string composed of hexadecimal characters (0–9 and a–f) and calculated based on the contents of a file or directory structure in Git. A SHA-1 hash looks something like this: 24b9da6552252987aa493b52f8696cd6d3b00373 You will see these hash values all over the place in Git because it uses them so much. In fact, Git stores everything in its database not by file name but by the hash value of its contents.
==========
progit (Scott Chacon)
- La subrayado en la posición 484-489 | Añadido el domingo, 25 de febrero de 2024 23:28:00

The Three States Pay attention now — here is the main thing to remember about Git if you want the rest of your learning process to go smoothly. Git has three main states that your files can reside in: modified, staged, and committed: ​▪​ Modified means that you have changed the file but have not committed it to your database yet. ​▪​ Staged means that you have marked a modified file in its current version to go into your next commit snapshot. ​▪​ Committed means that the data is safely stored in your local database.
==========
progit (Scott Chacon)
- La subrayado en la posición 484-489 | Añadido el domingo, 25 de febrero de 2024 23:28:51

The Three States Pay attention now — here is the main thing to remember about Git if you want the rest of your learning process to go smoothly. Git has three main states that your files can reside in: modified, staged, and committed: ​▪​ Modified means that you have changed the file but have not committed it to your database yet. ​▪​ Staged means that you have marked a modified file in its current version to go into your next commit snapshot. ​▪​ Committed means that the data is safely stored in your local database. This leads us to the three main sections of a Git project: the working tree, the staging area, and the Git directory.
==========
progit (Scott Chacon)
- La subrayado en la posición 491-495 | Añadido el domingo, 25 de febrero de 2024 23:31:53

The working tree is a single checkout of one version of the project. These files are pulled out of the compressed database in the Git directory and placed on disk for you to use or modify. The staging area is a file, generally contained in your Git directory, that stores information about what will go into your next commit. Its technical name in Git parlance is the “index”, but the phrase “staging area” works just as well. The Git directory is where Git stores the metadata and object database for your project. This is the most important part of Git, and it is what is copied when you clone a repository from another computer.
==========
progit (Scott Chacon)
- La subrayado en la posición 499-501 | Añadido el domingo, 25 de febrero de 2024 23:34:39

If a particular version of a file is in the Git directory, it’s considered committed. If it has been modified and was added to the staging area, it is staged. And if it was changed since it was checked out but has not been staged, it is modified.
==========
progit (Scott Chacon)
- La subrayado en la posición 593-594 | Añadido el domingo, 25 de febrero de 2024 23:39:37

Your Identity The first thing you should do when you install Git is to set your user name and email address. This is important because every Git commit uses this information, and it’s immutably baked into the commits you start creating:
==========
progit (Scott Chacon)
- La subrayado en la posición 616-620 | Añadido el domingo, 25 de febrero de 2024 23:41:42

Your default branch name By default Git will create a branch called master when you create a new repository with git init. From Git version 2.28 onwards, you can set a different name for the initial branch. To set main as the default branch name do: $ git config --global init.defaultBranch
==========
progit (Scott Chacon)
- La subrayado en la posición 621-625 | Añadido el domingo, 25 de febrero de 2024 23:41:55

Checking Your Settings If you want to check your configuration settings, you can use the git config --list command to list all the settings Git can find at that point: $ git config --list
user.name=John Doe
user.email=johndoe@example.com
color.status=auto
color.branch=auto
color.interactive=auto
color.diff=auto
...
==========
progit (Scott Chacon)
- La subrayado en la posición 686-687 | Añadido el domingo, 25 de febrero de 2024 23:45:58

$ git init This creates a new subdirectory named .git that contains all of your necessary repository files — a Git repository skeleton.
==========
progit (Scott Chacon)
- La subrayado en la posición 686-688 | Añadido el domingo, 25 de febrero de 2024 23:46:33

$ git init This creates a new subdirectory named .git that contains all of your necessary repository files — a Git repository skeleton. At this point, nothing in your project is tracked yet.
==========
progit (Scott Chacon)
- La subrayado en la posición 776-776 | Añadido el domingo, 25 de febrero de 2024 23:58:44

It may be helpful to think of it more as “add precisely this content to the next commit”
==========
progit (Scott Chacon)
- La subrayado en la posición 799-811 | Añadido el lunes, 26 de febrero de 2024 00:02:16

Short Status While the git status output is pretty comprehensive, it’s also quite wordy. Git also has a short status flag so you can see your changes in a more compact way. If you run git status -s or git status --short you get a far more simplified output from the command: $ git status -s
 M README
MM Rakefile
A  lib/git.rb
M  lib/simplegit.rb
?? LICENSE.txt New files that aren’t tracked have a ?? next to them, new files that have been added to the staging area have an A, modified files have an M and so on. There are two columns to the output — the left-hand column indicates the status of the staging area and the right-hand column indicates the status of the working tree. So for example in that output, the README file is modified in the working directory but not yet staged, while the lib/simplegit.rb file is modified and staged. The Rakefile was modified, staged and then modified again, so there are changes to it that are both staged and unstaged.
==========
progit (Scott Chacon)
- La subrayado en la posición 820-824 | Añadido el lunes, 26 de febrero de 2024 00:04:14

The rules for the patterns you can put in the .gitignore file are as follows: ​▪​ Blank lines or lines starting with # are ignored. ​▪​ Standard glob patterns work, and will be applied recursively throughout the entire working tree. ​▪​ You can start patterns with a forward slash (/) to avoid recursivity. ​▪​ You can end patterns with a forward slash (/) to specify a directory. ​▪​ You can negate
==========
progit (Scott Chacon)
- La subrayado en la posición 820-824 | Añadido el lunes, 26 de febrero de 2024 00:04:20

The rules for the patterns you can put in the .gitignore file are as follows: ​▪​ Blank lines or lines starting with # are ignored. ​▪​ Standard glob patterns work, and will be applied recursively throughout the entire working tree. ​▪​ You can start patterns with a forward slash (/) to avoid recursivity. ​▪​ You can end patterns with a forward slash (/) to specify a directory. ​▪​ You can negate
==========
progit (Scott Chacon)
- La subrayado en la posición 825-829 | Añadido el lunes, 26 de febrero de 2024 00:04:47

Glob patterns are like simplified regular expressions that shells use. An asterisk (*) matches zero or more characters; [abc] matches any character inside the brackets (in this case a, b, or c); a question mark (?) matches a single character; and brackets enclosing characters separated by a hyphen ([0-9]) matches any character between them (in this case 0 through 9). You can also use two asterisks to match nested directories;
==========
progit (Scott Chacon)
- La subrayado en la posición 825-835 | Añadido el lunes, 26 de febrero de 2024 00:04:59

Glob patterns are like simplified regular expressions that shells use. An asterisk (*) matches zero or more characters; [abc] matches any character inside the brackets (in this case a, b, or c); a question mark (?) matches a single character; and brackets enclosing characters separated by a hyphen ([0-9]) matches any character between them (in this case 0 through 9). You can also use two asterisks to match nested directories; a/**/z would match a/z, a/b/z, a/b/c/z, and so on. Here is another example .gitignore file: # ignore all .a files
*.a

# but do track lib.a, even though you're ignoring .a files above
!lib.a

# only ignore the TODO file in the current directory, not subdir/TODO
/TODO

# ignore all files in any directory named build
build/

# ignore doc/notes.txt, but not doc/server/arch.txt
doc/*.txt

# ignore all .pdf files in the doc/ directory and any of its subdirectories
doc/**/*.pdf
==========
progit (Scott Chacon)
- La subrayado en la posición 857-858 | Añadido el lunes, 26 de febrero de 2024 00:06:34

To see what you’ve changed but not yet staged, type git diff with no other arguments:
==========
progit (Scott Chacon)
- La subrayado en la posición 865-866 | Añadido el lunes, 26 de febrero de 2024 00:06:50

That command compares what is in your working directory with what is in your staging area. The result tells you the changes you’ve made that you haven’t yet staged.
==========
progit (Scott Chacon)
- La subrayado en la posición 866-867 | Añadido el lunes, 26 de febrero de 2024 00:07:01

If you want to see what you’ve staged that will go into your next commit, you can use git diff --staged. This command compares your staged changes to your last commit:
==========
progit (Scott Chacon)
- La subrayado en la posición 870-872 | Añadido el lunes, 26 de febrero de 2024 00:07:33

It’s important to note that git diff by itself doesn’t show all changes made since your last commit — only changes that are still unstaged. If you’ve staged all of your changes, git diff will give you no output.
==========
progit (Scott Chacon)
- La subrayado en la posición 884-885 | Añadido el lunes, 26 de febrero de 2024 00:08:18

and git diff --cached to see what you’ve staged so far (--staged and --cached are synonyms):
==========
progit (Scott Chacon)
- La subrayado en la posición 893-898 | Añadido el lunes, 26 de febrero de 2024 00:09:11

Git Diff in an External Tool We will continue to use the git diff command in various ways throughout the rest of the book. There is another way to look at these diffs if you prefer a graphical or external diff viewing program instead. If you run git difftool instead of git diff, you can view any of these diffs in software like emerge, vimdiff and many more (including commercial products). Run git difftool --tool-help to see what is available on your system.
==========
progit (Scott Chacon)
- La subrayado en la posición 915-917 | Añadido el lunes, 26 de febrero de 2024 00:10:53

For an even more explicit reminder of what you’ve modified, you can pass the -v option to git commit. Doing so also puts the diff of your change in the editor so you can see exactly what changes you’re committing.
==========
progit (Scott Chacon)
- El marcador en la posición 924 | Añadido el lunes, 26 de febrero de 2024 00:12:07


==========
progit (Scott Chacon)
- La subrayado en la posición 929-936 | Añadido el lunes, 26 de febrero de 2024 23:22:28

If you want to skip the staging area, Git provides a simple shortcut. Adding the -a option to the git commit command makes Git automatically stage every file that is already tracked before doing the commit, letting you skip the git add part: $ git status
On branch master
Your branch is up-to-date with 'origin/master'.
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

    modified:   CONTRIBUTING.md

no changes added to commit (use "git add" and/or "git commit -a")
$ git commit -a -m 'Add new benchmarks'
[master 83e38c7] Add new benchmarks
 1 file changed, 5 insertions(+), 0 deletions(
==========
progit (Scott Chacon)
- La subrayado en la posición 940-942 | Añadido el lunes, 26 de febrero de 2024 23:23:44

To remove a file from Git, you have to remove it from your tracked files (more accurately, remove it from your staging area) and then commit. The git rm command does that, and also removes the file from your working directory so you
==========
progit (Scott Chacon)
- La subrayado en la posición 953-955 | Añadido el lunes, 26 de febrero de 2024 23:24:36

If you modified the file or had already added it to the staging area, you must force the removal with the -f option. This is a safety feature to prevent accidental removal of data that hasn’t yet been recorded in a snapshot and that can’t be recovered from Git.
==========
progit (Scott Chacon)
- La subrayado en la posición 955-968 | Añadido el lunes, 26 de febrero de 2024 23:26:34

Another useful thing you may want to do is to keep the file in your working tree but remove it from your staging area. In other words, you may want to keep the file on your hard drive but not have Git track it anymore. This is particularly useful if you forgot to add something to your .gitignore file and accidentally staged it, like a large log file or a bunch of .a compiled files. To do this, use the --cached option: $ git rm --cached README You can pass files, directories, and file-glob patterns to the git rm command. That means you can do things such as: $ git rm log/\*.log Note the backslash (\) in front of the *. This is necessary because Git does its own filename expansion in addition to your shell’s filename expansion. This command removes all files that have the .log extension in the log/ directory. Or, you can do something like this: $ git rm \*~ This command removes all files whose names end with a ~.
==========
progit (Scott Chacon)
- La subrayado en la posición 984-984 | Añadido el lunes, 26 de febrero de 2024 23:29:03

Viewing the Commit History
==========
progit (Scott Chacon)
- La subrayado en la posición 986-987 | Añadido el lunes, 26 de febrero de 2024 23:29:07

git log command. These examples use a very simple project called “simplegit”.
==========
progit (Scott Chacon)
- La subrayado en la posición 986-986 | Añadido el lunes, 26 de febrero de 2024 23:29:18

happened. The most basic and powerful tool to do this is the
==========
progit (Scott Chacon)
- La subrayado en la posición 986-986 | Añadido el lunes, 26 de febrero de 2024 23:29:25

git log command.
==========
progit (Scott Chacon)
- La subrayado en la posición 995-996 | Añadido el lunes, 26 de febrero de 2024 23:29:52

By default, with no arguments, git log lists the commits made in that repository in reverse chronological order; that is, the most recent commits show up first.
==========
progit (Scott Chacon)
- La subrayado en la posición 999-1000 | Añadido el lunes, 26 de febrero de 2024 23:30:53

One of the more helpful options is -p or --patch, which shows the difference (the patch output) introduced in each commit.
==========
progit (Scott Chacon)
- La subrayado en la posición 1015-1016 | Añadido el lunes, 26 de febrero de 2024 23:32:56

you can use the --stat option:
==========
progit (Scott Chacon)
- La subrayado en la posición 1015-1016 | Añadido el lunes, 26 de febrero de 2024 23:33:08

if you want to see some abbreviated stats for each commit, you can use the --stat option:
==========
progit (Scott Chacon)
- La subrayado en la posición 1026-1027 | Añadido el lunes, 26 de febrero de 2024 23:34:21

option is --pretty. This option changes the log output to formats other than the default. A few prebuilt option values are available for you to use.
==========
progit (Scott Chacon)
- La subrayado en la posición 1026-1033 | Añadido el lunes, 26 de febrero de 2024 23:34:40

option is --pretty. This option changes the log output to formats other than the default. A few prebuilt option values are available for you to use. The oneline value for this option prints each commit on a single line, which is useful if you’re looking at a lot of commits. In addition, the short, full, and fuller values show the output in roughly the same format but with less or more information, respectively: $ git log --pretty=oneline
ca82a6dff817ec66f44342007202690a93763949 Change version number
085bb3bcb608e1e8451d4b2432f8ecbe6306e7e7 Remove unnecessary test
a11bef06a3f659402fe7563abf99ad00de2209e6 Initial commit
==========
progit (Scott Chacon)
- La subrayado en la posición 1061-1068 | Añadido el lunes, 26 de febrero de 2024 23:36:33

The oneline and format option values are particularly useful with another log option called --graph. This option adds a nice little ASCII graph showing your branch and merge history: $ git log --pretty=format:"%h %s" --graph
* 2d3acf9 Ignore errors from SIGCHLD on trap
*  5e3ee11 Merge branch 'master' of https://github.com/dustin/grit.git
|\
| * 420eac9 Add method for getting the current branch
* | 30e367c Timeout code and tests
* | 5a09431 Add timeout protection to grit
* | e1193f8 Support for heads with slashes in them
|/
* d6016bc Require time for xmlschema
*  11d191e Merge branch 'defunkt' into local
==========
progit (Scott Chacon)
- La subrayado en la posición 1092-1096 | Añadido el lunes, 26 de febrero de 2024 23:38:07

Limiting Log Output In addition to output-formatting options, git log takes a number of useful limiting options; that is, options that let you show only a subset of commits. You’ve seen one such option already — the -2 option, which displays only the last two commits. In fact, you can do -<n>, where n is any integer to show the last n commits.
==========
progit (Scott Chacon)
- La subrayado en la posición 1097-1108 | Añadido el lunes, 26 de febrero de 2024 23:40:19

the time-limiting options such as --since and --until are very useful. For example, this command gets the list of commits made in the last two weeks: $ git log --since=2.weeks This command works with lots of formats — you can specify a specific date like "2008-01-15", or a relative date such as "2 years 1 day 3 minutes ago". You can also filter the list to commits that match some search criteria. The --author option allows you to filter on a specific author, and the --grep option lets you search for keywords in the commit messages. ​​ You can specify more than one instance of both the --author and --grep search criteria, which will limit the commit output to commits that match any of the --author patterns and any of the --grep patterns; however, adding the --all-match option further limits the output to just those commits that match all --grep patterns.
==========
progit (Scott Chacon)
- La subrayado en la posición 1108-1109 | Añadido el lunes, 26 de febrero de 2024 23:40:30

Another really helpful filter is the -S option
==========
progit (Scott Chacon)
- La subrayado en la posición 1109-1110 | Añadido el lunes, 26 de febrero de 2024 23:40:40

which takes a string and shows only those commits that changed the number of occurrences of that string.
==========
progit (Scott Chacon)
- La subrayado en la posición 1112-1112 | Añadido el lunes, 26 de febrero de 2024 23:40:45

git log -S function_name
==========
progit (Scott Chacon)
- La subrayado en la posición 1113-1117 | Añadido el lunes, 26 de febrero de 2024 23:41:16

If you specify a directory or file name, you can limit the log output to commits that introduced a change to those files. This is always the last option and is generally preceded by double dashes (--) to separate the paths from the options: $ git log -- path/to/file
==========
progit (Scott Chacon)
- La subrayado en la posición 1139-1142 | Añadido el lunes, 26 de febrero de 2024 23:42:49

Preventing the display of merge commits Depending on the workflow used in your repository, it’s possible that a sizable percentage of the commits in your log history are just merge commits, which typically aren’t very informative. To prevent the display of merge commits cluttering up your log history, simply add the log option --no-
==========
progit (Scott Chacon)
- La subrayado en la posición 1139-1141 | Añadido el lunes, 26 de febrero de 2024 23:42:52

Preventing the display of merge commits Depending on the workflow used in your repository, it’s possible that a sizable percentage of the commits in your log history are just merge commits, which typically aren’t very informative. To prevent the display of merge commits cluttering
==========
progit (Scott Chacon)
- La subrayado en la posición 1139-1141 | Añadido el lunes, 26 de febrero de 2024 23:42:59

Preventing the display of merge commits Depending on the workflow used in your repository, it’s possible that a sizable percentage of the commits in your log history are just merge commits, which typically aren’t very informative. To prevent the display of merge commits cluttering
==========
progit (Scott Chacon)
- La subrayado en la posición 1139-1143 | Añadido el lunes, 26 de febrero de 2024 23:43:07

Preventing the display of merge commits Depending on the workflow used in your repository, it’s possible that a sizable percentage of the commits in your log history are just merge commits, which typically aren’t very informative. To prevent the display of merge commits cluttering up your log history, simply add the log option --no-merges. Undoing Things At any stage, you may want to undo something.
==========
progit (Scott Chacon)
- La subrayado en la posición 1148-1152 | Añadido el lunes, 26 de febrero de 2024 23:44:55

git commit --amend This command takes your staging area and uses it for the commit. If you’ve made no changes since your last commit (for instance, you run this command immediately after your previous commit), then your snapshot will look exactly the same, and all you’ll change is your commit message. The same commit-message editor fires up, but it already contains the message of your previous commit. You can edit the message the same as always, but it overwrites your previous commit.
==========
progit (Scott Chacon)
- La subrayado en la posición 1161-1164 | Añadido el lunes, 26 de febrero de 2024 23:47:04

Only amend commits that are still local and have not been pushed somewhere. Amending previously pushed commits and force pushing the branch will cause problems for your collaborators. For more on what happens when you do this and how to recover if you’re on the receiving end read The Perils of Rebasing
==========
progit (Scott Chacon)
- El marcador en la posición 1155 | Añadido el lunes, 26 de febrero de 2024 23:47:14


==========
progit (Scott Chacon)
- La subrayado en la posición 1180-1182 | Añadido el miércoles, 28 de febrero de 2024 06:53:09

It’s true that git reset can be a dangerous command, especially if you provide the --hard flag. However, in the scenario described above, the file in your working directory is not touched, so it’s relatively safe.
==========
progit (Scott Chacon)
- La subrayado en la posición 1166-1180 | Añadido el miércoles, 28 de febrero de 2024 06:53:50

For example, let’s say you’ve changed two files and want to commit them as two separate changes, but you accidentally type git add * and stage them both. How can you unstage one of the two? The git status command reminds you: $ git add *
$ git status
On branch master
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

    renamed:    README.md -> README
    modified:   CONTRIBUTING.md Right below the “Changes to be committed” text, it says use git reset HEAD <file>…​ to unstage. So, let’s use that advice to unstage the CONTRIBUTING.md file: $ git reset HEAD CONTRIBUTING.md
Unstaged changes after reset:
M  CONTRIBUTING.md
$ git status
On branch master
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

    renamed:    README.md -> README

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

    modified:   CONTRIBUTING.md The command is a bit strange, but it works. The CONTRIBUTING.md file is modified but once again unstaged.
==========
progit (Scott Chacon)
- La subrayado en la posición 1186-1187 | Añadido el miércoles, 28 de febrero de 2024 06:54:42

Unmodifying a Modified File What if you realize that you don’t want to keep your changes to the CONTRIBUTING.md file?
==========
progit (Scott Chacon)
- La subrayado en la posición 1197-1200 | Añadido el miércoles, 28 de febrero de 2024 06:56:35

It’s important to understand that git checkout -- <file> is a dangerous command. Any local changes you made to that file are gone — Git just replaced that file with the last staged or committed version. Don’t ever use this command unless you absolutely know that you don’t want those unsaved local changes.
==========
progit (Scott Chacon)
- La subrayado en la posición 1201-1202 | Añadido el miércoles, 28 de febrero de 2024 06:57:28

Remember, anything that is committed in Git can almost always be recovered.
==========
progit (Scott Chacon)
- La subrayado en la posición 1201-1205 | Añadido el miércoles, 28 de febrero de 2024 06:57:47

Remember, anything that is committed in Git can almost always be recovered. Even commits that were on branches that were deleted or commits that were overwritten with an --amend commit can be recovered (see Data Recovery for data recovery). However, anything you lose that was never committed is likely never to be seen again.
==========
progit (Scott Chacon)
- La subrayado en la posición 1205-1206 | Añadido el miércoles, 28 de febrero de 2024 06:57:56

Undoing things with git restore
==========
progit (Scott Chacon)
- La subrayado en la posición 1206-1207 | Añadido el miércoles, 28 de febrero de 2024 06:58:14

git restore. It’s basically an alternative to git reset
==========
progit (Scott Chacon)
- La subrayado en la posición 1213-1226 | Añadido el miércoles, 28 de febrero de 2024 07:00:15

let’s say you’ve changed two files and want to commit them as two separate changes, but you accidentally type git add * and stage them both. How can you unstage one of the two? The git status command reminds you: $ git add *
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
   modified:   CONTRIBUTING.md
   renamed:    README.md -> README Right below the “Changes to be committed” text, it says use git restore --staged <file>…​ to unstage. So, let’s use that advice to unstage the CONTRIBUTING.md file: $ git restore --staged CONTRIBUTING.md
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
   renamed:    README.md -> README

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
   modified:   CONTRIBUTING.md The CONTRIBUTING.md file is modified but once again unstaged.
==========
progit (Scott Chacon)
- La subrayado en la posición 1226-1228 | Añadido el miércoles, 28 de febrero de 2024 07:01:09

Unmodifying a Modified File with git restore What if you realize that you don’t want to keep your changes to the CONTRIBUTING.md file? How can you easily unmodify it — revert it back to what it looked like when you last committed
==========
progit (Scott Chacon)
- La subrayado en la posición 1229-1240 | Añadido el miércoles, 28 de febrero de 2024 07:02:22

Luckily, git status tells you how to do that, too. In the last example output, the unstaged area looks like this: Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
   modified:   CONTRIBUTING.md It tells you pretty explicitly how to discard the changes you’ve made. Let’s do what it says: $ git restore CONTRIBUTING.md
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
   renamed:    README.md -> README ​​ It’s important to understand that git restore <file> is a dangerous command. Any local changes you made to that file are gone — Git just replaced that file with the last staged or committed version. Don’t ever use this command unless you absolutely know that you don’t want those unsaved local changes.
==========
progit (Scott Chacon)
- La subrayado en la posición 1247-1251 | Añadido el miércoles, 28 de febrero de 2024 07:04:49

Remote repositories can be on your local machine. It is entirely possible that you can be working with a “remote” repository that is, in fact, on the same host you are. The word “remote” does not necessarily imply that the repository is somewhere else on the network or Internet, only that it is elsewhere. Working with such a remote repository would still involve all the standard pushing, pulling and fetching operations as with any other remote.
==========
progit (Scott Chacon)
- La subrayado en la posición 1251-1252 | Añadido el miércoles, 28 de febrero de 2024 07:05:02

Showing Your Remotes To see which remote servers you have configured, you can run the git remote command.
==========
progit (Scott Chacon)
- La subrayado en la posición 1258-1261 | Añadido el miércoles, 28 de febrero de 2024 07:05:58

You can also specify -v, which shows you the URLs that Git has stored for the shortname to be used when reading and writing to that remote: $ git remote -v
origin   https://github.com/schacon/ticgit (fetch)
origin   https://github.com/schacon/ticgit
==========
progit (Scott Chacon)
- La subrayado en la posición 1294-1296 | Añadido el miércoles, 28 de febrero de 2024 07:10:18

the git fetch command only downloads the data to your local repository — it doesn’t automatically merge it with any of your work or modify what you’re currently working on. You have to merge it manually into your work when you’re ready.
==========
progit (Scott Chacon)
- La subrayado en la posición 1292-1294 | Añadido el miércoles, 28 de febrero de 2024 07:10:39

If you clone a repository, the command automatically adds that remote repository under the name “origin”. So, git fetch origin fetches any new work that has been pushed to that server since you cloned (or last fetched from)
==========
progit (Scott Chacon)
- La subrayado en la posición 1299-1301 | Añadido el miércoles, 28 de febrero de 2024 07:12:02

and by default, the git clone command automatically sets up your local master branch to track the remote master branch (or whatever the default branch is called) on the server you cloned from.
==========
progit (Scott Chacon)
- La subrayado en la posición 1301-1316 | Añadido el miércoles, 28 de febrero de 2024 07:12:24

git pull generally fetches data from the server you originally cloned from and automatically tries to merge it into the code you’re currently working on. ​​ From Git version 2.27 onward, git pull will give a warning if the pull.rebase variable is not set. Git will keep warning you until you set the variable. If you want the default behavior of Git (fast-forward if possible, else create a merge commit): git config --global pull.rebase "false" If you want to rebase when pulling: git config --global pull.rebase "true" Pushing to Your Remotes When you have your project at a point that you want to share, you have to push it upstream. The command for this is simple: git push <remote> <branch>. If you want to push your master branch to your origin server (again, cloning generally sets up both of those names for you automatically), then you can run this to push any commits you’ve done back up to the server: $ git push origin master This command works only if you cloned from a server to which you have write access and if nobody has pushed in the meantime. If you and someone else clone at the same time and they push upstream and then you push upstream, your push will rightly be rejected. You’ll have to fetch their work first and incorporate it into yours before you’ll be allowed to push. See Git Branching for more detailed information on how to push to remote servers.
==========
progit (Scott Chacon)
- El marcador en la posición 1332 | Añadido el miércoles, 28 de febrero de 2024 07:14:10


==========
progit (Scott Chacon)
- La subrayado en la posición 1464-1472 | Añadido el miércoles, 28 de febrero de 2024 16:53:50

Git Aliases Before we move on to the next chapter, we want to introduce a feature that can make your Git experience simpler, easier, and more familiar: aliases. For clarity’s sake, we won’t be using them anywhere else in this book, but if you go on to use Git with any regularity, aliases are something you should know about. Git doesn’t automatically infer your command if you type it in partially. If you don’t want to type the entire text of each of the Git commands, you can easily set up an alias for each command using git config. Here are a couple of examples you may want to set up: $ git config --global alias.co checkout
$ git config --global alias.br branch
$ git config --global alias.ci commit
$ git config --global alias.st status This means that, for example, instead of typing git commit, you just need to type git
==========
progit (Scott Chacon)
- La subrayado en la posición 1514-1523 | Añadido el jueves, 29 de febrero de 2024 23:58:59

Your Git repository now contains five objects: three blobs (each representing the contents of one of the three files), one tree that lists the contents of the directory and specifies which file names are stored as which blobs, and one commit with the pointer to that root tree and all the commit metadata. Figure 9. A commit and its tree If you make some changes and commit again, the next commit stores a pointer to the commit that came immediately before it. Figure 10. Commits and their parents A branch in Git is simply a lightweight movable pointer to one of these commits. The default branch name in Git is master. As you start making commits, you’re given a master branch that points to the last commit you made. Every time you commit, the master branch pointer moves forward automatically. The
==========
progit (Scott Chacon)
- La subrayado en la posición 1530-1540 | Añadido el viernes, 1 de marzo de 2024 00:01:33

$ git branch testing This creates a new pointer to the same commit you’re currently on. Figure 12. Two branches pointing into the same series of commits How does Git know what branch you’re currently on? It keeps a special pointer called HEAD. Note that this is a lot different than the concept of HEAD in other VCSs you may be used to, such as Subversion or CVS. In Git, this is a pointer to the local branch you’re currently on. In this case, you’re still on master. The git branch command only created a new branch — it didn’t switch to that branch. Figure 13. HEAD pointing to a branch You can easily see this by running a simple git log command that shows you where the branch pointers are pointing. This option is called --decorate.
==========
progit (Scott Chacon)
- La subrayado en la posición 1581-1584 | Añadido el viernes, 1 de marzo de 2024 00:05:42

You can also see this easily with the git log command. If you run git log --oneline --decorate --graph --all it will print out the history of your commits, showing where your branch pointers are and how your history has diverged.
==========
progit (Scott Chacon)
- La subrayado en la posición 1648-1650 | Añadido el sábado, 2 de marzo de 2024 00:42:14

when you try to merge one commit with a commit that can be reached by following the first commit’s history, Git simplifies things by moving the pointer forward because there is no divergent work to merge together — this is called a “fast-forward.”
==========
progit (Scott Chacon)
- La subrayado en la posición 1653-1657 | Añadido el sábado, 2 de marzo de 2024 00:43:58

delete the hotfix branch, because you no longer need it — the master branch points at the same place. You can delete it with the -d option to git branch: $ git branch -d hotfix
==========
La cuestión moral de los combustibles fósiles (Juan de Mariana-Value School-Deusto) (Spanish Edition) (Epstein, Alex)
- La subrayado en la página 238 | posición 3248-3250 | Añadido el miércoles, 6 de marzo de 2024 19:40:16

Estoy de pie ante un auditorio lleno a rebosar, delante de trescientos estudiantes del Centro de Investigaciones Científicas Levine de la Universidad de Duke. Doce años antes, yo estaba sentado en una de esas sillas. Ahora estoy en el escenario, frente a Bill McKibben, quien
==========
progit (Scott Chacon)
- La subrayado en la posición 1695-1696 | Añadido el miércoles, 6 de marzo de 2024 22:34:54

Anything that has merge conflicts and hasn’t been resolved is listed as unmerged.
==========
progit (Scott Chacon)
- La subrayado en la posición 1710-1712 | Añadido el miércoles, 6 de marzo de 2024 22:37:26

If you want to use a graphical tool to resolve these issues, you can run git mergetool, which fires up an appropriate visual merge tool and walks you through the conflicts: $ git mergetool
==========
progit (Scott Chacon)
- La subrayado en la posición 1736-1739 | Añadido el miércoles, 6 de marzo de 2024 22:39:51

The git branch command does more than just create and delete branches. If you run it with no arguments, you get a simple listing of your current branches: $ git branch
  iss53
* master
  testing
==========
progit (Scott Chacon)
- La subrayado en la posición 1736-1741 | Añadido el miércoles, 6 de marzo de 2024 22:40:07

The git branch command does more than just create and delete branches. If you run it with no arguments, you get a simple listing of your current branches: $ git branch
  iss53
* master
  testing Notice the * character that prefixes the master branch: it indicates the branch that you currently have checked out (i.e., the branch that HEAD points to).
==========
progit (Scott Chacon)
- La subrayado en la posición 1745-1750 | Añadido el miércoles, 6 de marzo de 2024 22:41:17

The useful --merged and --no-merged options can filter this list to branches that you have or have not yet merged into the branch you’re currently on. To see which branches are already merged into the branch you’re on, you can run git branch --merged: $ git branch --merged
  iss53
* master
==========
progit (Scott Chacon)
- La subrayado en la posición 1750-1752 | Añadido el miércoles, 6 de marzo de 2024 22:42:14

Branches on this list without the * in front of them are generally fine to delete with git branch -d; you’ve already incorporated their work into another branch, so you’re not going to lose anything
==========
progit (Scott Chacon)
- La subrayado en la posición 1752-1755 | Añadido el miércoles, 6 de marzo de 2024 22:42:26

To see all the branches that contain work you haven’t yet merged in, you can run git branch --no-merged: $ git branch --no-merged
  testing
==========
progit (Scott Chacon)
- La subrayado en la posición 1769-1776 | Añadido el miércoles, 6 de marzo de 2024 22:45:06

Suppose you have a branch that is called bad-branch-name and you want to change it to corrected-branch-name, while keeping all history. You also want to change the branch name on the remote (GitHub, GitLab, other server). How do you do this? Rename the branch locally with the git branch --move command: $ git branch --move bad-branch-name corrected-branch-name This replaces your bad-branch-name with corrected-branch-name, but this change is only local for now. To let others see the corrected branch on the remote, push it: $ git push -
==========
progit (Scott Chacon)
- La subrayado en la posición 1779-1784 | Añadido el miércoles, 6 de marzo de 2024 22:45:58

git branch --all
* corrected-branch-name
  main
  remotes/origin/bad-branch-name
  remotes/origin/corrected-branch-name
  remotes/origin/main Notice that you’re on the branch corrected-branch-name and it’s available on the remote. However, the branch with the bad name is also still present there but you can delete it by executing the following command: $ git push origin --delete bad-branch-name
==========
design-patterns-en (Alexander Shvets)
- La subrayado en la página 19 | posición 117-121 | Añadido el viernes, 8 de marzo de 2024 06:46:03

Encapsulation is the ability of an object to hide parts of its state and behaviors from other objects, exposing only a limited interface to the rest of the program. To encapsulate something means to make it private, and thus accessible only from within the methods of its own class. There’s a little bit less restrictive mode called protected that makes a member of a class available to subclasses as well.
==========
design-patterns-en (Alexander Shvets)
- La subrayado en la página 19 | posición 121-125 | Añadido el viernes, 8 de marzo de 2024 06:46:31

Interfaces and abstract classes/methods of most programming languages are based on the concepts of abstraction and encapsulation. In modern object-oriented programming languages, the interface mechanism (usually declared with the interface or protocol keyword) lets you define contracts of interaction between objects. That’s one of the reasons why the interfaces only care about behaviors of objects, and why you can’t declare a field in an interface.
==========
design-patterns-en (Alexander Shvets)
- La subrayado en la página 21 | posición 137-139 | Añadido el viernes, 8 de marzo de 2024 06:47:05

Inheritance Inheritance is the ability to build new classes on top of existing ones. The main benefit of inheritance is code reuse.
==========
design-patterns-en (Alexander Shvets)
- La subrayado en la página 24 | posición 160-164 | Añadido el viernes, 8 de marzo de 2024 06:48:42

Polymorphism is the ability of a program to detect the real class of an object and call its implementation even when its real type is unknown in the current context. You can also think of polymorphism as the ability of an object to “pretend” to be something else, usually a class it extends or an interface it implements. In our example, the dogs and cats in the bag were pretending to be generic animals.
==========
design-patterns-en (Alexander Shvets)
- La subrayado en la página 25 | posición 169-171 | Añadido el viernes, 8 de marzo de 2024 06:49:21

Dependency is the most basic and the weakest type of relations between classes. There is a dependency between two classes if some changes to the definition of one class might result in modifications to another class.
==========
design-patterns-en (Alexander Shvets)
- La subrayado en la página 26 | posición 177-177 | Añadido el viernes, 8 de marzo de 2024 06:49:45

Association is a relationship in which one object uses or interacts with another.
==========
design-patterns-en (Alexander Shvets)
- La subrayado en la página 28 | posición 201-203 | Añadido el viernes, 8 de marzo de 2024 06:50:06

Aggregation is a specialized type of association that represents “one-to-many”, “many-to-many” or “whole-part” relations between multiple objects.
==========
design-patterns-en (Alexander Shvets)
- La subrayado en la página 28 | posición 203-204 | Añadido el viernes, 8 de marzo de 2024 06:50:20

Usually, under aggregation, an object “has” a set of other objects and serves as a container or collection.
==========
design-patterns-en (Alexander Shvets)
- La subrayado en la página 28 | posición 210-213 | Añadido el viernes, 8 de marzo de 2024 06:50:53

Composition is a specific kind of aggregation, where one object is composed of one or more instances of the other. The distinction between this relation and others is that the component can only exist as a part of the container. In UML the composition relationship is drawn the same as for aggregation, but with a filled diamond at the arrow’s base.
==========
design-patterns-en (Alexander Shvets)
- La subrayado en la página 29 | posición 218-223 | Añadido el viernes, 8 de marzo de 2024 06:51:26

Dependency: Class А can be affected by changes in class B. Association: Object А knows about object B. Class A depends on B. Aggregation: Object А knows about object B, and consists of B. Class A depends on B. Composition: Object А knows about object B, consists of B, and manages B’s life cycle. Class A depends on B. Implementation: Class А defines methods declared in interface B. Objects A can be treated as B. Class A depends on B. Inheritance: Class А inherits interface and implementation of class B but can extend it. Objects A can be treated as B. Class A depends on B.
==========
design-patterns-en (Alexander Shvets)
- La subrayado en la página 32 | posición 229-231 | Añadido el viernes, 8 de marzo de 2024 06:52:56

Design patterns are typical solutions to commonly occurring problems in software design. They are like pre-made blueprints that you can customize to solve a recurring design problem in your code.
==========
design-patterns-en (Alexander Shvets)
- La subrayado en la página 32 | posición 233-236 | Añadido el viernes, 8 de marzo de 2024 06:53:03

Patterns are often confused with algorithms, because both concepts describe typical solutions to some known problems. While an algorithm always defines a clear set of actions that can achieve some goal, a pattern is a more high-level description of a solution. The code of the same pattern applied to two different programs may be different.
==========
design-patterns-en (Alexander Shvets)
- La subrayado en la página 33 | posición 238-243 | Añadido el viernes, 8 de marzo de 2024 06:53:58

What does the pattern consist of? Most patterns are described very formally so people can reproduce them in many contexts. Here are the sections that are usually present in a pattern description: Intent of the pattern briefly describes both the problem and the solution. Motivation further explains the problem and the solution the pattern makes possible. Structure of classes shows each part of the pattern and how they are related. Code example in one of the popular programming languages makes it easier to grasp the idea behind the pattern.
==========
design-patterns-en (Alexander Shvets)
- La subrayado en la página 33 | posición 244-246 | Añadido el viernes, 8 de marzo de 2024 06:54:37

Design patterns differ by their complexity, level of detail and scale of applicability to the entire system being designed. I like the analogy to road construction: you can make an intersection safer by either installing some traffic lights or building an entire multi-level interchange with underground passages for pedestrians.
==========
design-patterns-en (Alexander Shvets)
- La subrayado en la página 34 | posición 249-254 | Añadido el viernes, 8 de marzo de 2024 06:55:08

all patterns can be categorized by their intent, or purpose. This book covers three main groups of patterns: Creational patterns provide object creation mechanisms that increase flexibility and reuse of existing code. Structural patterns explain how to assemble objects and classes into larger structures, while keeping these structures flexible and efficient. Behavioral patterns take care of effective communication and the assignment of responsibilities between objects.
==========
design-patterns-en (Alexander Shvets)
- La subrayado en la página 40 | posición 289-301 | Añadido el viernes, 8 de marzo de 2024 07:01:39

I see three levels of reuse. At the lowest level, you reuse classes: class libraries, containers, maybe some class “teams” like container/iterator. Frameworks are at the highest level. They really try to distill your design decisions. They identify the key abstractions for solving a problem, represent them by classes and define relationships between them. JUnit is a small framework, for example. It is the “Hello, world” of frameworks. It has Test, TestCase, TestSuite and relationships defined. A framework is typically larger-grained than just a single class. Also, you hook into frameworks by subclassing somewhere. They use the so-called Hollywood principle of “don’t call us, we’ll call you.” The framework lets you define your custom behavior, and it will call you when it’s your turn to do something. Same with JUnit, right? It calls you when it wants to execute a test for you, but the rest happens in the framework. There also is a middle level. This is where I see patterns. Design patterns are both smaller and more abstract than frameworks. They’re really a description about how a couple of classes can relate to and interact with each other. The level of reuse increases when you move from classes to patterns and finally frameworks. What is nice about this middle layer is that patterns offer reuse in a way that is less risky than frameworks. Building a framework is high-risk and a significant investment. Patterns let you reuse design ideas and concepts independently of concrete code.
==========
design-patterns-en (Alexander Shvets)
- La subrayado en la página 41 | posición 306-308 | Añadido el viernes, 8 de marzo de 2024 07:02:32

First, we understand the problem better once we start to solve it. Often by the time you finish the first version of an app, you’re ready to rewrite it from scratch because now you understand many aspects of the problem much better. You have also grown professionally, and your own code now looks like crap.
==========
design-patterns-en (Alexander Shvets)
- La subrayado en la página 42 | posición 308-309 | Añadido el viernes, 8 de marzo de 2024 07:02:42

Something beyond your control has changed.
==========
design-patterns-en (Alexander Shvets)
- La subrayado en la página 42 | posición 313-314 | Añadido el viernes, 8 de marzo de 2024 07:03:27

There’s a bright side: if someone asks you to change something in your app, that means someone still cares about it.
==========
design-patterns-en (Alexander Shvets)
- El marcador en la página 42 | posición 309 | Añadido el viernes, 8 de marzo de 2024 07:03:36


==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página XVII | posición 78-81 | Añadido el sábado, 9 de marzo de 2024 22:12:52

In our era of political strife and social upheaval, we need to learn human relations skills more than ever. These pages will show you how to have a civil conversation with those you disagree with, explain why others won’t “listen to reason,” and help you to mend rifts with family and friends when it seems beyond hope. It is not an easy assignment, but it is vitally important. Help, often life-transforming help, is here in these pages.
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página XX | posición 113-114 | Añadido el sábado, 9 de marzo de 2024 22:23:34

about 15 percent of one’s financial success is due to one’s technical knowledge and about 85 percent is due to skill in human engineering—to personality and the ability to lead people.
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página XXI | posición 120-122 | Añadido el sábado, 9 de marzo de 2024 22:26:04

In the heyday of his activity, John D. Rockefeller said that “the ability to deal with people is as purchasable a commodity as sugar or coffee. And I will pay more for that ability,” said John D., “than for any other under the sun.”
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- El marcador en la página XXIII | posición 149 | Añadido el sábado, 9 de marzo de 2024 22:34:29


==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página XXVII | posición 196-197 | Añadido el domingo, 10 de marzo de 2024 01:57:29

What is this magic requirement? Just this: a deep, driving desire to learn, a vigorous determination to increase your ability to deal with people. How can you develop such an urge? By constantly reminding
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página XXVII | posición 196-196 | Añadido el domingo, 10 de marzo de 2024 01:57:38

What is this magic requirement? Just this: a deep, driving desire
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página XXVII | posición 196-197 | Añadido el domingo, 10 de marzo de 2024 01:57:48

What is this magic requirement? Just this: a deep, driving desire to learn, a vigorous determination to increase your ability to deal with people.
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 5 | posición 289-291 | Añadido el domingo, 10 de marzo de 2024 13:27:36

John Wanamaker, founder of the stores that bear his name, once confessed: “I learned thirty years ago that it is foolish to scold. I have enough trouble overcoming my own limitations without fretting over the fact that God has not seen fit to distribute evenly the gift of intelligence.”
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 8 | posición 331-335 | Añadido el domingo, 10 de marzo de 2024 13:39:51

There you are; human nature in action, wrongdoers blaming everybody but themselves. We are all like that. So when you and I are tempted to criticize someone tomorrow, let’s remember Al Capone, “Two Gun” Crowley, and Albert Fall. Let’s realize that criticisms are like homing pigeons. They always return home. Let’s realize that the person we are going to correct and condemn will probably justify themselves, and condemn us in return; or, like the gentle Taft, will say: “I don’t see how I could have done any differently from what I have.”
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 5 | posición 292-295 | Añadido el domingo, 10 de marzo de 2024 13:40:47

people don’t criticize themselves for anything, no matter how wrong it may be. Criticism is futile because it puts people on the defensive and usually makes them strive to justify themselves. Criticism is dangerous because it wounds a person’s precious pride, hurts their sense of importance, and arouses resentment.
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 13 | posición 389-390 | Añadido el domingo, 10 de marzo de 2024 13:56:20

The next time we are tempted to admonish somebody, let’s pull a five-dollar bill out of our pocket, look at Lincoln’s picture on the bill, and ask, “How would Lincoln handle this problem if he had it?”
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 13 | posición 395-397 | Añadido el domingo, 10 de marzo de 2024 13:59:59

Do you know someone you would like to change and regulate and improve? Good! That is fine. I am all in favor of it. But why not begin on yourself? From a purely selfish standpoint, that is a lot more profitable than trying to improve others—yes, and a lot less dangerous.
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 14 | posición 406-408 | Añadido el domingo, 10 de marzo de 2024 14:04:09

If you and I want to stir up a resentment tomorrow that may rankle across the decades and endure until death, just let us indulge in a little stinging criticism—no matter how certain we are that it is justified.
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 14 | posición 406-409 | Añadido el domingo, 10 de marzo de 2024 14:04:19

If you and I want to stir up a resentment tomorrow that may rankle across the decades and endure until death, just let us indulge in a little stinging criticism—no matter how certain we are that it is justified. When dealing with people, let us remember we are not dealing with creatures of logic. We are dealing with creatures of emotion, creatures bristling with prejudices and motivated by pride and vanity.
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 14 | posición 411-414 | Añadido el domingo, 10 de marzo de 2024 14:06:12

Benjamin Franklin, tactless in his youth, became so diplomatic, so adroit at handling people, that he was made American ambassador to France. The secret of his success? “I will speak ill of no man,” he said, “… and speak all the good I know of everybody.” Any fool can criticize, condemn, and complain—and most fools do. But it takes character and self-control to understand and forgive.
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 17 | posición 447-449 | Añadido el domingo, 10 de marzo de 2024 14:15:32

listening without judgment could have that effect on a hardened murderer, what do you believe having the compassion to suspend our criticism could do for you or me in our daily interactions with our spouses, our families, and our coworkers?
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 20 | posición 483-486 | Añadido el domingo, 10 de marzo de 2024 14:26:55

Instead of condemning people, let’s try to understand them. Let’s try to figure out why they do what they do. That’s a lot more profitable and intriguing than criticism; and it breeds sympathy, tolerance, and kindness. “To know all is to forgive all.” As Dr. Johnson said: “God himself, sir, does not propose to judge man until the end of his days.” Why should you and I?
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- El marcador en la página 19 | posición 479 | Añadido el domingo, 10 de marzo de 2024 14:27:15


==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 22 | posición 508-508 | Añadido el lunes, 11 de marzo de 2024 00:11:39

hunger will hold people in the palm of their hand and “even the undertaker
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 26 | posición 562-563 | Añadido el lunes, 11 de marzo de 2024 00:26:33

“Once I did bad and that I heard ever / Twice I did good, but that I heard never.”
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 26 | posición 557-560 | Añadido el lunes, 11 de marzo de 2024 00:26:48

“I consider my ability to arouse enthusiasm among my people,” said Schwab, “the greatest asset I possess, and the way to develop the best that is in a person is by appreciation and encouragement. “There is nothing else that so kills the ambitions of a person as criticisms from superiors. I never criticize anyone. I believe in giving a person incentive to work. So I am anxious to praise but loath to find fault. If I like anything, I am hearty in my approbation and lavish in my praise.”
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 26 | posición 563-565 | Añadido el lunes, 11 de marzo de 2024 00:28:59

“In my wide association in life, meeting with many and great people in various parts of the world,” Schwab declared, “I have yet to find the person, however great or exalted his station, who did not do better work and put forth greater effort under a spirit of approval than he would ever do under a spirit of criticism.”
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 27 | posición 572-574 | Añadido el lunes, 11 de marzo de 2024 00:31:11

When a study was made a few years ago on runaway wives, what do you think was discovered to be the main reason they fled? It was “lack of appreciation.” I’d bet that a similar study made of runaway husbands would come out the same way. We often take our spouses so much for granted that we never let them know we appreciate
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 31 | posición 629-631 | Añadido el lunes, 11 de marzo de 2024 00:46:20

The difference between appreciation and flattery? Simple. One is sincere, the other insincere. One comes from the heart out, the other from the teeth out. One is unselfish, the other selfish. One is universally admired, the other universally condemned.
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 32 | posición 632-633 | Añadido el lunes, 11 de marzo de 2024 00:46:46

“Don’t be afraid of enemies who attack you. Be afraid of the friends who flatter you.”
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 31 | posición 631-633 | Añadido el lunes, 11 de marzo de 2024 00:46:52

Álvaro Obregón, in the Chapultepec palace in Mexico City. Below the bust are carved these wise words from his philosophy: “Don’t be afraid of enemies who attack you. Be afraid of the friends who flatter you.”
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 32 | posición 634-637 | Añadido el lunes, 11 de marzo de 2024 00:48:02

King George V had a set of six maxims displayed on the walls of his study at Buckingham Palace. One of these said: “Teach me neither to proffer nor receive cheap praise.” That’s all flattery is—cheap praise. I once read a definition of flattery that may be worth repeating: “Flattery is telling the other person precisely what he thinks about himself.”
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 32 | posición 645-649 | Añadido el lunes, 11 de marzo de 2024 00:50:44

What applies to professionals applies doubly to workers in offices, shops, and factories, and to our families and friends. In our relations at work we should never forget that all our associates are human beings and hunger for appreciation. It is the legal tender that all souls enjoy. Try leaving a friendly trail of little sparks of gratitude on your daily trips. You will be surprised how they will set small flames of friendship that will be rose beacons on your next visit.
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 33 | posición 650-652 | Añadido el lunes, 11 de marzo de 2024 00:51:59

“I shall pass this way but once; any good, therefore, that I can do or any kindness that I can show to any human being, let me do it now. Let me not defer nor neglect it, for I shall not pass this way
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 33 | posición 652-653 | Añadido el lunes, 11 de marzo de 2024 00:52:47

The great philosopher Ralph Waldo Emerson said, “Every man I meet is my superior in some way. In that, I learn of him.”
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 33 | posición 653-658 | Añadido el lunes, 11 de marzo de 2024 00:53:53

Let us cease thinking of our accomplishments, our wants. Let us try to figure out the other person’s good points. Then forget flattery. Give honest, sincere appreciation. Be “hearty in your approbation and lavish in your praise,” and people will cherish your words and repeat them over a lifetime—repeat them years after you have forgotten them. PRINCIPLE 2 Give honest and sincere appreciation.
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- El marcador en la página 33 | posición 654 | Añadido el lunes, 11 de marzo de 2024 00:54:14


==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 36 | posición 670-672 | Añadido el lunes, 11 de marzo de 2024 22:57:30

Why talk about what we want? That is childish. Absurd. Of course you are interested in what you want, eternally interested. But no one else is. The rest of us are just like you: We are interested in what we want. So the only way on earth to influence other people is to talk about what they want and show them how to get it.
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 37 | posición 687-689 | Añadido el lunes, 11 de marzo de 2024 23:03:37

“Action springs out of what we fundamentally desire… and the best piece of advice which can be given to would-be persuaders, whether in business, in the home, in the school, in politics, is: First, arouse in the other person an eager want. He who can do this has the whole world with him. He who cannot walks a lonely way.”
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 37 | posición 686-689 | Añadido el lunes, 11 de marzo de 2024 23:03:47

In his illuminating book Influencing Human Behavior, Harry A. Overstreet wrote: “Action springs out of what we fundamentally desire… and the best piece of advice which can be given to would-be persuaders, whether in business, in the home, in the school, in politics, is: First, arouse in the other person an eager want. He who can do this has the whole world with him. He who cannot walks a lonely way.”
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 40 | posición 734-737 | Añadido el lunes, 11 de marzo de 2024 23:16:03

Here is one of the best bits of advice ever given about the fine art of human relationships. “If there is any one secret of success,” said Henry Ford, “it lies in the ability to get the other person’s point of view and see things from that person’s angle as well as from your own.” That is so good, I want to repeat it: “If there is any one secret of
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 40 | posición 734-738 | Añadido el lunes, 11 de marzo de 2024 23:16:14

Here is one of the best bits of advice ever given about the fine art of human relationships. “If there is any one secret of success,” said Henry Ford, “it lies in the ability to get the other person’s point of view and see things from that person’s angle as well as from your own.” That is so good, I want to repeat it: “If there is any one secret of success, it lies in the ability to get the other person’s point of view
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- El marcador en la página 41 | posición 742 | Añadido el lunes, 11 de marzo de 2024 23:17:54


==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- El marcador en la página 46 | posición 807 | Añadido el martes, 12 de marzo de 2024 13:33:16


==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 47 | posición 824-827 | Añadido el martes, 12 de marzo de 2024 14:51:48

discouraged, and underpaid. Why? Because they are always thinking only of what they want. They don’t realize that neither you nor I want to buy anything. If we did, we would go out and buy it. But both of us are eternally interested in solving our problems. And if salespeople can show us how their services or merchandise will help us solve our problems, they won’t need to sell us. We will buy. And customers like to feel that they are buying—not being sold.
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 49 | posición 847-848 | Añadido el martes, 12 de marzo de 2024 15:33:03

The world is full of people who are grabbing and self-seeking, so the rare individual who unselfishly tries to serve others has an enormous advantage.
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 49 | posición 848-850 | Añadido el martes, 12 de marzo de 2024 15:33:35

Owen D. Young, a noted lawyer and founder of the Radio Corporation of America (RCA), once said: “People who can put themselves in the place of other people, who can understand the workings of their minds, need never worry about what the future has in store for them.”
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 49 | posición 852-853 | Añadido el martes, 12 de marzo de 2024 15:39:43

Looking at the other person’s point of view and arousing in him or her an eager want for something is not to be construed as manipulating that person to do something that is only for your benefit and their detriment. Each party should gain from the negotiation.
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 49 | posición 855-856 | Añadido el martes, 12 de marzo de 2024 15:40:10

The best way to motivate someone to do something for you is to show how it would benefit them, as well.
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 52 | posición 887-890 | Añadido el martes, 12 de marzo de 2024 23:32:30

Remember: “First, arouse in the other person an eager want. If you can do this, you will have the whole world with you. If you cannot, you will walk a lonely way.” PRINCIPLE 3 Arouse in the other person an eager want.
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 56 | posición 912-913 | Añadido el martes, 12 de marzo de 2024 23:36:10

Let me repeat that. You can make more friends in two months by becoming interested in people than you can in two years by trying to get people interested in you.
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 57 | posición 925-927 | Añadido el martes, 12 de marzo de 2024 23:38:55

It is the individual who is not interested in his fellow men who has the greatest difficulties in life and provides the greatest injury to others. It is from among such individuals that all human failures spring.
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 57 | posición 931-932 | Añadido el martes, 12 de marzo de 2024 23:39:57

“I’m telling you,” he said, “the same things your preacher would tell you, but remember, you have to be interested in people if you want to be a successful writer of stories.”
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 63 | posición 1002-1003 | Añadido el miércoles, 13 de marzo de 2024 00:03:42

If we want to make friends, let’s greet people with animation and enthusiasm. When somebody calls you on the phone, use the same psychology. Say “Hello” in tones that show unquestionably how pleased you are to hear the person’s voice.
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 66 | posición 1044-1044 | Añadido el miércoles, 13 de marzo de 2024 00:12:44

“We are interested in others when they are interested in us.”
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 67 | posición 1060-1063 | Añadido el miércoles, 13 de marzo de 2024 00:16:07

If you want others to like you, if you want to develop real friendships, if you want to help others at the same time as you help yourself, keep this principle in mind: PRINCIPLE 1 Become genuinely interested in other people.
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- El marcador en la página 68 | posición 1065 | Añadido el miércoles, 13 de marzo de 2024 00:16:16


==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 73 | posición 1120-1121 | Añadido el jueves, 14 de marzo de 2024 06:29:14

“I am a totally different man, a richer man, richer in friendships and happiness—the only things that matter much, after all.” Suppose
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 73 | posición 1121-1125 | Añadido el jueves, 14 de marzo de 2024 06:29:22

Suppose you don’t feel like smiling—then what? Two things. First, force yourself to smile. If you are alone, force yourself to whistle or hum a tune or sing. Act as if you were already happy, and that will tend to make you happy. Here is the way psychologist William James put it: “Action seems to follow feeling, but really action and feeling go together; and by regulating the action, which is under the more direct control of the will, we can indirectly regulate the feeling, which is not. Thus the sovereign voluntary path to cheerfulness, if our cheerfulness be lost, is to sit up cheerfully and to act and speak as if cheerfulness were already there.”
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 74 | posición 1128-1131 | Añadido el jueves, 14 de marzo de 2024 06:31:01

two people may be in the same place, doing the same thing; both may have about an equal amount of money and prestige—and yet one may be miserable and the other happy. Why? Because of a different mental attitude. I have seen just as many happy faces among the poverty-stricken farm workers toiling in the devastating heat of the tropics as I have seen in air-conditioned offices in New York, Chicago, or Los Angeles.
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 74 | posición 1128-1132 | Añadido el jueves, 14 de marzo de 2024 06:31:29

two people may be in the same place, doing the same thing; both may have about an equal amount of money and prestige—and yet one may be miserable and the other happy. Why? Because of a different mental attitude. I have seen just as many happy faces among the poverty-stricken farm workers toiling in the devastating heat of the tropics as I have seen in air-conditioned offices in New York, Chicago, or Los Angeles. “There is nothing either good or bad,” said Shakespeare, “but thinking makes it so.”
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 74 | posición 1137-1147 | Añadido el jueves, 14 de marzo de 2024 06:35:47

Peruse this bit of sage advice from the essayist and publisher Elbert Hubbard—but remember, perusing it won’t do you any good unless you apply it: “Whenever you go out-of-doors, draw the chin in, carry the crown of the head high, and fill the lungs to the utmost; drink in the sunshine; greet your friends with a smile, and put soul into every handshake. Do not fear being misunderstood and do not waste a minute thinking about your enemies. Try to fix firmly in your mind what you would like to do; and then, without veering off direction, you will move straight to the goal. Keep your mind on the great and splendid things you would like to do, and then, as the days go gliding away, you will find yourself unconsciously seizing upon the opportunities required for the fulfillment of your desire, just as the coral insect takes from the running tide the element it needs. Picture in your mind the able, earnest, useful person you desire to be, and the thought you hold will transform you, hour by hour, into that particular individual…. Thought is supreme. Preserve a right mental attitude—the attitude of courage, frankness, and good cheer. To think rightly is to create. All things come through desire and every sincere prayer is answered. We become like that on which our hearts are fixed. Carry your chin in and the crown of your head high. We are gods in the chrysalis.”
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 76 | posición 1154-1165 | Añadido el jueves, 14 de marzo de 2024 06:38:53

The Value of a Smile at Christmas It costs nothing, but creates much. It enriches those who receive, without impoverishing those who give. It happens in a flash and the memory of it sometimes lasts forever. None are so rich they can get along without it, and none so poor but are richer for its benefits. It creates happiness in the home, fosters good will in a business, and is the sign of a friend. It is rest to the weary, daylight to the discouraged, sunshine to the sad, and Nature’s best antidote for trouble. Yet it cannot be bought, begged, borrowed, or stolen, for it is something that is no earthly good to anybody till it is given away. And if in the last-minute rush of Christmas buying some of our salespeople should be too tired to give you a smile, may we ask you to leave one of yours? For nobody needs a smile so much as those who have none left to give! PRINCIPLE 2 Smile.
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- El marcador en la página 80 | posición 1209 | Añadido el jueves, 14 de marzo de 2024 06:48:42


==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 85 | posición 1276-1277 | Añadido el jueves, 14 de marzo de 2024 22:24:36

PRINCIPLE 3 Remember that a person’s name is to that person the sweetest and most important sound in any language.
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 95 | posición 1389-1389 | Añadido el sábado, 16 de marzo de 2024 18:27:15

“Many persons call a doctor when all they want is an audience.”
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 95 | posición 1389-1396 | Añadido el sábado, 16 de marzo de 2024 18:29:06

During the darkest hours of the Civil War, Lincoln wrote to an old friend in Springfield, Illinois, asking him to come to Washington. Lincoln said he had some problems he wanted to discuss with him. The old neighbor called at the White House, and Lincoln talked to him for hours about the advisability of issuing a proclamation freeing slaves. Lincoln went over all the arguments for and against such a move, and then read letters and newspaper articles, some denouncing him for not freeing slaves and others denouncing him for fear he was going to free them. After talking for hours, Lincoln shook hands with his old neighbor, said good night, and sent him back to Illinois without even asking for his opinion. Lincoln had done all the talking himself. That seemed to clarify his mind. “He seemed to feel easier after that talk,” said the old friend. Lincoln hadn’t wanted advice. He had wanted merely a friendly, sympathetic listener to whom he could unburden himself. That’s what we all want when we are in trouble.
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 95 | posición 1389-1397 | Añadido el sábado, 16 de marzo de 2024 18:29:18

During the darkest hours of the Civil War, Lincoln wrote to an old friend in Springfield, Illinois, asking him to come to Washington. Lincoln said he had some problems he wanted to discuss with him. The old neighbor called at the White House, and Lincoln talked to him for hours about the advisability of issuing a proclamation freeing slaves. Lincoln went over all the arguments for and against such a move, and then read letters and newspaper articles, some denouncing him for not freeing slaves and others denouncing him for fear he was going to free them. After talking for hours, Lincoln shook hands with his old neighbor, said good night, and sent him back to Illinois without even asking for his opinion. Lincoln had done all the talking himself. That seemed to clarify his mind. “He seemed to feel easier after that talk,” said the old friend. Lincoln hadn’t wanted advice. He had wanted merely a friendly, sympathetic listener to whom he could unburden himself. That’s what we all want when we are in trouble. That is frequently all the irritated customer wants, and the dissatisfied employee or the hurt friend.
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 96 | posición 1408-1415 | Añadido el sábado, 16 de marzo de 2024 18:34:38

So if you aspire to be a good conversationalist, be an attentive listener. To be interesting, be interested. Ask questions that other persons will enjoy answering. Encourage them to talk about themselves and their accomplishments. Remember that the people you are talking to are a hundred times more interested in themselves and their wants and problems than they are in you and your problems. A person’s toothache means more to that person than a famine in China that kills a million people. A boil on one’s neck interests one more than forty earthquakes in Africa. Think of that the next time you start a conversation. PRINCIPLE 4 Be a good listener. Encourage others to talk about themselves.
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- El marcador en la página 98 | posición 1417 | Añadido el sábado, 16 de marzo de 2024 18:36:25


==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 106 | posición 1501-1503 | Añadido el domingo, 17 de marzo de 2024 14:41:03

There is one all-important law of human conduct. If we obey that law, we shall almost never get into trouble. In fact, that law, if obeyed, will bring us countless friends and constant happiness. But the very instant we break the law, we shall get into endless trouble. The law is this: Always make the other person feel important.
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 106 | posición 1501-1506 | Añadido el domingo, 17 de marzo de 2024 14:41:47

There is one all-important law of human conduct. If we obey that law, we shall almost never get into trouble. In fact, that law, if obeyed, will bring us countless friends and constant happiness. But the very instant we break the law, we shall get into endless trouble. The law is this: Always make the other person feel important. John Dewey, as we have already noted, said that the desire to be important is the deepest urge in human nature; and William James said: “The deepest principle in human nature is the craving to be appreciated.” As I have already pointed out, it is this urge that differentiates us from the animals. It is this urge that has been responsible for civilization itself.
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 107 | posición 1511-1512 | Añadido el domingo, 17 de marzo de 2024 14:43:01

“Do unto others as you would have others do unto you.”
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 107 | posición 1511-1514 | Añadido el domingo, 17 de marzo de 2024 14:43:39

“Do unto others as you would have others do unto you.” You want the approval of those with whom you come in contact. You want recognition of your true worth. You want a feeling that you are important in your little world. You don’t want to listen to cheap, insincere flattery, but you do crave sincere appreciation. You want your friends and associates to be, as Charles Schwab put it, “hearty in their approbation and lavish in their praise.”
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 107 | posición 1515-1516 | Añadido el domingo, 17 de marzo de 2024 14:51:22

How? When? Where? The answer is: All the time, everywhere.
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 108 | posición 1526-1528 | Añadido el domingo, 17 de marzo de 2024 14:51:34

Little phrases such as “I’m sorry to trouble you,” “Would you be so kind as to ———?” “Won’t you please?” “Would you mind?” “Thank you”: Little courtesies like these oil the cogs of the monotonous grind of everyday life—and, incidentally, they are the hallmark of good breeding.
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 115 | posición 1622-1625 | Añadido el domingo, 17 de marzo de 2024 21:39:47

Where should you and I begin applying this magic touchstone of appreciation? Why not begin right at home? I don’t know of any other place where it is more needed—or more neglected. Your spouse must have some good points—at least you thought so once or you wouldn’t have married him or her. But how long has it been since you expressed your attraction to your spouse? How long???? How long????
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 115 | posición 1622-1627 | Añadido el domingo, 17 de marzo de 2024 21:40:27

Where should you and I begin applying this magic touchstone of appreciation? Why not begin right at home? I don’t know of any other place where it is more needed—or more neglected. Your spouse must have some good points—at least you thought so once or you wouldn’t have married him or her. But how long has it been since you expressed your attraction to your spouse? How long???? How long???? But tonight, or tomorrow night, surprise your sweetheart with a special treat or dinner at his or her favorite place. Don’t merely say, “Yes, I ought to do it.” Do it! And afterwards, with a smile, present your sweetheart with the gift of warm words of affection.
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 115 | posición 1629-1643 | Añadido el domingo, 17 de marzo de 2024 21:41:58

When she asked him his recipe for making these women fall in love with him, he said it was no trick at all: All you had to do was to talk to a woman about herself. The same technique works equally well with men. “Talk to a man about himself,” said Disraeli, one of the shrewdest men who ever ruled the British Empire, “and he will listen for hours.” So if you want people to like you, PRINCIPLE 6 Make the other person feel important—and do it sincerely. IN A NUTSHELL SIX WAYS TO MAKE PEOPLE LIKE YOU PRINCIPLE 1 Become genuinely interested in other people. PRINCIPLE 2 Smile. PRINCIPLE 3 Remember that a person’s name is to that person the sweetest and most important sound in any language. PRINCIPLE 4 Be a good listener. Encourage others to talk about themselves. PRINCIPLE 5 Talk in terms of the other person’s interests. PRINCIPLE 6 Make the other person feel important—and do it sincerely.
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- El marcador en la página 118 | posición 1646 | Añadido el domingo, 17 de marzo de 2024 21:42:26


==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- El marcador en la página 126 | posición 1719 | Añadido el lunes, 18 de marzo de 2024 00:15:03


==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 126 | posición 1723-1750 | Añadido el lunes, 18 de marzo de 2024 23:19:37

In an article in Bits and Pieces, published by the Economic Press, Fairfield, New Jersey, some suggestions are made on how to keep a disagreement from becoming an argument: Welcome the disagreement. Remember the slogan, “When two partners always agree, one of them is not necessary.” If there is some point you haven’t thought about, be thankful if it is brought to your attention. Perhaps this disagreement is your opportunity to be corrected before you make a serious mistake. Distrust your first instinctive impression. Our first natural reaction in a disagreeable situation is to be defensive. Be careful. Keep calm and watch out for your first reaction. It may be you at your worst, not your best. Control your temper. Remember, you can measure the size of a person by what makes him or her angry. Listen first. Give your opponents a chance to talk. Let them finish. Do not resist, defend, or debate. This only raises barriers. Try to build bridges of understanding. Don’t build higher barriers of misunderstanding. Look for areas of agreement. When you have heard your opponents out, dwell first on the points and areas on which you agree. Be honest. Look for areas where you can admit error and say so. Apologize for your mistakes. It will help disarm your opponents and reduce defensiveness. Promise to think over your opponents’ ideas and study them carefully. And mean it. Your opponents may be right. It is a lot easier at this stage to agree to think about their points than to move rapidly ahead and find yourself in a position where your opponents can say, “We tried to tell you, but you wouldn’t listen.” Thank your opponents sincerely for their interest. Anyone who takes the time to disagree with you is interested in the same things you are. Think of them as people who really want to help you, and you may turn your opponents into friends. Postpone action to give both sides time to think through the problem. Suggest that another meeting be held later that day or the next day, when all the facts may be brought to bear. In preparation for this meeting, ask yourself some hard questions: Could my opponents be right? Partly right? Is there truth or merit in their position or argument? Is my reaction one that will relieve the problem or will it just relieve any frustration? Will my reaction drive my opponents further away or draw them closer to me? Will my reaction elevate the estimation good people have of me? Will I win or lose? What price will I have to pay if I win? If I am quiet about it, will the disagreement blow over? Is this difficult situation an opportunity for me? Opera tenor Jan Peerce, after he was married nearly fifty years, once said: “My wife and I made a pact a long time ago, and we’ve kept it no matter how angry we’ve grown with each other. When one yells, the other should listen—because when two people yell, there is no communication, just noise and bad vibrations.” PRINCIPLE 1 The only way to get the best of an argument is to avoid it.
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- El marcador en la página 129 | posición 1758 | Añadido el lunes, 18 de marzo de 2024 23:21:49


==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 130 | posición 1765-1770 | Añadido el martes, 19 de marzo de 2024 23:32:13

This was expressed succinctly by Alexander Pope: Men must be taught as if you taught them not And things unknown proposed as things forgot. Over three hundred years ago Galileo said: “You cannot teach a man anything; you can only help him to find it within himself.” As Lord Chesterfield said to his son: “Be wiser than other people if you can; but do not tell them so.” Socrates said repeatedly to his followers in Athens: “One thing only I know, and that is that I know nothing.”
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 130 | posición 1771-1775 | Añadido el martes, 19 de marzo de 2024 23:33:21

If a person makes a statement that you think is wrong—yes, even that you know is wrong—isn’t it better to begin by saying: “Well, now, look. I thought otherwise, but I may be wrong. I frequently am. And if I am wrong, I want to be put right. Let’s examine the facts.” There’s magic, positive magic, in such phrases as: “I may be wrong. I frequently am. Let’s examine the facts.”
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 131 | posición 1778-1779 | Añadido el martes, 19 de marzo de 2024 23:34:16

what happens? Let me illustrate. Mr. S——, a young New York attorney,
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 132 | posición 1797-1798 | Añadido el martes, 19 de marzo de 2024 23:41:08

The result is that most of our so-called reasoning consists in finding arguments for going on believing as we already do.”
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 132 | posición 1798-1804 | Añadido el martes, 19 de marzo de 2024 23:42:19

Carl Rogers, the eminent psychologist, wrote in his book On Becoming a Person: “I have found it of enormous value when I can permit myself to understand the other person. The way in which I have worded this statement may seem strange to you. Is it necessary to permit oneself to understand another? I think it is. Our first reaction to most of the statements (which we hear from other people) is an evaluation or judgment, rather than an understanding of it. When someone expresses some feeling, attitude or belief, our tendency is almost immediately to feel ‘that’s right,’ or ‘that’s stupid,’ ‘that’s abnormal,’ ‘that’s unreasonable,’ ‘that’s incorrect,’ ‘that’s not nice.’ Very rarely do we permit ourselves to understand precisely what the statement means to the other person.”
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 133 | posición 1811-1813 | Añadido el martes, 19 de marzo de 2024 23:45:06

When we are wrong, we may admit it to ourselves. And if we are handled gently and tactfully, we may admit it to others and even take pride in our frankness and broad-mindedness. But not if someone else is trying to ram the unpalatable fact down our esophagus.
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- El marcador en la página 133 | posición 1810 | Añadido el martes, 19 de marzo de 2024 23:45:44


==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 134 | posición 1821-1825 | Añadido el miércoles, 20 de marzo de 2024 23:23:35

“Ben, you are impossible. Your opinions have a slap in them for everyone who differs with you. They have become so offensive that nobody cares for them. Your friends find they enjoy themselves better when you are not around. You know so much that no man can tell you anything. Indeed, no man is going to try, for the effort would lead only to discomfort and hard work. So you are not likely ever to know any more than you do now, which is very little.”
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 136 | posición 1854-1855 | Añadido el jueves, 21 de marzo de 2024 23:51:18

“I am convinced now that nothing good is accomplished and much damage can be done if you tell a person straight out that he or she is wrong. You only succeed in stripping that person of dignity and making yourself an unwelcome part of any discussion.”
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- El marcador en la página 138 | posición 1872 | Añadido el viernes, 22 de marzo de 2024 22:39:28


==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 142 | posición 1915-1917 | Añadido el sábado, 23 de marzo de 2024 15:08:08

That policeman, being human, wanted a feeling of importance; so when I began to condemn myself, the only way he could nourish his self-esteem was to take the magnanimous attitude of showing mercy.
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- El marcador en la página 144 | posición 1940 | Añadido el sábado, 23 de marzo de 2024 15:14:01


==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 146 | posición 1973-1976 | Añadido el domingo, 24 de marzo de 2024 13:28:21

“Come to think it over, I don’t entirely agree with it myself. Not everything I wrote yesterday appeals to me today. I am glad to learn what you think on the subject. The next time you are in the neighborhood you must visit us and we’ll get this subject threshed out for all time. So here is a handclasp over the miles, and I am, “Yours sincerely.”
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 147 | posición 1977-1983 | Añadido el domingo, 24 de marzo de 2024 13:32:46

When we are right, let’s try to win people gently and tactfully to our way of thinking, and when we are wrong—and that will be surprisingly often, if we are honest with ourselves—let us admit our mistakes quickly and with enthusiasm. Not only will that technique produce astonishing results, but, believe it or not, it is a lot more fun, under the circumstances, than trying to defend ourselves. Remember the old proverb: “By fighting you never get enough, but by yielding you get more than you expected.” PRINCIPLE 3 If you are wrong, admit it quickly and emphatically.
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- El marcador en la página 148 | posición 1985 | Añadido el domingo, 24 de marzo de 2024 13:32:58


==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- El marcador en la página 150 | posición 2004 | Añadido el martes, 26 de marzo de 2024 00:25:38


==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 155 | posición 2072-2076 | Añadido el viernes, 29 de marzo de 2024 02:27:42

The sun can make you take off your coat more quickly than the wind; and kindliness, the friendly approach, and appreciation can make people change their minds more readily than all the bluster and storming in the world. Remember what Lincoln said: “A drop of honey catches more flies than a gallon of gall.” PRINCIPLE 4 Begin in a friendly way.
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- El marcador en la página 156 | posición 2079 | Añadido el viernes, 29 de marzo de 2024 02:27:52


==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 157 | posición 2080-2082 | Añadido el viernes, 29 de marzo de 2024 02:54:31

In talking with people, do not begin by discussing the things on which you differ. Begin by emphasizing—and keep on emphasizing—the things on which you agree. Keep emphasizing, if possible, that you are both striving for the same end and that your only difference is one of method and not of purpose.
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 157 | posición 2080-2083 | Añadido el viernes, 29 de marzo de 2024 02:54:52

In talking with people, do not begin by discussing the things on which you differ. Begin by emphasizing—and keep on emphasizing—the things on which you agree. Keep emphasizing, if possible, that you are both striving for the same end and that your only difference is one of method and not of purpose. Get the other person saying “Yes, yes” at the outset. Keep your opponent, if possible, from saying “No.”
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 158 | posición 2090-2091 | Añadido el viernes, 29 de marzo de 2024 10:57:26

When a person says ‘No’ and really means it, he or she is doing far more than saying a word of two letters. The entire organism—glandular, nervous, muscular—gathers itself together into a condition of rejection.
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 161 | posición 2134-2136 | Añadido el viernes, 29 de marzo de 2024 11:08:09

“It took me years and cost me countless thousands of dollars in lost business before I finally learned that it doesn’t pay to argue, that it is much more profitable and much more interesting to look at things from the other person’s viewpoint and try to get that person saying ‘Yes, yes.’
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 162 | posición 2153-2155 | Añadido el viernes, 29 de marzo de 2024 11:13:34

The next time we are smarting to tell someone he or she is wrong, let’s remember barefooted old Socrates and ask a gentle question—a question that will get the “Yes, yes” response. The Chinese have spent five thousand years studying
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 162 | posición 2153-2156 | Añadido el viernes, 29 de marzo de 2024 11:14:18

The next time we are smarting to tell someone he or she is wrong, let’s remember barefooted old Socrates and ask a gentle question—a question that will get the “Yes, yes” response. The Chinese have spent five thousand years studying human nature, and have garnered a lot of perspicacity. They have a proverb pregnant with wisdom: “He who treads softly goes far.”
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 163 | posición 2157-2158 | Añadido el viernes, 29 de marzo de 2024 11:14:37

PRINCIPLE 5 Get the other person saying “Yes, yes” immediately.
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 165 | posición 2163-2166 | Añadido el viernes, 29 de marzo de 2024 11:15:55

If you disagree with them you may be tempted to interrupt. But don’t. It is dangerous. They won’t pay attention to you while they still have a lot of ideas of their own crying for expression. So listen patiently and with an open mind. Be sincere about it. Encourage them to express their ideas fully. Does this policy pay in business? Let’s see. Here is the story of a sales representative who was forced to try it. Years
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 165 | posición 2161-2165 | Añadido el viernes, 29 de marzo de 2024 11:16:07

Most people trying to win others to their way of thinking do too much talking. Let the other people talk themselves out. They know more about their business and problems than you do. So ask them questions. Let them tell you a few things. If you disagree with them you may be tempted to interrupt. But don’t. It is dangerous. They won’t pay attention to you while they still have a lot of ideas of their own crying for expression. So listen patiently and with an open mind. Be sincere about it. Encourage them to express their ideas fully.
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 168 | posición 2207-2207 | Añadido el viernes, 29 de marzo de 2024 11:39:49

“People can’t be ‘sold.’ You have to let them buy.”
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 170 | posición 2228-2230 | Añadido el viernes, 29 de marzo de 2024 11:44:25

Mr. Cubellis had taken the trouble to find out about the accomplishments of his prospective employer. He showed an interest in the other person and his problems. He encouraged the other person to do most of the talking—and, in doing so, made a favorable impression.
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 170 | posición 2228-2231 | Añadido el viernes, 29 de marzo de 2024 11:44:46

Mr. Cubellis had taken the trouble to find out about the accomplishments of his prospective employer. He showed an interest in the other person and his problems. He encouraged the other person to do most of the talking—and, in doing so, made a favorable impression. The truth is, even our friends would much rather talk to us
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 170 | posición 2228-2231 | Añadido el viernes, 29 de marzo de 2024 11:44:52

Mr. Cubellis had taken the trouble to find out about the accomplishments of his prospective employer. He showed an interest in the other person and his problems. He encouraged the other person to do most of the talking—and, in doing so, made a favorable impression. The truth is, even our friends would much rather talk to us about their achievements than listen to us boast about ours.
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 170 | posición 2228-2232 | Añadido el viernes, 29 de marzo de 2024 11:45:32

Mr. Cubellis had taken the trouble to find out about the accomplishments of his prospective employer. He showed an interest in the other person and his problems. He encouraged the other person to do most of the talking—and, in doing so, made a favorable impression. The truth is, even our friends would much rather talk to us about their achievements than listen to us boast about ours. La Rochefoucauld, the French philosopher, said: “If you want enemies, excel your friends; but if you want friends, let your friends excel you.”
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 170 | posición 2228-2234 | Añadido el viernes, 29 de marzo de 2024 11:45:52

Mr. Cubellis had taken the trouble to find out about the accomplishments of his prospective employer. He showed an interest in the other person and his problems. He encouraged the other person to do most of the talking—and, in doing so, made a favorable impression. The truth is, even our friends would much rather talk to us about their achievements than listen to us boast about ours. La Rochefoucauld, the French philosopher, said: “If you want enemies, excel your friends; but if you want friends, let your friends excel you.” Why is that true? Because when our friends excel us, they feel important; but when we excel them, and trumpet our successes to them, it can arouse feelings of envy and even resentment.
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 170 | posición 2228-2243 | Añadido el viernes, 29 de marzo de 2024 11:46:31

Mr. Cubellis had taken the trouble to find out about the accomplishments of his prospective employer. He showed an interest in the other person and his problems. He encouraged the other person to do most of the talking—and, in doing so, made a favorable impression. The truth is, even our friends would much rather talk to us about their achievements than listen to us boast about ours. La Rochefoucauld, the French philosopher, said: “If you want enemies, excel your friends; but if you want friends, let your friends excel you.” Why is that true? Because when our friends excel us, they feel important; but when we excel them, and trumpet our successes to them, it can arouse feelings of envy and even resentment. So let’s minimize our achievements. Let’s be modest. That always makes a hit. We ought to be modest, for both you and I will pass on and be completely forgotten a century from now. Life is too short to bore other people with talk of our petty accomplishments. Let’s encourage them to talk instead. So if we want to win people to our way of thinking: PRINCIPLE 6 Let the other person do a great deal of the talking. 7  How to Get Cooperation Don’t you have much more faith in ideas that you discover for yourself than in ideas that are handed to you on a silver platter?
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 170 | posición 2228-2239 | Añadido el viernes, 29 de marzo de 2024 11:46:42

Mr. Cubellis had taken the trouble to find out about the accomplishments of his prospective employer. He showed an interest in the other person and his problems. He encouraged the other person to do most of the talking—and, in doing so, made a favorable impression. The truth is, even our friends would much rather talk to us about their achievements than listen to us boast about ours. La Rochefoucauld, the French philosopher, said: “If you want enemies, excel your friends; but if you want friends, let your friends excel you.” Why is that true? Because when our friends excel us, they feel important; but when we excel them, and trumpet our successes to them, it can arouse feelings of envy and even resentment. So let’s minimize our achievements. Let’s be modest. That always makes a hit. We ought to be modest, for both you and I will pass on and be completely forgotten a century from now. Life is too short to bore other people with talk of our petty accomplishments. Let’s encourage them to talk instead. So if we want to win people to our way of thinking: PRINCIPLE 6 Let the other person do a great deal of the talking.
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- El marcador en la página 172 | posición 2241 | Añadido el viernes, 29 de marzo de 2024 11:46:53


==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 177 | posición 2294-2295 | Añadido el sábado, 30 de marzo de 2024 11:20:20

In his essay “Self-Reliance,” Ralph Waldo Emerson stated: “In every work of genius we recognize our own rejected thoughts; they come back to us with a certain alienated majesty
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 178 | posición 2313-2318 | Añadido el sábado, 30 de marzo de 2024 11:30:48

“The reason why rivers and seas receive the homage of a hundred mountain streams is that they keep below them. Thus they are able to reign over all the mountain streams. So the sage, wishing to be above men, putteth himself below them; wishing to be before them, he putteth himself behind them. Thus, though his place be above men, they do not feel his weight; though his place be before them, they do not count it an injury.” PRINCIPLE 7 Let the other person feel that the idea is his or hers.
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 178 | posición 2312-2318 | Añadido el sábado, 30 de marzo de 2024 11:30:58

one let me sell myself. That organization won. Twenty-five centuries ago, Lao Tzu, a Chinese sage, said some things that readers of this book might use today: “The reason why rivers and seas receive the homage of a hundred mountain streams is that they keep below them. Thus they are able to reign over all the mountain streams. So the sage, wishing to be above men, putteth himself below them; wishing to be before them, he putteth himself behind them. Thus, though his place be above men, they do not feel his weight; though his place be before them, they do not count it an injury.” PRINCIPLE 7 Let the other person feel that the idea is his or hers.
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 178 | posición 2312-2318 | Añadido el sábado, 30 de marzo de 2024 11:31:05

Twenty-five centuries ago, Lao Tzu, a Chinese sage, said some things that readers of this book might use today: “The reason why rivers and seas receive the homage of a hundred mountain streams is that they keep below them. Thus they are able to reign over all the mountain streams. So the sage, wishing to be above men, putteth himself below them; wishing to be before them, he putteth himself behind them. Thus, though his place be above men, they do not feel his weight; though his place be before them, they do not count it an injury.” PRINCIPLE 7 Let the other person feel that the idea is his or hers.
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- El marcador en la página 179 | posición 2320 | Añadido el sábado, 30 de marzo de 2024 11:31:22


==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 181 | posición 2344-2347 | Añadido el sábado, 30 de marzo de 2024 16:29:06

In his book Getting Through to People, Dr. Gerald S. Nirenberg comments: “Cooperativeness in conversation is achieved when you show that you consider the other person’s ideas and feelings as important as your own. Starting your conversation by giving the other person the purpose or direction of your conversation, governing what you say by what you would want to hear if you were the listener, and accepting his or her viewpoint will encourage the listener to have an open mind to your ideas.”
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 182 | posición 2365-2369 | Añadido el lunes, 1 de abril de 2024 11:00:34

If, as a result of reading this book, you get only one thing—an increased affinity to think always of the other person’s point of view, and see things from that person’s angle as well as your own—if you get only that one thing from this book, it may easily prove to be one of the stepping-stones of your career. PRINCIPLE 8 Try honestly to see things from the other person’s point of view.
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- El marcador en la página 183 | posición 2371 | Añadido el lunes, 1 de abril de 2024 11:02:06


==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 189 | posición 2455-2462 | Añadido el martes, 2 de abril de 2024 22:03:16

Dr. Arthur I. Gates said in his splendid book Educational Psychology: “Sympathy the human species universally craves. The child eagerly displays his injury; or even inflicts a cut or bruise in order to reap abundant sympathy. For the same purpose adults… show their bruises, relate their accidents, illness, especially details of surgical operations. ‘Self-pity’ for misfortunes real or imaginary is, in some measure, practically a universal practice.” So, if you want to win people to your way of thinking, put in practice… PRINCIPLE 9 Be sympathetic with the other person’s ideas and desires.
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 191 | posición 2469-2470 | Añadido el martes, 2 de abril de 2024 22:05:43

J. Pierpont Morgan observed, in one of his analytical interludes, that a person usually has two reasons for doing a thing: one that sounds good and a real one.
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 196 | posición 2531-2537 | Añadido el martes, 2 de abril de 2024 23:23:07

“Experience has taught me,” said Mr. Thomas, “that when no information can be secured about the customer, the only sound basis on which to proceed is to assume that he or she is sincere, honest, truthful, and willing and anxious to pay the charges, once convinced they are correct. To put it differently and perhaps more clearly, people are honest and want to discharge their obligations. The exceptions to that rule are comparatively few, and I am convinced that the individuals who are inclined to chisel will in most cases react favorably if you make them feel that you consider them honest, upright, and fair.” PRINCIPLE 10 Appeal to the nobler motives.
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- El marcador en la página 197 | posición 2539 | Añadido el martes, 2 de abril de 2024 23:24:37


==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 200 | posición 2585-2589 | Añadido el jueves, 4 de abril de 2024 21:28:55

“I was presenting the same facts this time that I had presented previously. But this time I was using dramatization, showmanship—and what a difference it made.” PRINCIPLE 11 Dramatize your ideas.
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- El marcador en la página 201 | posición 2590 | Añadido el jueves, 4 de abril de 2024 21:29:05


==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 202 | posición 2599-2599 | Añadido el sábado, 6 de abril de 2024 01:22:46

chalked it down on the floor.” The
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 203 | posición 2625-2633 | Añadido el sábado, 6 de abril de 2024 08:28:32

Frederick Herzberg, one of the great behavioral scientists, concurred. He studied in depth the work attitudes of thousands of people ranging from factory workers to senior executives. What do you think he found to be the most motivating factor—the one facet of the jobs that was most stimulating? Money? Good working conditions? Fringe benefits? No—not any of those. The one major factor that motivated people was the work itself. If the work was exciting and interesting, the worker looked forward to doing it and was motivated to do a good job. That is what every successful person loves: the game. The chance for self-expression. The chance to prove his or her worth, to excel, to win. That is what makes footraces and hog-calling and pie-eating contests. The desire to excel. The desire for a feeling of importance. PRINCIPLE 12 Throw down a challenge.
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- El marcador en la página 210 | posición 2667 | Añadido el sábado, 6 de abril de 2024 08:36:23


==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 214 | posición 2720-2726 | Añadido el domingo, 7 de abril de 2024 09:48:48

“It didn’t take long to discover why she had trouble balancing out. After the office closed, I went over to talk with her. She was obviously nervous and upset. I praised her for being so friendly and outgoing with the customers and complimented her for the accuracy and <Has llegado al límite de recortes para este elemento>
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 215 | posición 2734-2738 | Añadido el domingo, 7 de abril de 2024 09:54:14

 <Has llegado al límite de recortes para este elemento>
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 215 | posición 2734-2740 | Añadido el domingo, 7 de abril de 2024 09:54:37

 <Has llegado al límite de recortes para este elemento>
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 215 | posición 2734-2741 | Añadido el domingo, 7 de abril de 2024 09:54:47

 <Has llegado al límite de recortes para este elemento>
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 216 | posición 2742-2743 | Añadido el domingo, 7 de abril de 2024 09:59:20

 <Has llegado al límite de recortes para este elemento>
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 216 | posición 2742-2745 | Añadido el domingo, 7 de abril de 2024 09:59:54

 <Has llegado al límite de recortes para este elemento>
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 216 | posición 2746-2747 | Añadido el domingo, 7 de abril de 2024 10:03:39

 <Has llegado al límite de recortes para este elemento>
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 216 | posición 2745-2755 | Añadido el domingo, 7 de abril de 2024 10:07:13

 <Has llegado al límite de recortes para este elemento>
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- El marcador en la página 218 | posición 2758 | Añadido el domingo, 7 de abril de 2024 10:07:22


==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 222 | posición 2801-2804 | Añadido el lunes, 8 de abril de 2024 19:45:55

 <Has llegado al límite de recortes para este elemento>
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- El marcador en la página 223 | posición 2805 | Añadido el lunes, 8 de abril de 2024 19:48:45


==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 225 | posición 2837-2840 | Añadido el viernes, 12 de abril de 2024 16:48:53

 <Has llegado al límite de recortes para este elemento>
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 229 | posición 2869-2873 | Añadido el martes, 23 de abril de 2024 01:44:26

 <Has llegado al límite de recortes para este elemento>
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 231 | posición 2882-2884 | Añadido el martes, 23 de abril de 2024 01:47:15

 <Has llegado al límite de recortes para este elemento>
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 234 | posición 2918-2919 | Añadido el martes, 23 de abril de 2024 01:56:05

 <Has llegado al límite de recortes para este elemento>
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 234 | posición 2920-2921 | Añadido el martes, 23 de abril de 2024 01:56:20

 <Has llegado al límite de recortes para este elemento>
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 234 | posición 2921-2923 | Añadido el martes, 23 de abril de 2024 01:56:40

 <Has llegado al límite de recortes para este elemento>
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 234 | posición 2921-2925 | Añadido el martes, 23 de abril de 2024 01:57:10

 <Has llegado al límite de recortes para este elemento>
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 235 | posición 2926-2928 | Añadido el martes, 23 de abril de 2024 01:57:49

 <Has llegado al límite de recortes para este elemento>
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 235 | posición 2928-2934 | Añadido el martes, 23 de abril de 2024 01:58:18

 <Has llegado al límite de recortes para este elemento>
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- El marcador en la página 236 | posición 2936 | Añadido el martes, 23 de abril de 2024 01:59:53


==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 241 | posición 2986-2989 | Añadido el sábado, 27 de abril de 2024 14:47:24

 <Has llegado al límite de recortes para este elemento>
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 247 | posición 3046-3052 | Añadido el sábado, 27 de abril de 2024 22:12:39

 <Has llegado al límite de recortes para este elemento>
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 247 | posición 3046-3049 | Añadido el sábado, 27 de abril de 2024 22:12:47

 <Has llegado al límite de recortes para este elemento>
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 250 | posición 3061-3063 | Añadido el sábado, 27 de abril de 2024 22:54:03

 <Has llegado al límite de recortes para este elemento>
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 251 | posición 3077-3078 | Añadido el domingo, 28 de abril de 2024 10:11:24

 <Has llegado al límite de recortes para este elemento>
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 253 | posición 3103-3118 | Añadido el domingo, 28 de abril de 2024 10:18:24

 <Has llegado al límite de recortes para este elemento>
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 261 | posición 3198-3199 | Añadido el domingo, 28 de abril de 2024 10:33:40

 <Has llegado al límite de recortes para este elemento>
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 266 | posición 3267-3269 | Añadido el domingo, 28 de abril de 2024 10:49:14

 <Has llegado al límite de recortes para este elemento>
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 266 | posición 3267-3270 | Añadido el domingo, 28 de abril de 2024 10:49:20

 <Has llegado al límite de recortes para este elemento>
==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 273 | posición 3319-3322 | Añadido el domingo, 28 de abril de 2024 10:54:48

 <Has llegado al límite de recortes para este elemento>
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 86 | posición 959-960 | Añadido el martes, 7 de mayo de 2024 14:17:41

The name says what it does, and if someone needs details, they’re laid out in the source. That’s
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 86 | posición 959-960 | Añadido el martes, 7 de mayo de 2024 14:17:48

The name says what it does, and if someone needs details, they’re laid out in the source. That’s DRY!
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 88 | posición 1017-1019 | Añadido el martes, 7 de mayo de 2024 14:20:40

This example also illustrates an important issue: whenever a module exposes a data structure, you’re coupling all the code that uses that structure to the implementation of that module. Where possible, always use accessor functions to read and write the attributes of objects. It will make it easier to add functionality in the future.
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 88 | posición 1019-1022 | Añadido el martes, 7 de mayo de 2024 14:20:59

This use of accessor functions ties in with Meyer’s Uniform Access principle, described in Object-Oriented Software Construction [Mey97], which states that All services offered by a module should be available through a uniform notation, which does not betray whether they are implemented through storage or through computation.
==========
Pragmatic Programmer, The (Thomas, David)
- El marcador en la página 90 | posición 1046 | Añadido el martes, 7 de mayo de 2024 14:28:56


==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 90 | posición 1040-1043 | Añadido el lunes, 10 de junio de 2024 12:07:41

Interdeveloper Duplication Perhaps the hardest type of duplication to detect and handle occurs between different developers on a project. Entire sets of functionality may be inadvertently duplicated, and that duplication could go undetected for years, leading to maintenance problems.
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 90 | posición 1047-1049 | Añadido el lunes, 10 de junio de 2024 12:09:27

run a daily scrum standup meeting. Set up forums (such as Slack channels) to discuss common problems. This provides a nonintrusive way of communicating—even across multiple sites—while retaining a permanent history of everything said.
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 91 | posición 1049-1051 | Añadido el lunes, 10 de junio de 2024 12:09:37

Appoint a team member as the project librarian, whose job is to facilitate the exchange of knowledge. Have a central place in the source tree where utility routines and scripts can be deposited. And make a point of reading other people’s source code and documentation, either informally or during code reviews. You’re not snooping—you’re learning from them.
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 91 | posición 1053-1053 | Añadido el lunes, 10 de junio de 2024 12:10:06

Make It Easy to Reuse
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 91 | posición 1053-1055 | Añadido el lunes, 10 de junio de 2024 12:10:17

What you’re trying to do is foster an environment where it’s easier to find and reuse existing stuff than to write it yourself. If it isn’t easy, people won’t do it.
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 91 | posición 1053-1055 | Añadido el lunes, 10 de junio de 2024 12:10:24

What you’re trying to do is foster an environment where it’s easier to find and reuse existing stuff than to write it yourself. If it isn’t easy, people won’t do it. And if you fail to reuse, you risk duplicating knowledge.
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 92 | posición 1068-1068 | Añadido el lunes, 10 de junio de 2024 12:12:33

In computing, the term has come to signify a kind of independence or decoupling.
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 92 | posición 1068-1069 | Añadido el lunes, 10 de junio de 2024 12:12:53

In computing, the term has come to signify a kind of independence or decoupling. Two or more things are orthogonal if changes in one do not affect any of the others.
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 94 | posición 1085-1086 | Añadido el martes, 11 de junio de 2024 23:03:26

Eliminate Effects Between Unrelated Things
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 94 | posición 1090-1091 | Añadido el martes, 11 de junio de 2024 23:05:11

You get two major benefits if you write orthogonal systems: increased productivity and reduced risk.
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 97 | posición 1115-1118 | Añadido el miércoles, 12 de junio de 2024 22:43:41

There is an easy test for orthogonal design. Once you have your components mapped out, ask yourself: If I dramatically change the requirements behind a particular function, how many modules are affected? In an orthogonal system, the answer should be “one.’’
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 98 | posición 1125-1126 | Añadido el miércoles, 12 de junio de 2024 22:45:32

Don’t rely on the properties of things you can’t control.
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 98 | posición 1123-1126 | Añadido el miércoles, 12 de junio de 2024 22:45:53

Also ask yourself how decoupled your design is from changes in the real world. Are you using a telephone number as a customer identifier? What happens when the phone company reassigns area codes? Postal codes, Social Security Numbers or government IDs, email addresses, and domains are all external identifiers that you have no control over, and could change at any time for any reason. Don’t rely on the properties of things you can’t control.
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 99 | posición 1135-1136 | Añadido el miércoles, 12 de junio de 2024 22:48:27

Coding Every time you write code you run the risk of reducing the orthogonality of your application.
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 99 | posición 1138-1138 | Añadido el miércoles, 12 de junio de 2024 22:49:48

There are several techniques you can use to maintain orthogonality:
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 99 | posición 1138-1142 | Añadido el miércoles, 12 de junio de 2024 22:49:53

Keep your code decoupled Write shy code—modules that don’t reveal anything unnecessary to other modules and that don’t rely on other modules’ implementations. Try the Law of Demeter, which we discuss in Topic 28, ​Decoupling​. If you need to change an object’s state, get the object to do it for you. This way your code remains isolated from the other code’s implementation and increases the chances that you’ll remain orthogonal.
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 99 | posición 1142-1143 | Añadido el domingo, 16 de junio de 2024 23:06:27

Avoid global data Every time your code references global data, it ties itself into the other components that share that data. Even globals that you intend only to read can lead to trouble (for example, if you suddenly need to change your code to be multithreaded).
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 100 | posición 1148-1149 | Añadido el domingo, 16 de junio de 2024 23:06:33

Be careful with singletons—they can also lead to unnecessary linkage.
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 100 | posición 1149-1151 | Añadido el domingo, 16 de junio de 2024 23:07:09

Avoid similar functions Often you’ll come across a set of functions that all look similar—maybe they share common code at the start and end, but each has a different central algorithm. Duplicate code is a symptom of structural problems. Have a look at the Strategy pattern in Design Patterns for a better implementation.
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 100 | posición 1152-1154 | Añadido el domingo, 16 de junio de 2024 23:07:39

Get into the habit of being constantly critical of your code. Look for any opportunities to reorganize it to improve its structure and orthogonality. This process is called refactoring, and it’s so important that we’ve dedicated a section to it (see Topic 40, ​Refactoring​).
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 101 | posición 1163-1165 | Añadido el domingo, 16 de junio de 2024 23:10:06

tag bug fixes when you check the code back in after testing. You can then run monthly reports analyzing trends in the number of source files affected by each bug fix.
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 101 | posición 1169-1171 | Añadido el domingo, 16 de junio de 2024 23:13:51

Orthogonality is closely related to the DRY principle. With DRY, you’re looking to minimize duplication within a system, whereas with orthogonality you reduce the interdependency among the system’s components.
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 105 | posición 1204-1204 | Añadido el domingo, 16 de junio de 2024 23:21:10

Nothing is more dangerous than an idea if it’s the only one you have.
==========
Pragmatic Programmer, The (Thomas, David)
- El marcador en la página 105 | posición 1202 | Añadido el domingo, 16 de junio de 2024 23:21:22


==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 106 | posición 1223-1225 | Añadido el lunes, 17 de junio de 2024 23:18:25

By sticking to their recommendations—especially the DRY principle, decoupling, and use of external configuration—we don’t have to make as many critical, irreversible decisions. This is a good thing, because we don’t always make the best decisions the first time around.
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 107 | posición 1234-1237 | Añadido el lunes, 17 de junio de 2024 23:20:55

The mistake lies in assuming that any decision is cast in stone—and in not preparing for the contingencies that might arise. Instead of carving decisions in stone, think of them more as being written in the sand at the beach. A big wave can come along and wipe them out at any time. Tip 18 There Are No Final Decisions
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 108 | posición 1244-1246 | Añadido el lunes, 17 de junio de 2024 23:23:13

What you can do is make it easy to change. Hide third-party APIs behind your own abstraction layers. Break your code into components: even if you end up deploying them on a single massive server, this approach is a lot easier than taking a monolithic application and splitting it. (We have the scars to prove it.)
==========
Pragmatic Programmer, The (Thomas, David)
- El marcador en la página 111 | posición 1262 | Añadido el lunes, 17 de junio de 2024 23:26:17


==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 111 | posición 1272-1273 | Añadido el jueves, 20 de junio de 2024 03:37:10

We use the term tracer bullet development to visually illustrate the need for immediate feedback under actual conditions with a moving goal.
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 112 | posición 1278-1279 | Añadido el jueves, 20 de junio de 2024 03:41:24

Pragmatic Programmers, however, tend to prefer using the software equivalent of tracer bullets.
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 113 | posición 1282-1284 | Añadido el jueves, 20 de junio de 2024 03:42:51

Look for the important requirements, the ones that define the system. Look for the areas where you have doubts, and where you see the biggest risks. Then prioritize your development so that these are the first areas you code.
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 113 | posición 1282-1285 | Añadido el jueves, 20 de junio de 2024 03:43:00

Look for the important requirements, the ones that define the system. Look for the areas where you have doubts, and where you see the biggest risks. Then prioritize your development so that these are the first areas you code. Tip 20 Use Tracer Bullets to Find the Target
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 115 | posición 1307-1308 | Añadido el jueves, 20 de junio de 2024 03:48:32

Tracer development is consistent with the idea that a project is never finished: there will always be changes required and functions to add. It is an incremental approach.
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 115 | posición 1311-1325 | Añadido el jueves, 20 de junio de 2024 03:52:11

The tracer code approach has many advantages: Users get to see something working early If you have successfully communicated what you are doing (see Topic 52, ​Delight Your Users​), your users will know they are seeing something immature. They won’t be disappointed by a lack of functionality; they’ll be ecstatic to see some visible progress toward their system. They also get to contribute as the project progresses, increasing their buy-in. These same users will likely be the people who’ll tell you how close to the target each iteration is. Developers build a structure to work in The most daunting piece of paper is the one with nothing written on it. If you have worked out all the end-to-end interactions of your application, and have embodied them in code, then your team won’t need to pull as much out of thin air. This makes everyone more productive, and encourages consistency. You have an integration platform As the system is connected end-to-end, you have an environment to which you can add new pieces of code once they have been unit-tested. Rather than attempting a big-bang integration, you’ll be integrating every day (often many times a day). The impact of each new change is more apparent, and the interactions are more limited, so debugging and testing are faster and more accurate. You have something to demonstrate Project sponsors and top brass have a tendency to want to see demos at the most inconvenient times. With tracer code, you’ll always have something to show them. You have a better feel for progress In a tracer code development, developers tackle use cases one by one. When one is done, they move to the next. It is far easier to measure performance and to demonstrate progress to your user. Because each individual development is smaller, you avoid creating those monolithic blocks of code that are reported as 95% complete week after week. Tracer
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 115 | posición 1311-1332 | Añadido el jueves, 20 de junio de 2024 03:53:55

The tracer code approach has many advantages: Users get to see something working early If you have successfully communicated what you are doing (see Topic 52, ​Delight Your Users​), your users will know they are seeing something immature. They won’t be disappointed by a lack of functionality; they’ll be ecstatic to see some visible progress toward their system. They also get to contribute as the project progresses, increasing their buy-in. These same users will likely be the people who’ll tell you how close to the target each iteration is. Developers build a structure to work in The most daunting piece of paper is the one with nothing written on it. If you have worked out all the end-to-end interactions of your application, and have embodied them in code, then your team won’t need to pull as much out of thin air. This makes everyone more productive, and encourages consistency. You have an integration platform As the system is connected end-to-end, you have an environment to which you can add new pieces of code once they have been unit-tested. Rather than attempting a big-bang integration, you’ll be integrating every day (often many times a day). The impact of each new change is more apparent, and the interactions are more limited, so debugging and testing are faster and more accurate. You have something to demonstrate Project sponsors and top brass have a tendency to want to see demos at the most inconvenient times. With tracer code, you’ll always have something to show them. You have a better feel for progress In a tracer code development, developers tackle use cases one by one. When one is done, they move to the next. It is far easier to measure performance and to demonstrate progress to your user. Because each individual development is smaller, you avoid creating those monolithic blocks of code that are reported as 95% complete week after week. Tracer Bullets Don’t Always Hit Their Target Tracer bullets show what you’re hitting. This may not always be the target. You then adjust your aim until they’re on target. That’s the point. It’s the same with tracer code. You use the technique in situations where you’re not 100% certain of where you’re going. You shouldn’t be surprised if your first couple of attempts miss: the user says “that’s not what I meant,’’ or data you need isn’t available when you need it, or performance problems seem likely. So change what you’ve got to bring it nearer the target, and be thankful that you’ve used a lean development methodology; a small body of code has low inertia—it is easy and quick to change. You’ll be able to gather feedback on your application and generate a new, more accurate version quickly and cheaply. And because every major application component is represented in your tracer code, your users can be confident that what they’re seeing is based on reality, not just a paper specification.
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 119 | posición 1348-1350 | Añadido el jueves, 20 de junio de 2024 03:58:03

The distinction is important enough to warrant repeating. Prototyping generates disposable code. Tracer code is lean but complete, and forms part of the skeleton of the final system. Think of prototyping as the reconnaissance and intelligence gathering that takes place before a single tracer bullet is fired. Related
==========
Pragmatic Programmer, The (Thomas, David)
- El marcador en la página 121 | posición 1370 | Añadido el jueves, 20 de junio de 2024 04:01:34


==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 124 | posición 1405-1410 | Añadido el martes, 2 de julio de 2024 22:49:30

Properly used prototypes can save you huge amounts of time, money, and pain by identifying and correcting potential problem spots early in the development cycle—the time when fixing mistakes is both cheap and easy. Related Sections Include Topic 12, ​Tracer Bullets​ Topic 14, ​Domain Languages​ Topic 17, ​Shell Games​ Topic 27, ​Don’t Outrun Your Headlights​ Topic 37, ​Listen to Your Lizard Brain​ Topic 45, ​The Requirements Pit​ Topic 52, ​Delight Your Users​
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 126 | posición 1417-1417 | Añadido el martes, 2 de julio de 2024 22:51:33

The limits of language are the limits of one’s world.
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 126 | posición 1425-1426 | Añadido el martes, 2 de julio de 2024 22:53:05

Program Close to the Problem Domain
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 132 | posición 1534-1538 | Añadido el miércoles, 3 de julio de 2024 23:08:31

External languages have no such restrictions. As long as you can write a parser for the language, you’re good to go. Sometimes you can use someone else’s parser (as Ansible did by using YAML), but then you’re back to making a compromise. Writing a parser probably means adding new libraries and possibly tools to your application. And writing a good parser is not a trivial job. But, if you’re feeling stout of heart, you could look at parser generators such as bison or ANTLR, and parsing frameworks such as the many PEG parsers out there.
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 131 | posición 1531-1532 | Añadido el miércoles, 3 de julio de 2024 23:08:43

The downside of internal domain languages is that you’re bound by the syntax and semantics of that language.
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 130 | posición 1504-1508 | Añadido el miércoles, 3 de julio de 2024 23:08:53

As a result, RSpec and the router code are embedded into the code you run: they are true extensions to your code’s vocabulary. Cucumber and Ansible are read by code and converted into some form the code can use. We call RSpec and the router examples of internal domain languages, while Cucumber and Ansible use external languages. Trade-Offs Between Internal and External Languages
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 130 | posición 1504-1510 | Añadido el miércoles, 3 de julio de 2024 23:09:01

As a result, RSpec and the router code are embedded into the code you run: they are true extensions to your code’s vocabulary. Cucumber and Ansible are read by code and converted into some form the code can use. We call RSpec and the router examples of internal domain languages, while Cucumber and Ansible use external languages. Trade-Offs Between Internal and External Languages In general, an internal domain language can take advantage of the features of its host language: the domain language you create is more powerful, and that power comes for free. For example, you could use some Ruby code to create a bunch of RSpec tests automatically. In this case we can test scores where there are no spares or strikes:
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 132 | posición 1540-1542 | Añadido el miércoles, 3 de julio de 2024 23:10:20

(such as YAML, JSON, or CSV) if you can. If not, look at internal languages. We’d recommend using external languages only in cases where your language will be written by the users of your application.
==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- La subrayado en la página 2 | posición 51-51 | Añadido el viernes, 5 de julio de 2024 23:42:07

«la belleza es aquella razón inefable que por la luz descubrimos en las cosas para ser amadas
==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- La subrayado en la página 2 | posición 51-59 | Añadido el viernes, 5 de julio de 2024 23:51:06

«la belleza es aquella razón inefable que por la luz descubrimos en las cosas para ser amadas, y para crear, porque amor es la eterna voluntad del mundo». I
==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- La subrayado en la página 3 | posición 61-65 | Añadido el sábado, 6 de julio de 2024 01:12:44

Todos los afectos humanos se generan mediante el acto de la copulación y sus preliminares [...] Las parejas bendecidas con imaginación llevan el acto de follar a la altura del intelecto, haciendo que —en su sensual elevación etérea— la lujuria y el amor se conviertan en un delirio poético [...] Follar es la gran fuente que humaniza al mundo.
==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- La subrayado en la página 6 | posición 130-133 | Añadido el lunes, 8 de julio de 2024 23:09:49

Si, por una u otra razón, la psicología y la sociología no hubiesen ignorado la tarea de analizar cuantitativa y cualitativamente la medida de autoritarismo y libertarismo en temperamentos singulares y grupos —para concentrarse en sondeos y tests sobre intención de voto e idoneidad profesional—
==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- La subrayado en la página 7 | posición 160-162 | Añadido el lunes, 8 de julio de 2024 23:15:53

Las mujeres han sido el placer de mi vida. Amaba el coño, pero también a quien lo tenía; me gustaba la mujer con quien follaba, y no sólo el coño donde lo hacía.
==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- El marcador en la página 8 | posición 172 | Añadido el lunes, 8 de julio de 2024 23:20:15


==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- La subrayado en la página 10 | posición 232-232 | Añadido el martes, 9 de julio de 2024 23:34:09

artistas de la imaginación y el cuerpo. Aunque H*l*n parezca convencida, horas o días
==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- La subrayado en la página 14 | posición 313-313 | Añadido el martes, 9 de julio de 2024 23:50:38

la máxima hedonista, que recomienda no perseguir gustos capaces de suscitar disgustos superiores. Es
==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- La subrayado en la página 15 | posición 325-328 | Añadido el martes, 9 de julio de 2024 23:55:26

No cae en la tentación del pelele ni en la del rebuscado, simplemente porque no se enamora de la manera convencional. Como comentaba un sociólogo, «es un triunfo de la mente sobre material sometido al tabú». Con las mujeres, y con los escasos hombres de su vida, conversa y copula; procura evitar cualquier retorcimiento pasional, y jamás se consiente los humanos celos sin sentirse avergonzado, como quien boicotea una fuente de placer hasta convertirla en su opuesto. Su antídoto favorito para estos casos es el trío.
==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- La subrayado en la página 16 | posición 352-356 | Añadido el miércoles, 10 de julio de 2024 00:00:31

¿por qué se abstuvo de volver todo un año? Su texto lo deja bien claro: en un platillo de la balanza estaba la golfa espléndida, sueño cumplido de sus fantasías más exigentes, cuerpo amado y deseado ya a primera vista; en el otro había un precio excesivo, y una aparente falta de aprecio por parte de la mujer. Apartando la tentación masoquista, Walter no duda un instante: pesa más lo negativo; mejor esperar, o renunciar. Pero sólo puede esperar y renunciar aquel que en el fuego de sus pasiones permanece sereno, el que quiere reciprocidad y no se conforma con cualquier cosa, el hombre libre.
==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- La subrayado en la página 16 | posición 362-363 | Añadido el miércoles, 10 de julio de 2024 00:02:33

Estate seguro de que este placer es disfrutado en una forma más pura por los sanos que por los enfermos de amor.
==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- El marcador en la página 16 | posición 364 | Añadido el miércoles, 10 de julio de 2024 00:04:34


==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- La subrayado en la página 18 | posición 407-409 | Añadido el lunes, 15 de julio de 2024 12:10:18

Puede haber amor sin sexo, puede haber actos ajenos al amor y al sexo, pero es imposible que haya verdadero sexo sin amor; hacer sexo es hacer el amor.
==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- El marcador en la página 19 | posición 413 | Añadido el lunes, 15 de julio de 2024 12:13:11


==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 136 | posición 1591-1593 | Añadido el lunes, 15 de julio de 2024 21:35:56

By learning to estimate, and by developing this skill to the point where you have an intuitive feel for the magnitudes of things, you will be able to show an apparent magical ability to determine their feasibility.
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 137 | posición 1598-1599 | Añadido el lunes, 15 de julio de 2024 22:51:40

So the first question you have to ask yourself when someone asks you for an estimate is the context in which your answer will be taken. Do they need high accuracy, or are they looking for a ballpark figure? One of the interesting things
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 138 | posición 1613-1614 | Añadido el lunes, 15 de julio de 2024 22:55:25

The first part of any estimation exercise is building an understanding of what’s being asked.
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 138 | posición 1617-1618 | Añadido el lunes, 15 de julio de 2024 22:55:37

From your understanding of the question being asked, build a rough-and-ready bare-bones mental model.
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 142 | posición 1654-1656 | Añadido el lunes, 15 de julio de 2024 23:01:34

style of estimating with a methodology they called the Program Evaluation Review Technique, or PERT. Every PERT task has an optimistic, a most likely, and a pessimistic estimate.
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 142 | posición 1654-1657 | Añadido el lunes, 15 de julio de 2024 23:01:47

style of estimating with a methodology they called the Program Evaluation Review Technique, or PERT. Every PERT task has an optimistic, a most likely, and a pessimistic estimate. The tasks are arranged into a dependency network, and then you use some simple statistics to identify likely best and worst times for the overall project.
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 142 | posición 1661-1664 | Añadido el lunes, 15 de julio de 2024 23:03:22

Eating the Elephant We find that often the only way to determine the timetable for a project is by gaining experience on that same project. This needn’t be a paradox if you practice incremental development, repeating the following steps with very thin slices of functionality: Check requirements Analyze risk (and prioritize riskiest items earlier) Design, implement, integrate Validate with the users
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 143 | posición 1667-1669 | Añadido el lunes, 15 de julio de 2024 23:04:47

So you complete the coding and testing of the initial functionality and mark this as the end of the first iteration. Based on that experience, you can refine your initial guess on the number of iterations and what can be included in each. The refinement gets better and better each time, and confidence in the schedule grows along with it.
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 143 | posición 1671-1672 | Añadido el lunes, 15 de julio de 2024 23:05:14

Iterate the Schedule with the Code
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 144 | posición 1675-1675 | Añadido el lunes, 15 de julio de 2024 23:06:00

What to Say When Asked for an Estimate You say “I’ll get back to you.”
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 144 | posición 1679-1679 | Añadido el lunes, 15 de julio de 2024 23:06:26

Start keeping a log of your estimates.
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 144 | posición 1679-1680 | Añadido el lunes, 15 de julio de 2024 23:06:38

Start keeping a log of your estimates. For each, track how accurate you turned out to be.
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 144 | posición 1680-1680 | Añadido el lunes, 15 de julio de 2024 23:06:55

your error was greater than 50%, try to find out where your estimate went wrong.
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 144 | posición 1680-1680 | Añadido el lunes, 15 de julio de 2024 23:07:01

your error was greater than 50%, try to find out where your estimate went wrong.
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 147 | posición 1711-1713 | Añadido el lunes, 15 de julio de 2024 23:12:48

Always be on the lookout for better ways of doing things. If you come across a situation where you feel your current tools can’t cut it, make a note to look for something different or more powerful that would have helped. Let need drive your acquisitions. Many
==========
Pragmatic Programmer, The (Thomas, David)
- El marcador en la página 150 | posición 1746 | Añadido el lunes, 15 de julio de 2024 23:18:56


==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- La subrayado en la página 19 | posición 422-424 | Añadido el martes, 16 de julio de 2024 12:43:07

poniendo en práctica trabajo, autoestima, renuncia y paciencia— es la única manera de cumplir las metas placenteras; en otras palabras, que no hay oposición alguna entre pulsiones naturales y sentido del límite, sino complementariedad.
==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- La subrayado en la página 17 | posición 373-374 | Añadido el martes, 16 de julio de 2024 12:45:55

Sensación enjuicia el Esfuerzo: el continuo eco de ese juicio son los ánimos, que se trenzan creando la personalidad específica de cada uno,
==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- La subrayado en la página 17 | posición 376-380 | Añadido el martes, 16 de julio de 2024 12:46:32

Como los ánimos no se eligen, la deliberación reprime o estimula algo nacido sin su concurso; y la represión o el estímulo no son tampoco actos enteramente libres, porque cada ánimo conlleva la cualidad del gusto o el disgusto. Placer es sensación desprovista de dolor, esfuerzo consentido; dolor es sensación desprovista de placer, que desgarra como un combate sin recompensa.
==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- La subrayado en la página 17 | posición 380-381 | Añadido el martes, 16 de julio de 2024 12:46:42

Gracias al placer los vivientes conocen la alegría, y gracias a la alegría cobran nuevas fuerzas para seguir viviendo.
==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- La subrayado en la página 17 | posición 380-382 | Añadido el martes, 16 de julio de 2024 12:46:49

Gracias al placer los vivientes conocen la alegría, y gracias a la alegría cobran nuevas fuerzas para seguir viviendo. El dolor parece todo lo contrario —engendra tristeza, que reduce la capacidad de obrar—, si bien tiene tanto o más valor de supervivencia.
==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- La subrayado en la página 17 | posición 380-383 | Añadido el martes, 16 de julio de 2024 12:47:08

Gracias al placer los vivientes conocen la alegría, y gracias a la alegría cobran nuevas fuerzas para seguir viviendo. El dolor parece todo lo contrario —engendra tristeza, que reduce la capacidad de obrar—, si bien tiene tanto o más valor de supervivencia. Evita que nos perdamos en la sensación, haciéndonos conscientes de que esto o aquello hiere, mutila, merma; así espolea una y otra vez, moviendo a no aceptar lo inmediato.
==========
microservices-on-aws (1)  
- El marcador en la página 6 | Añadido el martes, 16 de julio de 2024 17:00:32


==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- El marcador en la página 21 | posición 463 | Añadido el martes, 16 de julio de 2024 23:31:08


==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- La subrayado en la página 27 | posición 591-592 | Añadido el miércoles, 17 de julio de 2024 23:25:06

cuanto más insista alguien en copular con quien le ha proporcionado poca o nula satisfacción, peor rendimiento ofrecerán sus genitales.
==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- La subrayado en la página 27 | posición 607-609 | Añadido el miércoles, 17 de julio de 2024 23:28:33

Tanto en una sociedad represiva como en una sociedad no represiva, la impotencia es bastante más remediable que la falta de encanto.
==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- El marcador en la página 27 | posición 601 | Añadido el miércoles, 17 de julio de 2024 23:29:35


==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- La subrayado en la página 28 | posición 609-612 | Añadido el jueves, 18 de julio de 2024 19:22:16

¿Qué hay de potencialmente asocial en el encanto, el atractivo? En principio, sólo el aristocratismo de la selección natural, donde las personas alcanzan el grado de placer lúbrico que merecen. El merecimiento depende en buena medida de factores como juventud o belleza corpórea, pero en mayor medida aún de carácter y disposición, ya que el deseo atrae al deseo, y la satisfacción deriva finalmente de la sinceridad con la cual resulta perseguida
==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- La subrayado en la página 34 | posición 743-745 | Añadido el jueves, 18 de julio de 2024 23:44:46

La capacidad de gozar está en función del deseo de gozar, de la franqueza con la cual se persigue: querer es poder allí. Desde la perspectiva de su sexualidad, los seres humanos no se dividen en potentes e impotentes sino en sensuales, menos sensuales e insensibles.
==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- La subrayado en la página 34 | posición 746-749 | Añadido el jueves, 18 de julio de 2024 23:45:48

la moralidad sexual tradicional sirve el interés de los poco sensuales y los insensibles, permitiéndoles presentar sus particulares casos como modelo de honestidad y virtud. Son ellos los beneficiarios de una ética apoyada sobre el control del otro (cuando la ética es por definición autocontrol), pues sólo las almas venusianas logran impedir que lo erótico se fosilice bajo relaciones de dominio;
==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- El marcador en la página 35 | posición 761 | Añadido el jueves, 18 de julio de 2024 23:49:39


==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- La subrayado en la página 36 | posición 775-775 | Añadido el viernes, 19 de julio de 2024 22:32:26

Todos somos madera, y el fuego es eterno.
==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- La subrayado en la página 38 | posición 821-824 | Añadido el viernes, 19 de julio de 2024 22:41:50

Al decir que el sentido humano de los genitales es el placer indicamos, de hecho, que la fuente última del placer es la libertad, porque la voluptuosidad sexual es una conquista evolutiva propia de seres libres.
==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- El marcador en la página 40 | posición 860 | Añadido el viernes, 19 de julio de 2024 23:10:44


==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- El marcador en la página 44 | posición 963 | Añadido el lunes, 22 de julio de 2024 22:19:59


==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- El marcador en la página 48 | posición 1037 | Añadido el lunes, 22 de julio de 2024 22:55:44


==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- La subrayado en la página 48 | posición 1045-1048 | Añadido el lunes, 22 de julio de 2024 22:57:12

Pienso, pues, que cuerpo y alma son una misma cosa, que toda salud o dolencia es básicamente psicosomática, y que cuidar la vida de esta unidad inseparable equivale a proteger sus fuentes de alegría. Entendida en sentido spinozista —como aquello que aumenta la capacidad de obrar—, la alegría es imposible si no nos aplicamos a vencer el miedo, manifestación primaria de la tristeza, que reduce nuestra capacidad de obrar.
==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- El marcador en la página 37 | posición 811 | Añadido el miércoles, 24 de julio de 2024 21:28:41


==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- La subrayado en la página 49 | posición 1063-1064 | Añadido el miércoles, 24 de julio de 2024 21:36:38

luchamos a brazo partido con el miedo o nos conformaremos con una existencia reducida, donde ser y nada resultan por completo intercambiables.
==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- La subrayado en la página 49 | posición 1065-1066 | Añadido el miércoles, 24 de julio de 2024 21:37:09

et propter vitam vivendi, perdere causas, que se traduce por: «y para seguir viviendo, perder las razones que justifican vivir».
==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- La subrayado en la página 49 | posición 1072-1074 | Añadido el miércoles, 24 de julio de 2024 21:39:27

la envidia, definida por Spinoza como ánimo en cuya virtud alguien se alegra por el mal ajeno, y se entristece por su bien (una envidia que en francés se dice jalousie, con un término cuyo significado incluye inseparablemente los celos).
==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- La subrayado en la página 49 | posición 1079-1080 | Añadido el miércoles, 24 de julio de 2024 21:40:44

Sólo hubo y hay tiranos porque otros prefirieron y prefieren rendirse al miedo antes que correr el riesgo de luchar.
==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- La subrayado en la página 50 | posición 1084-1087 | Añadido el miércoles, 24 de julio de 2024 21:42:58

En vez de vencer al miedo, el temerario hace sabotaje al sentido común y al instinto de conservación, granjeándose una cantidad de dolor normalmente proporcional a su imprudencia.
==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- La subrayado en la página 49 | posición 1079-1082 | Añadido el miércoles, 24 de julio de 2024 21:43:07

Sólo hubo y hay tiranos porque otros prefirieron y prefieren rendirse al miedo antes que correr el riesgo de luchar. Sin embargo, ser mortales nos asegura que, en última instancia, nadie ni nada podrá esclavizarnos indefinidamente; de ahí que la más extrema crueldad sea impedir esa liberación, en los casos donde el suicidio no responde a un arrebato pasajero.
==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- La subrayado en la página 52 | posición 1140-1141 | Añadido el miércoles, 24 de julio de 2024 21:55:16

el segundo de los principios, a saber: que la salud es básicamente un ánimo —la alegría—, cuya presencia incrementa la capacidad de obrar. La
==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- La subrayado en la página 53 | posición 1146-1151 | Añadido el miércoles, 24 de julio de 2024 21:56:30

Este noble propósito de los hipocráticos se complementaba con la premisa primum non nocere («ante todo, no dañar»), y con una noción del buen ánimo (la eu-phoría) situada en los antípodas del puritanismo. Se atribuye al propio Hipócrates haber dicho: «Conviene dormir sobre algo blando, entregarse al coito cuando se presente ocasión, embriagarse ocasionalmente.» Galeno, siete siglos después, sigue fiel a estas directrices, y define al médico como «servidor de la naturaleza individual
==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- La subrayado en la página 54 | posición 1176-1178 | Añadido el miércoles, 24 de julio de 2024 22:03:13

Movidos a ello por una lógica política de control, y por intereses profesionales, los hipocráticos pasan así del destino previsto por Galeno —«servidores de la naturaleza individual»— al de comisarios para una salud tan impuesta como cargada de ideología,
==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- La subrayado en la página 54 | posición 1181-1183 | Añadido el miércoles, 24 de julio de 2024 22:03:20

casualidad que el primer nombre de la psiquiatría fuese medizinal polizei.
==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- El marcador en la página 55 | posición 1202 | Añadido el miércoles, 24 de julio de 2024 22:07:34


==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- El marcador en la página 58 | posición 1251 | Añadido el miércoles, 24 de julio de 2024 22:16:10


==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- La subrayado en la página 60 | posición 1309-1310 | Añadido el domingo, 28 de julio de 2024 17:28:47

Nos ha tocado vivir una época donde la autoridad de la fe pasó a ser autoridad de la ciencia y, a pesar de algunos inconvenientes y amenazas nuevas, estamos en el mejor de los mundos conocidos.
==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- La subrayado en la página 62 | posición 1354-1356 | Añadido el domingo, 28 de julio de 2024 17:45:37

El et propter vitam vivendi perdere causas —recuerden: «y, por seguir viviendo, perder las razones que justifican vivir»— me tiene convencido.
==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- La subrayado en la página 62 | posición 1354-1361 | Añadido el domingo, 28 de julio de 2024 17:46:38

El et propter vitam vivendi perdere causas —recuerden: «y, por seguir viviendo, perder las razones que justifican vivir»— me tiene convencido. Prefiero, pues, el placer a la voluntad. Pero dejar de beber unos días, o un año justo, hacer algún ejercicio agotador cotidianamente, elegir o preparar buenos alimentos, me proporciona una estupenda sensación de amor propio y cuido, que equilibra un poco los momentos de autodesprecio y desidia. El organismo habla elocuentemente —a través de mil síntomas y hasta en sueños—, siendo tarea nuestra escuchar esas expresiones, y entender las más perentorias. Poco remedio tiene, desde mi perspectiva, quien recurre por principio a otros para ese entendimiento.
==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- La subrayado en la página 63 | posición 1365-1369 | Añadido el domingo, 28 de julio de 2024 17:48:27

En todo momento y en todo lugar del cambiante paisaje están escondidas fuentes primordiales de energía, y por debajo de los fenómenos fugaces hay manantiales de abundancia [...] El soberano que dispensa una salud extraída de residencias inexpugnables no es el médico, sino el enfermo. Y él, el enfermo, sólo está perdido cuando pierde acceso a esas fuentes.
==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- La subrayado en la página 66 | posición 1432-1436 | Añadido el domingo, 28 de julio de 2024 17:59:52

En realidad, no cae dentro de las prerrogativas del gobierno ni prohibir ni legalizar algo muy anterior a su aparición. Legítima y honradamente, velará por la ciudadanía manteniendo la transparencia de un mercado libre: si pretende someter a control público conductas por naturaleza privadas, promoverá privilegios y lucros indebidos.
==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- La subrayado en la página 68 | posición 1476-1481 | Añadido el domingo, 28 de julio de 2024 18:07:03

¿Por qué sucumbe esta diferencia? A mi juicio, porque cada vez pensamos menos en nosotros mismos como seres libres y, por tanto, responsables de sus actos, para lo bueno y para lo malo. Al contrario, cada vez gusta más pensar que eso es lo de menos, y que nuestras flaquezas pueden ser suplidas con recursos técnicos. Al sentirse tentado por algo, no se le ocurre al urbanícola actual plantear semejante cosa en la esfera ética, como asunto radicalmente suyo y de puertas adentro.
==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- La subrayado en la página 72 | posición 1558-1562 | Añadido el domingo, 28 de julio de 2024 18:24:07

Planteemos el juego más allá de sus modalidades prosaicas, con dados, cartas, máquinas tragaperras o bingos. Involuntaria al comienzo y al final, así como en tantos tramos intermedios, nuestra vida siempre será apuesta y pulso con el riesgo. Si tratamos de restringir esta apuesta caeremos en una glorificación del trabajo enajenado, porque el trabajo creativo, vocacional, es también juego, relación libre con algún objeto, nunca exenta de altos riesgos.
==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- La subrayado en la página 73 | posición 1577-1580 | Añadido el domingo, 28 de julio de 2024 18:27:47

Hay que mandar sobre uno mismo, y extraer de nuestra alma los tesoros de generosidad, lucidez y fuerza que contiene. Sólo así resistiremos una presión combinada: la de nuestra propia flaqueza, por una parte, y aquella que los mal nacidos despliegan para explotar usureramente la energía ajena.
==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- El marcador en la página 74 | posición 1581 | Añadido el domingo, 28 de julio de 2024 18:28:29


==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- La subrayado en la página 74 | posición 1606-1607 | Añadido el martes, 30 de julio de 2024 21:53:33

el quién lo es por medio de su qué, y el qué por medio de su quién.
==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- La subrayado en la página 74 | posición 1606-1609 | Añadido el martes, 30 de julio de 2024 21:56:01

el quién lo es por medio de su qué, y el qué por medio de su quién. Desdoblado en algo que siente y algo sentido, el ánimo es extrañeza o afán de conocimiento, del mismo modo que no desdoblado es simple vida, y así como tiende el conocimiento a separar, analizando, tiende lo vivo a incorporar, para seguir existiendo.
==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- La subrayado en la página 78 | posición 1671-1674 | Añadido el martes, 30 de julio de 2024 22:12:13

Uno llega a saber por experiencia lo que significa «Dios es amor», sintiendo que a pesar de la muerte y el sufrimiento todo está, de algún modo y en última instancia, perfectamente en orden. Este sentimiento es lo que antes llamé ánimo objetivo, y no conozco otra salud que hallarse en contacto con él.
==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- La subrayado en la página 79 | posición 1711-1712 | Añadido el martes, 30 de julio de 2024 22:20:45

Quien busque lo conocido no busca el conocimiento.
==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- El marcador en la página 80 | posición 1738 | Añadido el martes, 30 de julio de 2024 22:21:01


==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- La subrayado en la página 81 | posición 1777-1778 | Añadido el miércoles, 31 de julio de 2024 18:37:18

Es lo que Epicteto llamaba «autonomía de la decisión moral».
==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- La subrayado en la página 82 | posición 1784-1785 | Añadido el miércoles, 31 de julio de 2024 18:40:03

comentaba Aristóteles «que las sustancias singulares son dioses, lo divino abarca a la naturaleza entera, y el resto fue añadido luego, para seducir al vulgo y servir intereses»
==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- La subrayado en la página 82 | posición 1787-1806 | Añadido el miércoles, 31 de julio de 2024 18:46:53

Ante tantos males del mundo —empezando por la larga vida de inquisidores y otros verdugos—, uno no acaba de entender bien qué gana lo divino siendo omnipotente; según Spinoza, tras ello está «querer que Dios no sea Dios y, por tanto, querer entristecerse». Pero la tristeza sirvió a algunos para mandar todopoderosamente, por delegación del Todopoderoso, decidiendo que la eutanasia era un crimen de lesa majestad, un desafío a la omnipotencia divina. De ahí que desde la alta Edad Media se castigue al suicida, tanto frustrado como consumado; los cuerpos de los muertos son expuestos a los buitres, sus bienes se confiscan (a favor de la ofendida Iglesia), y sus nombres se tachan de los registros por infames; los suicidas frustrados hacen frente al mismo saqueo, junto con picota y galeras, o —en comarcas benignas— con destierro a perpetuidad. Esta normativa pervivirá en el mundo occidental hasta ser derogada por los revolucionarios de América y Francia, aunque el pudiente llevara siglos recibiendo funerales y sepultura cristianos, si su familia alegaba que antes de perpetrar el pecaminoso acto sufrió un ataque de locura. No sé qué ofende más profundamente a la condición humana: creer que la eutanasia es un crimen contra lo divino, o creer que deriva de un entendimiento disminuido. En cualquier caso, quienes apoyan su castigo pertenecen a una secta que durante casi dos milenios ha torturado y exterminado a millones de personas, basándose en su manera de pensar; herejía traduce airesis, que significa «manera de pensar, opinión». Malas credenciales tiene esa secta para presentarse como embajador universal de la vida. El presente nos ha devuelto a una perspectiva pagana, más o menos agnóstica ante los venerables dioses. En línea con ello, un número colosal de adultos reclama otra vez lo inalienablemente suyo. Suyo es que —allí donde no resulte súbita— la muerte pueda elevarse a un acto de excelencia ética, aligerado de sufrimientos remediables; no se me ocurre legado más benévolo para los demás que una despedida a tiempo, donde el que se va dice a quienes se quedan algo semejante a: «no os preocupéis, esto es más sencillo de lo que parece, vivid sin miedo».
==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- La subrayado en la página 83 | posición 1815-1818 | Añadido el miércoles, 31 de julio de 2024 18:51:07

La lección de los antiguos, que nosotros podríamos transmitir a nuestros hijos, es no detenerse en miserias hipocondríacas, y custodiar la muerte como garantía perpetua de una vida libre. Lejos de interrumpir la libertad, poder suicidarnos —y estar prestos a ello, si llegara el caso— es lo único que pone límites infranqueables a cualquier tiranía.
==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- La subrayado en la página 83 | posición 1820-1821 | Añadido el miércoles, 31 de julio de 2024 18:51:50

«habrá de morir igualmente, y dejando atrás una vida indigna».
==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- El marcador en la página 84 | posición 1822 | Añadido el miércoles, 31 de julio de 2024 18:52:02


==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- La subrayado en la página 90 | posición 1970-1971 | Añadido el sábado, 3 de agosto de 2024 18:18:39

«teodicea», nombre atribuido a la investigación racional sobre el ser divino.
==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- La subrayado en la página 91 | posición 1984-1986 | Añadido el sábado, 3 de agosto de 2024 18:20:57

Pero no más que lo fueron las glaciaciones. La solución de esa amenaza, y de tantas otras, está en que se fortalezca la voluntad soberana de la persona singular
==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- La subrayado en la página 90 | posición 1980-1986 | Añadido el sábado, 3 de agosto de 2024 18:21:08

nuevo Moisés». A la pregunta sobre la diferencia entre sus conceptos del bosque y el desierto repuso: «El bosque es la dimensión de libertad donde se atrinchera el hombre cuando es perseguido por la ley positiva. El desierto es la dimensión donde resisten los llamados al concepto filosófico.» Naturalmente, no son residencias incompatibles. ¿Y en qué grado es grave, o irreversible, la catástrofe ecológica? «Alarmante, incluso muy alarmante. Pero no más que lo fueron las glaciaciones. La solución de esa amenaza, y de tantas otras, está en que se fortalezca la voluntad soberana de la persona singular
==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- La subrayado en la página 91 | posición 1987-1992 | Añadido el sábado, 3 de agosto de 2024 18:21:59

¿Qué puede decir de la eutanasia? «Es un capítulo difícil, que cada cual debe resolver por sí mismo. Sin embargo, el suicidio es evidentemente un capital de la humanidad. Montherlant se pegó un tiro inmediatamente después de escribir este pensamiento.» ¿Y de la muerte de Dios? «Prefiero emplear la expresión de Léon Bloy: Dios se retira. O se acerca. Eso depende en buena medida del mito que arraigue. El mito no es ficción, ni historia ocurrida en el pasado, sino realidad intemporal que se reitera en la historia.»
==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- La subrayado en la página 91 | posición 1994-1996 | Añadido el sábado, 3 de agosto de 2024 18:22:36

«Para el hombre sano la mejor receta es evitar a los médicos, confiar en la verdad de su propio cuerpo, pero también prestar oídos a aquello que los médicos saben.»
==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- La subrayado en la página 92 | posición 2004-2013 | Añadido el sábado, 3 de agosto de 2024 18:26:52

«Las drogas tienen un gran destino, señor. Un destino tan alto, o más alto, que el que tuvieron durante el paganismo clásico. Pero la ebriedad es tanto más fructífera, espiritualmente, cuanto más tiempo medie entre los acercamientos. Una vez al mes es mejor que una vez a la semana, y una vez al año mejor que una vez al mes. No puedo coincidir con Albert [Hofmann], ni con Huxley, cuando trazan una frontera entre drogas, como si unas fuesen por fuerza fuente de miseria y otras de conocimiento. Asimilar el vino —que ahora bebemos tan apaciblemente— produjo grandes convulsiones en la Antigüedad. Ahí están Las bacantes de Eurípides.» Pero ¿qué representa la cruzada? «Una forma de moralidad perversa, una estupidez... Es evidente, y ya lo he dicho en diversas ocasiones, que no deberíamos admitir la influencia cada vez mayor del Estado sobre la medicina, con pretextos sociales.»
==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- La subrayado en la página 96 | posición 2101-2119 | Añadido el sábado, 3 de agosto de 2024 18:40:37

¿Le importaría hablar de lo que allí llama «metáfora del transmisor-receptor»? —Si un objeto refleja ondas electromagnéticas con una longitud de 0,7 micrómetros lo llamamos azul, y si se trata de ondas con una longitud de 0,4 milésimas de milímetro lo llamamos rojo. Esto significa que la percepción del color es un evento puramente psicológico, subjetivo, que acontece en el espacio interno de un individuo, en la pantalla que lleva dentro. Lo mismo sucede con el mundo acústico, y con el campo de la sensación en términos amplios. Basta por eso alterar la conciencia individual —usando medios químicos, por ejemplo— para que emerja una realidad distinta, no familiar. Sería absurdo suponer que esa alteración en el «receptor» ha creado una modificación en el «transmisor» o mundo externo, que es sólo un continuo materia-energía. ¿Me explico claramente? —No aún en las consecuencias. Parece una forma actualizada del idealismo alemán clásico. —Pero no pretendo decir que el entendimiento conforme el mundo objetivo, sino extraer dos conclusiones básicas. La primera es que nuestra realidad no posee un estado fijo, sino una experiencia momentánea; por eso un niño lastrado con una escasa carga de memoria percibe el mundo más intensamente que un adulto. La segunda conclusión es que jamás sobrevaloraremos el poder cosmogónico de los humanos; cada individuo es un creador que debe reinventar de nuevo su propio mundo. De una y otra cosa resulta que nuestra libertad —y nuestra responsabilidad— dependen directamente de nuestra capacidad para seleccionar lo que queremos recibir del programa infinito ofrecido por el universo.
==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- La subrayado en la página 99 | posición 2158-2168 | Añadido el sábado, 3 de agosto de 2024 18:47:59

Pero ¿cabe sentir algo así practicando el erotismo, por ejemplo? —Pocas cosas necesitan los humanos tanto como una ciencia y una cultura del placer, que permitan rescatar la sexualidad de su estatuto subterráneo, o de su empleo como reclamo publicitario. Entendámonos: la nutrición es de suma importancia para el espíritu. Y ningún alimento le es tan básico como el amor en todas sus formas, empezando por la carnal. La cultura y la ciencia del placer se fundarán sobre afrodisíacos, o no llegarán a existir fuera de pequeños focos periféricos. Hasta Tomás de Aquino reconoció que existimos para ser dichosos: ultimo finis vitae beatitudo est. Pero conspira contra esa finalidad cualquier oposición entre cielo y tierra, alma y cuerpo, naturaleza y espíritu. Me gusta mucho una definición que leí de la belleza como promesa de dicha. La belleza es siempre un sentimiento de acuerdo, una conciencia que supera la escisión del sujeto y el objeto.
==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- La subrayado en la página 99 | posición 2154-2155 | Añadido el sábado, 3 de agosto de 2024 18:48:12

Llamo «místico» al maravillarse, a la plenitud de sentido que nos embarga porque sí, quizá ante algo insignificante, a veces hasta el punto de hacernos llorar de alegría.
==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- La subrayado en la página 99 | posición 2157-2158 | Añadido el sábado, 3 de agosto de 2024 18:48:18

Experiencia mística es sinónimo de belleza conmovedora.
==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- La subrayado en la página 98 | posición 2138-2139 | Añadido el sábado, 3 de agosto de 2024 18:49:34

nuestras grandes ciudades. En ellas parece especialmente evidente, necesario, el contraste entre uno mismo y el mundo exterior.
==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- La subrayado en la página 98 | posición 2138-2141 | Añadido el sábado, 3 de agosto de 2024 18:49:56

nuestras grandes ciudades. En ellas parece especialmente evidente, necesario, el contraste entre uno mismo y el mundo exterior. Las sensaciones de una realidad dividida acompañan a la conciencia cotidiana allí donde impera la civilización tecnológica, y esas sensaciones morbosas ejercen un fuerte influjo en la literatura y el arte modernos.
==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- La subrayado en la página 98 | posición 2145-2146 | Añadido el sábado, 3 de agosto de 2024 18:50:17

Lo que se llama función clorofílica es simplemente el matrimonio entre la Tierra y el Sol, un proceso de asombrosa sencillez y eficacia, que funda el ciclo vital.
==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- La subrayado en la página 98 | posición 2148-2150 | Añadido el sábado, 3 de agosto de 2024 18:50:33

Lo necesario es que cada cual busque dentro de sí una experiencia propiamente mística, la experiencia de la vida en su unidad.
==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- La subrayado en la página 100 | posición 2172-2178 | Añadido el sábado, 3 de agosto de 2024 18:54:57

emplearan sustancias capaces de alterar a fondo la actitud del «receptor». —Se supone que el «emisor» es Dios. —Siempre que este concepto no se emplee para embaucar. Podemos llamarlo Creación: es lo que se revela en la experiencia mística. Sea cual fuere su pretexto —un paraje, un gesto, una caricia—, esa experiencia nos sumerge en una realidad que expresa amor. Su lenguaje es la historia natural, el proceso del mundo.
==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- La subrayado en la página 99 | posición 2169-2171 | Añadido el sábado, 3 de agosto de 2024 18:56:05

El genio griego intentó prevenir lo que se sigue de una realidad dividida, complementando el concepto apolíneo del mundo con la experiencia dionisíaca, y aboliendo periódicamente el dualismo mediante ceremonias de ebriedad extática.
==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- La subrayado en la página 100 | posición 2183-2188 | Añadido el sábado, 3 de agosto de 2024 18:56:47

Creer es propio del que no se atreve a intentar percibir. Cuando se suspende el velo de rutinas aparece el «espíritu de la verdad» mencionado por el cuarto Evangelio. En esencia, el espíritu de la verdad nos hace comprender que la razón objetiva, los otros y yo, somos uno. Jesús es una criatura divina, como nosotros, y hablar del superhombre es el modo más directo de decir que necesitamos crecer. La religión común debería anclarse sobre el ciclo vital, que, como antes sugerí, es un matrimonio del cielo y la tierra.
==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- La subrayado en la página 100 | posición 2190-2197 | Añadido el sábado, 3 de agosto de 2024 18:57:16

La LSD no es una droga como algunas otras. —¿No? —Es inútil intentar enturbiar nada con ella. Ni el engaño propio ni el ajeno encuentran campo para desarrollarse. Los pueblos que siguen comulgando periódicamente con sustancias afines se preparan y purifican de algún modo (abluciones, ayuno, otras abstinencias) antes de suspender lo rutinario y decidirse a viajar. No es un pasatiempo, y quien incumpla la regla se arriesga a una experiencia aterradora.
==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- La subrayado en la página 102 | posición 2237-2239 | Añadido el sábado, 3 de agosto de 2024 19:02:23

La frontera entre lo útil, lo inútil y lo perjudicial depende evidentemente de las dosis. Y no sólo de dosis singulares, sino de su frecuencia por unidad de tiempo.
==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- La subrayado en la página 103 | posición 2251-2253 | Añadido el sábado, 3 de agosto de 2024 19:05:52

El placer quiere eternidad. Para los goces, podríamos atenernos al espíritu como naturaleza.
==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- La subrayado en la página 100 | posición 2197-2202 | Añadido el sábado, 3 de agosto de 2024 19:07:12

Graves llamó «impiedad» al uso frívolo de fármacos visionarios, y Michaux dijo que el riesgo era «perder el alma». Pero Huxley insistió en que los viajes aterradores podían ser espiritualmente tan útiles como los beatíficos. —Eso depende de las personas. Estoy con Pasteur cuando admitía el papel del azar en los hallazgos, reconociendo al mismo tiempo que sólo favorecen a los espíritus preparados.
==========
Retrato del libertino (2017 nº 8) (Spanish Edition) (Escohotado, Antonio)
- La subrayado en la página 101 | posición 2202-2203 | Añadido el sábado, 3 de agosto de 2024 19:07:37

La toxicidad —es decir, la proporción entre dosis activa y dosis mortal— no ha llegado todavía a determinarse en el caso de la LSD,
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 6 | posición 59-61 | Añadido el sábado, 3 de agosto de 2024 19:13:44

In fact, many evolutionary biologists now accept the theory that humans developed their higher-order thinking abilities specifically because they lived in complex social groups.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 7 | posición 72-75 | Añadido el sábado, 3 de agosto de 2024 19:16:22

They found a clear correlation between substantive and deep discussions and greater well-being and happiness. It’s something you’ve probably suspected or even felt before, but being vulnerable and open with others is a deeply satisfying activity on many levels.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 9 | posición 113-115 | Añadido el sábado, 3 de agosto de 2024 19:22:23

Though it might seem counterintuitive, preparing well and making deliberate efforts to perform better in natural conversation can actually make you more spontaneous and relaxed.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 11 | posición 146-151 | Añadido el sábado, 3 de agosto de 2024 19:30:03

A 2014 study by Epley and Schroeder divided commuters on trains and buses into three groups—the first was instructed to interact with a stranger near them, the second to keep to themselves, and the third to commute as normal. Even though participants in each group predicted feeling more positive if they kept to themselves, the outcome of the experiment was the opposite. At the end of their ride, the group of commuters who connected with a stranger reported a more positive experience than those who remained disconnected. It seems we feel that only awkwardness will ensue with a stranger, when instead an unexpected connection creates good vibrations.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 12 | posición 155-158 | Añadido el sábado, 3 de agosto de 2024 19:31:01

These studies have two main findings. First, we tend to think or assume we’re better off keeping to ourselves than having short interactions with strangers. Second, we’re wrong about the first point.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 12 | posición 155-160 | Añadido el sábado, 3 de agosto de 2024 19:31:24

These studies have two main findings. First, we tend to think or assume we’re better off keeping to ourselves than having short interactions with strangers. Second, we’re wrong about the first point. The simple act of engaging people in short bursts has been shown to make us happier and more inclined to be social, and it will also help us mentally and psychologically warm up to be our best in conversations and small talk no matter the context.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 13 | posición 171-174 | Añadido el sábado, 3 de agosto de 2024 19:33:43

We need to engage in more short interactions—or what researcher Steven Handel calls “ten-second relationships”—with others, because they have the potential to boost our moods, change our perspectives, and warm us up socially. It’s as though these interactions keep the social engagement engine running.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 13 | posición 178-178 | Añadido el sábado, 3 de agosto de 2024 19:34:31

bias to assume that you prefer keeping to yourself.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 13 | posición 178-178 | Añadido el sábado, 3 de agosto de 2024 19:35:03

just remind yourself that you have a natural bias to assume that you prefer keeping to yourself.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 14 | posición 191-197 | Añadido el sábado, 3 de agosto de 2024 19:37:41

with on your commute, or stand beside in elevators? Greet at least one of those people with “Good morning” and offer either a compliment (“Nice coat. The fabric looks cozy.”), an observation (“The sky’s cloudless today. Looks like the showers are letting up.”), or a question (“I see you’re reading John Grisham. Which of his novels is your favorite?”).
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 16 | posición 225-227 | Añadido el sábado, 3 de agosto de 2024 19:41:34

So make it a goal to initiate and create a ten-second interaction with a stranger each day, and especially on the way to functions, events, and parties. This will warm you up for conversation and build the habit of being interested in people.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 17 | posición 238-240 | Añadido el sábado, 3 de agosto de 2024 19:43:39

To warm up your conversation and small talk skills, you just need to do something we’ve done almost every day in our lives: read out loud.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- El marcador en la página 22 | posición 339 | Añadido el miércoles, 7 de agosto de 2024 18:03:26


==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 25 | posición 399-406 | Añadido el miércoles, 7 de agosto de 2024 23:35:51

Name ten things you cannot live without—don’t take this question too literally. It is asking about your interests, not household staples.  Staying Current: What are the top five current events of the week and month? Learn the basics and develop an opinion and stance on them.  What are four funny personal situations from the past week? Be able to summarize them as a brief story.  What are the four most interesting things you’ve read or heard about in the past week? Be able to summarize them as a brief story.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 25 | posición 384-406 | Añadido el miércoles, 7 de agosto de 2024 23:36:01

Personal: What are your hobbies? Anything notable?  What’s your biggest passion or interest outside of work? Anything notable?  Where are you from? Anything notable?  How long have you lived at your current location and worked at your current job? Anything notable?  Where did you go to school and what subjects and activities were you involved in? Anything notable?  What do you do for work? Anything notable?  Notable: What are your five most unique experiences?  What are your five most personally significant accomplishments?  What are ten strengths—things you are above average at, no matter how big or small.  Name ten places you have traveled in the past five years.  Name the past five times you have gone out to a social event.  Name ten things you cannot live without—don’t take this question too literally. It is asking about your interests, not household staples.  Staying Current: What are the top five current events of the week and month? Learn the basics and develop an opinion and stance on them.  What are four funny personal situations from the past week? Be able to summarize them as a brief story.  What are the four most interesting things you’ve read or heard about in the past week? Be able to summarize them as a brief story.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 25 | posición 383-406 | Añadido el miércoles, 7 de agosto de 2024 23:36:09

Anything notable?  Personal: What are your hobbies? Anything notable?  What’s your biggest passion or interest outside of work? Anything notable?  Where are you from? Anything notable?  How long have you lived at your current location and worked at your current job? Anything notable?  Where did you go to school and what subjects and activities were you involved in? Anything notable?  What do you do for work? Anything notable?  Notable: What are your five most unique experiences?  What are your five most personally significant accomplishments?  What are ten strengths—things you are above average at, no matter how big or small.  Name ten places you have traveled in the past five years.  Name the past five times you have gone out to a social event.  Name ten things you cannot live without—don’t take this question too literally. It is asking about your interests, not household staples.  Staying Current: What are the top five current events of the week and month? Learn the basics and develop an opinion and stance on them.  What are four funny personal situations from the past week? Be able to summarize them as a brief story.  What are the four most interesting things you’ve read or heard about in the past week? Be able to summarize them as a brief story.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 25 | posición 377-406 | Añadido el miércoles, 7 de agosto de 2024 23:36:16

something entertaining to fill the silence. Daily life: What did you do over the weekend? Anything notable?  How is your week/day going? Anything notable?  How is your family/significant other? Anything notable?  How is work going? Anything notable?  Personal: What are your hobbies? Anything notable?  What’s your biggest passion or interest outside of work? Anything notable?  Where are you from? Anything notable?  How long have you lived at your current location and worked at your current job? Anything notable?  Where did you go to school and what subjects and activities were you involved in? Anything notable?  What do you do for work? Anything notable?  Notable: What are your five most unique experiences?  What are your five most personally significant accomplishments?  What are ten strengths—things you are above average at, no matter how big or small.  Name ten places you have traveled in the past five years.  Name the past five times you have gone out to a social event.  Name ten things you cannot live without—don’t take this question too literally. It is asking about your interests, not household staples.  Staying Current: What are the top five current events of the week and month? Learn the basics and develop an opinion and stance on them.  What are four funny personal situations from the past week? Be able to summarize them as a brief story.  What are the four most interesting things you’ve read or heard about in the past week? Be able to summarize them as a brief story.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 25 | posición 379-406 | Añadido el miércoles, 7 de agosto de 2024 23:36:23

Daily life: What did you do over the weekend? Anything notable?  How is your week/day going? Anything notable?  How is your family/significant other? Anything notable?  How is work going? Anything notable?  Personal: What are your hobbies? Anything notable?  What’s your biggest passion or interest outside of work? Anything notable?  Where are you from? Anything notable?  How long have you lived at your current location and worked at your current job? Anything notable?  Where did you go to school and what subjects and activities were you involved in? Anything notable?  What do you do for work? Anything notable?  Notable: What are your five most unique experiences?  What are your five most personally significant accomplishments?  What are ten strengths—things you are above average at, no matter how big or small.  Name ten places you have traveled in the past five years.  Name the past five times you have gone out to a social event.  Name ten things you cannot live without—don’t take this question too literally. It is asking about your interests, not household staples.  Staying Current: What are the top five current events of the week and month? Learn the basics and develop an opinion and stance on them.  What are four funny personal situations from the past week? Be able to summarize them as a brief story.  What are the four most interesting things you’ve read or heard about in the past week? Be able to summarize them as a brief story.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 26 | posición 416-417 | Añadido el miércoles, 7 de agosto de 2024 23:38:24

The first thing to remember, then, when attempting to improve your social skills, is that small talk has a very important place in the art of conversation, and mastering it will get you to the “big” talk a lot faster.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- El marcador en la página 28 | posición 433 | Añadido el miércoles, 7 de agosto de 2024 23:41:41


==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 28 | posición 434-436 | Añadido el viernes, 9 de agosto de 2024 20:32:11

things off on a positive foot. Avoid anything too intense or specific, prolonged eye contact or physical touch. Keep it light and smile. Your goal is to comfortably move along to the next stage.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 28 | posición 432-436 | Añadido el viernes, 9 de agosto de 2024 20:32:25

Weather, very general current events or something that is happening in the moment are all good topics. This stage is not about sharing who you are per se, but making contact, and starting things off on a positive foot. Avoid anything too intense or specific, prolonged eye contact or physical touch. Keep it light and smile. Your goal is to comfortably move along to the next stage.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 28 | posición 437-439 | Añadido el viernes, 9 de agosto de 2024 20:32:55

Following small talk, you may both feel relaxed enough for the second step: fact disclosure.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 28 | posición 439-443 | Añadido el viernes, 9 de agosto de 2024 20:33:42

This is a “getting to know you” phase where you can start sharing details of your life—where you work or live, interests, what you’re doing at the moment, or something that connects to the previous small talk or the position you both find yourselves in currently. You get the chance here to open up a little more and share yourself as a person, which allows trust and confidence to build. However, keep in mind that this is fact disclosure—keep strong opinions and emotions out of the picture for now.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 28 | posición 445-447 | Añadido el viernes, 9 de agosto de 2024 20:34:22

Let the other person get to know you gradually, and only increase intensity if they are comfortable and are responding to your disclosures with their own. If not, it’s OK, just stay at this level. If they return your information with some information about themselves, you can likely move along to the next stage.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 28 | posición 447-449 | Añadido el viernes, 9 de agosto de 2024 20:34:31

The third stage—opinion disclosure—brings you both closer still.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 28 | posición 447-451 | Añadido el viernes, 9 de agosto de 2024 20:35:01

The third stage—opinion disclosure—brings you both closer still. Finding common ground allows you to share viewpoints and opinions. Finding what makes both of you the same is a deliberate attempt to seek out grounds for friendship. Without prying, ask thoughtful questions that will let you find a potential area of similarity.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 29 | posición 460-461 | Añadido el viernes, 9 de agosto de 2024 20:36:59

People can be really fascinating if you only ask them the right questions!
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 31 | posición 484-488 | Añadido el viernes, 9 de agosto de 2024 20:42:27

There are a couple of ways we can get ready for small talk and warm up, so to speak. The two approaches are what you might assume: physiologically, and psychologically. Psychological preparation is a matter of getting in the mood to socialize and also becoming used to initiating interaction. This can be done with “ten-second relationships,” which plunge you into the deep end if only for a moment. The idea is to start small and short, with low expectations, and build from there. You’ll eventually see that it’s easy and quite safe—you might even find it to be enjoyable, and frequently want to extend past ten seconds.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 31 | posición 484-490 | Añadido el viernes, 9 de agosto de 2024 20:42:44

There are a couple of ways we can get ready for small talk and warm up, so to speak. The two approaches are what you might assume: physiologically, and psychologically. Psychological preparation is a matter of getting in the mood to socialize and also becoming used to initiating interaction. This can be done with “ten-second relationships,” which plunge you into the deep end if only for a moment. The idea is to start small and short, with low expectations, and build from there. You’ll eventually see that it’s easy and quite safe—you might even find it to be enjoyable, and frequently want to extend past ten seconds.  Physically, you should seek to warm up by reading out loud before socializing and making sure you exaggerate emotional expressiveness and variation.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 34 | posición 525-525 | Añadido el viernes, 9 de agosto de 2024 20:50:23

Knowing you are making an impression on everyone you meet, you should be cognizant of setting the right tone with others.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 37 | posición 582-584 | Añadido el jueves, 15 de agosto de 2024 09:50:17

Of course, the only way you can do any of this is if you’re a) aware about it in the first place and b) skillful enough to take charge of how you’re coming across, and adjust it according to what you’re trying to achieve. In this book, what we’re trying to achieve is
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 37 | posición 582-586 | Añadido el jueves, 15 de agosto de 2024 09:52:35

Of course, the only way you can do any of this is if you’re a) aware about it in the first place and b) skillful enough to take charge of how you’re coming across, and adjust it according to what you’re trying to achieve. In this book, what we’re trying to achieve is pretty straightforward: that awesome feeling of really connecting with another human being, making friends, and “clicking.” As it happens, this is one of the easiest “frames” to maintain—a child could do it, literally.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 37 | posición 587-587 | Añadido el jueves, 15 de agosto de 2024 09:53:05

Be less predictable and give unexpected, unconventional answers. If someone asks you how the traffic was,
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 37 | posición 587-587 | Añadido el jueves, 15 de agosto de 2024 09:53:15

Be less predictable and give unexpected, unconventional answers.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 41 | posición 646-650 | Añadido el jueves, 15 de agosto de 2024 10:04:29

Our discomfort happens for a multitude of reasons, summed up by the feeling that we are interrupting people or otherwise inconveniencing them. We have trouble breaking the ice with strangers (I mean, look at how we call it “ice”!), even though it’s such a simple thing, because we create a “they’ll think” or “what if” feedback loop in our brains.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 42 | posición 661-664 | Añadido el jueves, 15 de agosto de 2024 10:05:28

In the matter of making introductions, we need to find tactics to undercut the judgments and assumptions we make of ourselves. The (maybe boring?) truth is that most people are rather indifferent to other people making the first move. It’s only anxiety and our own biases that make us assume a negative response where there in fact is nothing worse than a neutral one.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 42 | posición 664-665 | Añadido el jueves, 15 de agosto de 2024 10:06:38

Take the interaction above. It lasts less than four seconds
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 42 | posición 664-667 | Añadido el jueves, 15 de agosto de 2024 10:06:46

Take the interaction above. It lasts less than four seconds (really—try it out for yourself and time it), and then all at once the ball’s in the other person’s court and the conversation is underway. That’s all. Just four seconds. Yet somehow we make this tiny part of the conversation the scariest and most intimidating—it really isn’t. In
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 43 | posición 677-679 | Añadido el jueves, 15 de agosto de 2024 10:09:10

That’s the meaning of indirect in this context: you have an actual reason to approach someone, and when we can create one for ourselves, we can convince ourselves to take action more easily.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 43 | posición 683-684 | Añadido el jueves, 15 de agosto de 2024 10:10:07

own discomfort and anxiety, and not the negative response of others. If we can convince ourselves that we have a legitimate reason for intruding on another person’s
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 43 | posición 682-687 | Añadido el jueves, 15 de agosto de 2024 10:10:19

But again, this is a trick we use to get around our own discomfort and anxiety, and not the negative response of others. If we can convince ourselves that we have a legitimate reason for intruding on another person’s space or conversation, then we feel more able to do it. Think of it like confidence training wheels. When you’ve become surer in your social abilities, you may not need a pretense anymore, and won’t feel embarrassed to just talk directly to people.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 43 | posición 688-690 | Añadido el jueves, 15 de agosto de 2024 10:16:40

The biggest part of the battle is making breaking the ice feel acceptable—it’s an “I don’t feel confident or comfortable” issue more than an “I don’t know what to say” issue. Recall that asking for directions on the verge of
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 43 | posición 688-690 | Añadido el jueves, 15 de agosto de 2024 10:16:50

The biggest part of the battle is making breaking the ice feel acceptable—it’s an “I don’t feel confident or comfortable” issue more than an “I don’t know what to say” issue. Recall
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 44 | posición 692-693 | Añadido el jueves, 15 de agosto de 2024 10:17:28

ask people for objective information or a subjective opinion.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 44 | posición 691-693 | Añadido el jueves, 15 de agosto de 2024 10:18:14

The first, indirect method of breaking the ice is to ask people for objective information or a subjective opinion.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 44 | posición 694-703 | Añadido el jueves, 15 de agosto de 2024 10:19:18

are asking knows the answer; it’s just a way to begin a dialogue. For that matter, it doesn’t even matter that you don’t know the answer. Excuse me, do you know what time the speeches begin?  Do you know where the closest Starbucks is?  What did you think of the CEO’s speech?  Do you like the food here?  The first two examples are inquiring about objective information, while the latter two are asking for a subjective opinion.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 44 | posición 703-703 | Añadido el jueves, 15 de agosto de 2024 10:21:10

The second, indirect method of breaking the ice is to
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 44 | posición 703-704 | Añadido el jueves, 15 de agosto de 2024 10:21:16

The second, indirect method of breaking the ice is to comment on something in the environment, context, or specific situation.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 44 | posición 711-711 | Añadido el jueves, 15 de agosto de 2024 10:22:03

statement instead of asking them to engage. If they don’t choose to engage, no harm no foul. You
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 44 | posición 710-713 | Añadido el jueves, 15 de agosto de 2024 10:22:12

You are inviting someone to comment on your statement instead of asking them to engage. If they don’t choose to engage, no harm no foul. You are not putting any pressure on them to respond, and you don’t necessarily need to expect an answer.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 44 | posición 713-713 | Añadido el jueves, 15 de agosto de 2024 10:22:48

The third and final indirect method of breaking the ice is to comment on a commonality you both share.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 45 | posición 721-723 | Añadido el jueves, 15 de agosto de 2024 10:52:28

but their main value is to make you feel okay with engaging someone in conversation, which is the real problem. You don’t
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 45 | posición 721-724 | Añadido el jueves, 15 de agosto de 2024 10:53:24

but their main value is to make you feel okay with engaging someone in conversation, which is the real problem. You don’t need any particular skills or confidence to pull these off. In fact, if the person you’re speaking to is perceptive enough, they can probably tell that you’re using a pretense to open a dialogue.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 46 | posición 747-748 | Añadido el jueves, 15 de agosto de 2024 11:00:03

hunting for similarities, and similarities are another way of setting a tone of friendship, familiarity, comfort, and openness.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 46 | posición 746-748 | Añadido el jueves, 15 de agosto de 2024 11:00:09

While you may not realize it, you are always hunting for similarities, and similarities are another way of setting a tone of friendship, familiarity, comfort, and openness.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 47 | posición 757-758 | Añadido el jueves, 15 de agosto de 2024 11:03:01

because we think they’ll understand us on a deeper level. If we share at least one significant similarity, then
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 48 | posición 769-770 | Añadido el jueves, 15 de agosto de 2024 11:12:19

always be searching for similarities or creating opportunities for them.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 48 | posición 780-780 | Añadido el jueves, 15 de agosto de 2024 11:15:11

and realize that people share common attitudes, experiences, and emotions—you just have to find
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 48 | posición 779-780 | Añadido el jueves, 15 de agosto de 2024 11:15:22

It just requires you to look outside of yourself and realize that people share common attitudes, experiences, and emotions—you just have to find
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 48 | posición 779-780 | Añadido el jueves, 15 de agosto de 2024 11:15:33

It just requires you to look outside of yourself and realize that people share common attitudes, experiences, and emotions—you just have to find them.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 50 | posición 812-815 | Añadido el jueves, 15 de agosto de 2024 11:20:26

we can create opportunities for similarities in a few ways—first physically by mimicking people’s body language, voice tonality, rate of speech, and overall manner of appearance. This is known as mirroring, and it has also been shown to produce feelings of positivity when tested (Anderson, 1998). All you have to do is arrange yourself to resemble
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 50 | posición 812-817 | Añadido el jueves, 15 de agosto de 2024 11:20:51

we can create opportunities for similarities in a few ways—first physically by mimicking people’s body language, voice tonality, rate of speech, and overall manner of appearance. This is known as mirroring, and it has also been shown to produce feelings of positivity when tested (Anderson, 1998). All you have to do is arrange yourself to resemble others in order to benefit from feelings of similarity, from how they are posed to how they gesture.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 50 | posición 824-827 | Añadido el jueves, 15 de agosto de 2024 11:22:07

This has the overall effect of making people feel more heard, feel more subconsciously comfortable and familiar with you, and fostering feelings of closeness relatively quickly.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 51 | posición 835-837 | Añadido el jueves, 15 de agosto de 2024 11:23:15

If you are having trouble connecting with others, it’s likely you are expecting to find a similarity without sharing anything yourself. Let’s do another one.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 51 | posición 844-846 | Añadido el jueves, 15 de agosto de 2024 11:25:46

You may be the cause of awkward silence more often than not, because others will expect a back and forth flow, but they end up doing all the work while you wonder what’s wrong. In other words, get used to this feeling of discomfort because it’s something you need to improve upon.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 52 | posición 847-852 | Añadido el jueves, 15 de agosto de 2024 11:26:29

opportunities for them, consider that mutual dislike is a useful bonding agent. Have you noticed that it is sometimes impossible for the conversation to remain positive, and the conversation will veer into a set of complaints about something you both dislike? Simply put, mutual dislike creates a sense of excitement that can often be more powerful than mutual like.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 52 | posición 846-852 | Añadido el jueves, 15 de agosto de 2024 11:26:39

Aside from searching for similarities and creating opportunities for them, consider that mutual dislike is a useful bonding agent. Have you noticed that it is sometimes impossible for the conversation to remain positive, and the conversation will veer into a set of complaints about something you both dislike? Simply put, mutual dislike creates a sense of excitement that can often be more powerful than mutual like.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 52 | posición 856-858 | Añadido el jueves, 15 de agosto de 2024 11:30:59

What’s ultimately important is seeing eye-to-eye in some fashion, preferably one that is about your opinions, views, emotions, or choices/decisions. They can be positive or negative—the goal is just to converge on something.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 54 | posición 889-891 | Añadido el jueves, 15 de agosto de 2024 11:37:36

Complaining. We’ve covered this a bit in talking about how people love mutual dislike. People also love to complain, so it is easy to get someone to open up by giving them something to commiserate with. You complain first, and they will jump at the opportunity.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 54 | posición 884-884 | Añadido el jueves, 15 de agosto de 2024 11:39:48

something good about them. Mention “I love your sweater” and you will get a story about how the wearer obtained the sweater. Mention
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 54 | posición 884-884 | Añadido el jueves, 15 de agosto de 2024 11:39:54

something good about them. Mention “I love your sweater” and you will get a story about how the wearer obtained the sweater.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 54 | posición 883-887 | Añadido el jueves, 15 de agosto de 2024 11:40:03

Recognition. People thrive when you recognize something good about them. Mention “I love your sweater” and you will get a story about how the wearer obtained the sweater. Mention “You are very thorough” and you will get a story about how the person went to military school and learned to be thorough at all times. They may have been tight-lipped before, but any chance to enhance praise is welcome. People have a natural desire to feel recognized and appreciated, so give them an opening to show off a little.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 55 | posición 900-901 | Añadido el jueves, 15 de agosto de 2024 11:40:26

Correction. People love to be right. This is truly the backbone of any Internet argument. So if you say something wrong, they will gladly jump at the chance to correct you. If
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 55 | posición 905-912 | Añadido el jueves, 15 de agosto de 2024 11:41:59

Naïveté. To be clear, this does not mean to act stupid; it means to act like you’re on the cusp of understanding. Acting naïve makes people feel compelled to teach, instruct, and show off their knowledge. People just can’t resist enlightening you, especially if you’re ninety-five percent of the way there and all people have to do is figuratively finish your sentence. “I understand most of this theory, but there’s just this one thing I’m unclear on. It could mean so many things . . .” People won’t be able to stop themselves from jumping in. In the spirit of elicitation, here are a few indirect methods that I’ve discovered work quite well for me personally.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 55 | posición 905-909 | Añadido el jueves, 15 de agosto de 2024 11:42:19

Naïveté. To be clear, this does not mean to act stupid; it means to act like you’re on the cusp of understanding. Acting naïve makes people feel compelled to teach, instruct, and show off their knowledge. People just can’t resist enlightening you, especially if you’re ninety-five percent of the way there and all people have to do is figuratively finish your sentence. “I understand most of this theory, but there’s just this one thing I’m unclear on. It could mean so many things . . .” People won’t
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 56 | posición 917-919 | Añadido el jueves, 15 de agosto de 2024 11:44:16

you are (1) asking a question, (2) acting as if they answered the question, and (3) then seeing how they react to your assumption of their answer.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 56 | posición 917-920 | Añadido el jueves, 15 de agosto de 2024 11:44:34

you are (1) asking a question, (2) acting as if they answered the question, and (3) then seeing how they react to your assumption of their answer. Don’t wait for them to react to your question; just give them the opportunity to react to your subsequent answer. The premise here is that even if they don’t want to talk to you, they’ll be forced to engage and step in to intervene in some way.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 56 | posición 924-924 | Añadido el jueves, 15 de agosto de 2024 11:45:39

going to answer a certain way and keep elaborating on that
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 56 | posición 923-925 | Añadido el jueves, 15 de agosto de 2024 11:45:48

When you ask someone a question, assume they are going to answer a certain way and keep elaborating on that sentiment. Again, if you’re lucky, people will feel compelled to correct you and clarify what their actual answer to the question is.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 56 | posición 930-932 | Añadido el jueves, 15 de agosto de 2024 11:47:33

These methods capitalize on people’s instinct to set the record straight. Even if they don’t want to talk about something, they don’t want the incorrect or negative perception floating around about them.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 57 | posición 934-937 | Añadido el jueves, 15 de agosto de 2024 11:48:19

Remember that the tone of an exchange is something you have 100 percent ability to set. Many of us feel that conversations are a matter of luck—you strike it lucky by finding a mutual topic of interest or similarity, and those instances are necessary to create rapport. Of course, if you believe this to be the case, it will be the case for you.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 57 | posición 937-955 | Añadido el jueves, 15 de agosto de 2024 11:51:18

Takeaways: What determines whether you hit it off with someone? It’s not circumstantial; rather, it’s a matter of you taking charge and setting the tone to be friendly and open. Most people treat others like strangers and thus won’t become friends. So change that script from the very beginning, put people at ease and let them be comfortable around you.  The first way to set the tone is to speak like friends: topic-wise, tone-wise, and even privacy-wise. People will go along with the tone you set as long as you aren’t outright offensive. A powerful aspect of this is showing emotion as friends do, instead of filtering yourself and putting up a wall for the literal purpose of keeping people insulated at a distance. And stop being so darned literal and serious. A conversation does not have to be about sharing facts, and some comments can be used solely for the purpose of seeing how the other person will react.  Another aspect of setting the right tone is to search for similarities and also allow the opportunity to create them. When people observe similarity, they instantly open up and embrace it because it is a reflection of themselves. There are only good assumptions and connotations, so we should actively seek them out. You can do this by digging more deeply into people’s lives and asking questions to find seemingly unrelated similarities, divulging more information yourself, and also mirroring them physically. Also, don’t discount the value of mutual dislike—it’s not negative to talk about negative things, per se.  Finally, even if you follow these steps, sometimes people either aren’t willing to engage or not good at opening up themselves. You can blast past this by using forms of elicitation, in which you put forth a topic or question in a way that a person will feel compelled to engage or elaborate. These take the form of prompting the person to reply to your recognition, encouraging mutual complaining, assisting your naiveté, and correcting your incorrect assumption or information.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- El marcador en la página 59 | posición 959 | Añadido el jueves, 15 de agosto de 2024 11:51:29


==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 62 | posición 1036-1039 | Añadido el jueves, 15 de agosto de 2024 22:27:49

It might help to reframe mini-stories this way: when people make small talk with you and ask any of the classic small-talk questions, they aren’t truly interested in the answers to those questions. They want to hear something interesting, so give it to them.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 65 | posición 1083-1087 | Añadido el jueves, 15 de agosto de 2024 22:44:12

This method stands for a story that (1) has one action, (2) can be summed up in one sentence, and (3) evokes one primary emotion in the listener. You can see why they’re short and snappy. They also tend to ensure that you know your point before starting and have a very low chance of verbally wandering for minutes and alienating your listeners. This is the lowest input to the highest output ratio you can have for a story.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 68 | posición 1123-1124 | Añadido el jueves, 15 de agosto de 2024 22:53:17

short, and let the conversation continue as a shared experience rather than you monopolizing the airspace.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 68 | posición 1123-1124 | Añadido el jueves, 15 de agosto de 2024 22:53:32

Therefore, keep the essentials but cut your story short, and let the conversation continue as a shared experience rather than you monopolizing the airspace.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- El marcador en la página 68 | posición 1127 | Añadido el jueves, 15 de agosto de 2024 22:55:35


==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 69 | posición 1144-1145 | Añadido el lunes, 19 de agosto de 2024 23:07:44

The story spine has eight elements; here’s how they go: Once upon
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- El marcador en la página 72 | posición 1200 | Añadido el lunes, 19 de agosto de 2024 23:18:31


==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- El marcador en la página 74 | posición 1226 | Añadido el miércoles, 21 de agosto de 2024 23:14:09


==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 74 | posición 1233-1234 | Añadido el jueves, 22 de agosto de 2024 23:26:50

In any conversation, there is a high point. There might be multiple memorable points, but by definition, one part is the best and highest.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 75 | posición 1240-1243 | Añadido el jueves, 22 de agosto de 2024 23:28:09

later is what a deconstructed inside joke looks like. Therefore, to easily create an inside joke, all you have to do is refer to the high point later in the conversation. Take note of it and put it in your pocket for use in the near future. It’s solid gold!
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 75 | posición 1239-1243 | Añadido el jueves, 22 de agosto de 2024 23:28:19

Coincidentally, calling back to this high point later is what a deconstructed inside joke looks like. Therefore, to easily create an inside joke, all you have to do is refer to the high point later in the conversation. Take note of it and put it in your pocket for use in the near future. It’s solid gold!
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 76 | posición 1255-1258 | Añadido el jueves, 22 de agosto de 2024 23:30:45

Listen for something funny or notable that you would classify as a conversational high point. Keep it in your pocket. Wait like a cheetah in the tall grass of the savannah to see a different context or topic you can repeat it in. And then unleash it.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- El marcador en la página 76 | posición 1259 | Añadido el jueves, 22 de agosto de 2024 23:31:59


==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 77 | posición 1279-1282 | Añadido el sábado, 24 de agosto de 2024 10:02:12

mutually enjoyable for everyone involved, then you suddenly don’t care as much about who’s talking, and what they’re saying, but rather that the conversation itself is positive and flowing.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 78 | posición 1310-1312 | Añadido el sábado, 24 de agosto de 2024 10:06:53

The truth about being a good conversationalist is that it’s more like partner dancing than solo dancing—you need to work with your partner, prop them up, give them cues, and help things flow not just on your side, but on theirs too.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 79 | posición 1317-1318 | Añadido el sábado, 24 de agosto de 2024 10:09:05

Ask questions in a way that makes people want to share.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 79 | posición 1324-1326 | Añadido el sábado, 24 de agosto de 2024 10:10:41

best part of your day so far? Tell me how you got that parking space so close!” instead of just “How are you?”
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 79 | posición 1324-1326 | Añadido el sábado, 24 de agosto de 2024 10:10:50

It’s the difference between asking “What was the best part of your day so far? Tell me how you got that parking space so close!” instead of just “How are you?”
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 80 | posición 1331-1332 | Añadido el sábado, 24 de agosto de 2024 10:12:22

Another example is “What is the most exciting part of your job? How does it feel to make a difference like that?” instead of simply asking them the generic “What do you do?” When you only ask somebody what they do
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 80 | posición 1334-1336 | Añadido el sábado, 24 de agosto de 2024 10:12:30

was the best part? It was so nice outside,” instead of just “How was your weekend?”
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 80 | posición 1334-1336 | Añadido el sábado, 24 de agosto de 2024 10:12:40

“How did you feel about your weekend? What was the best part? It was so nice outside,” instead of just “How was your weekend?”
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 80 | posición 1340-1341 | Añadido el sábado, 24 de agosto de 2024 10:13:40

If you already know a little bit about the person, you can deliberately ask for stories you know they’ll be happy and comfortable to share. Ask them to tell you about something they did well,
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 81 | posición 1355-1370 | Añadido el sábado, 24 de agosto de 2024 10:16:49

Consider the following guidelines when asking a question: Ask for a story  Be broad but with specific directions or prompts  Ask about feelings and emotions  Give the other person a direction to expand their answer into, and give them multiple prompts, hints, and possibilities  If all else fails, directly ask “Tell me the story about . . .”  Imagine that you want the other person to inform your curiosity. Other examples include the following: “Tell me about the time you . . .” versus “How was that?”  “Did you like that . . .?” versus “How was it?”  “You look focused. What happened in your morning . . .?” versus “How are you?”  Let’s think about what happens when you
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 83 | posición 1403-1427 | Añadido el sábado, 24 de agosto de 2024 10:29:38

Takeaways: Captivating people usually refers to telling a story that leaves them listening like children (in a good way). Storytelling is a big topic that is often made overly complex, but there are many ways of creating this feeling in small, everyday ways. To captivate others is no easy feat, but the material and ability lies within all of us. We just have to know where it is and how to access it.  An easy way to imagine everyday storytelling is that your life is a series of stories—mini-stories, to be exact. Instead of giving one-word answers, get into the habit of framing your answers as a story with a point. It creates more engagement, lets you show your personality, and allows for smoother conversation. The bonus here is that you can prepare these before a conversation.  The 1:1:1 method of storytelling is to simplify it as much as possible. The impact of a story won’t necessarily be stronger if it is ten sentences versus two sentences. Therefore, the 1:1:1: method focuses on the discussion and reaction that occurs after a story. A story can be composed solely of (1) one action, (2) one emotion to be evoked, and (3) a one-sentence summary. Don’t get lost rambling, and also make sure your listener feels that they are fully participating in the conversation.  The story spine is more or less the formula for every movie that exists. It’s a simple framework that you can use in your everyday stories and conversations, because it teaches you what emotional beats exist in a story. There is the status quo, the event that kicks things off, the set of consequences for changing the status quo, the climax or resolution, and then what happens after the fact.  Stories can also be the basis for an inside joke. When you think about it, an inside joke is something that comes up multiple times with the same person and evokes a positive emotion. It’s the same topic brought up in a different context. Thus, you just need to call back to a story through a conversation and there’s a good chance it will stick as a “Remember when we talked about . . .” moment. The more you use it, the more a unique bond is created between only the two of you.  Improving your storytelling ability is important, but what about eliciting stories from others? You can phrase your questions carefully to ask for stories rather than answers from people, which is a simple way to make conversation easier and more enjoyable for everyone involved. There are ways to make people open up to you and want to keep gabbing. Remember the lesson we learned with the 1:1:1 method in pinpointing the emotions that people are trying to evoke. To amplify this, you can pin the tail on the donkey and strategically add on to people’s stories.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 88 | posición 1465-1466 | Añadido el sábado, 24 de agosto de 2024 10:34:41

conversations and interactions must always be moving somewhere; there must always be a sense of motion. It’s about flow.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 90 | posición 1493-1494 | Añadido el sábado, 24 de agosto de 2024 10:39:21

in general goes much better if you intentionally create motion and seek to end up in a different place from where you started.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 93 | posición 1542-1543 | Añadido el sábado, 24 de agosto de 2024 10:47:43

Great conversations are journeys. They never remain in the same place. There is a sense of direction, there is a sense of conflict that needs resolution, and there is a sense of tension that needs to be unwound.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- El marcador en la página 93 | posición 1545 | Añadido el sábado, 24 de agosto de 2024 10:49:05


==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 96 | posición 1590-1593 | Añadido el martes, 27 de agosto de 2024 22:21:31

Conversation is a series of statements, stories, and questions. After one person contributes one of those elements, the other person responds in kind, either on the same exact topic, or a topic that is in some way related to the original one. That’s really it. Sometimes we’ll have trouble thinking of what to say on the same topic, or finding a connection to another subject.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 98 | posición 1621-1623 | Añadido el martes, 27 de agosto de 2024 22:26:15

each of these six associations are perfectly normal topics to switch to while remaining in the flow of the conversation.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 98 | posición 1635-1637 | Añadido el martes, 27 de agosto de 2024 22:27:43

the fact that you are ignorant about the topic means nothing—you can still engage in a lively and personable way in the conversation (and invite the other person to speak more about what they know).
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 99 | posición 1645-1653 | Añadido el martes, 27 de agosto de 2024 22:29:33

Here’s how to practice: on a piece of paper, write five random words. They can be anything—a noun, verb, memory, or even an emotion or feeling. Suppose the first word you write is “napkin.” As quickly as possible, write three associations for that word. Take the last word you came up with, and then as quickly as possible, write three associations for that new word. Repeat three times, and then move to the next set of words. Napkin        -> table, spoon, fine dining. Fine dining -> France, Michelin Star, butler. Butler          -> Jeeves, white gloves, Michael Jackson. And so on.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 100 | posición 1655-1658 | Añadido el martes, 27 de agosto de 2024 22:30:26

free association with words, you can take the next step and choose two random words from a dictionary and pretend they are the name of a company. Then, create a short story about what that company does, as quickly as possible.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 100 | posición 1659-1661 | Añadido el martes, 27 de agosto de 2024 22:31:02

The final step of this set of free-association exercises is to choose five random words from the dictionary and make up a story that involves all of the words, as quickly as possible.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 101 | posición 1681-1685 | Añadido el martes, 27 de agosto de 2024 22:34:32

doesn't matter how good a conversationalist you are because awkward silences are always lurking around the corner. Using these acronyms, you can always find a way to work around these impending conversation killers. HPM HPM stands for History, Philosophy, and Metaphor.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 104 | posición 1720-1721 | Añadido el martes, 27 de agosto de 2024 22:38:59

SBR stands for Specific, Broad, and Related. To any statement or question directed to you, you can reply with one of these types of statements.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 104 | posición 1721-1723 | Añadido el martes, 27 de agosto de 2024 22:40:02

Specific involves asking targeted questions regarding the topic you're talking about. This kind of response allows you to drag the conversation forward or take it deeper by pulling out fine details.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 104 | posición 1727-1728 | Añadido el martes, 27 de agosto de 2024 22:40:12

Broad means you ask broad questions about the topic.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 104 | posición 1727-1728 | Añadido el martes, 27 de agosto de 2024 22:40:20

Broad means you ask broad questions about the topic. These create context and are great springboards to sub-topics.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 104 | posición 1734-1735 | Añadido el martes, 27 de agosto de 2024 22:41:55

related refers to asking about something that is either directly or broadly related to the subject of your conversation. The great thing about "related" is that it allows
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 105 | posición 1740-1741 | Añadido el martes, 27 de agosto de 2024 22:42:17

The unifying characteristic of the SBR conversation strategy is that it focuses primarily on the topics you're talking about.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- El marcador en la página 105 | posición 1741 | Añadido el martes, 27 de agosto de 2024 22:43:38


==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 108 | posición 1795-1798 | Añadido el jueves, 29 de agosto de 2024 22:16:39

Pay careful attention, because as previously noted, some of these are more about your own thoughts and internal workings, and others are about the situation in front of you and the other person. So if you skew too much in one direction, it can mean you’re either a conversational narcissist or someone who provides no value or substance.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 108 | posición 1793-1794 | Añadido el jueves, 29 de agosto de 2024 22:16:47

have nine ways to respond to people about anything.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 108 | posición 1792-1794 | Añadido el jueves, 29 de agosto de 2024 22:16:56

insights. By using EDR in addition to HPM and SBR, you now have nine ways to respond to people about anything.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 109 | posición 1800-1821 | Añadido el jueves, 29 de agosto de 2024 23:05:54

Takeaways: How can you keep conversation, small talk especially, flowing smoothly when you don’t feel like you have anything to talk about? This is a challenge even with good friends sometimes. Most of the time, this feeling of stagnancy occurs because you are doing exactly that—stagnating—and nothing is being added or extracted from the interaction on either side. But there are several ways you can change that.  First, create a sense of motion. Staying on the same topic, sentiment, or feeling for too long will create a feeling of boredom and even mild stress. Why can’t you escape it? Indeed, if you watch a movie and it’s just people talking the entire time, the movie better be damn well written to be interesting. To contrast, Joseph Campbell’s hero’s journey is a classic story that follow someone’s quest, success, and subsequent transformation. Luckily, there are a multitude of ways to create motion in an interaction, but the most powerful part is simply realizing that things must move in some way.  Sometimes, despite knowing full well that we must create motion, we are unable to do it. Sometimes our minds go blank. The next couple of sections deal with this specifically—how can you think more quickly on your feet? This requires practice; no one who manages it consistently is truly born with such a quick wit. And so how do you practice it? With free association, by simply taking a word and naming a few words or concepts that it reminds you of. The important part is to train your brain’s quick response reflex and break through any mental filters you might possess. You can also choose two words and relate them with a brief story, or flip to random words in the dictionary and use them to create a story.  Finally, in case all else escapes your mind, there are three incredibly helpful acronyms that can assist you in never running out of things to say on the fly. These are: HPM, SBR, and EDR. HPM stands for History (your personal experience with the topic), Philosophy (your opinion on the topic), and Metaphor (what the topic makes you think of). SBR stands for Specific (more detail on the topic), Broad (broader context of topic), and Related (related topics). EDR stands for Emotion (the emotions the topic evokes in the other person), Detail (more detail on the topic), and Restatements (restating the topic to prompt greater elaboration).
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- El marcador en la página 111 | posición 1834 | Añadido el jueves, 29 de agosto de 2024 23:07:21


==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 112 | posición 1856-1858 | Añadido el sábado, 31 de agosto de 2024 12:31:49

For maximum impact, compliment people for two things (besides the obvious and superficial). Compliment people on (1) things they have control over and (2) things they have made a conscious choice about. There may be significant overlap between
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 113 | posición 1871-1873 | Añadido el sábado, 31 de agosto de 2024 12:35:17

was all worth it, and they made the right choice!
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 113 | posición 1870-1873 | Añadido el sábado, 31 de agosto de 2024 12:35:25

Therefore, when you compliment someone on their choices and thoughts, you validate them to the highest degree. You’re telling them that you agree with them, it was all worth it, and they made the right choice!
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 114 | posición 1881-1884 | Añadido el sábado, 31 de agosto de 2024 12:37:32

show individual choice are their manners, the way they phrase certain ideas, their opinions, their worldview, and their perspective. Compliment their hard work, their effort, their virtues and good qualities, the things you know they’re aspiring to achieve. Compare: “Wow, so both your parents
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 115 | posición 1898-1900 | Añadido el sábado, 31 de agosto de 2024 12:40:50

Make your compliments sincere, appropriate and respectful. Above all else, compliments trigger one of the most fundamental weaknesses humans have: we are starved for attention.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 116 | posición 1919-1927 | Añadido el sábado, 31 de agosto de 2024 12:44:05

least a few times to make sure it’s not because of a mosquito or some other environmental factor, draw attention to it! Not in a negative manner, but in an observant one. Hey, that’s an interesting way of tying your shoes . . .  I see that you keep twisting the jars into patterns. Tell me about that.  Do you favor your left arm? You crack it five times every time we walk inside.  Did you read Nineteen Eighty-Four recently? You use the word “goodplus” a lot . . .  Make sure that you don’t have any
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 116 | posición 1919-1927 | Añadido el sábado, 31 de agosto de 2024 12:44:19

least a few times to make sure it’s not because of a mosquito or some other environmental factor, draw attention to it! Not in a negative manner, but in an observant one. Hey, that’s an interesting way of tying your shoes . . .  I see that you keep twisting the jars into patterns. Tell me about that.  Do you favor your left arm? You crack it five times every time we walk inside.  Did you read Nineteen Eighty-Four recently? You use the word “goodplus” a lot . . .  Make sure that you don’t have any judgmental tone in your voice or body language
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 119 | posición 1974-1974 | Añadido el sábado, 31 de agosto de 2024 12:53:04

Silence is an effective communication tool. Use it more frequently than you think you should.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 126 | posición 2081-2083 | Añadido el sábado, 31 de agosto de 2024 13:11:02

“You can make more friends in two months by becoming interested in other people than you can in two years by trying to get other people interested in you.”—Dale Carnegie
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- El marcador en la página 127 | posición 2096 | Añadido el sábado, 31 de agosto de 2024 13:13:18


==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- El marcador en la página 131 | posición 2172 | Añadido el martes, 3 de septiembre de 2024 00:02:15


==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 128 | posición 2116-2118 | Añadido el martes, 3 de septiembre de 2024 00:02:30

Ask open-ended questions. Questions that require only yes or no answers will usually produce nothing more than yes or no answers. If the question contains no prompt for the responder to elaborate, there’s a very good chance they won’t.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 128 | posición 2116-2123 | Añadido el martes, 3 de septiembre de 2024 00:02:38

Ask open-ended questions. Questions that require only yes or no answers will usually produce nothing more than yes or no answers. If the question contains no prompt for the responder to elaborate, there’s a very good chance they won’t. Open-ended questions, though, can spark discussions and bring up new, revelatory understandings that binary questions don’t encourage. For example, instead of asking, “Are you satisfied with your relationship with your mother?” you could ask, “Why is your relationship with your mother the way it is? How did it get that way?”
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 128 | posición 2125-2133 | Añadido el martes, 3 de septiembre de 2024 00:02:48

Get behind assumptions. We all operate through our own personal experiences, knowledge, and assumptions—you know what you know. Good communication involves understanding someone else’s beliefs. When they speak about issues that are unfamiliar to us, we ask them to explain what they mean, what they believe, or what assumptions they bring to the situation. Well-worded questions can bridge that gap: “How did you come to that conclusion?” “What makes this particular situation different from normal?” “What gave you this idea?” “What’s the story behind your belief?” When you sense a gap between what your partner is saying and what you’re familiar with, that’s the time to get clarity on what they’re basing their statements on. This is a prime mindset to learn more about
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 129 | posición 2136-2144 | Añadido el martes, 3 de septiembre de 2024 00:03:07

Get all sides of the story. There are very few situations in life that are uncomplicated, cut-and-dried, or black and white. No matter how strongly someone feels about their particular viewpoint, there’s always more than one side to a given story. By getting as much information as we possibly can about a certain topic, we delve deeper and understand more about the total nature of a situation, problem, or event. This is often a case of not shutting out opinions or beliefs that might threaten or offend us, which in this day can be very difficult to do. But a responsibly asked question will help get a better picture of the greater context of things and will allow us to understand matters beyond our own limited view. “Is there another perspective on this situation?” “What are some of the things someone who disagrees with you would say?” “What would happen if someone did this differently?” In general, don’t be satisfied that you’ve gotten
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 130 | posición 2146-2152 | Añadido el martes, 3 de septiembre de 2024 00:03:16

Ask follow-up questions. When we’re trying to get close to someone, a lot of the questions we may ask of them don’t have easy answers. In fact, if we were writing them out, they’d probably be more like two- or three-part questions with room to elaborate. In personal interactions, we can emulate that depth—and show the strength of our focus—by asking follow-up questions. But they don’t have to come immediately after your partner’s answered. One author (me) suggests seeing how many questions you can ask in a row without offering any comment of your own, so you can allow your partner to expand their response and keep digging deeper.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 131 | posición 2162-2170 | Añadido el martes, 3 de septiembre de 2024 00:03:33

Get comfortable with “dead air.” People tend to be scared to death of “awkward silences”—those moments in conversation when there’s a pregnant pause and nobody says anything. We tend to misinterpret these silences as a sign that either we or our partner has run out of things to say. Sometimes that’s true. But sometimes, it’s someone trying to gauge you and subtly seek permission to keep talking. Thus, silence can work in communication’s favor—when you’re at ease with silence and don’t rush to fill it yourself with inane chatter, you’ll be prompting people to speak more and more. Think of it as seeing if moments of silence can help them generate their own, new thoughts and allow the conversation to get to a deeper level. If this is the case, all you have to do is keep quiet and let them take the conversation to the next level.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 132 | posición 2193-2193 | Añadido el miércoles, 11 de septiembre de 2024 00:24:49

shared. But
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 132 | posición 2192-2199 | Añadido el miércoles, 11 de septiembre de 2024 00:25:04

We are, of course, generally disposed to talk about ourselves and the things we’ve directly experienced or shared. But there’s a considerable amount of insight to be obtained by discussing subjects and events external to your life. Author Daniel Menaker straightforwardly calls this approach turning the conversation toward “third things—not me, not them, but something else.” It’s not about you or the other person in particular. It’s just about something external, even as benign as the news of the day or the types of ferns you are surrounded by. Call it upgraded small talk. Talking about these external topics serves as an inroad to discovering how somebody thinks and what they value. All this requires is that you ask how people feel about or would react to certain events, things, or situations.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 134 | posición 2212-2215 | Añadido el miércoles, 11 de septiembre de 2024 00:27:44

Instead of digging deep directly, which is often off-putting or awkward at best, you can obtain a deeper perspective by measuring people’s reactions to external things. You’ll often get a more honest answer, and you’ll learn more about them in the process.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 134 | posición 2219-2238 | Añadido el miércoles, 11 de septiembre de 2024 00:32:20

Takeaways: Going deeper and being better—this is about how we can enter into the type of interactions that we know are more beneficial for our happiness and mental well-being. How can we get into someone’s good graces and let them feel good enough about us to let their guards down and build an actual relationship?  The most obvious way to have people lower their guards is to pay them compliments early and often. Compliments are positive in general, but there are specific compliments that really impact the recipients. You should seek to compliment people on things they have made a conscious choice about and that reflect their thinking process. This gives them validation in a way that complimenting them on their eyes simply doesn’t. These types of compliments subtly tell others that you agree with them on deep levels, and they can feel great that they have made a correct set of decisions.  Sometimes people will lower their guards without even intending to if they find a kind ear that’s willing to listen intently and let them voice their inner thoughts. Listening is a skill that should be taught from childhood, but it’s not, so we are left with all sorts of ineffective listening habits. We are all also naturally self-absorbed, which highlights the importance of listening as a skill to make others feel good about an interaction. While there are various methods to listen better, having a listening mindset is by far the most important part: it’s not about you, focus on the other person, and if they said something, there’s a reason—explore that.  Of course, the tried and true way of directly getting deeper with people is to ask better questions. The simple truth is that most questions we use are surface level, and thus will only return surface-level responses. Here are a few guidelines for more piercing questions that will create more fertile ground for real substance: ask open-ended questions (don’t ask for facts, ask for the analysis and reaction associated with the facts), go beyond assumptions (what are you missing in your own analysis?), get all sides of the story (the more perspectives the better), use follow-up questions (don’t interject your own thoughts), get comfortable with dead air and in fact utilize it, and encourage people to come up with their own insights (so how did that change your opinion on things?).
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 137 | posición 2263-2265 | Añadido el miércoles, 11 de septiembre de 2024 00:35:16

people who actively engage with life are always going to a) be more interesting to talk to and b) find other people interesting.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- El marcador en la página 138 | posición 2291 | Añadido el miércoles, 11 de septiembre de 2024 00:41:05


==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 139 | posición 2309-2310 | Añadido el miércoles, 11 de septiembre de 2024 23:35:05

The more interests you have, the more interesting you become. When you’re engaged, you’re engaging.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- El marcador en la página 140 | posición 2320 | Añadido el miércoles, 11 de septiembre de 2024 23:39:17


==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 140 | posición 2325-2326 | Añadido el sábado, 14 de septiembre de 2024 16:30:41

This all carries into the idea that you should avoid being one-dimensional. Avoid having so narrow a life that people find it difficult to connect with or understand you. I once had a boss whose sole interest, purpose,
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 141 | posición 2338-2340 | Añadido el sábado, 14 de septiembre de 2024 16:32:43

This is a long-winded way of saying not all “hobbies” are equal. Some are passive and about consumption (boring), and others are active and about creation, learning, inspiration, connection, art, skill and so on (not boring).
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 142 | posición 2353-2356 | Añadido el sábado, 14 de septiembre de 2024 16:35:29

excuses to say no. You don’t even need a reason to say yes, so saying yes should become very easy and automatic for you. Simply ask “Why not?” to kill the overthinking and go along with a new experience. Don’t set expectations for what happens. Just be curious about what will take place and maintain an open mind.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 149 | posición 2477-2480 | Añadido el sábado, 14 de septiembre de 2024 17:15:09

Too many of us believe that in order to be authentic and true to ourselves, at some point we need to argue or defend ourselves against those who are different. However, it’s really important that you don’t make people feel judged, attacked, or lesser-than when you do express yourself. It’s not just a small talk or conversation tip, it’s a lesson for life.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 149 | posición 2477-2482 | Añadido el sábado, 14 de septiembre de 2024 17:15:36

Too many of us believe that in order to be authentic and true to ourselves, at some point we need to argue or defend ourselves against those who are different. However, it’s really important that you don’t make people feel judged, attacked, or lesser-than when you do express yourself. It’s not just a small talk or conversation tip, it’s a lesson for life. If you only see one way of doing things, if you are constantly governed by “should” and “must” and if you typically assume people are “stupid” or “blind” then you, sir or madam, are judgmental.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 150 | posición 2498-2501 | Añadido el sábado, 14 de septiembre de 2024 17:18:01

What you don’t want is to treat conversations as mere opportunities to prove yourself right, to boast, to win arguments, to show off or to feel superior. Judgment is the opposite of open curiosity and playfulness. It narrows our perception, shuts down our compassion and gets in the way of our creativity. And more than that, it’s pretty damn boring!
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 152 | posición 2538-2541 | Añadido el sábado, 14 de septiembre de 2024 17:24:19

What experiences have they had in their lives that might explain why they hold a position in such contrast to yours? Remember that people have their own reasons for opinions and beliefs and that not everybody thinks just the way you do. You can either recognize this or not.
==========
Better Small Talk: Talk to Anyone, Avoid Awkwardness, Generate Deep Conversations, and Make Real Friends (How to be More Likable and Charismatic Book 5) (King, Patrick)
- La subrayado en la página 153 | posición 2549-2552 | Añadido el sábado, 14 de septiembre de 2024 17:26:16

It’s a very impressive and attractive thing to be able to spend time with someone and say, “look, we don’t agree, but so what? Tell me more about such-and-such . . .” If all else fails, try to recognize that everyone is doing the best they can, the smartest they can, and the nicest they can, with the circumstances they were dealt.
==========
progit (Scott Chacon)
- La subrayado en la posición 1855-1857 | Añadido el martes, 17 de septiembre de 2024 22:24:35

You can get a full list of remote references explicitly with git ls-remote <remote>, or git remote show <remote> for remote branches as well as more information.
==========
progit (Scott Chacon)
- La subrayado en la posición 1858-1859 | Añadido el martes, 17 de septiembre de 2024 22:25:05

Remote-tracking branches are references to the state of remote branches. They’re local references that you can’t move; Git moves them for you whenever you do any network communication,
==========
communicationpatterns (Jacqui Read)
- La subrayado en la posición 269-274 | Añadido el sábado, 21 de septiembre de 2024 13:38:48

Pattern A reusable solution known to be effective when used to solve a specific or more general problem, which may otherwise be known as techniques, practices, methods, or rules. Antipattern A solution that is not recommended. It looks like it is the right way to solve a problem when in reality its consequences outweigh any benefits.
==========
communicationpatterns (Jacqui Read)
- La subrayado en la posición 277-284 | Añadido el sábado, 21 de septiembre de 2024 13:40:25

Know Your Audience The know your audience pattern is also known as understanding your customer. One of the essential factors to keep in mind when creating and editing a diagram is who is going to be viewing and reading it. Your diagram’s purpose is to communicate successfully with this audience.
==========
communicationpatterns (Jacqui Read)
- La subrayado en la posición 290-292 | Añadido el sábado, 21 de septiembre de 2024 13:40:41

Tip Make a list of the roles that view your diagrams and then group the roles based on the types of diagrams you create. You will likely find that you have a different audience mix for different diagrams. Use these lists with the questions near the end of this section.
==========
communicationpatterns (Jacqui Read)
- La subrayado en la posición 316-317 | Añadido el sábado, 21 de septiembre de 2024 13:43:49

After identifying your audience, ask yourself the following about them: What do they want from you?
==========
communicationpatterns (Jacqui Read)
- La subrayado en la posición 319-320 | Añadido el sábado, 21 de septiembre de 2024 13:43:59

What do you want from them?
==========
communicationpatterns (Jacqui Read)
- La subrayado en la posición 322-322 | Añadido el sábado, 21 de septiembre de 2024 13:44:35

What is their technical understanding?
==========
communicationpatterns (Jacqui Read)
- La subrayado en la posición 325-326 | Añadido el sábado, 21 de septiembre de 2024 13:44:42

What level of detail do they need? Whether the content is technical
==========
communicationpatterns (Jacqui Read)
- La subrayado en la posición 339-345 | Añadido el sábado, 21 de septiembre de 2024 13:45:55

Mixing Levels of Abstraction Mixing levels of abstraction is a communication antipattern that has a counterpart in the coding world.
==========
communicationpatterns (Jacqui Read)
- La subrayado en la posición 354-355 | Añadido el sábado, 21 de septiembre de 2024 13:47:40

levels of abstraction let you hide low-level details from high-level concepts.
==========
communicationpatterns (Jacqui Read)
- La subrayado en la posición 368-380 | Añadido el sábado, 21 de septiembre de 2024 13:51:57

The C4 model is a hierarchy of abstractions. It uses an abstraction first approach (prioritizing abstraction and building everything else around it). Its four abstraction layers define its core diagrams:3 The system context shows an overview of the system and how it fits into its environment, including interactions between the system and other entities. The container level zooms in on the software system in scope, showing the high-level components or building blocks and how they interact with each other and external entities. The component level zooms in further on an individual container from the previous level. It shows the components inside the container and their interactions with each other and with external entities. The code level zooms in still further on a component from the previous level. It shows how the component is implemented. (This level is often more detail than is necessary in your documentation).
==========
communicationpatterns (Jacqui Read)
- La subrayado en la posición 394-400 | Añadido el sábado, 21 de septiembre de 2024 13:54:56

C4 models, based around a hierarchy of abstractions, are an excellent way to illustrate the need to keep levels of abstraction separate in diagrams. This separation rule applies to all types of diagrams. Apply it to your sequence diagrams, data flow diagrams, diagrams with no formal notation, and all the other types of diagrams you use. All your diagrams should follow this rule; it is essential for communication. Once you have split up any
==========
communicationpatterns (Jacqui Read)
- El marcador en la posición 408 | Añadido el sábado, 21 de septiembre de 2024 13:55:32


==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 10 | posición 167-168 | Añadido el lunes, 23 de septiembre de 2024 00:30:45

La virtud nos ayuda a determinar cómo actuar, mientras que la tranquilidad es el estado mental que evitará el sufrimiento emocional.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 11 | posición 170-174 | Añadido el lunes, 23 de septiembre de 2024 00:31:30

El sabio nunca carecerá de alegría, pues ella nacerá de sus propias virtudes. · séneca · Sabes por experiencia cuántas vueltas has dado sin encontrar la buena vida (eudaimonia). No la has encontrado ni en la lógica ni en la riqueza, ni en la fama ni en el placer. ¿Cómo se logra entonces? Teniendo principios que gobiernan tus impulsos y tus acciones. ·  marco aurelio ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 12 | posición 185-190 | Añadido el lunes, 23 de septiembre de 2024 00:34:20

vivir de acuerdo a nuestra naturaleza. Nos decían que la naturaleza humana se diferenciaba en dos grandes aspectos de la del resto del mundo animal: tenemos capacidad de razonar y una profunda conexión social. Por estos motivos, vivir de acuerdo a nuestra naturaleza, o con virtud, implicaría actuar guiados siempre por la razón y por la moral, entendiendo que tenemos una responsabilidad social de ayudar a los demás.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 12 | posición 190-191 | Añadido el lunes, 23 de septiembre de 2024 00:34:46

los estoicos destacaban cuatro grandes virtudes: sabiduría, coraje, justicia y disciplina.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 13 | posición 206-207 | Añadido el lunes, 23 de septiembre de 2024 00:36:12

Todo lo que escuchamos es una opinión, no un hecho. Todo lo que vemos es una perspectiva, no la verdad. ·  marco aurelio
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 13 | posición 222-223 | Añadido el lunes, 23 de septiembre de 2024 00:37:02

Séneca: “es mucho más importante que te conozcas a ti mismo que darte a conocer a los demás”.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- El marcador en la página 14 | posición 237 | Añadido el lunes, 23 de septiembre de 2024 00:38:15


==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 15 | posición 268-269 | Añadido el jueves, 26 de septiembre de 2024 10:11:36

Coraje no es la ausencia de miedo, sino hacer lo correcto a pesar del miedo.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 15 | posición 271-274 | Añadido el jueves, 26 de septiembre de 2024 10:12:37

Séneca: “El coraje sin sabiduría es un tipo más de cobardía”.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 15 | posición 280-281 | Añadido el jueves, 26 de septiembre de 2024 10:14:57

Ninguna propensión humana es tan poderosa que no pueda ser vencida por la disciplina. · séneca
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 16 | posición 295-297 | Añadido el jueves, 26 de septiembre de 2024 10:15:09

Séneca afirmaba: “La disciplina es una gran ayuda para el que posee un mediocre ingenio”.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 16 | posición 297-302 | Añadido el jueves, 26 de septiembre de 2024 10:18:52

La disciplina es además condición necesaria para la libertad. El que no se domina a sí mismo deberá doblegarse a la autoridad de los demás.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 16 | posición 309-310 | Añadido el jueves, 26 de septiembre de 2024 10:19:41

forma de desarrollar cualidades que queremos: autoconocimiento, resiliencia, tolerancia a la frustración, capacidad de resolver problemas...
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 16 | posición 309-310 | Añadido el jueves, 26 de septiembre de 2024 10:19:51

Con frecuencia, enfrentar desafíos que tememos es la única forma de desarrollar cualidades que queremos: autoconocimiento, resiliencia, tolerancia a la frustración, capacidad de resolver problemas...
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 16 | posición 317-318 | Añadido el jueves, 26 de septiembre de 2024 10:20:16

La recompensa de una buena acción es haberla hecho. · séneca
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 16 | posición 325-329 | Añadido el jueves, 26 de septiembre de 2024 10:21:48

(sabiduría), tratas bien a los demás (con justicia), actúas a pesar del miedo (coraje) y superas los obstáculos y tentaciones (disciplina), seguramente te irá bien en la vida. Los estoicos eran conscientes de que al entrenar su mente para guiarse por estos principios alcanzarían con más facilidad cosas valoradas por la sociedad, como fama y riqueza. Como veremos, no rechazaban estos efectos secundarios, pero alertaban de que no debían ser la motivación principal.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 16 | posición 325-329 | Añadido el jueves, 26 de septiembre de 2024 10:22:04

Si te esfuerzas por adquirir conocimiento (sabiduría), tratas bien a los demás (con justicia), actúas a pesar del miedo (coraje) y superas los obstáculos y tentaciones (disciplina), seguramente te irá bien en la vida. Los estoicos eran conscientes de que al entrenar su mente para guiarse por estos principios alcanzarían con más facilidad cosas valoradas por la sociedad, como fama y riqueza. Como veremos, no rechazaban estos efectos secundarios, pero alertaban de que no debían ser la motivación principal.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 17 | posición 330-333 | Añadido el jueves, 26 de septiembre de 2024 10:23:01

No cultives la virtud porque esperas beneficios de ella. Aunque actuar con virtud asegure muchos beneficios, no es por ello que debes perseguir la virtud. Estos no son la causa ni la consecuencia de la virtud, sino un producto derivado. · séneca ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 17 | posición 337-340 | Añadido el jueves, 26 de septiembre de 2024 10:24:07

La tranquilidad acompaña la virtud del sabio. ·  musonio ruFo · Cuanto más cerca esté un hombre de una mente calmada, más cerca estará de su fuerza. ·  marco aurelio
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 17 | posición 341-343 | Añadido el jueves, 26 de septiembre de 2024 10:24:29

los estoicos daban mucha más relevancia a la virtud que a la tranquilidad, hacían mucho énfasis en mantener la serenidad mental, o Ataraxia, y de hecho veían entre ambos elementos una relación clara.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 18 | posición 348-351 | Añadido el jueves, 26 de septiembre de 2024 10:25:40

Los problemas son parte de la vida, y cuando resuelvas unos aparecerán otros. El objetivo de la vida no es eliminar todos nuestros problemas, sino actuar correctamente y mantener la paz mental a pesar de su existencia.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 18 | posición 354-356 | Añadido el jueves, 26 de septiembre de 2024 10:26:27

La mente, inalterada por violentas pasiones, es una ciudadela, y un hombre no tiene fortaleza más segura en la que refugiarse. · marco aurelio ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 18 | posición 358-360 | Añadido el jueves, 26 de septiembre de 2024 10:26:59

No son las cosas que nos pasan las que nos dañan, sino nuestra opinión sobre ellas. · epicteto
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 18 | posición 360-361 | Añadido el jueves, 26 de septiembre de 2024 10:27:18

pasiones, los estoicos se referían a las emociones irracionales o exageradas, que nublan la razón y dificultan la virtud.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 18 | posición 362-364 | Añadido el jueves, 26 de septiembre de 2024 10:28:14

Veían estas emociones desproporcionadas como patológicas, y las consideraban causantes de buena parte del sufrimiento humano. De ahí el énfasis que hacían en controlarlas. Y digo controlar porque los estoicos no proponían suprimir estas emociones, sino canalizarlas de manera productiva para minimizar su efecto perjudicial.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 19 | posición 368-370 | Añadido el jueves, 26 de septiembre de 2024 10:28:55

“Ninguna cantidad de sabiduría te permitirá eliminar estas respuestas naturales. Ninguna cosa innata puede ser eliminada, pero sí moderada con la práctica”.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 19 | posición 373-373 | Añadido el jueves, 26 de septiembre de 2024 10:29:30

Conquistamos las pasiones volviéndonos más fuertes que ellas, no evitando que aparezcan.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 19 | posición 390-403 | Añadido el jueves, 26 de septiembre de 2024 10:31:01

Denominaban a estas pasiones pathē, y al estado mental libre de ellas apatheia. Este concepto se tradujo al castellano como apatía, con claras connotaciones negativas.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 19 | posición 413-420 | Añadido el jueves, 26 de septiembre de 2024 10:32:06

Por otro lado, el objetivo del estoicismo, como parte de la eudaimonia (felicidad), era mantener un estado mental donde predominaran emociones positivas como el afecto hacia los demás y la gratitud por la vida. Marco Aurelio hablaba por ejemplo de estar “libre de pasiones pero lleno de afecto”.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 20 | posición 435-443 | Añadido el jueves, 26 de septiembre de 2024 10:35:35

Hacer depender nuestro bienestar de cosas fuera de nuestro control es una de las principales causas de insatisfacción. ¿Qué nos dice Epicteto que está bajo nuestro control? Solamente nuestras percepciones y nuestras acciones. ¿Qué está por tanto fuera de nuestro control? Todo lo demás.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 23 | posición 488-490 | Añadido el jueves, 26 de septiembre de 2024 10:41:14

No esperes que los eventos sucedan como deseas, sino desea que ocurran como son, y tu vida transcurrirá sin problemas. ·  epicteto ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 23 | posición 490-492 | Añadido el jueves, 26 de septiembre de 2024 10:41:49

No está en nuestro poder tener lo que deseamos, pero sí está en nuestro poder no desear lo que no tenemos y aprovechar todo lo que nos ha llegado. ·  séneca
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 24 | posición 522-523 | Añadido el jueves, 26 de septiembre de 2024 10:44:10

El destino guía a quien lo acepta, y arrastra a quien lo rechaza. · séneca ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 24 | posición 524-525 | Añadido el jueves, 26 de septiembre de 2024 10:44:32

No se trata de resignarse, sino de evitar desperdiciar tiempo y esfuerzo inútilmente.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 24 | posición 527-529 | Añadido el jueves, 26 de septiembre de 2024 10:45:05

Aceptación no implica resignación. Utilizar nuestra capacidad de razonamiento para mitigar un daño emocional no implica que no hagamos todo lo posible por cambiar. Se trata de hacer lo mejor que podamos con lo que tengamos, en vez de lamentarnos por lo que nos ha tocado.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 24 | posición 556-557 | Añadido el jueves, 26 de septiembre de 2024 10:46:42

“Señor, concédeme serenidad para aceptar las cosas que no puedo cambiar, coraje para cambiar las que sí puedo, y sabiduría para discernir la diferencia.”
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- El marcador en la página 25 | posición 557 | Añadido el jueves, 26 de septiembre de 2024 10:46:55


==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 25 | posición 558-564 | Añadido el jueves, 26 de septiembre de 2024 10:47:46

Algunas cosas son buenas, otras malas y otras indiferentes. Lo bueno es la virtud, lo malo lo que se aleja de la virtud. Lo indiferente son cosas como la riqueza, la salud o la reputación.¿Dónde debes buscar entonces lo bueno y lo malo? En ti, en lo que te pertenece. En lo que no te pertenece no debes usar los términos bueno o malo. · epicteto · Todos mis bienes están conmigo: justicia, valor, sabiduría, la disposición a no considerar como un bien nada que se nos pueda arrebatar. · séneca ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 25 | posición 575-577 | Añadido el jueves, 26 de septiembre de 2024 10:48:54

Solo hay un camino a la felicidad: desapégate de las cosas que no dependen de ti. · epicteto
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 25 | posición 569-575 | Añadido el jueves, 26 de septiembre de 2024 10:49:08

Es un concepto poderoso, pero difícil de aceptar. Implica que todo eso que valoramos tanto, desde nuestra salud hasta nuestro dinero, pasando por nuestra vida misma, son realmente indiferentes. Si te choca esta afirmación, espera un poco, y entenderás su justificación.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 26 | posición 598-603 | Añadido el jueves, 26 de septiembre de 2024 10:50:08

La clave está en la distinción que hacen entre las cosas indiferentes, separando las preferidas de las no preferidas.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 26 | posición 604-611 | Añadido el jueves, 26 de septiembre de 2024 10:51:34

Desdeñaré lo que me arroje el destino, pero si pudiera escoger, tomaría lo mejor de él. · séneca · El sabio no se menosprecia aunque sea muy pequeño de talla, pero preferirá ser alto. Soportará la mala salud, aunque deseará la buena. · séneca · Los estoicos recomendaban centrarse en lo que verdaderamente podemos controlar: nuestro comportamiento en el presente y nuestras respuestas a lo que nos sucede. Valoraban los comportamientos por sí mismos, y consideraban el resultado indiferente.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 26 | posición 615-624 | Añadido el jueves, 26 de septiembre de 2024 10:52:25

Reconocían por ejemplo que la vida es preferible a la muerte, la salud a la enfermedad, la riqueza a la pobreza, los amigos a los enemigos y el placer al dolor. Perseguían por tanto lo preferido, pero no ligaban su felicidad a conseguirlo.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 26 | posición 615-630 | Añadido el jueves, 26 de septiembre de 2024 10:52:40

Reconocían por ejemplo que la vida es preferible a la muerte, la salud a la enfermedad, la riqueza a la pobreza, los amigos a los enemigos y el placer al dolor. Perseguían por tanto lo preferido, pero no ligaban su felicidad a conseguirlo. Cuando no lograban su objetivo no lo percibían como un fracaso, sino como el resultado del destino. Aprendían de ello pero no se hundían. Simplemente se concentraban en su siguiente respuesta.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 26 | posición 632-634 | Añadido el jueves, 26 de septiembre de 2024 10:53:45

tomar buenas decisiones respecto a nuestra salud y nuestras finanzas, pero nos recordaban que el verdadero sabio florece incluso en la pobreza y la enfermedad. El sabio no necesita nada pero aprovecha todo. El necio cree que necesita muchas cosas pero las usa todas mal.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 26 | posición 632-634 | Añadido el jueves, 26 de septiembre de 2024 10:53:53

Consideraban que vivir con sabiduría implicaba tomar buenas decisiones respecto a nuestra salud y nuestras finanzas, pero nos recordaban que el verdadero sabio florece incluso en la pobreza y la enfermedad. El sabio no necesita nada pero aprovecha todo. El necio cree que necesita muchas cosas pero las usa todas mal.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 27 | posición 635-637 | Añadido el jueves, 26 de septiembre de 2024 10:54:51

Veían el dinero y la fama como indiferentes favorables, mejor tenerlos que no, pero nunca comprometerían sus valores (lo único realmente bueno) para obtener algo indiferente.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 27 | posición 654-658 | Añadido el jueves, 26 de septiembre de 2024 10:56:52

Para Epicteto era mejor vivir con poco en una mente calmada que vivir en la abundancia con una mente distorsionada. No es más rico quien más tiene sino quien menos desea. Valoraban mucho más sus acciones que sus posesiones. Las cosas materiales son indiferentes, pero cómo las usas no. Tu uso de ellas puede ser bueno o malo. · epicteto ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 28 | posición 663-665 | Añadido el jueves, 26 de septiembre de 2024 10:58:12

“Si mis riquezas desaparecen no se llevarán nada más que a ellas mismas. Tú quedarás aturdido si ellas se alejan de ti. En casa del sabio las riquezas están al servicio, en casa del necio están al mando”.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 28 | posición 669-674 | Añadido el jueves, 26 de septiembre de 2024 10:59:07

Para la mayoría, la adquisición de riqueza no representa el fin de los problemas, sino un cambio de los mismos. El motivo es que el fallo no está en la riqueza, sino en la mente. Lo que supone una carga en la pobreza lo sigue siendo en la riqueza. Un enfermo sobre una cama de madera sigue igual de enfermo aunque lo pongas en una cama de oro. Allá donde lo poses, su enfermedad seguirá con él. De igual manera, una mente enferma lo seguirá estando en la pobreza o en la riqueza. · séneca ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 29 | posición 696-700 | Añadido el jueves, 26 de septiembre de 2024 11:00:41

Sigue la vida mejor, no la más agradable, de modo que el placer no sea el guía, sino el compañero de la voluntad recta y buena, pues es la razón quien tiene que guiarnos. · séneca · Tantas cosas por las que te fuerzas buscando el placer son causa de dolor. · séneca ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 30 | posición 716-718 | Añadido el jueves, 26 de septiembre de 2024 11:02:10

Quien se mantiene dentro de los deseos naturales no notará la pobreza, pero quien sobrepasa los límites naturales será perseguido por la pobreza incluso en la opulencia. · séneca ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 30 | posición 737-739 | Añadido el jueves, 26 de septiembre de 2024 11:03:49

Cuando el placer corrompe la mente y el cuerpo, nada es ya tolerable. No porque el sufrimiento sea fuerte, sino porque la persona es débil. · séneca ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 30 | posición 740-740 | Añadido el jueves, 26 de septiembre de 2024 11:04:37

placer a más placer, una adaptación hedónica constante donde cada vez requerimos más para sentirnos
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 30 | posición 739-740 | Añadido el jueves, 26 de septiembre de 2024 11:04:41

La comodidad llama a más comodidad y el placer a más placer, una adaptación hedónica constante donde cada vez requerimos más para sentirnos igual.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 30 | posición 740-742 | Añadido el jueves, 26 de septiembre de 2024 11:04:53

La única forma de llevar una vida realmente satisfactoria es basándola en los dos pilares anteriores: la virtud y la tranquilidad.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 31 | posición 744-746 | Añadido el jueves, 26 de septiembre de 2024 11:05:29

Los placeres nos parecen mejores cuando los perseguimos que cuando los alcanzamos. Si fueran realmente buenos nos traerían satisfacción constante, pero con frecuencia son como una bebida que solo da más sed. · séneca
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 31 | posición 761-764 | Añadido el jueves, 26 de septiembre de 2024 11:07:04

“Cuantos más placeres te capturen, más dueños debes servir”, o “cuando un hombre se vuelve dependiente del placer, también lo hace del dolor, convirtiéndose en esclavo de estos dos dueños caprichosos y tiranos”.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 32 | posición 774-776 | Añadido el jueves, 26 de septiembre de 2024 11:07:50

Quienes se dejan atrapar por el placer, y no pueden vivir sin él, son los más desdichados, al permitir que algo superfluo se convierta en necesario.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 33 | posición 806-810 | Añadido el jueves, 26 de septiembre de 2024 11:11:16

“Hay adversidades que golpean hasta al más sabio: dolor físico, invalidez, la pérdida de un amigo o un hijo, la catástrofe de su país si es destrozado por la guerra. El sabio es sensible a estos eventos, porque no debe ser duro como una roca. No hay virtud en sobreponerse a eso que no sientes”.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 33 | posición 811-814 | Añadido el jueves, 26 de septiembre de 2024 11:11:31

no trataban de reprimir la emoción, pero utilizaban distintas estrategias para poner en perspectiva el sufrimiento, mitigando así su efecto.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 33 | posición 826-830 | Añadido el jueves, 26 de septiembre de 2024 11:13:09

A veces es necesaria la destrucción para dar espacio a una prosperidad mayor. Muchas cosas han caído para ser reemplazadas por otras mejores. Timagenes, un enemigo de nuestra ciudad, no se alegraba cuando los fuegos arrasaban Roma, porque sabía que mejores edificios reemplazarían los que se habían destruido. · séneca ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 34 | posición 852-854 | Añadido el jueves, 26 de septiembre de 2024 11:14:43

logras algo bueno con esfuerzo, el esfuerzo pasa rápido pero lo bueno permanece. Si haces algo malo por placer, el placer pasa rápido pero lo malo permanece. · musonio
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 35 | posición 872-875 | Añadido el jueves, 26 de septiembre de 2024 11:17:32

La naturaleza ha unido el placer a lo necesario, no para quedarnos simplemente con el placer, sino para que esas cosas que necesitamos nos resulten atractivas. · séneca ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 35 | posición 875-877 | Añadido el jueves, 26 de septiembre de 2024 11:18:00

como ya advertían los estoicos, es que los humanos hemos separado el placer de la necesidad, convirtiendo al placer en un fin en sí mismo. Esto no es siempre malo, pero debemos ejercer la moderación en estos casos, o recibiremos el dolor en caso contrario.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 35 | posición 875-879 | Añadido el jueves, 26 de septiembre de 2024 11:18:14

como ya advertían los estoicos, es que los humanos hemos separado el placer de la necesidad, convirtiendo al placer en un fin en sí mismo. Esto no es siempre malo, pero debemos ejercer la moderación en estos casos, o recibiremos el dolor en caso contrario. Paradójicamente, ejercer autocontrol nos permite extraer a largo plazo más placer de las cosas que su uso excesivo.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 36 | posición 881-884 | Añadido el jueves, 26 de septiembre de 2024 11:18:59

Es la mente la que nos hace ricos. Va con nosotros al exilio y a los lugares más inhóspitos. Cuando el cuerpo tiene lo necesario, es la mente la que nos permite disfrutar de sus bondades. · séneca ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 36 | posición 893-894 | Añadido el jueves, 26 de septiembre de 2024 11:20:09

saludable, fácil de preparar y en la cantidad que nuestro cuerpo requiere. Proponía también entrenar para tolerar la
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 36 | posición 891-893 | Añadido el jueves, 26 de septiembre de 2024 11:20:23

Epicteto, recomendaba comida sencilla y saludable, fácil de preparar y en la cantidad que nuestro cuerpo
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 36 | posición 891-893 | Añadido el jueves, 26 de septiembre de 2024 11:20:30

Epicteto, recomendaba comida sencilla y saludable, fácil de preparar y en la cantidad que nuestro cuerpo requiere.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 36 | posición 902-902 | Añadido el jueves, 26 de septiembre de 2024 11:22:42

sofistas, maestros de la retórica. La oratoria sofista no estaba orientada a reflejar la verdad,
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 36 | posición 901-902 | Añadido el jueves, 26 de septiembre de 2024 11:22:59

Marco Aurelio despreciaba especialmente a los sofistas, maestros de la retórica. La oratoria sofista no estaba orientada a reflejar la verdad,
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 36 | posición 901-902 | Añadido el jueves, 26 de septiembre de 2024 11:23:18

Marco Aurelio despreciaba especialmente a los sofistas, maestros de la retórica. La oratoria sofista no estaba orientada a reflejar la verdad, sino a alardear.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 36 | posición 901-912 | Añadido el jueves, 26 de septiembre de 2024 11:29:08

Marco Aurelio despreciaba especialmente a los sofistas, maestros de la retórica. La oratoria sofista no estaba orientada a reflejar la verdad, sino a alardear. De los sofistas deriva el término “sofisticación”, como algo que se aleja de lo sencillo y lo natural. Cuando fue emperador, Marco Aurelio redujo la pompa y la ostentación, un gesto apreciado por su pueblo. Usaba con frecuencia ropa sencilla, evitando la toga imperial, y recibía importantes invitados vestido como cualquier otro ciudadano. Esta moderación era parte de lo que los estoicos llamaban vivir apegado a la naturaleza. Según Marco Aurelio, la diferencia entre
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 36 | posición 901-912 | Añadido el jueves, 26 de septiembre de 2024 11:29:17

Marco Aurelio despreciaba especialmente a los sofistas, maestros de la retórica. La oratoria sofista no estaba orientada a reflejar la verdad, sino a alardear. De los sofistas deriva el término “sofisticación”, como algo que se aleja de lo sencillo y lo natural. Cuando fue emperador, Marco Aurelio redujo la pompa y la ostentación, un gesto apreciado por su pueblo. Usaba con frecuencia ropa sencilla, evitando la toga imperial, y recibía importantes invitados vestido como cualquier otro ciudadano. Esta moderación era parte de lo que los estoicos llamaban vivir apegado a la naturaleza.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 36 | posición 912-918 | Añadido el jueves, 26 de septiembre de 2024 11:35:28

Según Marco Aurelio, la diferencia entre los sofistas y los estoicos es que los primeros hablaban para obtener alabanzas, los segundos para ofrecer enseñanzas. Los primeros intentaban crear una apariencia, los segundos describir la realidad. Los primeros usaban un lenguaje emocional y enrevesado, los segundos un lenguaje objetivo y claro.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 37 | posición 922-927 | Añadido el jueves, 26 de septiembre de 2024 21:29:54

¿Preguntas qué es libertad? No temer a los hombres ni a los dioses, no desear algo deshonesto ni excesivo y tener el completo dominio de uno mismo. · séneca · Piensa así. Eres un adulto, no te dejarás esclavizar más, zarandeado como una marioneta por cualquier impulso, te dejarás de quejar por tu situación presente y no temerás el futuro. · marco aurelio ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 37 | posición 928-930 | Añadido el jueves, 26 de septiembre de 2024 21:30:05

como decía Séneca, “La esclavitud más denigrante es la de ser esclavo de uno mismo”.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 38 | posición 945-947 | Añadido el jueves, 26 de septiembre de 2024 21:34:54

mejor pasar hambre sin dejarse abatir por el miedo o el dolor que vivir en opulencia pero lleno de preocupación. · epicteto ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 38 | posición 947-957 | Añadido el jueves, 26 de septiembre de 2024 21:35:31

Los estoicos veían su mente como una especie de fuego, capaz de fundir todo aquello que obstruyera su camino. Cualquier cosa que impidiera su acción se convertiría en su alimento, y nada les alejaría de hacer siempre lo correcto.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 38 | posición 958-960 | Añadido el jueves, 26 de septiembre de 2024 21:36:38

Lo que impide la acción anticipa la acción. Lo que se interpone en el camino se convierte en el camino. · marco aurelio ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 38 | posición 963-965 | Añadido el jueves, 26 de septiembre de 2024 21:37:16

¿Sabes por qué intentar escapar no te ayudará? Porque tu mente irá contigo. Debes liberarte de tu carga mental antes de poder estar a gusto en cualquier lugar. · séneca ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 38 | posición 970-971 | Añadido el jueves, 26 de septiembre de 2024 21:38:09

el deseo incontrolado es una forma de esclavitud.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 39 | posición 972-975 | Añadido el jueves, 26 de septiembre de 2024 21:38:24

Te conviertes en eso a lo que le prestas atención. · epicteto · El mayor lastre de la vida es la espera del mañana y la pérdida del hoy. · séneca ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 39 | posición 979-995 | Añadido el jueves, 26 de septiembre de 2024 21:41:54

El simple hecho de observar nuestros pensamientos y comportamientos nos hará más conscientes de lo que ocurre en nuestra mente. Este es precisamente el propósito de un proceso que los estoicos denominaban prosoche, con tres beneficios claros: 1.  Tomar el control de nuestra atención nos permite mejorar nuestros pensamientos y acciones, dirigiéndolos hacia nuestros verdaderos objetivos. 2.  Centrarse en el presente evita gran parte del sufrimiento emocional causado por recuerdos del pasado o miedos del futuro. 
 3.     Concentrarse en el momento actual ayuda a tolerar la adversidad.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 39 | posición 995-995 | Añadido el jueves, 26 de septiembre de 2024 21:42:15

La atención es la lámpara de la mente, y nos permite observar pensamientos de los que antes no éramos conscientes.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 39 | posición 997-998 | Añadido el jueves, 26 de septiembre de 2024 21:42:34

Entender por qué hacemos lo que hacemos es el primer paso para mejorar nuestro comportamiento. Si esta atención está ausente seremos una marioneta en manos de impulsos inconscientes.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 40 | posición 1002-1004 | Añadido el jueves, 26 de septiembre de 2024 21:43:18

Como vimos en la dicotomía de control, tanto el pasado como el futuro están fuera de nuestro control, de ahí la importancia de centrarnos en lo que podemos cambiar: lo que está justo delante de nosotros. El presente es la única parcela temporal sobre la que podemos actuar.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 40 | posición 1005-1007 | Añadido el jueves, 26 de septiembre de 2024 21:43:40

Juicio objetivo, ahora, en este momento. Acción racional, ahora, en este momento. Aceptación incondicional de todos los eventos externos, ahora, en este momento. Esto es todo lo que necesitas. · marco aurelio ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 41 | posición 1025-1028 | Añadido el jueves, 26 de septiembre de 2024 21:45:35

No dejes que tus pensamientos sobre demasiadas cosas te aplasten. No llenes tu mente con todas las cosas malas que podrían ocurrir. Permanece centrado en la situación presente y pregúntate qué es tan difícil de ella que no la puedes superar. · marco aurelio ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 41 | posición 1040-1042 | Añadido el jueves, 26 de septiembre de 2024 21:46:40

En todo momento mantén la mente centrada en la tarea presente, ignorando el resto de consideraciones. Puedes lograr esto si afrontas cada tarea como si fuera la última, sin distracción, sin subversión emocional de la razón, sin drama, sin vanidad y sin queja por tu situación. · marco aurelio
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 42 | posición 1051-1053 | Añadido el jueves, 26 de septiembre de 2024 21:47:41

Si encuentras un hombre que enfrenta los peligros con coraje, que no se ve afectado por sus deseos, feliz en la adversidad, calmado en medio de la tormenta, ¿No es cierto que sentirás veneración por él? · séneca
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 42 | posición 1074-1075 | Añadido el jueves, 26 de septiembre de 2024 21:49:36

A muchos gobernarás si la razón te gobierna a ti. · séneca
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 43 | posición 1090-1092 | Añadido el jueves, 26 de septiembre de 2024 21:50:38

Es necesario tener un ideal que guía nuestros pensamientos y acciones, al igual que los marineros se guían por las constelaciones. · séneca
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 43 | posición 1104-1108 | Añadido el jueves, 26 de septiembre de 2024 21:51:36

persona sabia, y los que perseguían este ideal eran precisamente los llamados filósofos, traducible como amantes de la sabiduría. En momentos difíciles, los estoicos contemplaban esta imagen idealizada y se preguntaban qué haría una persona sabia. Nunca llegaremos por tanto a ser verdaderos estoicos, pero al intentarlo nos convertiremos en versiones mejores de nosotros.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 43 | posición 1112-1112 | Añadido el jueves, 26 de septiembre de 2024 21:52:23

“No expliques tu filosofía, vívela”.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 44 | posición 1119-1121 | Añadido el jueves, 26 de septiembre de 2024 21:53:21

ningún enemigo nos podía hacer tanto daño como nosotros mismos, de ahí la necesidad de dominar nuestro principal activo: la mente.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 45 | posición 1190-1192 | Añadido el jueves, 26 de septiembre de 2024 21:58:19

Si te dañan cosas externas no son ellas las que te dañan, sino tus creencias sobre ellas. Y está en tu poder cambiar esas creencias. · séneca ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 46 | posición 1204-1206 | Añadido el jueves, 26 de septiembre de 2024 22:00:03

cognitivo se refiere a todo lo que ocurre en tu mente, desde pensamientos a creencias, incluyendo tu capacidad de atención. Y lo conductual tiene que ver con tu comportamiento, tanto con lo que haces como con lo que evitas hacer.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 47 | posición 1212-1221 | Añadido el jueves, 26 de septiembre de 2024 22:01:39

Epicteto: 1. La práctica de la Percepción. Para mejorar el conocimiento de nuestra mente interior y del mundo exterior. 2.   La práctica de la Acción. Para comprender las decisiones y acciones que tomamos, evitando además dejarnos vencer por la procrastinación o el miedo. 3. La práctica del Control. Para responder de manera adecuada a la adversidad y a aquello que no podemos cambiar. Nos permite además vencer el deseo y la tentación.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 47 | posición 1212-1221 | Añadido el jueves, 26 de septiembre de 2024 22:02:30

las tres grandes prácticas estoicas propuestas por Epicteto: 1. La práctica de la Percepción. Para mejorar el conocimiento de nuestra mente interior y del mundo exterior. 2.   La práctica de la Acción. Para comprender las decisiones y acciones que tomamos, evitando además dejarnos vencer por la procrastinación o el miedo. 3. La práctica del Control. Para responder de manera adecuada a la adversidad y a aquello que no podemos cambiar. Nos permite además vencer el deseo y la tentación.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 47 | posición 1222-1222 | Añadido el jueves, 26 de septiembre de 2024 22:02:40

Visualizar con claridad, Actuar con determinación, Resistir con disciplina.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 48 | posición 1226-1228 | Añadido el jueves, 26 de septiembre de 2024 22:04:55

Los estoicos nos animaban a ver las cosas desde distintas perspectivas, logrando así una visión más objetiva. Esta capacidad de observación era un aspecto fundamental de la sabiduría, considerada generalmente la virtud más importante.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 52 | posición 1279-1286 | Añadido el jueves, 26 de septiembre de 2024 22:09:55

Los estoicos usaban esta fábula como metáfora de lo que es en realidad una buena vida. Aseguraban que es mejor enfrentar desafíos en persecución de algo que merece la pena que buscar una vida fácil y cómoda, que simplemente debilita nuestro cuerpo y espíritu. La persecución de placeres transitorios nunca será el camino hacia la eudaimonia. Muchos confunden placer con felicidad, pero la felicidad real está más ligada a la realización personal, y se debe trabajar.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- El marcador en la página 53 | posición 1291 | Añadido el jueves, 26 de septiembre de 2024 22:10:25


==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 53 | posición 1291-1296 | Añadido el viernes, 27 de septiembre de 2024 19:49:20

La tranquilidad depende del buen ordenamiento de la mente, lo único que realmente te pertenece. · marco aurelio · Nos convertimos en filósofos para descubrir la verdad y lo que es simplemente el resultado accidental de razonamientos equivocados, juicios apresurados o lecciones bien intencionadas pero equivocadas de nuestros padres y profesores. · epicteto ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 54 | posición 1311-1313 | Añadido el viernes, 27 de septiembre de 2024 19:50:34

Examina las cosas que aparecen en tu mente. Considera con objetividad lo que dicen los demás, y establece después tus propias convicciones. · epicteto ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 54 | posición 1315-1319 | Añadido el viernes, 27 de septiembre de 2024 19:51:21

Los estoicos entendían que no reaccionamos directamente a los eventos, sino a la interpretación que hacemos de ellos. Por eso advertían de la necesidad de cuestionar nuestras
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 54 | posición 1321-1323 | Añadido el viernes, 27 de septiembre de 2024 19:51:49

Si un evento externo te causa malestar,no es el evento en sí el que te daña, sino tu juicio sobre él. Y tienes el poder de cambiar tu juicio. · marco aurelio ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 55 | posición 1323-1325 | Añadido el viernes, 27 de septiembre de 2024 19:52:07

Los estoicos entendían el poder del lenguaje. Sabían que distintas palabras producen distintas respuestas emocionales. Proponían por tanto ser precisos y objetivos con los términos que empleamos, limitándonos a describir la realidad, sin añadir nada más.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 55 | posición 1354-1355 | Añadido el viernes, 27 de septiembre de 2024 19:54:14

Muchos creen que sus emociones son respuestas directas a lo que les ocurre, pero no es cierto. Entre el evento y la emoción hay una interpretación automática, un filtro inconsciente que condiciona nuestra respuesta.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 57 | posición 1377-1379 | Añadido el viernes, 27 de septiembre de 2024 19:55:41

Vigila constantemente tus percepciones, ya que estás protegiendo algo nada despreciable: tu respeto, tu valía, tu templanza, tu serenidad. En una palabra, tu libertad. · epicteto ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 57 | posición 1384-1385 | Añadido el viernes, 27 de septiembre de 2024 19:56:32

que nos incita a comer, convertimos un proceso inconsciente en uno consciente. Esto
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 57 | posición 1383-1385 | Añadido el viernes, 27 de septiembre de 2024 19:56:41

Lo que repetimos se fortalece, y con el tiempo esta reacción se automatiza. Al forzar esta “pausa estoica” ante la emoción que nos incita a comer, convertimos un proceso inconsciente en uno consciente. Esto
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 58 | posición 1402-1404 | Añadido el viernes, 27 de septiembre de 2024 19:58:38

Desde un punto de vista práctico, lo importante es entender que podemos intervenir en distintos pasos del proceso, logrando mayor tranquilidad mental (ataraxia) y mejorando nuestras decisiones.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 58 | posición 1405-1410 | Añadido el viernes, 27 de septiembre de 2024 19:58:57

Ninguna persona es libre si no es dueña de sí misma. · epicteto · 
 ¿Quieres gobernar un imperio? Empieza gobernándote a ti mismo. · publilio siro · El más poderoso es el que tiene poder sobre sí mismo. · séneca ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 59 | posición 1414-1416 | Añadido el viernes, 27 de septiembre de 2024 19:59:51

Por estos motivos los estoicos recomendaban cuestionar estas primeras percepciones y desconfiar de nuestras emociones. Que algo te haga sentir bien no quiere decir que sea bueno para ti. O que algo te dé miedo no quiere decir que debas huir de ello. El objetivo final es actuar siguiendo nuestros principios, no nuestras emociones.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 59 | posición 1414-1422 | Añadido el viernes, 27 de septiembre de 2024 20:00:12

Por estos motivos los estoicos recomendaban cuestionar estas primeras percepciones y desconfiar de nuestras emociones. Que algo te haga sentir bien no quiere decir que sea bueno para ti. O que algo te dé miedo no quiere decir que debas huir de ello. El objetivo final es actuar siguiendo nuestros principios, no nuestras emociones. Algunos interpretan esta regulación emocional como frialdad, y piensan que nos podría distanciar de los demás. Nada más lejos de la realidad. Son precisamente nuestras emociones distorsionadas las que dañan a menudo nuestras relaciones: enfados irracionales, envidias mal entendidas o celos injustificados.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 59 | posición 1428-1429 | Añadido el viernes, 27 de septiembre de 2024 20:00:34

los estoicos no proponen suprimir las emociones, sino explorarlas, con tranquilidad y sin sobrerreaccionar.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 59 | posición 1436-1438 | Añadido el viernes, 27 de septiembre de 2024 20:01:17

Recuerda que el mundo es inmune a tus emociones, responde únicamente a tus acciones. Y si tus acciones están guiadas por emociones distorsionadas tus resultados no serán los esperados.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 60 | posición 1446-1448 | Añadido el viernes, 27 de septiembre de 2024 20:02:18

En ningún sitio encontraremos un retiro más tranquilo que en nuestra propia mente. · marco aurelio
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 61 | posición 1469-1473 | Añadido el viernes, 27 de septiembre de 2024 20:04:02

Son más las cosas que nos asustan que las que nos dañan. Sufrimos más por la imaginación que por la realidad. · séneca · Por nuestra falta de práctica estoica estamos siempre inventando preocupaciones e imaginando que las cosas son peores de lo que en realidad son. · epicteto ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 62 | posición 1488-1490 | Añadido el viernes, 27 de septiembre de 2024 20:05:58

el primer paso es examinar la emoción, identificando su causa con precisión.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 62 | posición 1499-1501 | Añadido el viernes, 27 de septiembre de 2024 20:06:55

describir lo que nos da miedo de manera objetiva y con distancia cognitiva (una técnica que veremos más adelante).
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 62 | posición 1511-1519 | Añadido el viernes, 27 de septiembre de 2024 20:08:35

provocan: •         Cosas que realmente quieres evitar. Por ejemplo, te puede dar miedo lesionarte o fracasar en tu nuevo negocio. En estos casos debes aprovechar el miedo para tomar medidas preventivas. •         Cosas que debes hacer. En este caso, evitar el miedo solo te empequeñece. Por ejemplo puede ser miedo a la incomodidad de entrenar o de pasar hambre, a ser el “raro del grupo” o a hablar en público. En estos casos, la evitación no es buena opción. Debes prepararte para actuar.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 62 | posición 1511-1519 | Añadido el viernes, 27 de septiembre de 2024 20:08:42

Simplificando, habría dos tipos de cosas que lo provocan: •         Cosas que realmente quieres evitar. Por ejemplo, te puede dar miedo lesionarte o fracasar en tu nuevo negocio. En estos casos debes aprovechar el miedo para tomar medidas preventivas. •         Cosas que debes hacer. En este caso, evitar el miedo solo te empequeñece. Por ejemplo puede ser miedo a la incomodidad de entrenar o de pasar hambre, a ser el “raro del grupo” o a hablar en público. En estos casos, la evitación no es buena opción. Debes prepararte para actuar.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 63 | posición 1534-1536 | Añadido el viernes, 27 de septiembre de 2024 20:10:55

Los estoicos afirmaban que el miedo es muchas veces falta de familiaridad. Nos empequeñecemos ante lo que desconocemos, y como decía Séneca, la ignorancia es muchas veces la causa del miedo.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 63 | posición 1538-1540 | Añadido el viernes, 27 de septiembre de 2024 20:11:21

No es porque las cosas parezcan difíciles que no nos atrevemos. Es porque no nos atrevemos que las cosas parecen difíciles. · séneca
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 64 | posición 1553-1563 | Añadido el viernes, 27 de septiembre de 2024 20:13:17

Paradójicamente, visualizar con claridad tus miedos puede ayudarte a reducirlos. Para ello, los estoicos proponían la técnica denominada praemeditatio malorum, que consistía en imaginar que tus peores miedos se harían realidad. Es una técnica poderosa con multitud de beneficios, y la detallamos en el apartado de Armamento estoico. En el caso del miedo, te enseña a verlo con desapego, restándole además el factor sorpresa. Familiarizarte con el peor resultado te hace ver que con frecuencia la imaginación exagera la realidad.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 65 | posición 1570-1580 | Añadido el viernes, 27 de septiembre de 2024 20:14:56

Transforma el “¿Y si pasa..?” en “¿Y qué si pasa?”. En la mayoría de casos, las cosas que nos asustan no son tan malas como pensamos. Y qué si suspendes el examen, y qué si tu pareja te deja, y qué si tu proyecto fracasa. Lo pasarás mal un tiempo, sin duda, pero saldrás adelante. En resumen, no se trata de adoptar un optimismo ciego pensando que nada malo ocurrirá, sino de confiar en tus capacidades para lidiar con lo que ocurra. No temas el futuro. Lo enfrentarás con las mismas armas con las que enfrentas el presente. · marco aurelio
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 65 | posición 1587-1587 | Añadido el sábado, 28 de septiembre de 2024 13:27:00

Recuerda que coraje no es ausencia de miedo, sino hacer lo correcto a pesar del miedo.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 65 | posición 1587-1589 | Añadido el sábado, 28 de septiembre de 2024 13:28:16

Recuerda que coraje no es ausencia de miedo, sino hacer lo correcto a pesar del miedo. De hecho, la acción es el antídoto del miedo. La acción reduce la incertidumbre, y trae la mente del futuro al presente. Pones la mente en lo que puedes controlar, reduciendo además la ansiedad.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 65 | posición 1591-1593 | Añadido el sábado, 28 de septiembre de 2024 13:32:06

Pregúntate cuáles serían los posibles beneficios de hacer eso que te da miedo, asumiendo que saliera bien. Pregúntate a continuación cuál sería el coste de no hacer nada.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 65 | posición 1597-1597 | Añadido el sábado, 28 de septiembre de 2024 13:32:25

“El miedo a la mala suerte empeora nuestra suerte”,
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 66 | posición 1615-1616 | Añadido el sábado, 28 de septiembre de 2024 13:35:06

que puedan ser catastróficos. Se trata de exponerte a riesgos frecuentes pero controlados. Riesgos que te ayuden a crecer y vencer tus miedos pero que no te debiliten para siempre si la apuesta no sale como esperabas.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 66 | posición 1614-1616 | Añadido el sábado, 28 de septiembre de 2024 13:35:13

contento, independientemente del resultado. Dicho esto, debes minimizar la exposición a riesgos que puedan ser catastróficos. Se trata de exponerte a riesgos frecuentes pero controlados. Riesgos que te ayuden a crecer y vencer tus miedos pero que no te debiliten para siempre si la apuesta no sale como esperabas.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 67 | posición 1618-1619 | Añadido el sábado, 28 de septiembre de 2024 13:35:37

Hoy escapé de la ansiedad, o mejor dicho la descarté, porque está dentro de mí, en mis percepciones, no en algo externo. · marco aurelio
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 67 | posición 1623-1624 | Añadido el sábado, 28 de septiembre de 2024 13:36:09

Como decía Marco Aurelio, la ansiedad no es realmente algo externo, sino autogenerado.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 67 | posición 1624-1625 | Añadido el sábado, 28 de septiembre de 2024 13:36:18

Para los estoicos, la ansiedad se produce por intentar controlar aquello que no depende de nosotros.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 67 | posición 1629-1631 | Añadido el sábado, 28 de septiembre de 2024 13:41:17

Se daña más de lo necesario quien se daña antes de lo necesario. · séneca · Sufrimos con frecuencia porque
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 67 | posición 1629-1631 | Añadido el sábado, 28 de septiembre de 2024 13:41:24

Se daña más de lo necesario quien se daña antes de lo necesario. · séneca ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 68 | posición 1636-1640 | Añadido el sábado, 28 de septiembre de 2024 13:42:39

No seas desgraciado antes de tiempo. Muchas desgracias que temes quizá nunca lleguen, y con seguridad no han llegado. Por esta razón algunos acontecimientos nos atormentan más de lo que deben, otros antes de lo que deben y otros no deberían atormentarnos en absoluto, porque nunca ocurrirán. O aumentamos el dolor, o lo anticipamos o lo imaginamos. · séneca ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 68 | posición 1655-1657 | Añadido el sábado, 28 de septiembre de 2024 13:46:02

Una recomendación estoica al sentir ansiedad es preguntarte si tienes en este momento algún problema real. Salvo que sufras dolor físico (para el que los estoicos tenían sus propias recomendaciones) lo más probable es que no. Centrarte en el momento presente reduce la anticipación a los hechos inciertos del futuro, reduciendo la ansiedad.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 68 | posición 1655-1658 | Añadido el sábado, 28 de septiembre de 2024 13:46:38

Una recomendación estoica al sentir ansiedad es preguntarte si tienes en este momento algún problema real. Salvo que sufras dolor físico (para el que los estoicos tenían sus propias recomendaciones) lo más probable es que no. Centrarte en el momento presente reduce la anticipación a los hechos inciertos del futuro, reduciendo la ansiedad. Este es precisamente uno de los beneficios de la meditación.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 69 | posición 1660-1662 | Añadido el sábado, 28 de septiembre de 2024 13:46:59

No pases el tiempo que te queda pensando en las opiniones de otros, ya que te aleja de tu propio trabajo. · marco aurelio ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 69 | posición 1673-1674 | Añadido el sábado, 28 de septiembre de 2024 13:47:56

Los estoicos proponen, como siempre, centrarse en nuestro ámbito de control, y la opinión de los demás no depende de nosotros.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 69 | posición 1673-1676 | Añadido el sábado, 28 de septiembre de 2024 13:48:11

Los estoicos proponen, como siempre, centrarse en nuestro ámbito de control, y la opinión de los demás no depende de nosotros. Lo único que podemos hacer es actuar guiados por nuestros valores, y compararnos con las personas que éramos antes. Y, curiosamente, al hacer esto nuestra reputación tenderá a mejorar.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 69 | posición 1685-1687 | Añadido el sábado, 28 de septiembre de 2024 13:48:55

Sé tu propio espectador. Busca tu propio aplauso. · séneca ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 70 | posición 1690-1692 | Añadido el sábado, 28 de septiembre de 2024 13:49:28

¿Qué debemos hacer en cada momento? Lo mejor que esté en nuestras manos, y desapegarnos del resto. · epicteto ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 70 | posición 1692-1693 | Añadido el sábado, 28 de septiembre de 2024 13:49:47

La aceptación de todo lo externo nos da poder. Nos libera de la ansiedad y el miedo irracional. Nos permite dedicar toda nuestra atención y energía a nuestras acciones.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 70 | posición 1694-1699 | Añadido el sábado, 28 de septiembre de 2024 13:50:13

Cuando pienses que alguien te ofende o te insulta, no te dejes llevar por esa impresión. Recuerda que no es su comportamiento lo que te daña, sino tu juicio. · epicteto · 
 Elige no ser dañado, y no lo serás. Si no te sientes dañado, no lo has sido. · marco aurelio ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 70 | posición 1706-1709 | Añadido el sábado, 28 de septiembre de 2024 13:50:53

locura pasajera por la que pagamos un alto precio: “La ira incontenida es frecuentemente más dañina que la injuria que la provoca”, “La ira es un ácido que hace más daño al recipiente que la almacena que al objeto sobre el que se vierte”, o “La ira es como una piedra en caída libre, que se va descomponiendo contra las mismas cosas que golpea”.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 71 | posición 1715-1717 | Añadido el sábado, 28 de septiembre de 2024 13:52:32

postergación de la respuesta. Su primer asalto es duro, pero se debilitará con la espera. · séneca
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 71 | posición 1714-1717 | Añadido el sábado, 28 de septiembre de 2024 13:52:39

postergar la respuesta hasta calmar la mente. La mejor acción correctiva contra la ira es la postergación de la respuesta. Su primer asalto es duro, pero se debilitará con la espera. · séneca
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 72 | posición 1741-1742 | Añadido el sábado, 28 de septiembre de 2024 13:55:30

relajar la musculatura de la cara, respirar con calma, caminar despacio... Sabían que, en poco tiempo, el estado mental interno reflejaría el estado físico externo.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 72 | posición 1764-1766 | Añadido el sábado, 28 de septiembre de 2024 13:56:18

Mantenemos los fallos de los demás delante de nuestros ojos, y los nuestros propios tras nuestra espalda. · séneca
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 74 | posición 1800-1801 | Añadido el sábado, 28 de septiembre de 2024 13:58:32

No importa la ofensa que nos dan, sino cómo la recibimos. · séneca ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 74 | posición 1803-1806 | Añadido el sábado, 28 de septiembre de 2024 13:59:08

Si decides que la ofensa requiere respuesta, actúa con firmeza pero sin ira. Sé asertivo a la hora de exigir un trato justo. Oponte a los intentos de otros por controlarte o bloquear tus acciones. Con tranquilidad pero con determinación. Quien responde a la provocación con justicia demuestra más fortaleza que quien se deja llevar por la ira. No respondas como te atacan, responde como eres.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 75 | posición 1835-1837 | Añadido el sábado, 28 de septiembre de 2024 14:04:06

El éxito y el fracaso, el dolor y el placer, la riqueza y la pobreza. Todas estas cosas ocurren a personas buenas y a personas malas, y por tanto no traen nobleza ni vergüenza. · marco aurelio ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 77 | posición 1880-1885 | Añadido el sábado, 28 de septiembre de 2024 14:08:33

Dos elementos deben ser eliminados de una vez por todas: el miedo al sufrimiento futuro y el recuerdo de sufrimientos pasados. El segundo ya no me afecta y el primero todavía no me afecta. · séneca · ¿Qué sentido tiene traer sufrimientos del pasado?¿Ser infeliz ahora porque fuiste infeliz antes? · séneca ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 78 | posición 1888-1889 | Añadido el sábado, 28 de septiembre de 2024 14:09:55

Mira hacia el pasado, con sus imperios cambiantes que se alzaron y cayeron, y serás capaz de prever el futuro. · marco aurelio
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 77 | posición 1886-1893 | Añadido el sábado, 28 de septiembre de 2024 14:10:12

Revisar el pasado tiene su utilidad, y nos permite por ejemplo extraer lecciones valiosas que nos ayudarán a mejorar en el futuro. 
 Mira hacia el pasado, con sus imperios cambiantes que se alzaron y cayeron, y serás capaz de prever el futuro. · marco aurelio · Una vez extraídas las lecciones de tus errores, regresa al presente. No revises tus acciones anteriores una y otra vez. Céntrate en el presente y en actuar correctamente en el único momento que posees: ahora. No tropieces con algo que está detrás de ti. · séneca ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 80 | posición 1939-1940 | Añadido el sábado, 28 de septiembre de 2024 14:13:49

todo lo que llega a nuestras vidas como un préstamo del universo, que puede ser reclamado en cualquier momento.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 80 | posición 1946-1949 | Añadido el sábado, 28 de septiembre de 2024 14:14:48

Nadie se alegra menos de tu tristeza que la persona a la que se la ofreces. O bien no quiere que sufras, o bien no sabe que lo haces. Así que tu emoción no cumple ninguna función. Tus lágrimas no ayudan a nadie, y no tiene sentido prolongar lo inútil. · séneca ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- El marcador en la página 81 | posición 1954 | Añadido el sábado, 28 de septiembre de 2024 14:15:21


==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 81 | posición 1954-1957 | Añadido el sábado, 28 de septiembre de 2024 14:40:03

Recuerda, nunca lograrás las recompensas que otros han tenido sin realizar los mismos esfuerzos. No es razonable pensar que podemos obtener algo sin pagar su justo precio. Los que han logrado algo no tienen ventaja sobre ti, porque ellos tuvieron que pagar un precio. Siempre es nuestra elección si deseamos pagar el precio por alguna recompensa. · epicteto ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 81 | posición 1958-1959 | Añadido el sábado, 28 de septiembre de 2024 14:40:35

La envidia te da información sobre las cosas que deseas y las personas que admiras.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 81 | posición 1958-1960 | Añadido el sábado, 28 de septiembre de 2024 14:40:49

La envidia te da información sobre las cosas que deseas y las personas que admiras. Puede ser una fuente de energía, siempre que no permitas que la envidia derive en resentimiento.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 81 | posición 1967-1972 | Añadido el sábado, 28 de septiembre de 2024 14:42:58

Evidentemente no todos pagan el mismo precio por lo que alcanzan. Tenemos condiciones genéticas y socioeconómicas distintas, pero tus genes o la familia en la que naciste están fuera de tu control. Lamentarte por estos factores externos o porque alguien parte de una mejor situación no te ayudará.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 82 | posición 1977-1978 | Añadido el sábado, 28 de septiembre de 2024 14:43:58

pero nos olvidamos de todos lo que están detrás. A pesar de
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 82 | posición 1977-1979 | Añadido el sábado, 28 de septiembre de 2024 14:44:07

Nos enfadamos si alguien está delante de nosotros pero nos olvidamos de todos lo que están detrás. A pesar de haber recibido mucho, nos sentimos agraviados por no haber recibido más. · séneca
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 82 | posición 1987-1989 | Añadido el sábado, 28 de septiembre de 2024 14:45:53

Nadie puede tener todo lo que desea. Lo que todos podemos hacer es no desear lo que no tenemos, y disfrutar con alegría lo que poseemos. · séneca ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 84 | posición 2042-2044 | Añadido el sábado, 28 de septiembre de 2024 14:50:36

nuestra situación es “realmente insoportable” o simplemente “poco agradable”. Nuestra
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 86 | posición 2093-2093 | Añadido el sábado, 28 de septiembre de 2024 14:54:39

No solo tendemos a agrandar lo malo sino también a minimizar lo bueno.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 86 | posición 2097-2099 | Añadido el sábado, 28 de septiembre de 2024 14:54:59

Una técnica estoica para mitigar estas emociones poco productivas es precisamente reflexionar con frecuencia sobre todo lo bueno que tenemos o que logramos, contrarrestando así nuestro sesgo negativo.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 86 | posición 2111-2112 | Añadido el sábado, 28 de septiembre de 2024 14:55:49

No construyas expectativas negativas sobre el futuro. Aprende a ver todo como experimentos de los que obtendrás conocimiento, independientemente del resultado.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 88 | posición 2144-2151 | Añadido el sábado, 28 de septiembre de 2024 14:58:10

Son pensamientos rígidos sobre cómo deberíamos actuar, cómo nos deberían tratar los demás o cómo el mundo debería funcionar. Algunos psicólogos califican estos pensamientos como la tiranía de los deberías. En relación a nuestro propio comportamiento nos autoimponemos con frecuencia obligaciones imaginarias: Tengo que..., necesito..., debería... Muchos sienten por ejemplo la necesidad de complacer constantemente a los demás, y en consecuencia terminan postergando sus propios intereses.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 89 | posición 2161-2172 | Añadido el sábado, 28 de septiembre de 2024 14:59:14

Presta atención cuando te surjan pensamientos imperativos como “debería...” o “necesito...”. Prueba a convertir estas exigencias en preferencias. De “Necesito comer” a “Preferiría comer”, de “Debería hacer” a “Me gustaría hacer”. Se trata de reemplazar demandas rígidas por preferencias flexibles. Esta flexibilidad cognitiva nos permite adaptarnos a cada contexto, aumentando nuestra resiliencia ante los obstáculos que encontremos. Sin duda debemos aceptar nuestra responsabilidad e intentar mejorar, pero dándonos también cierta flexibilidad.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 89 | posición 2172-2176 | Añadido el sábado, 28 de septiembre de 2024 14:59:24

En relación a lo externo, entiende que el mundo es como es.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 90 | posición 2183-2185 | Añadido el sábado, 28 de septiembre de 2024 15:00:12

Cada vez que detectes un pensamiento automático recuerda tratarlo como una mera hipótesis que puede o no ser cierta, evaluando de manera razonada si se ajusta o no a la realidad.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 90 | posición 2183-2187 | Añadido el sábado, 28 de septiembre de 2024 15:00:24

Cada vez que detectes un pensamiento automático recuerda tratarlo como una mera hipótesis que puede o no ser cierta, evaluando de manera razonada si se ajusta o no a la realidad. Aborda este proceso con una mente curiosa. Aprovecha la prosoche (atención) estoica para identificar pensamientos dañinos y transformarlos en pensamientos útiles.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 90 | posición 2190-2192 | Añadido el sábado, 28 de septiembre de 2024 15:01:05

Primero pregúntate quién quieres ser. Después haz lo que tengas que hacer. · epicteto ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 91 | posición 2202-2205 | Añadido el sábado, 28 de septiembre de 2024 15:02:20

En muchos viajes, seguir los caminos marcados evita que nos perdamos. Pero muchas veces los caminos más transitados son los más peligrosos. No sigamos, como ovejas, al resto del rebaño, porque nos lleva a donde el rebaño quiere, no a donde nosotros debemos ir. · séneca ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 92 | posición 2242-2244 | Añadido el sábado, 28 de septiembre de 2024 15:04:39

Céntrate en tu misión principal. Hay un momento y un lugar para la diversión y el ocio, pero nunca debes permitir que estos te desvíen de tu verdadero propósito. · epicteto ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 93 | posición 2258-2260 | Añadido el sábado, 28 de septiembre de 2024 15:06:32

Cuando alguien está centrado en su vida no necesita buscar aprobación externa. · epicteto ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 94 | posición 2276-2289 | Añadido el sábado, 28 de septiembre de 2024 15:09:31

Sabiduría. Puedes considerar el aprendizaje constante como uno de tus valores. No solo se trata de absorber conocimiento externo, sino de mejorar también el entendimiento de tu propio cuerpo. •      Coraje. Hacer lo correcto a pesar del miedo es sin duda un valor que merece la pena perseguir. Te hará además más consciente de cómo muchos miedos limitan tu vida, y este es el primer paso para vencerlos. •  Justicia. Las vidas más satisfactorias aportan algún propósito más allá de los individuales. Ayudar a los demás de alguna manera, aunque sea simplemente a través del ejemplo, enriquece nuestra vida. •    Disciplina. Cualquier propósito que merezca la pena requiere esfuerzo y sacrificio. Perseguir las cosas que realmente quieres implica necesariamente renunciar a otras. La libertad es por ejemplo un valor al que muchos aspiran, pero solo es posible a través de la disciplina. Si no aprendes a controlar tus impulsos serás esclavo de ellos.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 94 | posición 2291-2292 | Añadido el sábado, 28 de septiembre de 2024 15:09:47

Preocúpate menos por lo que tienes y más por lo que eres.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 95 | posición 2299-2300 | Añadido el sábado, 28 de septiembre de 2024 15:11:04

Cuando un hombre no sabe hacia dónde navega, ningún viento le es favorable. · séneca
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- El marcador en la página 95 | posición 2298 | Añadido el sábado, 28 de septiembre de 2024 15:11:10


==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 97 | posición 2326-2328 | Añadido el domingo, 29 de septiembre de 2024 18:02:10

Resultan ansiosas y desdichadas la obstinación y la volubilidad. Ambos extremos son enemigos de la tranquilidad. Uno por no permitir cambiar nada y el otro por no resistir nada. · séneca ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 97 | posición 2329-2334 | Añadido el domingo, 29 de septiembre de 2024 18:04:37

La obstinación con algún objetivo nos puede cegar, desarrollando una especie de visión de túnel que nos impide mantener una visión global. Los objetivos aumentan el foco, pero un foco demasiado estrecho, mantenido en el tiempo, nos puede llevar a ignorar cambios relevantes del contexto. Corremos además el riesgo de comprometer nuestros valores en persecución del objetivo. Por eso los estoicos nos recordaban que lo único realmente bueno es actuar con virtud. Cualquier otro objetivo sería un indiferente preferido, con valor en sí mismo pero que nunca debería separarnos de nuestros principios.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 97 | posición 2342-2344 | Añadido el domingo, 29 de septiembre de 2024 18:05:03

preferencias cambian, y lo que antes te motivaba quizá ahora no lo haga tanto, y esto es válido. O simplemente surge una oportunidad en tu camino que antes no estaba presente y te hace replantear tus objetivos. Esta flexibilidad es señal de buena salud mental, y te permite adaptarte a un mundo cambiante.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 98 | posición 2347-2349 | Añadido el domingo, 29 de septiembre de 2024 18:06:05

Debemos ser flexibles, para no encariñarnos demasiado con los objetivos que nos hemos fijado y pasar a aquellos a los que nos desvíe el azar, pero no debemos dejarnos atrapar por la volubilidad, el vicio más contrario al sosiego. · séneca
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 98 | posición 2350-2362 | Añadido el domingo, 29 de septiembre de 2024 18:20:27

Los volubles serían aquellos que se fijan metas pero se cansan pronto de ellas, y a las pocas semanas están persiguiendo objetivos nuevos. Estos cambios constantes hacen que nunca construyan nada relevante. Van dejando tras de sí muchos cimientos pero nada de valor sobre ellos. Empiezan con ánimo pero al enfrentar los primeros problemas se vienen abajo. Si te sientes identificado, sigue leyendo. Más adelante proponemos estrategias concretas para vencer esta resistencia. En resumen, si el objetivo que persigues ya no te ofrece motivación o se presenta una oportunidad mejor, ajusta tu dirección, pero no abandones simplemente porque no es tan fácil como pensabas. Desarrollar la capacidad de actuar a pesar de la dificultad es fundamental para mejorar tu salud y tu vida en general. Por último, no pospongas tu bienestar al momento en el que logres lo que anhelas. Celebra cada acción correcta. Recuerda que el camino es la recompensa.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 98 | posición 2363-2364 | Añadido el domingo, 29 de septiembre de 2024 18:20:55

El progreso no ocurre por accidente, sino trabajando en ti a diario. · epicteto
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 98 | posición 2367-2369 | Añadido el domingo, 29 de septiembre de 2024 18:21:55

El problema de los planes es que debemos hacerlos al comienzo, justo cuando menos información tenemos. Por este motivo los planes son en realidad organismos vivos, que deberás ir actualizando según tus resultados y el nuevo conocimiento acumulado. La planificación es por tanto un proceso, no un evento.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 100 | posición 2388-2392 | Añadido el domingo, 29 de septiembre de 2024 18:23:19

No pospongamos nada, combatamos la vida a diario. · séneca · 
 Para llevar una buena vida debes ser consistente, incluso cuando no es conveniente, cómodo o fácil. · epicteto ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 100 | posición 2394-2395 | Añadido el domingo, 29 de septiembre de 2024 18:24:21

camino que en el destino. No hay línea de meta en el proceso
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 100 | posición 2394-2395 | Añadido el domingo, 29 de septiembre de 2024 18:24:26

Por este motivo los estoicos hacían más énfasis en el camino que en el destino. No hay línea de meta en el proceso de mejora.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 100 | posición 2396-2397 | Añadido el domingo, 29 de septiembre de 2024 18:24:43

Debemos centrarnos en la acción que tenemos delante,
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 100 | posición 2396-2398 | Añadido el domingo, 29 de septiembre de 2024 18:24:55

Debemos centrarnos en la acción que tenemos delante, lo que realmente podemos modificar ahora mismo: la próxima comida, el próximo entrenamiento, la hora a la que nos acostamos esta noche.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 100 | posición 2406-2409 | Añadido el domingo, 29 de septiembre de 2024 18:25:52

Si no quieres ser malhumorado, no alimentes el hábito. No le des nada que promueva su crecimiento. Mantén silencio y cuenta los días en los que no te has dejado enfadar. «Solía enfadarme cada día, después cada dos días, después cada tres o cuatro días». Los malos hábitos son primero debilitados y después destruidos. · epicteto ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 102 | posición 2433-2434 | Añadido el domingo, 29 de septiembre de 2024 18:28:01

Ver tu progreso fortalece tu compromiso.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 102 | posición 2444-2446 | Añadido el domingo, 29 de septiembre de 2024 18:29:17

Adquiere el hábito de cuestionar cada percepción y preguntarte si es algo que está bajo tu control. Si no lo está, responde simplemente que no te va a preocupar. · epicteto
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 102 | posición 2447-2449 | Añadido el domingo, 29 de septiembre de 2024 18:29:38

no lograrás tranquilidad hasta que abraces la incertidumbre. La necesidad de control es una de las
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 102 | posición 2447-2449 | Añadido el domingo, 29 de septiembre de 2024 18:29:48

no lograrás tranquilidad hasta que abraces la incertidumbre. La necesidad de control es una de las causas principales de ansiedad.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 102 | posición 2455-2457 | Añadido el domingo, 29 de septiembre de 2024 18:30:26

Todo lo bueno requiere dar un paso hacia lo desconocido. Si necesitas certeza no probarás cosas nuevas, y sin experimentar no progresarás.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 102 | posición 2458-2459 | Añadido el domingo, 29 de septiembre de 2024 18:30:51

proporcional a la cantidad de incertidumbre que podemos tolerar.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 102 | posición 2458-2459 | Añadido el domingo, 29 de septiembre de 2024 18:31:01

Lo que logramos en la vida es por tanto proporcional a la cantidad de incertidumbre que podemos tolerar.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 104 | posición 2466-2468 | Añadido el domingo, 29 de septiembre de 2024 18:32:11

futuro. Primero, porque nada externo es realmente malo. Y segundo, porque cuando llegue ese futuro, lo afrontaremos con las mismas herramientas que nos están ayudando en el presente.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 104 | posición 2466-2468 | Añadido el domingo, 29 de septiembre de 2024 18:32:19

Marco Aurelio afirmaba que no debíamos temer el futuro. Primero, porque nada externo es realmente malo. Y segundo, porque cuando llegue ese futuro, lo afrontaremos con las mismas herramientas que nos están ayudando en el presente.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 104 | posición 2466-2469 | Añadido el domingo, 29 de septiembre de 2024 18:32:35

Marco Aurelio afirmaba que no debíamos temer el futuro. Primero, porque nada externo es realmente malo. Y segundo, porque cuando llegue ese futuro, lo afrontaremos con las mismas herramientas que nos están ayudando en el presente. Cuanto más trabajes tu mente, más confianza tendrás a la hora de enfrentar la incertidumbre diaria. Recuerda que el cambio es la única constante. No trates de evitarlo, abrázalo.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 105 | posición 2471-2473 | Añadido el domingo, 29 de septiembre de 2024 18:32:49

No pierdas el tiempo debatiendo cómo debería ser un hombre bueno. Sé uno. · marco aurelio ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 105 | posición 2473-2475 | Añadido el domingo, 29 de septiembre de 2024 18:33:08

La filosofía nos enseña a actuar, no a hablar. Exige de cada persona que viva según sus estándares y que su vida esté con armonía con sus palabras · séneca ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 106 | posición 2486-2490 | Añadido el domingo, 29 de septiembre de 2024 18:34:11

esto. Tu tiempo es limitado. Si no lo usas para liberarte se habrá ido, y nunca regresará. · marco aurelio · No es que tengamos poco tiempo, sino que desperdiciamos mucho. La vida, si sabes usarla, es larga. · séneca ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 106 | posición 2486-2490 | Añadido el domingo, 29 de septiembre de 2024 18:34:19

Recuerda cuánto tiempo llevas postergando esto. Tu tiempo es limitado. Si no lo usas para liberarte se habrá ido, y nunca regresará. · marco aurelio · No es que tengamos poco tiempo, sino que desperdiciamos mucho. La vida, si sabes usarla, es larga. · séneca ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 106 | posición 2495-2497 | Añadido el domingo, 29 de septiembre de 2024 18:34:44

recurso no renovable que se agota igual de rápido independientemente del uso que de él hagamos. Aquellos
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 106 | posición 2495-2498 | Añadido el domingo, 29 de septiembre de 2024 18:34:51

recurso no renovable que se agota igual de rápido independientemente del uso que de él hagamos. Aquellos que han logrado cosas asombrosas lo han hecho con las mismas 24 horas. No podemos añadir más horas al día, pero podemos ser más selectivos con las cosas a las que dedicamos las horas que tenemos.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 106 | posición 2486-2498 | Añadido el domingo, 29 de septiembre de 2024 18:35:10

Recuerda cuánto tiempo llevas postergando esto. Tu tiempo es limitado. Si no lo usas para liberarte se habrá ido, y nunca regresará. · marco aurelio · No es que tengamos poco tiempo, sino que desperdiciamos mucho. La vida, si sabes usarla, es larga. · séneca · El tiempo es la materia prima de la vida, un recurso no renovable que se agota igual de rápido independientemente del uso que de él hagamos. Aquellos que han logrado cosas asombrosas lo han hecho con las mismas 24 horas. No podemos añadir más horas al día, pero podemos ser más selectivos con las cosas a las que dedicamos las horas que tenemos.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 107 | posición 2508-2510 | Añadido el domingo, 29 de septiembre de 2024 18:36:07

Las personas son cuidadosas con su propiedad personal, y sin embargo derrochan su tiempo con facilidad, precisamente con lo que deberían ser más avariciosos. · séneca ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 107 | posición 2511-2511 | Añadido el domingo, 29 de septiembre de 2024 18:36:29

Debemos ser despiadados a la hora de proteger nuestro activo más preciado.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 107 | posición 2513-2515 | Añadido el domingo, 29 de septiembre de 2024 18:37:07

Nadie valora el tiempo, y lo gastamos de manera extravagante. Pero piensa en la reacción de esas mismas personas cuando el médico les dice que su muerte está cerca. Estarían dispuestos a dar todo lo que tienen por vivir un
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 107 | posición 2513-2516 | Añadido el domingo, 29 de septiembre de 2024 18:37:13

Nadie valora el tiempo, y lo gastamos de manera extravagante. Pero piensa en la reacción de esas mismas personas cuando el médico les dice que su muerte está cerca. Estarían dispuestos a dar todo lo que tienen por vivir un poco más. · séneca ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 107 | posición 2517-2519 | Añadido el domingo, 29 de septiembre de 2024 18:37:48

No puedo presumir de no desperdiciar nada, pero al menos sé cuánto desperdicio y en qué. · séneca ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 108 | posición 2524-2527 | Añadido el domingo, 29 de septiembre de 2024 18:39:04

Pensamos que solo compramos cosas que pagamos con dinero, mientras que consideramos gratis las cosas que pagamos con nuestro tiempo. · séneca ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 108 | posición 2530-2532 | Añadido el domingo, 29 de septiembre de 2024 18:39:19

Mientras que una persona disfruta mejorar su granja y otra su caballo, yo disfruto mejorarme a mí mismo a diario. · epicteto ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 108 | posición 2533-2535 | Añadido el domingo, 29 de septiembre de 2024 18:39:32

Lo único que nos pertenece es nuestro tiempo. · séneca ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 108 | posición 2548-2549 | Añadido el domingo, 29 de septiembre de 2024 18:46:40

En la mayoría de casos, cuando alguien afirma que no tiene tiempo está en realidad dando prioridad a otras cosas, quizá menos alineadas con sus valores.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- El marcador en la página 108 | posición 2532 | Añadido el domingo, 29 de septiembre de 2024 19:00:10


==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 109 | posición 2573-2575 | Añadido el domingo, 29 de septiembre de 2024 20:12:37

Nos quejamos de que nuestros días son pocos pero actuamos como si fueran infinitos. · séneca ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 109 | posición 2580-2582 | Añadido el domingo, 29 de septiembre de 2024 20:13:16

Quien pretende llegar a un sitio determinado debe emprender un solo camino y no tantear muchos a un tiempo, pues esto último no es caminar sino vagar. · séneca ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 110 | posición 2585-2586 | Añadido el domingo, 29 de septiembre de 2024 20:13:59

Es importante en este caso aplicar el principio de Pareto, dedicando el grueso de tu tiempo a las actividades de mayor impacto.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 111 | posición 2598-2599 | Añadido el domingo, 29 de septiembre de 2024 20:15:27

Debes entender que tu atención tiene gran valor, por eso multitud de empresas compiten por ella. Debes preguntarte cuánto de ese valor capturas tú y cuánto entregas gratuitamente a negocios como Netflix o Instagram.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 111 | posición 2603-2604 | Añadido el domingo, 29 de septiembre de 2024 20:15:53

Te conviertes en eso a lo que le prestas atención. Si no eliges tus pensamientos, otros los elegirán por ti. · epicteto
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 111 | posición 2612-2614 | Añadido el domingo, 29 de septiembre de 2024 20:17:16

En cada momento mantén la atención en la tarea que tienes entre manos. Realiza cada tarea como si fuera la última, evitando la distracción, el drama, la vanidad y la queja por tu situación. · marco aurelio
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 112 | posición 2618-2619 | Añadido el domingo, 29 de septiembre de 2024 20:17:56

presente y no dependas tanto del mañana. · séneca ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 112 | posición 2617-2619 | Añadido el domingo, 29 de septiembre de 2024 20:18:04

definición es la acción presente. Aprovecha cada hora. Céntrate en la acción presente y no dependas tanto del mañana. · séneca ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 112 | posición 2618-2619 | Añadido el domingo, 29 de septiembre de 2024 20:18:16

Aprovecha cada hora. Céntrate en la acción presente y no dependas tanto del mañana. · séneca ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 112 | posición 2621-2623 | Añadido el domingo, 29 de septiembre de 2024 20:18:40

La mayoría de lo que hacemos y decimos no es esencial. Si lo puedes eliminar ganarás tiempo y tranquilidad. Pregúntate en todo momento, ¿es esto necesario? · marco aurelio
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 112 | posición 2624-2625 | Añadido el domingo, 29 de septiembre de 2024 20:18:46

Lo innecesario, aunque cueste un sólo céntimo, es caro. · séneca ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 112 | posición 2630-2631 | Añadido el domingo, 29 de septiembre de 2024 20:19:38

Como decía Epicteto: “Si quieres mejorar debes estar dispuesto a parecer ignorante sobre muchas cosas comunes”.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 113 | posición 2651-2653 | Añadido el domingo, 29 de septiembre de 2024 20:20:33

Incluso las acciones más pequeñas deben ir alineadas con un fin. · marco aurelio
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 113 | posición 2646-2651 | Añadido el domingo, 29 de septiembre de 2024 20:20:43

Como decía Marco Aurelio: “La atención que dedicas a cualquier acción debe corresponder con su valor”. No esperes lograr buenos resultados si dedicas mucho tiempo a cosas sin valor.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 114 | posición 2671-2673 | Añadido el domingo, 29 de septiembre de 2024 20:23:14

Cuántos han robado parte de tu vida cuando no eras consciente de lo que perdías. Cuánto has desperdiciado en preocupaciones infundadas, deseos avariciosos y diversiones sociales. Y qué poco de tu tiempo te quedó para ti. · séneca ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 114 | posición 2676-2678 | Añadido el domingo, 29 de septiembre de 2024 20:23:37

Podrías actuar bien hoy, pero eliges mañana. · marco aurelio · La postergación es el mayor derroche
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 114 | posición 2676-2680 | Añadido el domingo, 29 de septiembre de 2024 20:23:45

Podrías actuar bien hoy, pero eliges mañana. · marco aurelio · La postergación es el mayor derroche de vida: se lleva los días según llegan, y nos niega el presente al prometernos el futuro. El principal obstáculo para la vida es la expectativa, que nos atrae con el mañana y nos hace perder el hoy. · séneca ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 115 | posición 2691-2693 | Añadido el domingo, 29 de septiembre de 2024 20:26:03

En esas mañanas cuando te cueste levantarte de la cama, piensa que te estás levantando para hacer el trabajo de un ser humano. ¿Por qué estar molesto si vas a hacer lo que debes hacer? ¿O acaso fuiste hecho para calentarte bajo las sábanas? · marco aurelio
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 116 | posición 2704-2706 | Añadido el domingo, 29 de septiembre de 2024 20:28:21

Que todos tus esfuerzos vayan dirigidos hacia algo, mantén tu mirada en el destino. · séneca ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 116 | posición 2710-2711 | Añadido el domingo, 29 de septiembre de 2024 20:31:50

Comenzar es la mitad del trabajo. Comienza después con la mitad restante y habrás terminado. · marco aurelio
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 116 | posición 2726-2728 | Añadido el domingo, 29 de septiembre de 2024 20:33:24

Si quieres tranquilidad, haz menos, haz lo esencial. · marco aurelio ·
==========
Siddhartha  
- El marcador en la página 14 | Añadido el domingo, 29 de septiembre de 2024 23:23:48


==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 117 | posición 2739-2739 | Añadido el lunes, 30 de septiembre de 2024 21:44:36

Piensa a lo grande pero empieza pequeño.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 118 | posición 2740-2743 | Añadido el lunes, 30 de septiembre de 2024 21:45:01

Para hacer cualquier cosa bien debes tener la humildad para tropezar, para seguir tu intuición, para perderte, para parecer torpe. Ten el coraje de empezar algo y hacerlo mal. Las vidas insignificantes se caracterizan por el miedo de no verse capaces de intentar algo nuevo. · epicteto ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 118 | posición 2747-2748 | Añadido el lunes, 30 de septiembre de 2024 21:45:34

No se trata de ser perfecto, sino de ser mejor que tu versión anterior. Muchos tienen miedo
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 118 | posición 2751-2753 | Añadido el lunes, 30 de septiembre de 2024 21:46:07

Ve el mundo a través de los ojos de un principiante. Saber que no sabes y admitir que no sabes, sin necesidad de disculparte, te da fuerza y te prepara para avanzar en cualquier ámbito. · epicteto ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 119 | posición 2763-2763 | Añadido el lunes, 30 de septiembre de 2024 21:46:49

Planes mediocres seguidos de acciones mediocres darán mejores resultados que planes perfectos que se quedan en tu cabeza.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 119 | posición 2765-2766 | Añadido el lunes, 30 de septiembre de 2024 21:47:06

Es muy simple en realidad: si dices que vas a hacer algo, hazlo. · epicteto
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 119 | posición 2765-2769 | Añadido el lunes, 30 de septiembre de 2024 21:47:27

Es muy simple en realidad: si dices que vas a hacer algo, hazlo. · epicteto · ¿Naciste entonces para sentirte bien en vez de para hacer y experimentar? ¿No ves cómo las plantas, los pájaros, las hormigas y las abejas hacen su labor sin protestar, lo mejor que pueden? ¿No estás dispuesto a hacer tu trabajo como ser humano?. · marco aurelio ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 120 | posición 2799-2801 | Añadido el lunes, 30 de septiembre de 2024 21:57:12

Es mejor ser profesional que ser auténtico. Un profesional es alguien que dice y hace lo correcto independientemente de sus sentimientos.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 120 | posición 2806-2807 | Añadido el lunes, 30 de septiembre de 2024 21:58:08

Al actuar logras resultados, y esos resultados te motivan a continuar. La acción se convierte en la causa de la motivación, en vez de su consecuencia.
==========
Siddhartha  
- La subrayado en la página 14 | Añadido el lunes, 30 de septiembre de 2024 23:25:42

brahmán
==========
Siddhartha  
- El marcador en la página 16 | Añadido el lunes, 30 de septiembre de 2024 23:34:03


==========
Siddhartha  
- La subrayado en la página 21-21 | Añadido el martes, 1 de octubre de 2024 17:17:27

Quien meditando, con el alma purificada, se hunde en Atman, no puede describir con palabras el gozo de su corazón. Pero Siddhartha callaba. Reflexionaba sobre las palabras
==========
Siddhartha  
- El marcador en la página 22 | Añadido el martes, 1 de octubre de 2024 17:19:05


==========
Siddhartha  
- El marcador en la página 25 | Añadido el jueves, 3 de octubre de 2024 23:12:28


==========
Siddhartha  
- La subrayado en la página 36-36 | Añadido el sábado, 5 de octubre de 2024 14:06:01

Gran contenido el de la doctrina del transfigurado Buda, bien enseña a vivir rectamente y a evitar el mal. Pero esta doctrina tan clara, tan venerable, no contiene una cosa: no contiene el misterio que el mismo Sublime ha experimentado, él solo entre cientos de miles. Por esto continuaré mi peregrinación, no en busca de otra doctrina mejor, pues sé que no la hay, sino para abandonar todas las doctrinas y todos los maestros y para alcanzar solo mi meta o morir. Pero siempre pensaré en este día, ¡oh Sublime!, y en la hora en que mis ojos vieron un santo
==========
Siddhartha  
- La subrayado en la página 40-40 | Añadido el sábado, 5 de octubre de 2024 14:13:44

"Lo que yo quería aprender era la esencia y el sentido del yo. Quería vencer y librarme del yo. Pero no podía vencerlo, sino engañarlo, no podía huir de él, sino solamente ocultarme ante él.¡En verdad que nada ha ocupado tanto mi pensamiento como este mi yo, este enigma de mi vivir, de que yo sea uno, separado y diferenciado de todos los demás, de que yo sea Siddhartha! ¡Y de ninguna cosa en el mundo sé menos que de mí mismo, de Siddhartha
==========
Siddhartha  
- La subrayado en la página 40-40 | Añadido el sábado, 5 de octubre de 2024 14:14:16

"Si no sé nada de mí, si Siddhartha es para mí tan extraño y desconocido, se debe a una sola causa: yo tenía miedo de mí, ¡huía de mí mismo!
==========
Siddhartha  
- La subrayado en la página 40-40 | Añadido el sábado, 5 de octubre de 2024 14:17:50

"Si no sé nada de mí, si Siddhartha es para mí tan extraño y desconocido, se debe a una sola causa: yo tenía miedo de mí, ¡huía de mí mismo! Buscaba a Atman, buscaba a Brahma, tenía la intención de desmenuzar mi yo para buscar en su interior el germen
==========
Siddhartha  
- La subrayado en la página 40-40 | Añadido el sábado, 5 de octubre de 2024 14:17:57

"Si no sé nada de mí, si Siddhartha es para mí tan extraño y desconocido, se debe a una sola causa: yo tenía miedo de mí, ¡huía de mí mismo! Buscaba a Atman, buscaba a Brahma, tenía la intención de desmenuzar mi yo para buscar en su interior el germen, el Atman, la vida, lo divino, el último fin. Pero me perdía.
==========
Siddhartha  
- La subrayado en la página 40-40 | Añadido el sábado, 5 de octubre de 2024 14:18:09

Oh —pensó, respirando hondamente—, ahora no quiero dejar escapar a Siddhartha
==========
Siddhartha  
- La subrayado en la página 40-40 | Añadido el sábado, 5 de octubre de 2024 14:18:35

Oh —pensó, respirando hondamente—, ahora no quiero dejar escapar a Siddhartha! Ya no quiero empezar mi pensar y mi vida con Atman y con el dolor del mundo. Ya no quiero matarme y despedazarme para encontrar un misterio entre las ruinas. Ya no me enseñarán ni el Yoga-Veda, ni el AtharvaVeda, ni los ascetas, ni ninguna otra doctrina. Quiero aprender
==========
Siddhartha  
- La subrayado en la página 41-41 | Añadido el sábado, 5 de octubre de 2024 14:18:45

en mí mismo, quiero ser discípulo, quiero conocerme a mí mismo, quiero conocer el secreto de Siddhartha.
==========
Siddhartha  
- La subrayado en la página 41-41 | Añadido el sábado, 5 de octubre de 2024 14:19:36

Miró en torno a sí, como si viera el mundo por primera vez.¡El mundo era hermoso, el mundo era polícromo, el mundo era extraño y misterio! Aquí era azul; allí, amarillo; más allá, verde; el cielo y el río fluían; las montañas y el bosque estaban inmóviles, todo era hermoso, mágico y lleno de misterio, y en medio de todo esto, él, Siddhartha, el que había despertado en el camino hacia sí mismo. Todo esto, el amarillo y el azul, el río y el bosque, penetraba por primera vez en Siddhartha a través de los ojos, ya no era el encantamiento de Mara, ya no era el velo de Maya, ya no era la multiplicidad insensata y casual del mundo visible, despreciable para el brahmán que piensa profundamente, que desdeña la multiplicidad, que busca la unidad. El azul era azul, el río era río, y aunque en el azul y en el río y en Siddhartha vivía oculto lo singular y divino, el arte y el sentido divino era precisamente lo que había puesto aquí el amarillo, el azul; allá, el cielo, el bosque, y en medio, a Siddhartha. El sentido y el ser no estaban por ahí tras de las cosas, sino que estaban en ellas, en todas.
==========
Siddhartha  
- La subrayado en la página 46-46 | Añadido el sábado, 5 de octubre de 2024 14:30:45

Tanto los pensamientos como los sentidos eran cosas hermosas; tras ellas estaba oculto el último significado; importaba escuchar a las dos, jugar con las dos, ni despreciarlas a ambas ni sobreestimarlas: escuchar las voces secretas de su interior
==========
Siddhartha  
- La subrayado en la página 54-54 | Añadido el sábado, 5 de octubre de 2024 14:44:29

el amor se puede mendigar, comprar, recibirlo regalado, encontrarlo en la calle, pero no se puede robar
==========
Siddhartha  
- La subrayado en la página 58-58 | Añadido el sábado, 5 de octubre de 2024 14:52:37

cuando arrojas una piedra al agua se va al fondo por el camino más corto. Así sucede cuando Siddhartha se propone algo. Siddhartha no hace nada, espera, piensa, ayuna, pero avanza a través de las cosas del mundo, como la piedra a través del agua, sin hacer nada, sin moverse; es empujado, se deja caer. Su meta le atrae, pues no deja
==========
Siddhartha  
- La subrayado en la página 59-59 | Añadido el sábado, 5 de octubre de 2024 14:52:42

penetrar nada en su alma que pueda entorpecerle el camino hacia su meta. Esto es lo que Siddhartha aprendió junto a los samanas. Esto es lo que los necios llaman sortilegio, y creen que el sortilegio es obrado por los demonios. Los demonios no hacen nada, no hay demonios. Todos pueden obrar prodigios, todos pueden alcanzar su meta
==========
Siddhartha  
- La subrayado en la página 59-59 | Añadido el sábado, 5 de octubre de 2024 14:52:48

penetrar nada en su alma que pueda entorpecerle el camino hacia su meta. Esto es lo que Siddhartha aprendió junto a los samanas. Esto es lo que los necios llaman sortilegio, y creen que el sortilegio es obrado por los demonios. Los demonios no hacen nada, no hay demonios. Todos pueden obrar prodigios, todos pueden alcanzar su
==========
Siddhartha  
- La subrayado en la página 59-59 | Añadido el sábado, 5 de octubre de 2024 14:52:59

penetrar nada en su alma que pueda entorpecerle el camino hacia su meta. Esto es lo que Siddhartha aprendió junto a los samanas. Esto es lo que los necios llaman sortilegio, y creen que el sortilegio es obrado por los demonios. Los demonios no hacen nada, no hay demonios. Todos pueden obrar prodigios, todos pueden alcanzar su meta si saben pensar, si saben esperar, si saben ayunar.
==========
Siddhartha  
- El marcador en la página 60 | Añadido el sábado, 5 de octubre de 2024 14:53:30


==========
Siddhartha  
- La subrayado en la página 69-69 | Añadido el domingo, 6 de octubre de 2024 13:32:28

La mayoría de los hombres, Kamala, son como hojas que caen del árbol, revolotean en el aire, vacilan y caen al suelo. Pero otros, unos pocos, son como estrellas que recorren un camino fijo, no las alcanza el viento y llevan en sí su propia ley y su propio rumbo. Entre todos los sabios y samanas que he conocido, no encontré más que uno de éstos y no le puedo olvidar. Es aquel Gotama, el Sublime, el profeta de aquella doctrina. Miles de jóvenes escuchan cada día su doctrina, siguen a diario sus preceptos, pero todos ellos son hojas desprendidas, no llevan en sí mismos la doctrina y la ley
==========
Siddhartha  
- El marcador en la página 82 | Añadido el domingo, 6 de octubre de 2024 14:35:23


==========
Siddhartha  
- La subrayado en la página 89-89 | Añadido el domingo, 6 de octubre de 2024 17:25:42

ayunar, esperar, pensar. Aquel había sido su tesoro, su poder su fuerza, su más firme báculo; había aprendido aquellas tres artes en los activos y penosos años de la juventud, no en otra época. Y ahora le habían abandonado, ya
==========
Siddhartha  
- La subrayado en la página 90-90 | Añadido el domingo, 6 de octubre de 2024 17:25:53

no era capaz de realizar ninguna de las tres: ni ayunar, ni esperar, ni pensar.¡Las había trocado por lo más miserable, por lo más perecedero, por el placer de los sentidos, por el buen vivir y la riqueza! En realidad, mal le había ido en todo. Y ahora, así le parecía, se había convertido en un verdadero hombre-niño
==========
Siddhartha  
- La subrayado en la página 91-91 | Añadido el domingo, 6 de octubre de 2024 17:29:47

Tuve que emplear muchos años en perder el espíritu, en olvidar otra vez el pensar, la unidad.¿No es como si yo, lentamente, dando un gran rodeo, me hubiera convertido de hombre en niño, de pensador en hombre-niño? Y, sin embargo, este camino ha sido muy bueno, y sin embargo no ha muerto en mi pecho el pájaro. Pero ¡qué camino! He tenido que pasar por un sin fin de estupideces, por multitud de vicios, por muchísimos errores, por numerosos ascos y decepciones y penas, solamente para volver a ser niño y poder empezar de nuevo. Pero así tenía que ser; mi corazón decía sí, y mis ojos sonreían. He tenido que soportar la desesperación, he tenido que hundirme hasta el pensamiento más insensato de todos, el pensamiento del suicidio, para poder alcanzar la gracia, para volver a sentir a Om, para poder volver a dormir como es debido. He tenido que ser un loco para volver a encontrar en mí a Atman
==========
Siddhartha  
- La subrayado en la página 91-91 | Añadido el domingo, 6 de octubre de 2024 17:29:57

Tuve que emplear muchos años en perder el espíritu, en olvidar otra vez el pensar, la unidad.¿No es como si yo, lentamente, dando un gran rodeo, me hubiera convertido de hombre en niño, de pensador en hombre-niño? Y, sin embargo, este camino ha sido muy bueno, y sin embargo no ha muerto en mi pecho el pájaro. Pero ¡qué camino! He tenido que pasar por un sin fin de estupideces, por multitud de vicios, por muchísimos errores, por numerosos ascos y decepciones y penas, solamente para volver a ser niño y poder empezar de nuevo. Pero así tenía que ser; mi corazón decía sí, y mis ojos sonreían. He tenido que soportar la desesperación, he tenido que hundirme hasta el pensamiento más insensato de todos, el pensamiento del suicidio, para poder alcanzar la gracia, para volver a sentir a Om, para poder volver a dormir como es debido. He tenido que ser un loco para volver a encontrar en mí a Atman. He tenido que pecar para poder seguir viviendo
==========
Siddhartha  
- El marcador en la página 96 | Añadido el domingo, 6 de octubre de 2024 17:45:52


==========
Siddhartha  
- La subrayado en la página 94-94 | Añadido el domingo, 6 de octubre de 2024 17:46:11

También ahora comprendía Siddhartha por qué siendo brahmán, siendo penitente, había luchado en vano con este yo.¡El saber demasiado le había impedido vencerlo, la mucha mortificación, el mucho obrar y el mucho esforzarse! Había vivido lleno de orgullo, siempre el más cuerdo, siempre el más celoso, siempre un paso delante de los demás, siempre el prudente y el espiritual, siempre el sacerdote o el sabio. En este sacerdocio, en este orgullo, en esta espiritualidad se había encastillado su yo, allí estaba firmemente asentado y crecía, mientras él creía matarlo con ayunos y penitencias. Ahora lo veía, y veía también que la voz interior había tenido razón, que ningún maestro le había podido liberar. Por esto hubo de salir al mundo, hubo de perderse en el placer y el poder, en la mujer y el dinero; hubo de convertirse en un comerciante, en jugador, en bebedor y en codicioso, hasta que dentro de él murieron el sacerdote y el samana. Por eso hubo de soportar estos años odiosos, el hastío, el vacío, la insensatez de una vida yerma y perdida hasta el fin, hasta la amarga desesperación, para que también pudiera morir el sensual Siddhartha, el ambicioso Siddhartha. Había muerto; un nuevo Siddhartha había despertado del sueño. También él llegaría a ser viejo, también tenía que morir alguna vez; Siddhartha era perecedero, perecedera era toda forma. Pero hoy era joven, era un niño, el nuevo Siddhartha, y estaba lleno de alegría
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 120 | posición 2811-2813 | Añadido el domingo, 6 de octubre de 2024 17:47:34

no esperes a que desaparezca el miedo, simplemente actúa a pesar del miedo. Y una vez más, la propia acción reduce el temor. Aprendes que lo que tanto temías no es en realidad tan malo como parecía. O si realmente lo era, te fortaleces igualmente al enfrentarlo.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 121 | posición 2832-2839 | Añadido el domingo, 6 de octubre de 2024 17:57:02

la llamada “Intención de Implementación”. Consiste básicamente en planificar nuestra respuesta ante una situación concreta: “Si se da la situación x, ejecutaré la respuesta y”. Algunos ejemplos: •         En cuanto suene el despertador, me levantaré de la cama. •         Cuando me pongan el pan en el restaurante, les pediré que se lo lleven.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 122 | posición 2853-2855 | Añadido el domingo, 6 de octubre de 2024 17:57:23

No debemos mantener la mente en constante tensión, sino darle espacios de distensión. El placer en moderación relaja la mente y le da equilibrio. · séneca · Alcanzar cualquier objetivo complejo
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 122 | posición 2853-2855 | Añadido el domingo, 6 de octubre de 2024 17:57:32

No debemos mantener la mente en constante tensión, sino darle espacios de distensión. El placer en moderación relaja la mente y le da equilibrio. · séneca ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 122 | posición 2858-2874 | Añadido el domingo, 6 de octubre de 2024 17:59:58

estrategia para lograrlo es el llamado “Empaquetado de tentaciones”, una técnica validada científicamente pero de implementación sencilla: •         Paso 1. Haz dos listas, una de cosas que debes hacer (en las que sueles procrastinar) y otra de cosas que disfrutas hacer (pero que no contribuyen a tus objetivos futuros). •          Paso 2. Crea un paquete con una tarea de cada lista, algo que debes hacer y algo que te gustaría hacer. •      Paso 3. Cuando hagas lo que debes, puedes hacer lo que quieres. De esta manera, hacer algo que mejorará tu futuro tiene una recompensa inmediata en el presente, reduciendo la procrastinación. Algunos ejemplos: •    Ver series de televisión solo mientras haces ejercicios de movilidad. •        Tomar un rico batido (de tu sabor favorito) solo los días que entrenas. •        Escuchar tu música
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 123 | posición 2883-2885 | Añadido el domingo, 6 de octubre de 2024 18:00:22

Asóciate con aquellos que te harán mejor. Da la bienvenida a esos que tú puedes mejorar. El proceso es mutuo, pues la gente aprende mientras enseña. · séneca
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 123 | posición 2895-2902 | Añadido el domingo, 6 de octubre de 2024 18:01:10

Aunque no usaban su entorno como excusa, y afirmaban que podemos mejorar en cualquier lugar y con cualquier compañía, recomendaban rodearse de aquellos que comparten objetivos similares. Todo cambio es más fácil en compañía que en solitario.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 123 | posición 2895-2905 | Añadido el domingo, 6 de octubre de 2024 18:03:31

Aunque no usaban su entorno como excusa, y afirmaban que podemos mejorar en cualquier lugar y con cualquier compañía, recomendaban rodearse de aquellos que comparten objetivos similares. Todo cambio es más fácil en compañía que en solitario. Los estoicos tenían un fuerte compromiso social, pero a la vez marcaban cierta distancia con las masas. Nos advertían que tendemos a perder nuestra propia identidad en medio de la multitud, adoptando por imitación comportamientos que no nos favorecen.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 123 | posición 2906-2909 | Añadido el domingo, 6 de octubre de 2024 18:03:49

Debes alternar solitud y multitud. La primera genera el deseo de compañía de otros, la segunda nos hace ansiar nuestra única compañía. Una será el remedio de la otra. · séneca ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 124 | posición 2929-2934 | Añadido el domingo, 6 de octubre de 2024 18:06:10

A medida que progresas en tu camino, la gente intentará bloquear tu avance. No podrán impedir que hagas lo correcto, así que no permitas que te hagan perder tu afecto hacia ellos. Mantente vigilante en ambos frentes, siempre haciendo lo correcto pero manteniendo amabilidad hacia los que obstruyen tu camino o te crean dificultad. Enfadarse es una debilidad, al igual que abandonar el camino o darse por vencido. · marco aurelio·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 126 | posición 2959-2960 | Añadido el domingo, 6 de octubre de 2024 18:08:54

Cruzaré el océano, si nada me lo impide. · séneca ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 126 | posición 2964-2966 | Añadido el domingo, 6 de octubre de 2024 18:09:57

el mejor plan y ejecutarlo a la perfección, pero el resultado final dependerá en parte del azar. Para reflejar esta realidad, los estoicos usaban con frecuencia la llamada hupexhairesis, que podría traducirse como cláusula de reserva.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 126 | posición 2963-2966 | Añadido el domingo, 6 de octubre de 2024 18:10:05

Como vimos previamente, muchas cosas no dependen de ti. Puedes tener el mejor plan y ejecutarlo a la perfección, pero el resultado final dependerá en parte del azar. Para reflejar esta realidad, los estoicos usaban con frecuencia la llamada hupexhairesis, que podría traducirse como cláusula de reserva.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 128 | posición 2979-2982 | Añadido el domingo, 6 de octubre de 2024 18:11:37

El hombre sabio mira el propósito de todas las acciones, no sus consecuencias. Los comienzos están en nuestra mano pero la fortuna determina el resultado, y eso no tiene ningún poder para cambiar mi veredicto sobre mí. · séneca ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 129 | posición 2996-2998 | Añadido el domingo, 6 de octubre de 2024 18:12:21

Entrégate por completo a tu propósito. Decide construir tu carácter a través de buenas acciones y comprométete a pagar el precio de perseguir objetivos dignos. Los desafíos que enfrentarás te harán conocer tus fortalezas. · epicteto ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 130 | posición 3010-3012 | Añadido el domingo, 6 de octubre de 2024 18:22:36

Perdona a los demás por sus errores, una y otra vez. Perdónate a ti mismo una y otra vez, pero intenta actuar mejor la próxima vez. · epicteto
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 130 | posición 3022-3024 | Añadido el domingo, 6 de octubre de 2024 18:23:48

La estrategia correcta es la opuesta: en vez de autocastigo, autocompasión. Tras una caída la respuesta debe ser siempre la misma: perdonarse, levantarse y continuar.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 130 | posición 3022-3030 | Añadido el domingo, 6 de octubre de 2024 18:26:53

La estrategia correcta es la opuesta: en vez de autocastigo, autocompasión. Tras una caída la respuesta debe ser siempre la misma: perdonarse, levantarse y continuar. Debemos criticar el comportamiento, no la persona. La energía que ahorras al no castigarte la puedes emplear en corregir tu comportamiento, lo realmente importante. Incluso cuando fallamos, nadie nos impide competir de nuevo inmediatamente. No tenemos que esperar cuatro años como en las Olimpiadas. · epicteto ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 131 | posición 3042-3044 | Añadido el domingo, 6 de octubre de 2024 18:28:20

Es posible empezar a vivir de nuevo. Ver las cosas como las viste hace tiempo, así se reinicia la vida. · marco aurelio
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 132 | posición 3067-3068 | Añadido el domingo, 6 de octubre de 2024 18:31:36

Si lo puedes tolerar, toléralo. Deja de quejarte. · marco aurelio ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 133 | posición 3072-3075 | Añadido el domingo, 6 de octubre de 2024 18:32:32

Es absurdo lamentarse por carecer de algo o porque algo te afecta adversamente. No debes sorprenderte o indignarte por las cosas que afectan a todos los humanos: muerte, enfermedad, accidentes... Cualquier cosa que el universo ponga en tu camino, acéptalo con la cabeza alta. No seas molestado por lo que no puedes evitar.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 134 | posición 3095-3097 | Añadido el domingo, 6 de octubre de 2024 18:34:43

El ignorante de la filosofía culpa a los demás por su situación. El estudiante de filosofía se culpa a sí mismo. El sabio no culpa a nadie. · epicteto ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 134 | posición 3100-3101 | Añadido el domingo, 6 de octubre de 2024 18:35:13

ajena a todo lo externo. La serenidad debe lograrse en el presente imperfecto.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 134 | posición 3100-3101 | Añadido el domingo, 6 de octubre de 2024 18:35:24

Para los estoicos, la felicidad viene de dentro, y es ajena a todo lo externo. La serenidad debe lograrse en el presente imperfecto.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 135 | posición 3112-3114 | Añadido el domingo, 6 de octubre de 2024 18:36:44

Los hombres no son perturbados por los eventos, sino por sus opiniones sobre ellos. · epicteto ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 136 | posición 3122-3135 | Añadido el domingo, 6 de octubre de 2024 18:38:21

problemas como una especie de entrenamiento filosófico. Cuando te surjan inconvenientes en tu día a día, aprovéchalos para practicar tu filosofía. La mayoría de problemas son menores: llegas tarde a una reunión, se rompe un vaso, se derrama leche, se avería el coche... Ante cada pequeño problema, practica el arte de penetrar entre el estímulo y la respuesta, mitigando el efecto de cada uno de estos eventos. Los puedes ver como un pequeño precio a pagar por mejorar tu fortaleza ante la adversidad. Aprender a lidiar con problemas pequeños te ayudará a superar problemas grandes más adelante.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 136 | posición 3135-3137 | Añadido el domingo, 6 de octubre de 2024 18:38:38

Empieza con cosas de poco valor: algo de aceite derramado, algo de vino robado... y repítete: «por un precio tan bajo compro tranquilidad y paz mental». · epicteto
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 137 | posición 3160-3166 | Añadido el domingo, 6 de octubre de 2024 18:41:13

Tanto para el dolor como para el resto de nuestros problemas, debemos intentar mantenerlos aislados en su parcela. Tendemos a fusionar nuestras preocupaciones en un gran amasijo mental, permitiendo que problemas en un área de nuestra vida infecten las demás. Debes aplicar el “divide y vencerás”. Evalúa los problemas uno a uno, definiendo estrategias específicas para cada uno.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 138 | posición 3176-3179 | Añadido el domingo, 6 de octubre de 2024 18:42:46

Toda dificultad es una oportunidad para mirar adentro e invocar nuestros recursos internos. Los desafíos que enfrentamos nos muestran nuestras fortalezas. El sabio mira más allá del problema y busca la forma de sacarle provecho. Posees fuerzas de las que no eres consciente. Encuentra la adecuada. Úsala. · epicteto ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 138 | posición 3189-3190 | Añadido el domingo, 6 de octubre de 2024 18:44:14

Acepta tu situación, por dura que sea, pero confía en tu capacidad de superarla. No importa si tardas un mes, un año o una década.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 139 | posición 3191-3193 | Añadido el domingo, 6 de octubre de 2024 18:45:15

La mente puede dar la vuelta a cualquier problema y usarlo para su propósito. · marco aurelio
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 140 | posición 3216-3217 | Añadido el domingo, 6 de octubre de 2024 18:48:08

Intenta ver todo como un experimento, donde el resultado es indiferente. Lo importante es la lección, y todo conocimiento te hará mejor.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 140 | posición 3227-3229 | Añadido el domingo, 6 de octubre de 2024 18:49:19

Las circunstancias no hacen al hombre, simplemente lo revelan. · epicteto ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 141 | posición 3237-3240 | Añadido el domingo, 6 de octubre de 2024 18:52:14

La adversidad nos convertirá en un contrincante a su altura. Los cuerpos de los marineros son fortalecidos por el envite del mar, las manos de los agricultores fortalecidas con callos y los brazos de los soldados fortalecidos al usar sus armas: mejoramos aquello que entrenamos. Es al sufrir adversidades que la mente aprende a desafiar el sufrimiento. · séneca ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 142 | posición 3251-3254 | Añadido el domingo, 6 de octubre de 2024 18:55:45

Qué desgraciado soy porque me pasó esto!» Para nada, piensa mejor: «soy afortunado, porque a pesar de lo que pasó, no estoy roto por el presente ni temeroso por el futuro». La adversidad no es una desgracia, sufrirla con grandeza de ánimo es una dicha. · séneca ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 142 | posición 3258-3260 | Añadido el domingo, 6 de octubre de 2024 18:56:22

Vencer sin peligro es ganar sin gloria. · séneca ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- El marcador en la página 143 | posición 3265 | Añadido el domingo, 6 de octubre de 2024 19:07:49


==========
Siddhartha  
- La subrayado en la página 102-102 | Añadido el jueves, 10 de octubre de 2024 18:51:11

Nada ha sido, nada será; todo es, todo tiene ser y presente
==========
Siddhartha  
- El marcador en la página 105 | Añadido el jueves, 10 de octubre de 2024 18:55:45


==========
Siddhartha  
- La subrayado en la página 105-105 | Añadido el jueves, 10 de octubre de 2024 23:13:37

No; el que busca de verdad la verdad no puede aceptar ninguna doctrina, al menos el que quiera encontrarla de verdad. Pero el que la ha encontrado puede sancionar toda doctrina, todo camino, toda meta, pues ya nada le separa de los mil otros que viven en la eternidad, que respiran la Divinidad
==========
Siddhartha  
- El marcador en la página 117 | Añadido el jueves, 10 de octubre de 2024 23:37:50


==========
Siddhartha  
- La subrayado en la página 129-129 | Añadido el viernes, 11 de octubre de 2024 16:47:46

En su rostro floreció la serenidad del saber del que no se opone ninguna voluntad, que conoce la perfección, que está de acuerdo con el río del devenir, con la corriente de la vida, lleno de compasión, lleno de gozo compartido, entregado a la corriente, perteneciente a la unidad
==========
Siddhartha  
- La subrayado en la página 128-128 | Añadido el viernes, 11 de octubre de 2024 16:48:04

Siddhartha escuchó. Escuchaba ahora con toda atención, enteramente, absorbiéndolo todo; sentía que al fin había aprendido a escuchar. Ya otras muchas veces había oído todo esto, todas aquellas voces en el río; pero hoy sonaban de modo distinto. Ya no sabía distinguir aquellas numerosas voces, ni las alegres de las llorosas, ni las infantiles de las de los hombres; pertenecían a todos juntos, lamentos del que añora, risas del sabio, gritos del colérico y gemidos del moribundo; todo era uno, todo entremezclado y enredado mil veces. Y todo junto, todas las voces, todos los fines, todos los anhelos, todos los dolores, todos los goces, todo lo bueno y lo malo, todo junto formaba el mundo. Todo ello formaba el río del acaecer, la música de la vida. Y aunque Siddhartha escuchaba atentamente este río, esta canción a mil voces; aunque no oía el dolor ni la risa, aunque no acordaba su alma a ninguna voz ni penetraba con su yo en ellas, sino que escuchaba el todo, percibía la unidad, y la gran canción de las mil voces venía a concentrarse en una sola palabra, que se llamaba Om: la perfección.
==========
Siddhartha  
- La subrayado en la página 131-131 | Añadido el viernes, 11 de octubre de 2024 16:56:09

aspirando a tu fin no ves muchas de las cosas que están cerca de tus ojos
==========
Siddhartha  
- La subrayado en la página 131-131 | Añadido el viernes, 11 de octubre de 2024 16:56:17

. Buscar significa tener un fin. Pero encontrar quiere decir ser libre, estar abierto a todo, no tener un fin. Tú venerable, quizá eres en realidad un buscador, pero aspirando a tu fin no ves muchas de las cosas que están cerca de tus ojos
==========
Siddhartha  
- La subrayado en la página 131-131 | Añadido el viernes, 11 de octubre de 2024 16:56:40

Cuando alguien busca —dijo Siddhartha—, suele ocurrir fácilmente que sus ojos solo ven la cosa que anda buscando, que no puede encontrar nada, que no deja entrar nada dentro de él, porque siempre está pensando en la cosa buscada, porque tiene un fin, porque está poseído por este fin. Buscar significa tener un fin. Pero encontrar quiere decir ser libre, estar abierto a todo, no tener un fin. Tú venerable, quizá eres en realidad un buscador, pero aspirando a tu fin no ves muchas de las cosas que están cerca de tus ojos
==========
Siddhartha  
- La subrayado en la página 133-133 | Añadido el viernes, 11 de octubre de 2024 17:00:27

La sabiduría no es comunicativa. La sabiduría que un sabio intenta comunicar suena siempre a necedad
==========
Siddhartha  
- La subrayado en la página 138-138 | Añadido el viernes, 11 de octubre de 2024 17:18:13

Las cosas pueden ser apariencia o no, yo también lo seré entonces, y siempre serán mis iguales. Esto es lo que las hace ser amadas y dignas de veneración para mí: que son mis iguales. Por esto puedo amarlas. Y esto forma una doctrina de la que puedes reírte: el amor, ¡oh Govinda!, me parece ser el motivo de todo. Examinar el mundo, explicarlo, despreciarlos, es posible que sea tarea de los grandes pensadores. Pero a mí solo me queda poder amar al mundo, no despreciarlo, no odiar ni al mundo ni a mí; poder observarle a él y a mí y a todos los seres con amor y admiración y respeto.
==========
Siddhartha  
- La subrayado en la página 139-139 | Añadido el viernes, 11 de octubre de 2024 17:36:56

Veo su grandeza no en sus discursos ni en sus pensamientos, sino en sus actos, en su vida
==========
Siddhartha  
- La subrayado en la página 137-137 | Añadido el viernes, 11 de octubre de 2024 17:37:33

Un pensamiento, ciertamente. He de confesarte, querido, que no hallo mucha diferencia entre pensamiento y palabra. Dicho con más claridad, no espero mucho de los pensamientos. Espero más de las cosas.Aquí, en esta barca, por ejemplo, había un hombre, mi antecesor y maestro, un santo varón que ha creído muchos años en el río, casi en nada. Ha notado que la voz del río le hablaba, de ella aprendió, ella le educó y enseñó; el río era un dios para él; durante muchos años ignoró que cada viento, cada nube, cada pájaro, cada escarabajo es tan divino y tan sabio y puede enseñar tanto como el reverenciado río. Cuando este santo varón se fue al bosque, lo sabía todo; sabía más que tú y que yo, sin haber tenido maestros, sin libros, solo por haber creído en el río
==========
Siddhartha  
- La subrayado en la página 138-138 | Añadido el viernes, 11 de octubre de 2024 17:37:59

Govinda dijo: —Pero todo eso que tú llamas cosas, ¿es algo real, algo sustancial? ¿No será solo un engaño de Maya, no será más que imagen y apariencia? Tu piedra, tu árbol, tu río, ¿son, pues, realidades? —Eso tampoco me preocupa mucho—dijo Siddhartha—. Las cosas pueden ser apariencia o no, yo también lo seré entonces, y siempre serán mis iguales. Esto es lo que las hace ser amadas y dignas de veneración para mí: que son mis iguales. Por esto puedo amarlas. Y esto forma una doctrina de la que puedes reírte: el amor, ¡oh Govinda!, me parece ser el motivo de todo. Examinar el mundo, explicarlo, despreciarlos, es posible que sea tarea de los grandes pensadores. Pero a mí solo me queda poder amar al mundo, no despreciarlo, no odiar ni al mundo ni a mí; poder observarle a él y a mí y a todos los seres con amor y admiración y respeto.
==========
Siddhartha  
- La subrayado en la página 137-137 | Añadido el viernes, 11 de octubre de 2024 17:38:19

O quizá porque amo a la piedra y al río y a todas estas cosas que vemos y de las cuales podemos aprender. Yo puedo amar a una piedra, Govinda, y también a un árbol o a un trozo de corteza. Pero no puedo amar las palabras. Por eso las doctrinas no son para mí, no tienen dureza, no tienen peso ni color, ni aristas, ni olor, ni gusto; no tienen más que palabras. Quizá sea esto lo que te impide encontrar la paz, quizá sean las muchas palabras. Pues también son simples palabras redención y virtud, sansara y nirvana. No hay ninguna cosa que sea nirvana; solo hay la palabra nirvana.
==========
Siddhartha  
- La subrayado en la página 136-136 | Añadido el viernes, 11 de octubre de 2024 17:38:39

hoy pienso así: esta piedra es piedra, es también animal, es también Dios, es también Buda, no la reverencio y amo porque puede convertirse en esto y lo otro, sino porque lo es todo por siempre jamás, y precisamente por esto, por ser piedra, por ahora se me aparece como piedra; por esto precisamente la amo y veo valor y sentido en cada una de sus vetas y poros, en sus amarillos y grises, en su dureza, en el sonido que produce cuando la golpeo, en la humedad o sequedad de su superficie. Hay piedras que al tacto parecen como de aceite o jabón; y otras como hojas, otras como arena, y cada cual es distinta y reza el Om a su manera, cada una es Brahma, pero al mismo tiempo es piedra, aceitosa o jabonosa, y esto es precisamente lo que me agrada y me parece maravilloso y digno de adoración. Pero no quiero hablar más de esto. Las palabras no benefician en nada al sentido oculto, lo que es siempre igual debe ser siempre algo distinto cuando se lo expresa, se debe falsear un poco, se debe presentar de un modo un poco extravagante.Si, y esto también es muy bueno y me agrada mucho, con esto también estoy muy de acuerdo: que lo que para un hombre tiene mucho valor y está lleno de cordura, para otro siempre suena a sandez.
==========
Siddhartha  
- La subrayado en la página 134-134 | Añadido el viernes, 11 de octubre de 2024 23:33:03

¡Lo contrario de cada verdad es igualmente cierto
==========
Siddhartha  
- La subrayado en la página 134-134 | Añadido el viernes, 11 de octubre de 2024 23:37:50

El mundo, amigo Govinda, no es imperfecto o en camino de perfecciones lentamente: no, es en cada momento perfecto
==========
Siddhartha  
- La subrayado en la página 135-135 | Añadido el viernes, 11 de octubre de 2024 23:40:41

Por esto, todo lo que es me parece bueno, así la muerte como la vida, el pecado como la santidad, la cordura como la insensatez; todo debe ser así, todo necesita solamente mi aprobación, mi consentimiento, mi amable comprensión; de esta forma es bueno para mí, nunca puede dañarme. He aprendido en mi cuerpo y en mi alma que necesito mucho el pecado, que necesito el placer, el deseo de los bienes, la vanidad, y necesito la ignominiosa desesperación para aprender a renunciar a toda resistencia, para aprender a amar al mundo, para no volverlo a comparar con cualquiera de los mundos deseados o ensoñados por mí, con cualquiera de las formas de perfección pensadas por mí, sino dejarlo como es, amarlo tal cual es y pertenecer gustosamente a él. Estos son, ¡oh Govinda!, algunos de los pensamientos que se me han ocurrido.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 143 | posición 3274-3275 | Añadido el sábado, 12 de octubre de 2024 17:34:40

La libertad no se logra satisfaciendo deseos, sino eliminándolos. · epicteto ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 144 | posición 3288-3291 | Añadido el sábado, 12 de octubre de 2024 17:35:48

Paradójicamente, intentar suprimir un pensamiento lo refuerza.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 144 | posición 3292-3293 | Añadido el sábado, 12 de octubre de 2024 17:36:10

El objetivo no es autocensurarse, sino alinear nuestras acciones con nuestras convicciones.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 145 | posición 3319-3323 | Añadido el sábado, 12 de octubre de 2024 17:38:35

Las cosas que la gente más valora e intenta con más esfuerzo lograr no les satisfacen una vez que las alcanzan. Los que no las poseen imaginan que, una vez las tengan, se sentirán bien. Pero al lograrlas, el deseo sigue, la agitación sigue, su indiferencia por lo que poseen sigue, y su deseo por lo que no tienen sigue. · epicteto ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 145 | posición 3326-3329 | Añadido el sábado, 12 de octubre de 2024 17:39:38

Solo vemos lo bueno de algo cuando lo perseguimos, y solo vemos lo malo cuando lo alcanzamos. · séneca · Dicho esto, recuerda que los estoicos no rechazan el placer per se, y no se oponen a disfrutarlo en moderación de vez en cuando, siempre que lo mantengamos bajo control.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 145 | posición 3330-3331 | Añadido el sábado, 12 de octubre de 2024 17:39:58

Los placeres, cuando superan cierto umbral, se convierten en castigos. · marco aurelio
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 146 | posición 3335-3337 | Añadido el sábado, 12 de octubre de 2024 17:40:51

Cuando seas tentado por un placer, espera antes de dejarte llevar por él. Imagina dos situaciones en tu mente, la primera el disfrute inicial y la segunda el arrepentimiento posterior. Después compara ese arrepentimiento con el placer y la satisfacción de no haber caído en la tentación. · epicteto
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 146 | posición 3344-3347 | Añadido el sábado, 12 de octubre de 2024 17:42:41

debemos cambiar el foco, pensando menos en el objeto de nuestro deseo y más en las consecuencias de obtenerlo. Además, al visualizar nuestro objetivo futuro aumentamos el deseo por él, utilizando así la energía del deseo a nuestro favor. La dirigimos hacia algo bueno en el futuro para reducir la tentación por algo malo en el presente.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 147 | posición 3372-3373 | Añadido el sábado, 12 de octubre de 2024 17:45:50

El sabio se armará mucho antes de ser atacado. Es demasiado tarde preparar la mente para soportar peligros una vez que estos ya han aparecido. · séneca
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 148 | posición 3407-3409 | Añadido el sábado, 12 de octubre de 2024 17:49:07

Empieza definiendo las tentaciones que más te cuesta vencer, implementando después los cambios adecuados para minimizar su atracción. Puedes intentar por ejemplo hacer menos visibles las cosas que te tientan, y dificultar además el acceso a ellas.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 149 | posición 3447-3449 | Añadido el sábado, 12 de octubre de 2024 17:49:46

Al entender cómo el entorno nos condiciona de manera inconsciente, podrás modificarlo para convertirlo en tu aliado. Con un poco de práctica, pasarás de ser víctima de tu entorno a arquitecto de tu destino.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 150 | posición 3450-3453 | Añadido el sábado, 12 de octubre de 2024 17:50:03

Si quieres mejorar, debes estar dispuesto a ser ridiculizado. · epicteto · El éxito de un insulto depende de la sensibilidad y la indignación de la víctima. · séneca ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 150 | posición 3467-3469 | Añadido el sábado, 12 de octubre de 2024 17:54:29

No deja de sorprenderme el hecho de que, aunque nos queremos más que a otras personas, valoramos más sus opiniones que las nuestras propias. · marco aurelio ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 151 | posición 3478-3480 | Añadido el sábado, 12 de octubre de 2024 17:55:21

La opinión más importante sobre tu vida debe ser la tuya. Importa mucho más lo que tú piensas de ti que lo que piensan de ti los demás.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 151 | posición 3480-3481 | Añadido el sábado, 12 de octubre de 2024 17:55:37

Por definición, la opinión de los demás está fuera de nuestro control, y por tanto no deberíamos prestarle mucha atención.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 151 | posición 3483-3485 | Añadido el sábado, 12 de octubre de 2024 17:56:45

Si alguien consigue provocarte y hacer que pierdas la tranquilidad, tu mente es cómplice. · epicteto ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 151 | posición 3481-3485 | Añadido el sábado, 12 de octubre de 2024 17:57:02

Debemos aprender a ver las críticas como algo externo, de lo que podemos aprender pero que no podemos cambiar. Y sobre todo, debemos evitar que estas críticas alteren nuestra mente. Si esto ocurre la culpa no es del que nos critica, sino nuestra. Si alguien consigue provocarte y hacer que pierdas la tranquilidad, tu mente es cómplice. · epicteto ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 151 | posición 3485-3488 | Añadido el sábado, 12 de octubre de 2024 17:57:22

Actuar en contra de nuestros principios para evitar la crítica es una forma de esclavitud. Nuestra conciencia es más importante que nuestra reputación. ¿Alguien me desprecia? Ese es su problema.Mi misión es asegurar que no hago nada que merezca desprecio. · marco aurelio
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 152 | posición 3498-3499 | Añadido el sábado, 12 de octubre de 2024 17:59:21

Ganarás el respeto de los demás cuando te empieces a respetar a ti mismo. · musonio ruFo
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 152 | posición 3501-3502 | Añadido el sábado, 12 de octubre de 2024 18:00:25

El primer arte que deben aprender los que aspiran al poder es el de ser capaces de soportar el odio. · séneca
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 152 | posición 3501-3505 | Añadido el sábado, 12 de octubre de 2024 18:00:46

El primer arte que deben aprender los que aspiran al poder es el de ser capaces de soportar el odio. · séneca · Nunca dejarás de sufrir si reaccionas emocionalmente a las críticas de los demás. Si las palabras te controlan, cualquier persona te puede controlar. La capacidad de detenerse y reflexionar te da poder sobre las palabras de los demás.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 152 | posición 3501-3506 | Añadido el sábado, 12 de octubre de 2024 18:01:06

El primer arte que deben aprender los que aspiran al poder es el de ser capaces de soportar el odio. · séneca · Nunca dejarás de sufrir si reaccionas emocionalmente a las críticas de los demás. Si las palabras te controlan, cualquier persona te puede controlar. La capacidad de detenerse y reflexionar te da poder sobre las palabras de los demás. El antídoto contra la crítica externa es la estima interna. Valora más tus objetivos que sus opiniones. Eres tú quien deberá vivir con las consecuencias de tus acciones.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 153 | posición 3515-3519 | Añadido el sábado, 12 de octubre de 2024 18:02:36

Si te atacan por algo que es cierto, ríete y acéptalo. Una vez aceptes tus defectos nadie podrá usarlos contra ti. Cesarán en sus esfuerzos al percibir que sus ataques no tienen efecto. Se burlan de mi calvicie, mi pobre vista, mis delgadas piernas, mi peso. ¿Cómo va a ser un insulto que te digan lo que es evidente? · séneca ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 154 | posición 3522-3524 | Añadido el sábado, 12 de octubre de 2024 18:03:30

Es la seña de identidad de una gran mente elevarse por encima de los insultos. Trata los insultos como los ladridos de pequeños perros. · séneca
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 154 | posición 3528-3530 | Añadido el sábado, 12 de octubre de 2024 18:04:49

Cuando conozcas a alguien pregúntate desde el principio cuáles son sus creencias sobre lo que es bueno y malo en esta vida. Cuando alguien actúe como tu enemigo, te insulte o se oponga a ti, recuerda que simplemente está haciendo lo que le parece correcto en ese momento, no sabe actuar mejor. · epicteto
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 154 | posición 3536-3538 | Añadido el sábado, 12 de octubre de 2024 18:06:36

En resumen, una vez más debemos considerar las críticas como primeras impresiones (phantasias), cuya validez debemos examinar antes de dejarnos influenciar. Si no son válidas, descártalas, no permitas que entren en tu fortaleza mental.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 155 | posición 3540-3541 | Añadido el sábado, 12 de octubre de 2024 18:06:53

Cuando estés en un banquete no prediques sobre cómo se debe comer, come como se debe. · epicteto
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 155 | posición 3554-3556 | Añadido el sábado, 12 de octubre de 2024 18:08:13

Tus acciones serán tu mensaje, y quienes lo entiendan te seguirán. Actuar es más efectivo que predicar. La gente presta más atención a tus acciones que a tus instrucciones.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 155 | posición 3556-3560 | Añadido el sábado, 12 de octubre de 2024 18:09:15

Sigue tus principios pero no intentes convertir al resto. Al ver tu progreso, muchas personas se interesarán por tu proceso, y estarán más receptivas a cualquier propuesta. Incluso muchos de los que te criticaban te admirarán en secreto al ver tus resultados. Debes seguir tus ideales con humildad y consistencia. Aférrate a lo que sabes que es correcto. Con el tiempo, aquellos que te ridiculizaban llegarán
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 155 | posición 3556-3561 | Añadido el sábado, 12 de octubre de 2024 18:09:29

Sigue tus principios pero no intentes convertir al resto. Al ver tu progreso, muchas personas se interesarán por tu proceso, y estarán más receptivas a cualquier propuesta. Incluso muchos de los que te criticaban te admirarán en secreto al ver tus resultados. Debes seguir tus ideales con humildad y consistencia. Aférrate a lo que sabes que es correcto. Con el tiempo, aquellos que te ridiculizaban llegarán a admirarte. · epicteto ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 156 | posición 3569-3570 | Añadido el sábado, 12 de octubre de 2024 18:10:34

No pierdas de vista tus objetivos de largo plazo, pero mantén tu mente en el presente y aprende a disfrutar el proceso. Celebra cada pequeña victoria y cada pequeño paso en la dirección correcta.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 156 | posición 3572-3573 | Añadido el sábado, 12 de octubre de 2024 18:11:03

Sé impaciente con las acciones pero paciente con los resultados. Recuerda que nada que merezca la pena se logra de un día para otro.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 158 | posición 3584-3587 | Añadido el sábado, 12 de octubre de 2024 18:12:25

Ten presente cada día la muerte, el exilio y otras catástrofes. · epicteto · ¿Qué es lo peor que podría ocurrir en tu vida? ¿Cómo responderías? ¿Cómo de preparado estás para enfrentar las desgracias que ocurren a otras personas a diario?
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 158 | posición 3589-3590 | Añadido el sábado, 12 de octubre de 2024 21:01:37

Como decía Séneca, la adversidad inesperada golpea con más fuerza.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 159 | posición 3601-3601 | Añadido el sábado, 12 de octubre de 2024 21:03:11

vimos previamente, nada externo es para los estoicos malo o bueno, sino indiferente.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 159 | posición 3601-3603 | Añadido el sábado, 12 de octubre de 2024 21:03:29

vimos previamente, nada externo es para los estoicos malo o bueno, sino indiferente. Lo malo o lo bueno es aplicable únicamente a nuestras acciones, y nada en el futuro podrá impedirnos actuar con virtud, salvo la propia muerte, de la que hablaremos en breve.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 159 | posición 3616-3617 | Añadido el sábado, 12 de octubre de 2024 21:04:48

Pensar en todas las posibles causas de lo indeseado trae a la luz posibles riesgos que nadie había contemplado. No puedes prevenir lo que no puedes imaginar.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 159 | posición 3625-3627 | Añadido el sábado, 12 de octubre de 2024 21:05:26

lo mismo en tu vida. Visualiza que no logras los resultados esperados en tu intento de cambio. ¿Qué obstáculos te pueden haber frenado? Regresa ahora al presente y toma las medidas adecuadas para evitarlos.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 160 | posición 3635-3637 | Añadido el sábado, 12 de octubre de 2024 21:07:32

“Ninguno de ellos me puede herir ni implicarme en su maldad. Ni debo tampoco sentir odio por ellos. Nacimos para trabajar juntos, como pies, manos, ojos y nuestras dos filas de dientes”.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 160 | posición 3640-3643 | Añadido el sábado, 12 de octubre de 2024 21:08:21

“Es en momentos de seguridad que el espíritu debe prepararse para lidiar con la adversidad. Cuando la Fortuna nos sonríe debemos prepararnos para su ira. Es durante la paz que los soldados entrenan para una posible guerra. Si quieres que alguien mantenga fría su cabeza cuando la crisis golpea debes entrenarle antes de que llegue”.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 160 | posición 3653-3656 | Añadido el sábado, 12 de octubre de 2024 21:09:38

Afrontamos con más valentía aquello para lo que nos hemos preparado. Los que nunca se anticiparon son presa del pánico ante hechos insignificantes. Debemos asegurarnos que nada nos pilla por sorpresa. Y dado que es la falta de familiaridad la que hace a las cosas más imponentes de lo que son, este hábito de reflexión constante asegurará que no eres un novato ante cualquier tipo de adversidad. · séneca
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 161 | posición 3671-3673 | Añadido el sábado, 12 de octubre de 2024 21:11:10

No imagines tener las cosas de las que careces. Elige las mejores cosas que tienes y piensa cuánto las extrañarías si no las tuvieras. · marco aurelio
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 161 | posición 3678-3679 | Añadido el sábado, 12 de octubre de 2024 21:12:14

Nos recordaba que todo lo que tenemos es un préstamo del universo, y puede ser reclamado en cualquier momento.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 163 | posición 3707-3709 | Añadido el sábado, 12 de octubre de 2024 21:32:03

Podrías morir ahora mismo. Que esto determine lo que haces y piensas en cada momento. · marco aurelio
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 163 | posición 3721-3723 | Añadido el sábado, 12 de octubre de 2024 21:34:03

Piensa que la muerte no es nada para ti, ya que todo depende de tu percepción, y la muerte representa el cese de la percepción. Mientras existimos la muerte no está presente, y cuando la muerte se presenta, nosotros ya no existimos. · séneca
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 164 | posición 3733-3735 | Añadido el sábado, 12 de octubre de 2024 21:34:53

Cuando te levantes por la mañana, piensa en el precioso privilegio de estar vivo, de respirar, de pensar, de amar. · marco aurelio
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 164 | posición 3735-3736 | Añadido el sábado, 12 de octubre de 2024 21:35:16

Debemos disfrutar la vida sin temer la muerte. Pero paradójicamente, traerla de vez en cuando a nuestra mente nos ayuda a apreciar nuestra vida.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 164 | posición 3740-3742 | Añadido el sábado, 12 de octubre de 2024 21:36:06

fin y al cabo, la propia vida es una enfermedad terminal. Ser más consciente de tu propia muerte te puede dar cierto sentido de urgencia, evitando postergar lo que quieres lograr.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 164 | posición 3743-3744 | Añadido el sábado, 12 de octubre de 2024 21:36:30

“No es la muerte lo que debemos temer, sino nunca haber vivido”.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 165 | posición 3746-3748 | Añadido el sábado, 12 de octubre de 2024 21:36:58

la mayoría no le importa vivir bien, sino vivir mucho. Y sin embargo, está en nuestro poder vivir bien (con virtud), pero no vivir mucho. · séneca
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 166 | posición 3776-3780 | Añadido el sábado, 12 de octubre de 2024 21:39:32

El que siempre se protege del viento,cuyos pies están constantemente calientes, y cuyas habitaciones permanecen aisladas del frío, peligrará al enfrentarse a la mínima brisa. Todos los excesos son malos, pero ninguno peor que el exceso de comodidad. Afecta al cerebro. Hace a los hombres perder la visión de la realidad, y se vuelve nebulosa la separación entre lo verdadero y lo falso. · séneca ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 168 | posición 3796-3799 | Añadido el sábado, 12 de octubre de 2024 21:42:26

En resumen, cuanto más suframos de manera voluntaria, menos sufriremos de manera involuntaria. Los que se esfuerzan durante los tiempos fáciles resisten mejor los tiempos difíciles. Obtendremos además satisfacción de ver cómo nuestro cuerpo y nuestra mente se fortalecen, siendo capaces de hacer cosas que nos resultaban imposibles hace solo unos pocos meses.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 168 | posición 3807-3810 | Añadido el sábado, 12 de octubre de 2024 22:07:32

Para vencer el miedo al exilio o la pobreza, los estoicos recomendaban vivir como un pobre durante unos días cada cierto tiempo. Al darse cuenta de que no era tan terrible eso que temían, podían disfrutar sus vidas sin miedo a perder lo que tenían. Si por ejemplo te
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 168 | posición 3821-3822 | Añadido el sábado, 12 de octubre de 2024 22:08:44

Esta incomodidad voluntaria nos recuerda además la importancia de valorar lo esencial. Nos enseña que las cosas importantes y esenciales de la vida son realmente pocas.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 169 | posición 3836-3837 | Añadido el sábado, 12 de octubre de 2024 22:11:46

Tenlo siempre presente como un ejemplo a seguir. Necesitamos un estándar contra el que medirnos, alguien
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 169 | posición 3836-3838 | Añadido el sábado, 12 de octubre de 2024 22:11:51

Elige alguien cuya forma de vida quieras emular. Tenlo siempre presente como un ejemplo a seguir. Necesitamos un estándar contra el que medirnos, alguien recto que pueda enderezar al torcido. · séneca ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 171 | posición 3877-3878 | Añadido el sábado, 12 de octubre de 2024 22:15:10

No son las cosas las que nos perturban, sino nuestra opinión sobre ellas. · epicteto
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 171 | posición 3881-3887 | Añadido el sábado, 12 de octubre de 2024 22:15:53

El primer paso es entender que no somos nuestros pensamientos, y que podemos distanciarnos de ellos. Podemos examinarlos de manera racional en vez de dejarnos arrastrar por su impacto emocional. Dar un paso atrás nos permite ver con más claridad, y preguntarnos si hay otra forma de interpretar nuestra realidad.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 172 | posición 3901-3901 | Añadido el sábado, 12 de octubre de 2024 22:16:53

Las cosas que nos tientan pierden poder al ser descompuestas.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 172 | posición 3916-3917 | Añadido el sábado, 12 de octubre de 2024 22:18:40

También se puede aplicar esta técnica si te genera ansiedad hablar con personas que percibes de mayor autoridad o estatus social.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 173 | posición 3919-3922 | Añadido el sábado, 12 de octubre de 2024 22:19:17

¿Por qué te parece ese hombre tan imponente? Porque no lo estás considerando solo a él, sino también a su pedestal. Un enano no pasa a ser alto por subirse a una montaña. Este es el error que cometemos, al no valorar a los hombres por lo que son, sino por los adornos que llevan. · séneca ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 173 | posición 3924-3925 | Añadido el sábado, 12 de octubre de 2024 22:19:42

el verdadero sabio ve lo que le ocurre a él con la misma distancia que si le ocurriera a su vecino.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 174 | posición 3949-3952 | Añadido el sábado, 12 de octubre de 2024 22:22:05

Marco Aurelio, podemos reducir el impacto de cualquier agravio del destino si “visualizamos en nuestra mente la enormidad del universo y el tiempo infinito, observando la transitoriedad de todas las cosas, incluyendo nuestra propia vida”.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 175 | posición 3966-3971 | Añadido el sábado, 12 de octubre de 2024 22:23:58

Los estoicos nos recordaban que el cambio es la única constante. Aunque el budismo es reconocido por su idea sobre la transitoriedad o la no-permanencia, no era una idea nueva. Varios siglos antes de los primeros escritos budistas, el griego Heráclito proponía su concepto Panta Rei, traducible como “todo fluye”. Los estoicos hacían frecuente mención a la analogía de Heráclito, que nos decía que no podemos bañarnos dos veces en el mismo río, al cambiar este constantemente.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 176 | posición 3982-3986 | Añadido el sábado, 12 de octubre de 2024 22:25:17

Las creaciones de la misma naturaleza están siendo atacadas constantemente, así que deberíamos ver la destrucción de las ciudades con tranquilidad. Caerán por necesidad. Les aguarda un destino común, bien por la explosión de una fuerza interna, ataques externos o simplemente la edad, de la que nada está a salvo. Las posibilidades por las que llegarán a su destino son demasiadas como para enumerar, pero hay algo seguro: todo lo creado por mortales es mortal. Vivimos en el medio de cosas destinadas a morir. · séneca ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 176 | posición 3986-3988 | Añadido el sábado, 12 de octubre de 2024 22:25:39

Paradójicamente, pensar en nuestra insignificancia no es deprimente, sino liberador. Nuestros problemas no son tan importantes, no tenemos que preocuparnos tanto de agradar a los demás o seguir los convenios sociales. Liberados de nuestros miedos, podemos aprovechar el corto espacio que tenemos para perseguir nuestros sueños.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 177 | posición 4003-4006 | Añadido el sábado, 12 de octubre de 2024 22:27:00

Muchas de las ansiedades que nos acosan son superfluas. Al ser solo criaturas de nuestra imaginación podemos deshacernos de ellas y expandir nuestra mente a una región más amplia, dejando que nuestro pensamiento abarque todo el universo. · marco aurelio ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 177 | posición 4013-4021 | Añadido el sábado, 12 de octubre de 2024 22:28:16

Esto no significa por supuesto que nuestros problemas sean irrelevantes, tan solo que a veces nos quedamos atrapados en nuestras interpretaciones de los eventos, perdiendo de vista el contexto. Debemos desarrollar nuestra capacidad de cambiar el foco según demanden las circunstancias. Necesitamos adoptar primero una visión amplia para lograr una perspectiva adecuada y definir después cómo debemos actuar. Una vez fijado el plan de acción, cerraremos el foco para concentrar nuestra energía y atención en mejorar nuestra situación.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 178 | posición 4021-4024 | Añadido el sábado, 12 de octubre de 2024 22:28:42

gratitud ¿Muchos están delante de ti? Considera que tienes muchos más detrás. ¿Sabes cuál es tu principal problema? Que tu contabilidad está distorsionada. Valoras demasiado lo que has pagado y muy poco lo que te ha sido dado. · séneca ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 178 | posición 4038-4040 | Añadido el sábado, 12 de octubre de 2024 22:31:52

Cuando sientas emociones negativas, reflexiona sobre las cosas buenas de tu día. ¿Qué salió bien hoy? ¿Quién hizo algo bueno por ti durante el día? ¿Qué cosas podrían haber ido mal pero no ocurrieron?
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 179 | posición 4049-4051 | Añadido el sábado, 12 de octubre de 2024 22:32:50

Por último, recuerda que gratitud no implica conformismo, y de hecho las personas agradecidas logran con más frecuencia sus objetivos. Se trata de apreciar lo que tienes mientras persigues otras cosas que quieres.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 179 | posición 4053-4056 | Añadido el sábado, 12 de octubre de 2024 22:33:15

Todavía debo recordarme actuar según lo que recomiendo, y aun así no siempre sigo mis preceptos. Debemos tener nuestros principios listos para la práctica, tan interiorizados que nos vengan rápido en momentos de crisis. Algunas lanas absorben rápido los colores y otras deben remojarse repetidamente. · séneca ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 180 | posición 4064-4119 | Añadido el sábado, 12 de octubre de 2024 22:34:38

Repetirse con frecuencia preguntas o afirmaciones como las siguientes, en los momentos adecuados, nos ayuda a mantener los principios estoicos “a mano”. •         ¿Depende esto de mí? ¿Hay algo que pueda hacer? •         ¿Estoy deseando cosas fuera de mi control? •    ¿Es esto realmente tan malo como indica mi primera emoción? •         ¿Será relevante este problema en un año? ¿En diez años? •    ¿Qué puedo aprender de esta situación? ¿Cómo puedo usarla a mi favor? •         ¿Estoy viendo las cosas como realmente son o estoy añadiendo juicios de valor? •    ¿Tengo algún problema ahora mismo? ¿Me estoy adelantando a los acontecimientos? •         ¿Paso más tiempo deseando lo que no tengo que agradeciendo lo que tengo? •         ¿Estoy centrando mi atención en cosas importantes dentro de mi círculo de control? •         ¿Esta acción está alineada con mis valores y mis objetivos de largo plazo? •         Haz lo que debes hacer. •         ¿Estoy controlando el placer o estoy siendo controlado por él? •         Piensa cómo te sentirás después si caes ahora en la tentación. •         ¿Prefieroejercerdisciplinaahoraosufrirarrepentimiento después? •         ¿Qué haría Séneca en mi situación? •         Puedo lidiar con esto. •      Esto también pasará. Las emociones vienen y van. Solo debo pensar en superar el momento actual. •         Memento Mori.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 180 | posición 4122-4124 | Añadido el sábado, 12 de octubre de 2024 22:36:33

Estos preceptos son como semillas de pequeñas dimensiones, pero con grandes resultados a largo plazo si encuentran una mente fértil. · séneca
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 181 | posición 4128-4129 | Añadido el sábado, 12 de octubre de 2024 22:37:16

veían especial utilidad en prepararse al inicio de cada mañana y en reflexionar sobre su día antes de irse a la cama.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 181 | posición 4130-4131 | Añadido el sábado, 12 de octubre de 2024 22:37:33

Define los objetivos principales del día y las actividades en las que te debes centrar. ¿Qué quieres lograr hoy? ¿Qué necesitas hacer?
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 181 | posición 4143-4145 | Añadido el sábado, 12 de octubre de 2024 22:38:41

El sabio comienza cada día recordándose que la Fortuna no le da nada que pueda realmente poseer. Nada, ni público ni privado, es estable. · séneca ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 181 | posición 4147-4148 | Añadido el sábado, 12 de octubre de 2024 22:39:08

para preparar tu mente. Con objetivos claros, libre de emociones negativas y listo para enfrentar cualquier desafío, tu actividad puede comenzar.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 182 | posición 4150-4153 | Añadido el sábado, 12 de octubre de 2024 22:39:34

Cada día defiendo mi caso ante mi propio tribunal. Cuando la luz se apaga y mi esposa se ha retirado, conocedora de mi hábito, examino mi día completo y reviso lo que he hecho y dicho, sin esconderme nada. · séneca ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 182 | posición 4157-4158 | Añadido el sábado, 12 de octubre de 2024 22:39:53

alcanzaste los objetivos que te propusiste al inicio del día y si te comportaste siguiendo tus principios. ¿Qué hiciste bien? ¿Qué hiciste mal? ¿Cómo puedes mejorar?
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 183 | posición 4167-4171 | Añadido el sábado, 12 de octubre de 2024 22:41:23

¿A qué fin estoy dedicando mi mente? ¿Estoy siendo desviado de mi camino por el miedo o el deseo? · marco aurelio · Reflexionar a diario sobre
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 183 | posición 4167-4169 | Añadido el sábado, 12 de octubre de 2024 22:41:31

¿Estoy acercándome a mi potencial como ser racional? ¿A qué fin estoy dedicando mi mente? ¿Estoy siendo desviado de mi camino por el miedo o el deseo? · marco aurelio ·
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 183 | posición 4175-4181 | Añadido el sábado, 12 de octubre de 2024 22:42:02

Y como siempre, el objetivo de este ejercicio es mejorar, no castigarse por los errores. Como decía Séneca: “Por qué debería tener miedo de revisar mis actos si puedo simplemente decir «Te perdono, pero intenta no hacerlo de nuevo»”.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 184 | posición 4206-4211 | Añadido el sábado, 12 de octubre de 2024 22:44:32

Estudios recientes demuestran el poder del diario en multitud de aspectos. Escribir sobre tus objetivos centra tu mente, reduciendo las distracciones. Reflexionar sobre tus errores reduce la probabilidad de volver a cometerlos. Revisar tus logros aumenta tu autoestima y motivación, reforzando el comportamiento correcto. Recordar lo aprendido ayuda a consolidarlo y a ser consciente de tu progreso. Escribir sobre las cosas que agradeces mitiga las emociones negativas y te da más energía. Pasar al papel las cosas que te preocupan reducirá su carga mental y te ayudará a encontrar soluciones.
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 185 | posición 4221-4222 | Añadido el sábado, 12 de octubre de 2024 22:45:07

Mientras vivas, sigue aprendiendo a vivir. · séneca · Llegamos al final. Ahora puedes
==========
Invicto: Logra Más, Sufre Menos: Entrenamiento mental para lograr más y sufrir menos (Spanish Edition) (Vázquez, Marcos)
- La subrayado en la página 185 | posición 4221-4222 | Añadido el sábado, 12 de octubre de 2024 22:45:16

Mientras vivas, sigue aprendiendo a vivir. · séneca ·
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 152 | posición 1779-1780 | Añadido el domingo, 13 de octubre de 2024 01:58:22

Unix is famous for being designed around the philosophy of small, sharp tools, each intended to do one thing well.
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 155 | posición 1811-1816 | Añadido el domingo, 13 de octubre de 2024 02:05:30

GUI interfaces are wonderful, and they can be faster and more convenient for some simple operations. Moving files, reading and writing email, and building and deploying your project are all things that you might want to do in a graphical environment. But if you do all your work using GUIs, you are missing out on the full capabilities of your environment. You won’t be able to automate common tasks, or use the full power of the tools available to you. And you won’t be able to combine your tools to create customized macro tools. A benefit of GUIs is WYSIWYG—what you see is what you get. The disadvantage is WYSIAYG—what you see is all you get.
==========
Pragmatic Programmer, The (Thomas, David)
- El marcador en la página 160 | posición 1858 | Añadido el domingo, 13 de octubre de 2024 02:12:34


==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 161 | posición 1869-1876 | Añadido el domingo, 13 de octubre de 2024 13:16:11

What Does “Fluent” Mean? What counts as being fluent? Here’s the challenge list: When editing text, move and make selections by character, word, line, and paragraph. When editing code, move by various syntactic units (matching delimiters, functions, modules, …). Reindent code following changes. Comment and uncomment blocks of code with a single command. Undo and redo changes. Split the editor window into multiple panels, and navigate between them. Navigate to a particular line number. Sort selected lines. Search for both strings and regular expressions, and repeat previous searches. Temporarily create multiple cursors based on a selection or on a pattern match, and edit the text at each in parallel. Display compilation errors in the current project. Run the current project’s tests.
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 162 | posición 1880-1881 | Añadido el domingo, 13 de octubre de 2024 13:17:48

time you find yourself doing something repetitive, get into the habit of thinking “there must be a better way.” Then find
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 162 | posición 1880-1881 | Añadido el domingo, 13 de octubre de 2024 13:17:56

time you find yourself doing something repetitive, get into the habit of thinking “there must be a better way.” Then find it.
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 162 | posición 1880-1881 | Añadido el domingo, 13 de octubre de 2024 13:18:02

First, look at yourself while you’re editing. Every time you find yourself doing something repetitive, get into the habit of thinking “there must be a better way.” Then find it.
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 162 | posición 1880-1882 | Añadido el domingo, 13 de octubre de 2024 13:18:18

First, look at yourself while you’re editing. Every time you find yourself doing something repetitive, get into the habit of thinking “there must be a better way.” Then find it. Once you’ve discovered a new, useful feature, you now need to get it installed into your muscle memory, so you can use it without thinking. The
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 163 | posición 1891-1894 | Añadido el domingo, 13 de octubre de 2024 13:20:30

Challenges No more autorepeat. Everyone does it: you need to delete the last word you typed, so you press down on backspace and wait for autorepeat to kick in. In fact, we bet that your brain has done this so much that you can judge pretty much exactly when to release the key. So turn off autorepeat, and instead learn the key sequences to move, select, and delete by characters, words, lines, and blocks.
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 163 | posición 1895-1898 | Añadido el domingo, 13 de octubre de 2024 13:21:19

Lose the mouse/trackpad. For one whole week, edit using just the keyboard. You’ll discover a bunch of stuff that you can’t do without pointing and clicking, so now’s the time to learn. Keep notes (we recommend going old-school and using pencil and paper) of the key sequences you learn. You’ll take a productivity hit for a few days. But, as you learn to do stuff without moving your hands away from the home position, you’ll find that your editing becomes faster and more fluent than it ever was in the past.
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 164 | posición 1902-1902 | Añadido el domingo, 13 de octubre de 2024 13:22:04

If you can’t find it, build it!
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 171 | posición 1969-1979 | Añadido el domingo, 13 de octubre de 2024 13:30:58

Challenges Knowing you can roll back to any previous state using the VCS is one thing, but can you actually do it? Do you know the commands to do it properly? Learn them now, not when disaster strikes and you’re under pressure. Spend some time thinking about recovering your own laptop environment in case of a disaster. What would you need to recover? Many of the things you need are just text files. If they’re not in a VCS (hosted off your laptop), find a way to add them. Then think about the other stuff: installed applications, system configuration, and so on. How can you express all that stuff in text files so it, too, can be saved? An interesting experiment, once you’ve made some progress, is to find an old computer you no longer use and see if your new system can be used to set it up. Consciously explore the features of your current VCS and hosting provider that you’re not using. If your team isn’t using feature branches, experiment with introducing them. The same with pull/merge requests. Continuous integration. Build pipelines. Even continuous deployment. Look into the team communication tools, too: wikis, Kanban boards, and the like. You don’t have to use any of it. But you do need to know what it does so you can make that decision. Use version control for nonproject things, too.
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 174 | posición 1997-1998 | Añadido el domingo, 13 de octubre de 2024 13:39:33

Fix the Problem, Not the Blame It doesn’t really matter whether the bug is your fault or someone else’s. It is still your problem.
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 177 | posición 2026-2027 | Añadido el domingo, 13 de octubre de 2024 13:42:19

The best way to start fixing a bug is to make it reproducible. After all, if you can’t reproduce it, how will you know if it is ever fixed?
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 177 | posición 2029-2030 | Añadido el domingo, 13 de octubre de 2024 13:42:48

here’s the most important rule of debugging: Tip 31 Failing Test Before Fixing Code
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 178 | posición 2035-2036 | Añadido el domingo, 13 de octubre de 2024 13:43:36

Read the Damn Error Message ’nuf said.
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 179 | posición 2055-2060 | Añadido el domingo, 13 de octubre de 2024 13:46:51

But it’s faster to use a divide and conquer approach. Choose a value in the middle of the array. If it’s the one you’re looking for, stop. Otherwise you can chop the array in two. If the value you find is greater than the target then you know it must be in the first half of the array, otherwise it’s in the second half. Repeat the procedure in the appropriate subarray, and in no time you’ll have a result. (As we’ll see when we talk about ​Big-O Notation​, a linear search is , and a binary chop is ).
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 184 | posición 2114-2114 | Añadido el domingo, 13 de octubre de 2024 13:52:24

Don’t Assume It—Prove It
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 185 | posición 2123-2130 | Añadido el domingo, 13 de octubre de 2024 14:57:20

Debugging Checklist Is the problem being reported a direct result of the underlying bug, or merely a symptom? Is the bug really in the framework you’re using? Is it in the OS? Or is it in your code? If you explained this problem in detail to a coworker, what would you say? If the suspect code passes its unit tests, are the tests complete enough? What happens if you run the tests with this data? Do the conditions that caused this bug exist anywhere else in the system? Are there other bugs still in the larval stage, just waiting to hatch? Related Sections Include Topic 24, ​Dead Programs Tell No Lies​ Challenges Debugging is challenge enough.
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 188 | posición 2148-2150 | Añadido el domingo, 13 de octubre de 2024 23:40:50

Learn a Text Manipulation Language To show the wide-ranging applicability of text manipulation languages, here’s a sample of some stuff we’ve done with Ruby and Python just related to the creation of this book:
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 187 | posición 2140-2147 | Añadido el domingo, 13 de octubre de 2024 23:41:53

sed. People who prefer a more structured tool may prefer languages such as Python or Ruby. These languages are important enabling technologies. Using them, you can quickly hack up utilities and prototype ideas—jobs that might take five or ten times as long using conventional languages. And that multiplying factor is crucially important to the kind of experimenting that we do. Spending 30 minutes trying out a crazy idea is a whole lot better than spending five hours. Spending a day automating important components of a project is acceptable; spending a week might not be. In their book The Practice of Programming [KP99], Kernighan and Pike built the same program in five different languages. The Perl version was the shortest (17 lines, compared with C’s 150). With Perl you can manipulate text, interact with programs, talk over networks, drive web pages, perform arbitrary precision arithmetic, and write programs that look like Snoopy swearing.
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 187 | posición 2138-2147 | Añadido el domingo, 13 de octubre de 2024 23:42:09

Fortunately, there are a number of great text manipulation languages. Unix developers (and we include macOS users here) often like to use the power of their command shells, augmented with tools such as awk and sed. People who prefer a more structured tool may prefer languages such as Python or Ruby. These languages are important enabling technologies. Using them, you can quickly hack up utilities and prototype ideas—jobs that might take five or ten times as long using conventional languages. And that multiplying factor is crucially important to the kind of experimenting that we do. Spending 30 minutes trying out a crazy idea is a whole lot better than spending five hours. Spending a day automating important components of a project is acceptable; spending a week might not be. In their book The Practice of Programming [KP99], Kernighan and Pike built the same program in five different languages. The Perl version was the shortest (17 lines, compared with C’s 150). With Perl you can manipulate text, interact with programs, talk over networks, drive web pages, perform arbitrary precision arithmetic, and write programs that look like Snoopy swearing.
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 189 | posición 2162-2163 | Añadido el domingo, 13 de octubre de 2024 23:45:03

In a very real way, the Pragmatic Bookshelf is built around text manipulation. And if you follow our advice to keep things in plain text, then using these languages to manipulate that text will bring a whole host of benefits.
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 192 | posición 2191-2192 | Añadido el domingo, 13 de octubre de 2024 23:50:36

So, try keeping an engineering daybook. Use paper, not a file or a wiki: there’s something special about the act of writing compared to typing. Give it a month, and see if you’re getting any benefits.
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 194 | posición 2207-2210 | Añadido el domingo, 13 de octubre de 2024 23:53:57

You Can’t Write Perfect Software Did that hurt? It shouldn’t. Accept it as an axiom of life. Embrace it. Celebrate it. Because perfect software doesn’t exist. No one in the brief history of computing has ever written a piece of perfect software. It’s unlikely that you’ll be the first. And unless you accept this as a fact, you’ll end up wasting time and energy chasing an impossible dream.
==========
Pragmatic Programmer, The (Thomas, David)
- La subrayado en la página 195 | posición 2218-2218 | Añadido el domingo, 13 de octubre de 2024 23:55:40

Pragmatic Programmers take this a step further. They don’t trust themselves, either.
==========
Pragmatic Programmer, The (Thomas, David)
- El marcador en la página 197 | posición 2230 | Añadido el domingo, 13 de octubre de 2024 23:57:55


==========
The World of Yesterday (Zweig, Stefan)
- La subrayado en la página 12 | posición 98-99 | Añadido el jueves, 17 de octubre de 2024 09:31:05

Against my will, I have witnessed the most terrible defeat of reason and the most savage triumph of brutality in the chronicles of time. Never—and I say so not with pride but with shame—has a generation fallen from such intellectual heights as ours to such moral depths.
==========
The World of Yesterday (Zweig, Stefan)
- La subrayado en la página 13 | posición 109-112 | Añadido el jueves, 17 de octubre de 2024 09:35:16

Whenever, in conversation with younger friends, I mention something that happened before the First World War, their startled questions make me realise how much of what I still take for granted as reality has become either past history or unimaginable to them. And a lurking instinct in me says that they are right; all the bridges are broken between today, yesterday and the day before yesterday.
==========
The World of Yesterday (Zweig, Stefan)
- El marcador en la página 13 | posición 114 | Añadido el jueves, 17 de octubre de 2024 09:38:18


==========
The World of Yesterday (Zweig, Stefan)
- El marcador en la página 20 | posición 205 | Añadido el lunes, 21 de octubre de 2024 20:52:29


==========
The World of Yesterday (Zweig, Stefan)
- La subrayado en la página 24 | posición 267-267 | Añadido el martes, 22 de octubre de 2024 01:47:36

wastrel at the very least. Providing for the future
==========
The World of Yesterday (Zweig, Stefan)
- El marcador en la página 24 | posición 265 | Añadido el martes, 22 de octubre de 2024 01:48:48


==========
The World of Yesterday (Zweig, Stefan)
- La subrayado en la página 27 | posición 315-319 | Añadido el martes, 22 de octubre de 2024 17:01:09

Only much later did I realise that this idea of the ‘good family’, which seemed to us boys the farcical parody of an artificial pseudo-aristocracy, expresses one of the most mysterious but deeply felt tendencies in the Jewish nature. It is generally assumed that getting rich is a Jew’s true and typical aim in life. Nothing could be further from the truth. Getting rich, to a Jew, is only an interim stage, a means to his real end, by no means his aim in itself. The true desire of a Jew, his inbuilt ideal, is to rise to a higher social plane by becoming an intellectual.
==========
The World of Yesterday (Zweig, Stefan)
- El marcador en la página 40 | posición 498 | Añadido el sábado, 26 de octubre de 2024 16:07:59


==========
The World of Yesterday (Zweig, Stefan)
- La subrayado en la página 41 | posición 528-531 | Añadido el sábado, 26 de octubre de 2024 23:33:15

The herd instinct of the mob was not yet as offensively powerful in public life as it is today; freedom in what you did or did not do in private life was something taken for granted—which is hardly imaginable now—and toleration was not, as it is today, deplored as weakness and debility, but was praised as an ethical force. For I was not born into a century of passion. It was a well-ordered world with a clear social structure and easy transitions between the parts of that structure, a world without haste.
==========
The World of Yesterday (Zweig, Stefan)
- El marcador en la página 45 | posición 587 | Añadido el sábado, 26 de octubre de 2024 23:49:55


==========
The World of Yesterday (Zweig, Stefan)
- El marcador en la página 46 | posición 601 | Añadido el sábado, 26 de octubre de 2024 23:56:13


==========
The World of Yesterday (Zweig, Stefan)
- El marcador en la página 49 | posición 636 | Añadido el domingo, 27 de octubre de 2024 00:28:59


==========
The World of Yesterday (Zweig, Stefan)
- La subrayado en la página 52 | posición 684-688 | Añadido el martes, 29 de octubre de 2024 13:58:36

The sole purpose of school in the spirit of those times was not so much to bring us on as to hold us back, not to help us to shape our minds but to fit us into the established mould with as little resistance as possible, not to enhance our energies but to discipline them and level them out. Such psychological or rather unpsychological pressure on the young can take effect in only one of two ways—it will either paralyse or stimulate them.
==========
The World of Yesterday (Zweig, Stefan)
- La subrayado en la página 67 | posición 913-920 | Añadido el martes, 29 de octubre de 2024 15:00:58

his own incomparable way, described how the example of Napoleon electrified an entire generation in France. To him, the dazzling rise of little Lieutenant Bonaparte to become emperor of the world meant not just the triumph of a man, but the victory of the idea of youth. The fact that you need not be born a prince to achieve power at an early age, that you could come from any insignificant, even poor family, yet still be a general before you were twenty-four, master of France at the age of thirty, and soon of the whole world—that unprecedented success drove hundreds to abandon their little careers and their provincial towns. Lieutenant Bonaparte went to the heads of a whole generation of young people. He urged them on to higher ambitions; he created the generals of the Grande Armée and the heroes and arrivistes of the Comédie Humaine. A single young man who reached hitherto
==========
The World of Yesterday (Zweig, Stefan)
- La subrayado en la página 67 | posición 920-920 | Añadido el martes, 29 de octubre de 2024 15:01:15

hitherto unattainable heights at the first bold attempt always,
==========
The World of Yesterday (Zweig, Stefan)
- La subrayado en la página 68 | posición 926-927 | Añadido el martes, 29 de octubre de 2024 15:03:49

And lo and behold, even when he was still sitting on those
==========
The World of Yesterday (Zweig, Stefan)
- La subrayado en la página 74 | posición 1023-1026 | Añadido el martes, 29 de octubre de 2024 15:26:24

One can make up later for neglecting to exercise the muscles, but the mind can be trained only in those crucial years of development to rise to its full powers of comprehension, and only someone who has learnt to spread his intellectual wings early will be able to form an idea of the world as a whole later.
==========
The World of Yesterday (Zweig, Stefan)
- La subrayado en la página 77 | posición 1070-1072 | Añadido el martes, 29 de octubre de 2024 15:39:23

Dr Karl Lueger, exploited this discontent and anxiety and, with the slogan, ‘We must help the little man’, united the discontented lower middle class, whose envy of those more prosperous than themselves was considerably lesser than their fear of sinking from bourgeois status into the proletariat.
==========
The World of Yesterday (Zweig, Stefan)
- La subrayado en la página 77 | posición 1070-1075 | Añadido el martes, 29 de octubre de 2024 15:40:46

Dr Karl Lueger, exploited this discontent and anxiety and, with the slogan, ‘We must help the little man’, united the discontented lower middle class, whose envy of those more prosperous than themselves was considerably lesser than their fear of sinking from bourgeois status into the proletariat. This was exactly the same kind of social group living in a state of anxiety that Adolf Hitler later gathered around him to provide his first large body of followers. Karl Lueger was also his model in another sense by teaching him the usefulness of anti-Semitic slogans, thus showing the disgruntled lower middle classes a visible enemy and at the same time imperceptibly diverting their hatred from the great landowners and feudal wealth. But
==========
The World of Yesterday (Zweig, Stefan)
- La subrayado en la página 79 | posición 1099-1100 | Añadido el martes, 29 de octubre de 2024 15:48:55

of ruthless storm troopers to strike out at random, and with it the principle where by a small group intimidates a numerically superior but humane and passive majority through terrorism.
==========
The World of Yesterday (Zweig, Stefan)
- La subrayado en la página 81 | posición 1119-1124 | Añadido el martes, 29 de octubre de 2024 15:56:13

We young men, however, wholly absorbed in our literary ambitions, noticed little of these dangerous changes in our native land; our eyes were bent entirely on books and pictures. We took not the slightest interest in political and social problems; what did all this shrill squabbling mean in our lives? The city was in a state of agitation at election time; we went to the libraries. The masses rose up; we wrote and discussed poetry. We failed to see the writing on the wall in letters of fire. Like King Belshazzar before us, we dined on the delicious dishes of the arts and never looked apprehensively ahead. Only decades later, when the roof and walls of the building fell in on us, did we realise that the foundations had been undermined long before,
==========
The World of Yesterday (Zweig, Stefan)
- La subrayado en la página 81 | posición 1119-1126 | Añadido el martes, 29 de octubre de 2024 15:57:04

We young men, however, wholly absorbed in our literary ambitions, noticed little of these dangerous changes in our native land; our eyes were bent entirely on books and pictures. We took not the slightest interest in political and social problems; what did all this shrill squabbling mean in our lives? The city was in a state of agitation at election time; we went to the libraries. The masses rose up; we wrote and discussed poetry. We failed to see the writing on the wall in letters of fire. Like King Belshazzar before us, we dined on the delicious dishes of the arts and never looked apprehensively ahead. Only decades later, when the roof and walls of the building fell in on us, did we realise that the foundations had been undermined long before, and the downfall of individual freedom in Europe had begun with the new century.
==========
The World of Yesterday (Zweig, Stefan)
- El marcador en la página 83 | posición 1151 | Añadido el martes, 29 de octubre de 2024 15:57:31


==========
The World of Yesterday (Zweig, Stefan)
- La subrayado en la página 85 | posición 1186-1187 | Añadido el martes, 29 de octubre de 2024 23:36:08

what was natural was dirty, naturalia sunt turpia.1 Science capitulated on the pretext that it
==========
The World of Yesterday (Zweig, Stefan)
- El marcador en la página 87 | posición 1213 | Añadido el martes, 29 de octubre de 2024 23:42:47


==========
The World of Yesterday (Zweig, Stefan)
- La subrayado en la página 88 | posición 1237-1241 | Añadido el viernes, 1 de noviembre de 2024 12:00:36

That ‘moral’ age thought it perfectly permissible to add artificial reinforcements to the hair, the bosom and other parts of the body, for the purposes of deception and to conform to the general ideal of female beauty. The more a woman was expected to look like a lady, the less of her natural shape might be shown; in reality the guiding principle behind this fashion was only to obey the general moral tendency of the time, which was chiefly concerned with concealment and covering up.
==========
The World of Yesterday (Zweig, Stefan)
- La subrayado en la página 89 | posición 1249-1251 | Añadido el viernes, 1 de noviembre de 2024 12:02:33

The extreme emphasis on difference between the so-called stronger sex and the weaker sex was also evident in the attitudes expected of them—a man was supposed to be forthright, chivalrous and aggressive, a woman shy, timid and defensive. They were not equals but hunters and prey. This unnatural tension separating them in
==========
The World of Yesterday (Zweig, Stefan)
- La subrayado en la página 91 | posición 1282-1283 | Añadido el viernes, 1 de noviembre de 2024 12:09:27

this suppression of sexuality led to the stealthy overstimulation of young people, and it was expressed in a childish, inexpert way.
==========
The World of Yesterday (Zweig, Stefan)
- La subrayado en la página 92 | posición 1291-1292 | Añadido el viernes, 1 de noviembre de 2024 12:11:41

What was suppressed found outlets everywhere, found ways around obstacles, ways out of difficulties.
==========
The World of Yesterday (Zweig, Stefan)
- La subrayado en la página 92 | posición 1293-1295 | Añadido el viernes, 1 de noviembre de 2024 12:12:31

Forbidden fruit excites a craving, only what is forbidden stimulates desire, and the less the eyes saw and the ears heard the more minds dreamt. The less air, light and sun was allowed to fall on the body, the more heated did the senses become.
==========
The World of Yesterday (Zweig, Stefan)
- La subrayado en la página 95 | posición 1344-1345 | Añadido el viernes, 1 de noviembre de 2024 12:23:03

But society is always most cruel to those who betray its secrets, showing where its dishonesty commits a crime against nature.
==========
The World of Yesterday (Zweig, Stefan)
- El marcador en la página 99 | posición 1391 | Añadido el viernes, 1 de noviembre de 2024 12:32:24


==========
The World of Yesterday (Zweig, Stefan)
- La subrayado en la página 100 | posición 1413-1414 | Añadido el sábado, 2 de noviembre de 2024 01:03:16

outcasts beyond the common law. However, the
==========
The World of Yesterday (Zweig, Stefan)
- El marcador en la página 103 | posición 1453 | Añadido el sábado, 2 de noviembre de 2024 01:14:04


==========
The World of Yesterday (Zweig, Stefan)
- La subrayado en la página 106 | posición 1495-1495 | Añadido el sábado, 2 de noviembre de 2024 15:11:10

“Sometimes we have no wine,
==========
The World of Yesterday (Zweig, Stefan)
- La subrayado en la página 105 | posición 1489-1490 | Añadido el sábado, 2 de noviembre de 2024 15:11:39

the state than the present generation, who are obliged to do military service or labour service, or in many countries to embrace a mass
==========
The World of Yesterday (Zweig, Stefan)
- La subrayado en la página 105 | posición 1489-1494 | Añadido el sábado, 2 de noviembre de 2024 15:11:49

Certainly, we had more freedom as citizens of the state than the present generation, who are obliged to do military service or labour service, or in many countries to embrace a mass ideology, and are indeed generally at the mercy of the arbitrary stupidity of international politics. We could devote ourselves undisturbed to our artistic and intellectual inclinations; we could pursue our private lives in a more individual and personal way. We were able to live in a more cosmopolitan manner; the whole world was open to us. We could travel anywhere we liked without passes and permits; no one interrogated us about our beliefs, our origins, our race or religion. We certainly did—I do not deny it—have immeasurably more individual freedom, and we did not just welcome that, we made use of it.
==========
The World of Yesterday (Zweig, Stefan)
- La subrayado en la página 106 | posición 1496-1497 | Añadido el sábado, 2 de noviembre de 2024 15:12:50

if morality allows a man freedom, the state tries to remould him. If the state allows him freedom, morality will try to impose itself. We knew more of the world then, and knew
==========
The World of Yesterday (Zweig, Stefan)
- La subrayado en la página 107 | posición 1511-1512 | Añadido el sábado, 2 de noviembre de 2024 15:16:08

But the best of that happiness, it seems to me, is that they do not have to lie to others, while they can be honest with themselves and their natural feelings and desires.
==========
The World of Yesterday (Zweig, Stefan)
- El marcador en la página 117 | posición 1665 | Añadido el sábado, 2 de noviembre de 2024 16:03:46


==========
The World of Yesterday (Zweig, Stefan)
- El marcador en la página 130 | posición 1866 | Añadido el martes, 5 de noviembre de 2024 16:38:32


==========
The World of Yesterday (Zweig, Stefan)
- El marcador en la página 133 | posición 1914 | Añadido el martes, 5 de noviembre de 2024 22:34:19


==========
The Pragmatic Programmer (Thomas, David)
- La subrayado en la página 200 | posición 2316-2317 | Añadido el miércoles, 6 de noviembre de 2024 20:38:04

In Topic 10, ​Orthogonality​, we recommended writing “shy” code. Here, the emphasis is on “lazy” code: be strict in what you will accept before you begin, and promise as little as possible in return.
==========
The Pragmatic Programmer (Thomas, David)
- La subrayado en la página 200 | posición 2315-2317 | Añadido el miércoles, 6 de noviembre de 2024 20:39:25

out of range. Tip 37 Design with Contracts In Topic 10, ​Orthogonality​, we recommended writing “shy” code. Here, the emphasis is on “lazy” code: be strict in what you will accept before you begin, and promise as little as possible in return.
==========
The Pragmatic Programmer (Thomas, David)
- El marcador en la página 207 | posición 2389 | Añadido el miércoles, 6 de noviembre de 2024 20:50:45


==========
The World of Yesterday (Zweig, Stefan)
- La subrayado en la página 139 | posición 2001-2002 | Añadido el viernes, 8 de noviembre de 2024 22:53:51

But as I determined to devote all my power, time and passion to someone else’s work, I was giving myself the best thing imaginable—a moral mission.
==========
The World of Yesterday (Zweig, Stefan)
- La subrayado en la página 139 | posición 2002-2002 | Añadido el viernes, 8 de noviembre de 2024 22:54:03

My vague seeking, my own attempts, now had a point.
==========
The World of Yesterday (Zweig, Stefan)
- La subrayado en la página 141 | posición 2024-2025 | Añadido el viernes, 8 de noviembre de 2024 22:58:42

struggle to remain equally free in my mind—a struggle that, in our times, is becoming ever harder.
==========
The World of Yesterday (Zweig, Stefan)
- La subrayado en la página 141 | posición 2023-2025 | Añadido el viernes, 8 de noviembre de 2024 22:58:58

Now I was outwardly free, and all the years from then until the present day have been given to my struggle to remain equally free in my mind—a struggle that, in our times, is becoming ever harder.
==========
The World of Yesterday (Zweig, Stefan)
- La subrayado en la página 143 | posición 2056-2058 | Añadido el viernes, 8 de noviembre de 2024 23:05:35

as good-natured as he would once have been, devoutly trusting in his imperial ruler and in God, who used to make his life so pleasant? The Russians, the Germans, the Spanish, none of them know how much freedom and joy that heartless, voracious ogre the State has sucked from the marrow of their souls.
==========
The World of Yesterday (Zweig, Stefan)
- La subrayado en la página 143 | posición 2055-2058 | Añadido el viernes, 8 de noviembre de 2024 23:05:42

sombre ranks, chins jutting, hearts heavy. Can anyone imagine an Austrian today as free and easy, as good-natured as he would once have been, devoutly trusting in his imperial ruler and in God, who used to make his life so pleasant? The Russians, the Germans, the Spanish, none of them know how much freedom and joy that heartless, voracious ogre the State has sucked from the marrow of their souls.
==========
The World of Yesterday (Zweig, Stefan)
- La subrayado en la página 144 | posición 2073-2079 | Añadido el viernes, 8 de noviembre de 2024 23:13:09

A young couple might start dancing in the street any time, not just on the fourteenth of July, with a policeman smiling at them—the street was common property! No one felt shy with anyone; the prettiest girls didn’t shrink from going into the nearest petit hôtel with a black man—who in Paris minded about such ridiculous bugbears as race, class and origin became later? You walked, talked, and slept with whoever you liked, regardless of what anyone else thought. To love Paris properly, you ought really to have known Berlin first, experiencing the natural servility of Germany with its rigid class differences, painfully clearly delineated, in which the officer’s wife did not talk to the teacher’s wife, who in turn did not speak to the merchant’s lady, who herself did not mix with the labourer’s wife.
==========
The World of Yesterday (Zweig, Stefan)
- La subrayado en la página 144 | posición 2070-2073 | Añadido el viernes, 8 de noviembre de 2024 23:13:26

You could dress as you liked; students promenaded along the boulevard Saint-Michel in their chic berets, while the rapins, the painters, sported broad-brimmed hats like giant mushrooms and romantic, black-velvet jackets. Meanwhile workers cheerfully went about on the smartest of boulevards in their blue blouses or their shirtsleeves, along with nursemaids in elaborately pleated Breton caps and vintners in blue
==========
The World of Yesterday (Zweig, Stefan)
- El marcador en la página 149 | posición 2143 | Añadido el viernes, 8 de noviembre de 2024 23:29:02


==========
The World of Yesterday (Zweig, Stefan)
- La subrayado en la página 143 | posición 2055-2058 | Añadido el viernes, 8 de noviembre de 2024 23:38:00

sombre ranks, chins jutting, hearts heavy. Can anyone imagine an Austrian today as free and easy, as good-natured as he would once have been, devoutly trusting in his imperial ruler and in God, who used to make his life so pleasant? The Russians, the Germans, the Spanish, none of them know how much freedom and joy that heartless, voracious ogre the State has sucked from the marrow of their souls.
==========
The World of Yesterday (Zweig, Stefan)
- La subrayado en la página 143 | posición 2055-2058 | Añadido el viernes, 8 de noviembre de 2024 23:38:14

sombre ranks, chins jutting, hearts heavy. Can anyone imagine an Austrian today as free and easy, as good-natured as he would once have been, devoutly trusting in his imperial ruler and in God, who used to make his life so pleasant? The Russians, the Germans, the Spanish, none of them know how much freedom and joy that heartless, voracious ogre the State has sucked from the marrow of their souls.
==========
The World of Yesterday (Zweig, Stefan)
- La subrayado en la página 143 | posición 2056-2058 | Añadido el viernes, 8 de noviembre de 2024 23:38:24

Can anyone imagine an Austrian today as free and easy, as good-natured as he would once have been, devoutly trusting in his imperial ruler and in God, who used to make his life so pleasant? The Russians, the Germans, the Spanish, none of them know how much freedom and joy that heartless, voracious ogre the State has sucked from the marrow of their souls.
==========
communicationpatterns (Jacqui Read)
- La subrayado en la posición 316-318 | Añadido el jueves, 14 de noviembre de 2024 15:15:44

After identifying your audience, ask yourself the following about them: What do they want from you? Consider your audience’s expectations and needs. Meeting their needs is key to successful communication.
==========
communicationpatterns (Jacqui Read)
- La subrayado en la posición 319-320 | Añadido el jueves, 14 de noviembre de 2024 15:15:57

What do you want from them? This question is often missed: what you need from your audience.
==========
communicationpatterns (Jacqui Read)
- La subrayado en la posición 325-326 | Añadido el jueves, 14 de noviembre de 2024 15:17:02

What level of detail do they need? Whether the content is technical or not, you need to consider the appropriate level of detail.
==========
The World of Yesterday (Zweig, Stefan)
- La subrayado en la página 162 | posición 2345-2346 | Añadido el jueves, 14 de noviembre de 2024 23:31:12

That was the first lesson—great men are always the kindliest.
==========
The World of Yesterday (Zweig, Stefan)
- La subrayado en la página 162 | posición 2346-2346 | Añadido el jueves, 14 de noviembre de 2024 23:31:24

The second lesson was that they nearly always lead the simplest lives.
==========
The World of Yesterday (Zweig, Stefan)
- El marcador en la página 165 | posición 2389 | Añadido el jueves, 14 de noviembre de 2024 23:44:20


==========
communicationpatterns (Jacqui Read)
- La subrayado en la posición 333-339 | Añadido el viernes, 15 de noviembre de 2024 18:18:35

Once you’ve identified your audience and their needs, you can begin your diagram.
==========
communicationpatterns (Jacqui Read)
- La subrayado en la posición 350-350 | Añadido el viernes, 15 de noviembre de 2024 18:20:16

Levels of abstraction refers to the granularity or generality of the information you present in a diagram.
==========
communicationpatterns (Jacqui Read)
- La subrayado en la posición 384-384 | Añadido el viernes, 15 de noviembre de 2024 18:28:06

The software system and the containers belong in different conceptual levels.
==========
communicationpatterns (Jacqui Read)
- La subrayado en la posición 384-385 | Añadido el viernes, 15 de noviembre de 2024 18:28:24

The software system and the containers belong in different conceptual levels. In reality, containers within the software system will be interacting with the containers shown.
==========
communicationpatterns (Jacqui Read)
- La subrayado en la posición 388-390 | Añadido el viernes, 15 de noviembre de 2024 18:29:11

Figure 1-6 shows how the context diagram for Figure 1-5 should look. This is where the software system in focus (Polyglot Media) belongs, with its related external systems and actors.
==========
communicationpatterns (Jacqui Read)
- La subrayado en la posición 392-394 | Añadido el viernes, 15 de noviembre de 2024 18:30:06

Figure 1-7 shows how the container abstraction layer information in Figure 1-5 should be shown in a C4 container diagram.
==========
communicationpatterns (Jacqui Read)
- La subrayado en la posición 394-394 | Añadido el viernes, 15 de noviembre de 2024 18:30:18

The system in focus (Polyglot Media) is shown as a dashed box with the containers inside it.
==========
communicationpatterns (Jacqui Read)
- La subrayado en la posición 423-7871 | Añadido el viernes, 15 de noviembre de 2024 18:37:35

The method of connecting these diagrams is a dashed box in Figure 1-9, which is labeled (in the bottom left) the same as the central box (Polyglot Media) in Figure 1-8. This allows the audience to see the connection between these two diagrams, whichever one they see first. Figure 1-9. C4 container diagram for Polyglot Media (showing the high-level interactions within the Polyglot Media system) In a data flow diagram, you use numbers and letters to indicate the identity of its elements, and then you can use those same numbers and letters to guide your audience through different levels (shown in different diagrams). For example, in Figure 1-10 the processes are numbered 1 through 3 to indicate the order in which they occur, and if those processes are further divided in another diagram, they can be identified by that number. Figure 1-10. Level 1 data flow diagram In Figure 1-11, process 2 from Figure 1-10 is divided into three subprocesses. You can tell this because they are numbered 2.1 through 2.3. The processes are again ordered, but relative to the higher-level diagram in Figure 1-10. Figure 1-11. Level 2 data flow diagram If you compare the data stores in Figures 1-10 and 1-11, you will notice that the data stores labeled A and B in Figure 1-10 also appear in Figure 1-11 with the same identities.4 If the notation you’re using doesn’t provide a formal way of connecting diagrams, you will need to make the connection explicit yourself. For example, Figure 1-12 shows another way to connect process 2 (Fetch media) in Figure 1-10 and its subprocesses 2.1 through 2.3 in Figure 1-11 using a similar method to the one employed by C4 diagrams (shown previously in Figure 1-9). You could use a similar technique in many types of diagrams. Figure 1-12. Level 2 data flow diagram with explicit representational consistency Tip When including diagrams in documentation, refer to them in the text of that documentation. Use hyperlinks if possible, and label your diagrams (for example, “Figure 1: System X context diagram”) and then reference that label explicitly. Make representational consistency explicit in your diagrams and documentation to reduce your audience’s cognitive load.5 Summary This chapter covered the essentials of visual communication, giving you a foundation on which to build with the remaining patterns and antipatterns in Part I. As you continue through the book, think about how you could apply these essentials along with the other patterns and antipatterns explored. Having thought about what your audience needs from your diagram, it is time to consider the amount of information that you are presenting in it. Keeping this to the bare minimum needed to communicate your message will improve your audience’s understanding. 1 The level of detail in designs for development teams can be controversial, leading to clashes between development and those creating the designs. 2 A characteristic of the code that possibly indicates a deeper problem. 3 C4 also has some supplementary diagrams such as a deployment diagram. 4 Notice that the data store identities (A, B, and so on) are ordered in the same sequence as the data stores are accessed in the flow of the diagram. 5 Cognitive load is the amount of effort a person has to exert to reason or think about something. Chapter 2. Clarify the Clutter Your chances of communicating successfully are drastically reduced if an audience has to work hard to understand your message. This chapter explores the patterns and antipatterns that will help you reduce your audience’s cognitive load. You will identify and eliminate elements of your diagram that obscure your message, and split that message across multiple diagrams where needed. Color Overload When talking about the color overload antipattern, I often refer to it as an explosion of unicorns. In most cases, the colors used in diagrams are not given much, if any, thought at all. When too many colors are used, the audience may have difficulty matching them to their meaning without a lot of mental effort (even if a legend is included). Even worse, colors that are used without any meaning at all cause the audience to waste mental energy deciphering a detail that’s irrelevant to your intended message. This antipattern usually occurs because the diagram’s author had no motivation to consider color or no idea that color is important in visual communication. The author might use default colors or randomly selected colors in a diagramming application because that is quicker than taking the time to think about color selection or because that individual or business has always used those colors. Tip Failing to consider color in a visual presentation is an example of being “penny-wise but pound-foolish.” You may save time creating the diagram but will spend more time (and therefore money) later by having to explain to audiences, redo the diagram, or even clear up a mess resulting from miscommunication. Just as fixing bugs in code early saves money and time in the long run, so does getting communication right early. This antipattern applies not just to diagrams but to all visuals, except those purely in black-and-white (that is black-and-white only, and not grayscale). But don’t think the answer is to create all visuals in black-and-white. The way to combat this antipattern is to consider color and use it to communicate. Note If you’re reading this book in print, all the images are in grayscale. Where color is important, the image caption includes a link to the book’s website, which contains all color versions. In Figure 2-1, an overpowering array of bright colors shows that each component in the diagram is different, but without any consideration for communicating any further details. Think about how you would fix this before reading on. Figure 2-1. Rainbow sequence diagram (https://communicationpatternsbook.com) To fix Figure 2-1, you must minimize the color palette, using only the number of colors needed to convey your message. You don’t need a different color for every component. When selecting colors, consider which colors go well together (that is, they don’t clash) as well as the luminosity of the colors; too many bright colors may overwhelm your audience. Next you need to consider what you are trying to communicate to your audience via these selected colors. You can use them to communicate aspects of the components like function or type by using the same color for each category. For example, Figure 2-2 uses four colors to differentiate the UI, data store, APIs, and service, and a key communicates the meaning of the colors. Figure 2-2. Colors used to group by type (https://communicationpatternsbook.com) Grouping colors by type isn’t the only option for improving Figure 2-1, but it implements the fixes just mentioned to minimize distraction from the message of the diagram. Avoiding distractions from your message is key to successful communication. Boxes in Boxes in Boxes Boxes are often used to communicate where a component in the diagram is situated (conceptually, logically, physically…) as well as to group components. When you have too many boxes, their many lines become visually confusing, meaning the audience must spend precious attention and brainpower working out which line belongs to which box. You need a lot of whitespace to make a diagram with many boxes legible, leaving less space for what you actually want to communicate. The boxes in boxes in boxes antipattern emerges as the diagram author uses the same form of delineation to represent different meanings in a diagram. Maybe the author is unaware of other ways of expressing meaning or ends up trapped in the this is the way it has always been done way of thinking. Tip Whitespace is just as important as the content of your diagram. It gives the eye a place to rest, reducing cognitive load, as well as making the diagram easier to scan and more legible. Whatever the reason, this antipattern disrupts communication and usually wastes time or money. Your audience will not appreciate having to expend effort on deciphering your diagram and will either not expend this effort or do so but still not receive the message you are trying to communicate. Many types of diagrams can fall prey to this antipattern, but structural diagrams that convey situation or location (for example, logical location) are the most common victims. Data flow or sequence diagrams can end up with lines and boxes too close together, and the fixes discussed in this section will still apply. Tip Keep your background color subtle compared to the colors used for borders and text. You must create high contrast between elements in your diagram and the background so that your audience can clearly differentiate everything in the diagram. Figure 2-3 is a cloud resources diagram that uses dashed-line boxes to indicate various logical constructs like virtual network boundaries, storage accounts, and policy application. The difference in line type (dashed versus solid) between boxes and relationships is good, but a lot more can be done to make this diagram more readable. How could you improve Figure 2-3? Figure 2-3. Boxes in boxes in boxes cloud resources diagram (antipattern) When you create diagrams, consider alternatives to boxes.1 Labels on components are a good alternative. If you do use boxes, differentiate between them by using color and pattern of both the box outline and background. Removing unnecessary detail and splitting the diagram into multiple diagrams are also good techniques. Figure 2-4 shows one example of how the diagram in Figure 2-3 can be improved: Some boxes have been replaced with labels or notes, reducing the number of meanings boxes are used to communicate. Other boxes have been merged because their separation was not required to convey the message. Those boxes that remain have been differentiated using color and pattern (solid line and a shaded background). Figure 2-4. Decluttered cloud resources diagram Remember that boxes are just one way to communicate meaning in a diagram, and the nesting of boxes is often visually confusing. Whitespace is your friend, along with the other strategies discussed in this antipattern. Relationship Spiderweb Connections (or relationships) in diagrams are typically shown as lines, but the way those lines are styled and arranged determines whether the relationships are clear. When relationships cross over each other or even cross over other components in the diagram, you end up with a spiderweb of confusion. It is not clear whether this crossing has meaning. If relationships are labeled, it is not clear which line the label applies to as there are so many lines and labels close together. A spider would feel at home and catch a good dinner if it lived in a diagram suffering from this antipattern. The relationship spiderweb antipattern often occurs when not much thought, if any, has been given to the layout of the components in a diagram or their relationships. Some diagramming applications provide unhelpful defaults, such as arrows with unclear line crossings. However, as the saying goes, “It’s a bad craftsperson who blames their tools.” Change those defaults or change the tools you use.2 Any diagram that shows relationships can suffer from this antipattern, but structural diagrams are more prone to it than behavioral ones. Even C4 diagrams, which promote many good practices in creating diagrams, can fall foul of the relationship spiderweb antipattern. In Figure 2-5, relationships cross each other and even over containers, adding to the audience’s mental load. To add further burden, it is not clear to which relationship some of the labels apply. Figure 2-6 shows an example of how Figure 2-5 can be improved. The arrows (relationships) have been made orthogonal (using right angles) instead of straight. This allows the diagram’s author to manipulate the relationship much more easily to ensure higher clarity. It is now obvious to the audience which label applies to each relationship. If required for further clarity, you can use pattern or color to distinguish between different types of relationships. Tip The position of labels indicating relationships should be standardized in a diagram—for example, close to the beginning of the relationship or in the middle of the line. Make exceptions to this rule when moving the label would clarify the relationship or label, such as away from a right angle or farther away from another label. None of the components in Figure 2-5 had to be removed when creating Figure 2-6, but if components such as a logging service were present, they could be moved into a separate diagram so that its relationships would be clear in that separate diagram. When two lines cross in a diagram, it is ambiguous whether they are right angled or straight. Make it clear that they do not intersect by using a line jump (typically an arc that jumps the line it crosses). No line jumps are required in Figure 2-6, but Figure 15-2 has one. Note Remember that diagrams are free; you should use as many as you need to successfully communicate your message to the audience. Multiple diagrams, each with a single purpose, are much more effective than one diagram with multiple purposes (as discussed in “Mixing Levels of Abstraction”). Figure 2-5. Spiderweb C4 container diagram for Polyglot Media (antipattern) Figure 2-6. Untangled C4 diagram Balance Text Having too much information in a diagram obfuscates the intended message but sometimes you really need to add extra information to completely convey the message. In that case, you can apply the balance text pattern. You are balancing having enough information for the audience to understand the message against having so much clutter that the message is lost or only partially understood. Tip Information that isn’t best displayed in a diagram should be moved to text or tabular form alongside the diagram. Information written as sentences is a good candidate to abridge or remove from a diagram into separate text. Relational data is a good candidate to be displayed in table form. Some notations and types of diagrams, such as flow diagrams, have built-in ways of adding more information—a standard format to add extra text without becoming visually confusing. For other diagrams, notes or footnotes can add more information without cluttering the main content. Warning If you do use notes, be wary of separating them entirely (for example, as text alongside the diagram), because if the notes get lost or the diagram is viewed without them, the diagram could be misunderstood. The flow diagram in Figure 2-7 has too much text. The word customer, which has been introduced through the subtitle, is repeated unnecessarily in the diagram boxes. Note that some of the text doesn’t even fit within the flowchart components. Tip In general, it is better to follow an existing convention for adding extra information to a diagram, such as the annotation shown in Figure 2-8 (rather than separate notes). Using a common or expected approach will aid the audience’s understanding, although exceptions will exist. Figure 2-7. Flow diagram with too much text (antipattern) Look to Figure 2-8 for an example of how to apply this pattern and two ways to include extra text in the diagram (one method is usually enough, but two are illustrated here). Excess text, like the repetition of customer, has been completely removed or shortened. Information that is required has been placed into a flowchart annotation (explaining “Select consumer mode”) and into four numbered notes (with superscript references in the diagram), making the main flow much clearer. Figure 2-8. Flow diagram with excess text removed or moved to annotations and references Besides removing the repeated word customer, the text has been changed from full sentences to short phrases. The subject, customer, can be inferred from the title and context. You are not repeating information that can be deduced from the structure of the diagram itself. Deciding how to display information stripped from the main diagram will depend on the type of diagram, your message, and the format of the delivery (presentation, documentation, or other forms). You may be tempted to move all excess information into notes or footnotes, but this just moves the problem rather than solving it. The audience will still suffer from having to wade through excess information. Make sure to remove any information that is not required to convey your message. Move it to another diagram if needed. Summary Your diagrams should now be free of clutter and have a single purpose. Look out for scope-creep (where the scope of your diagram grows and grows), which will likely make your diagram multipurpose and allow clutter to creep back in. Don’t be afraid to split a diagram into multiple diagrams to clarify your message. Your next stop on this diagramming journey is accessibility. In the following chapter, you will see how default or common practices can make it much harder for some of your audience to understand your visuals. You will find that what you have learned about decluttering your diagrams has begun the process of making them more accessible. 1 Boxes hark back to the Windows 3.1 era when they are used by themselves. Far fewer colors could be displayed on a screen. 2 Most diagramming applications will remember your updated default settings, so you should need to set your defaults only once. Chapter 3. Accessibility When most people hear the word accessibility in the world of software, they immediately think of screen readers (for those who are blind or have reduced vision), but they don’t think much further than this. Accessibility in the technology arena encompasses much more. When you create a diagram, you should consider whether your audience can fully access it. If a stakeholder doesn’t fully understand your message, you both lose out. Accessibility isn’t just for those with temporary or permanent disabilities or special needs. Your diagrams and visuals need to be accessible to people with different levels of knowledge, business functions, and familiarity with your product or domain. Your audience’s environment also affects the level to which they can access your diagram, including the screen size they are using and amount of time they have to consume your information. This chapter will help you consider accessibility beyond screen readers and produce diagrams that can be accessed by a much wider audience. Note Anyone can be disabled. It is their environment that disables them. Your aim is to put everyone on an equal footing. Relying on Color to Communicate You are relying on color to communicate when you use color alone to represent meaning, such as different colored boxes to represent new or changed items in a diagram. The most obvious and common form of the relying on color to communicate antipattern is to use color to represent positive and negative without providing any other indication of meaning (such as a legend) for those who can’t distinguish the colors. For example, green is used to show good or go, and red for bad or stop. A traffic light at least uses position as an indicator of color meaning, but red and green are often used in diagrams without even this sort of cue. Having said that, there has been a movement away from using just the colors red and green. For example, a diff in GitHub’s UI shows additions in green with plus signs, and deletions in red with minus signs.1 That hasn’t happened for other colors, though, and this is affecting the accessibility of diagrams and other visuals. Note EventStorming (a collaborative modeling technique) uses colored sticky notes to represent different elements. The notes also have different shapes to ensure that everyone can see the difference between any two elements. You cannot rely on color to be perceived the same way by everyone for several reasons. Of the total population, 4.5% have some form of color blindness (color vision deficiency). It is more prevalent in men (affecting 1 in 12 men) than women (1 in 200). So, sadly, as the tech industry is still dominated by men, more than 4.5% of your audience likely cannot perceive the difference between two or more colors in your visual. Along with color vision deficiency, some people struggle to perceive low contrast—for example, those who are partially sighted. Other conditions that might affect how well your audience can view your diagram and its colors include photophobia, keratoconus, and glaucoma.2 In addition to color, you need to consider contrast to make your diagrams accessible. Contrast All of your audience needs to be able to easily perceive the content of your diagram, and this doesn’t just include text. Arrows, icons, and patterns also need to have adequate contrast. You can calculate a contrast ratio, the perceived difference in luminance between a foreground and background color; for example, pure red (hex value #FF0000) on a white background has a contrast ratio of 4:1. The ratio remains the same even if the foreground and background colors are swapped. The ratio required changes depending on the size of the text, icon, pattern, and so on (smaller requires a higher ratio). WhoCanUse is one tool you can use to check the contrast ratio between two colors. The Web Content Accessibility Guidelines (WCAG) provide best practices and requirements, along with success criteria, for making digital content accessible to people with disabilities. For more information see the WCAG website, and WebAIM specifically for contrast. Another factor that affects the perception of colors in a diagram is format. The monitor or projector your audience is using may be calibrated very differently from the monitor the diagram was prepared on. Similar colors may end up fairly indistinguishable or unidentifiable. If a green color looks yellow to the audience, but you refer to a “green” component, for example, the audience will be confused. Tip When using diagrams in multiple mediums—for example, a wiki/web page or a presentation using a projector—you should consider using different color palettes. This is especially true if the background color will be different across mediums (for example, white in a web page and black in a slide deck). Consider how the audience will perceive the colors and how the background color will change the contrast ratio of elements and labels. Diagrams or visuals may be viewed in printed form, such as in a document (paper, pamphlet, and so on) or a book, and could be printed in grayscale (a book is likely to be printed in grayscale). All the colors are lost in grayscale, and only the saturation (lightness/darkness) remains. In this case, all the colors in a diagram could appear to be the same shade of gray. If colors are indistinguishable, any meaning ascribed to them is lost. A legend is meaningless if the audience cannot tell one color from another. When presenting a diagram and referring to a component by color, part of your audience is likely to be unable to tell which component you are referring to, whether the diagram is in color or grayscale. Don’t think because it looks good to you that your message will be successfully communicated to the audience. You have several options for avoiding the relying on color to communicate antipattern and giving audiences a cue besides color. One method is to use patterns. By using a suitably contrasting pattern, like the one shown in Figure 3-1, colors that may look similar in grayscale or to someone with color vision deficiency can still be differentiated easily. This is a valuable technique when you can’t vary the color palette in your diagram. Figure 3-1. Even in grayscale, pattern can differentiate two colors Don’t refer to components of a diagram, either in speech or text, using only color as a reference, such as “The red boxes in the diagram show…​” This is the sort of situation that can be solved by using patterns: “The red boxes with dashed borders show…​” Symbols are another useful tool for distinguishing between components or colors. You can use symbols on their own or with color to clarify your message; for example, when using red, yellow, and green for status, you could add a + (plus) to the green and a – (minus) to the red. Warning Consider what colors and symbols mean, especially in cultural terms, before using them in your diagram. Ensure that they communicate your intended message and do not cause confusion or offense. You can also create an accessible color palette. The easiest way to check whether a color palette is accessible is to use a tool. Many free options exist; you can install some as an extension in your internet browser, which is particularly useful for checking website palettes. Design Tools for Color Vision Deficiency Here are some tools I recommended to help you create an accessible color palette: Color Oracle is a free application for Windows, Mac, and Linux that can simulate four types of color vision deficiency (including grayscale/monochromacy). Coblis is a free online tool that allows you to upload an image and simulate eight types of color vision deficiency. Sim Daltonism is a better option than Color Oracle if you have a Mac or iPhone because it simulates eight forms of color blindness and on Mac has a draggable and resizable window. Chromatic Vision Simulator is a free application for Android and iOS, and also has a web version. It simulates up to three types of color blindness live from a phone camera or by using a saved photo or image. Viz Palette is a free tool for selecting color palettes for data and other visualizations. It produces a color report to highlight colors which could be confused and is optimized for copying and pasting in and out of JavaScript. Figure 3-2 shows some of the standard colors from draw.io, a free diagramming and drawing application. For those reading this book in print, the elements in Figure 3-2 look like the same shade in grayscale. For those reading a digital version, the colors are all pastel tones, which are the same or similar luminosity. This indicates that the color palette is not accessible. Draw.io offers several palettes, and you can select your own colors. Assuming that a default palette is accessible could lead you to exclude some of your audience. Figure 3-2. Flow diagram showing some of the standard colors from draw.io (https://communicationpatternsbook.com) Figure 3-3 is a simulation of Figure 3-2 for a person with deuteranopia, a type of color blindness preventing the perception of green. Although the original diagram has four colors, the simulation shown in Figure 3-3 appears to have only three (at least without looking closely). There is hardly any difference between the color of Customer UI and Customer API in Figure 3-3. Figure 3-3. Deuteranopia (green-blind) simulation of Figure 3-2 (https://communicationpatternsbook.com) When considering a color palette, in addition to checking it with a simulator tool, look to include colors with different levels of saturation. Contrast between colors will improve differentiation for someone who requires high contrast or is color blind. Don’t trust that a diagramming application’s palette or a corporate color scheme has been checked for compatibility with grayscale or color blindness. It would be nice to think that designers and companies (especially larger ones with bigger budgets) have considered accessibility when it comes to the colors they choose for an official palette or the default colors in an app, but you cannot count on this. Test your corporate color palette, or the default colors of the diagramming application you use most often, using a color blindness simulator. Make sure you give feedback on what you discover, whether good or bad! Tip Alternate text (alt text) offers a text description of an image or diagram. Especially for public content (for example, documentation for users), you should consider carefully crafting alt text for any diagrams or other visuals. Ask for feedback on your diagrams, especially from those with color blindness or a disability, and incorporate this feedback into the diagram and your other future visuals. Include a Legend Including a legend, or a key, with your diagram is a valuable technique to aid successful communication. Not including one assumes that the audience has specific knowledge, be that a full understanding of the notation, knowledge of all the terms and acronyms in a diagram, or knowledge of all the symbols and icons contained in the diagram. Don’t rely on your audience to have this knowledge unless you wish to risk how well your diagram communicates its message. It’s a balancing act: we all know that you cannot please everyone all of the time. But you can put guides in for those who need them without getting in the way of those who don’t. Getting this balance right results in successful communication. Consider ramps and steps as a metaphor for a legend (see Figure 3-4). People who need the ramp are enabled to get to where they need to go, while those who don’t need it can choose to take the steps. Figure 3-4. Ramps for those who need or want to use them, and steps for anyone who wants to take them You don’t always need a legend and, sometimes, including one can mean you fall foul of clutter antipatterns. The intention of the legend is to clarify, not obscure, the message of the diagram. To fight clutter, where a legend is required, you can link to it and therefore save all the space it would have taken up. For example, on a web page, your legend could have a hide or show option (see Figure 3-5). But make sure the link is explicit and obvious. You could also include a legend for one or more diagrams at the top of a page. Tip Look out for cases where it would be simpler to use labels instead of a legend. For many charts and graphs, reading a label for a column or line is much easier than referencing a legend. Figure 3-5. Including a link to a legend in a web page or document A legend such as the one in Figure 3-6 can be particularly useful to an audience faced with a UML diagram because many people do not know the UML notation or cannot remember all its eccentricities. If a full legend like this takes up too much space, you could include a partial legend, containing just the parts relevant to the diagram it is explaining, or include a link to the legend, as previously mentioned (See Figure 3-5). Tip Be explicit, not implicit. Most diagrams will benefit from a legend. If you aren’t including one, have a good reason not to (for example, for a very simple diagram or chart, labels are a better choice). Figure 3-6. A UML legend showing the eccentricities of UML Appropriate Labels When creating a diagram, remember that what is written is as important as what is not written. It is easy to include too much or too little information, or the wrong information entirely. The appropriate labels pattern is about making sure text and labels clearly communicate your message. Besides the content of the text, you should consider its placement. Ensure that your labels are close to the component or relationship you are labeling, and balance the components and text with whitespace. The text should make the message of the diagram explicit through clarity of content and placement. Interestingly, coders often put emphasis on writing code with thoughtful naming and structuring so that it does not require comments (explanatory text that is not part of the program). With diagrams, the emphasis is more on making the message explicit via composition (arrangement), the chosen components, and the carefully crafted labels and other text. You often need to include explanation (like comments in code) to fully convey a message in a diagram because its primary aim is to communicate.3 Tip The art of creating a diagram involves balancing the competing factors of all the information you need to communicate and the clarity you need to communicate successfully. Figure 3-7 shows a C4 context diagram with not enough labels or descriptive text. This gives you some idea of how your audience may feel when they see a diagram that doesn’t give them enough information to understand the meaning. This context diagram doesn’t give enough context! Figure 3-7. A C4 context diagram with few labels or text, providing little context (antipattern) Figure 3-8 adds descriptive text to the diagram’s components and descriptive labels to their relationships. The diagram now successfully conveys the context of the illustrated system, without muddling the message with too much information or badly placed labels. Figure 3-8. A C4 context diagram with an appropriate level of information in labels and descriptions With any diagram, it is important to clearly describe what each component (system, person, and so forth) is or does, but also the relationships between them. How you do this, and to what level of detail, will depend on your audience and the overall goal of your diagram. Note Take care to make your text legible to the widest audience possible when selecting a font in your diagrams. Aim for no smaller than 12 pt. Atkinson Hyperlegible is a free font the Braille Institute of America designed to be legible for low vision readers. A diagram with insufficient text, too much text, or misplaced text and labels will leave your audience struggling to understand. Do not make your audience work to understand your diagram. Summary I did say it wasn’t all about screen readers! You have a lot to consider when it comes to accessibility and won’t always get it right, but every little thing you do to make your diagrams more accessible makes a bigger difference than you think. Coping with inaccessibility is incredibly draining, especially for those who have to do so continually on a daily basis. Reducing this burden and making people who have disabilities and other conditions feel seen offers a huge uplift. The next chapter takes you on a journey and shows you how narrative can improve accessible diagrams even further. 1 A diff is a visual of the differences between an original and an updated file or list of files. 2 Photophobia is light intolerance. Keratoconus is a disorder of the cornea. Glaucoma is damage caused to the optical nerve, usually due to a buildup of fluid. 3 And that is not the primary aim of code, although good code does communicate. Chapter 4. Narrative After nourishment, shelter, and companionship, stories are the thing we need most in the world. ​—​Philip Pullman The term narrative may remind you of an English literature class, but stories serve as a means for so much more, including social bonding, problem-solving, and entertainment among others. As humans, we thrive on stories. The other chapters in this part are more about what to show your audience to communicate successfully; this one is more about the how. This chapter will help you tell your audience a story to get your message across. The Big Picture Comes First When you look at the cover of a box of LEGOs you don’t see a picture of each individual brick that’s inside. Instead, you see the picture of an exciting, fully assembled model…positioned in a life-like pirate’s bay with cliffs and sharks. ​—​Gregor Hohpe, The Software Architect Elevator Diagrams do not exist in isolation; they are part of a narrative, and the big picture comes first pattern helps order that narrative. Most diagrams are not the beginning of the story, and many are very much down in the nitty-gritty details of design. Even if your audience is interested in the fine details, that is not what you should show them first. They need the context and to be engaged and hooked into your narrative. Fine details are boring and confusing when you don’t know the big picture. The levels of abstraction discussed in “Mixing Levels of Abstraction” need to be ordered to make sense. When you’ve been delving deep into the details of a project, it’s easy to forget that you should first give your audience context and explain the big why. Imagine creating a presentation or document about a customer viewing media in an online system. Would you start with Figure 4-1 or 4-2? Figure 4-1. Data flow diagram—level 2 Figure 4-2. Data flow diagram—level 1 Figure 4-1 shows the detailed process of viewing the media. That is where you want to get to eventually, but it is not where the document or presentation should start. Before going to a level 2 data flow diagram, you need to give context and show the level 1 data flow diagram, such as Figure 4-2.1 Data Flow Diagrams A level 1 data flow diagram is actually the second level of data flow diagrams, after level 0, which is a very high level of an entire system, possibly showing flows to and from external systems (a similar view to a C4 context diagram). Level 1 then shows a more detailed view of the system, breaking down significant processes. Level 2 provides an even more detailed view, and level 3 is the most detailed level for data flow diagrams. At levels 2 and 3, you should have one diagram per process (from the preceding level); otherwise, your one diagram will end up too large and complex to be useful. Depending on your system’s size and complexity, you may not need to use all four levels, but for a large or complex system, you should consider creating multiple diagrams per level, even at level 1. Starting with level 1 is a move in the right direction but still doesn’t provide context. A high-level architecture or context diagram, such as the one in Figure 4-3, is where to start. You should also include other supporting materials such as business context and benefits (or at least a summary and links to the full versions in the document or presentation appendix). Tip You may not need to spend much time on the context and buildup to the main subject or diagram you need to discuss. The amount of time and detail will depend on your audience and what they already know. You can then move on in the narrative to a diagram such as a C4 container diagram, if needed, to explain the next conceptual link to the audience, before moving on to the data flow diagrams. You are leading them through a story via the diagrams, with each level adding more understanding. When you don’t give any context, you lose your audience and are unlikely to get your desired response. Your diagrams and supporting materials (such as requirements, business context, and business benefits) need to be ordered in such a way as to create a narrative, starting with the big picture (like Gregor’s LEGO pirate bay with sharks). Tip Put all your diagrams into a narrative order. Are there any holes in your narrative? Fill in those holes before you fall into them in front of others. Figure 4-3. C4 context diagram Match Diagram Flow to Expectations The match diagram flow to expectations pattern enables you to create a diagram that is easy for your audience to read from start to finish. Many people create diagrams without thinking about how the audience will read them. All diagrams have a flow of information, whether they communicate structure or behavior, that you want to match as closely as possible to the audience’s expectations. While other patterns have covered what to include or exclude from a diagram, this pattern is about using those components to order a story in a way that makes sense to your audience. When you pick up a book, you expect the text to start in the top left and finish in the bottom right (or top right to bottom left if you are reading a right to left language). So why would this not be so with a diagram? Successful communication breaks down as many barriers as possible between you and your audience. The flow isn’t quite as simple with a diagram as with a book, but having a focus or the start of your diagram in or near the top left, or middle left, makes a lot more sense than starting somewhere else on the canvas for those using languages written from left to right. Follow this with a general flow top to bottom and left to right to aid your audience in consuming the diagram’s message. Tip To avoid confusion, especially in a diagram that you cannot edit and rearrange, you can add a label or symbol to show where the audience should start reading. Start here, or a symbol such as an arrow, pointing finger, or Play button are all options. You can also use numbered labels to draw the audience through the diagram in the correct order. Figure 4-4 illustrates how a data flow diagram could end up if you don’t consider how the audience will read it. Where should they start? The top left is the natural place, but the start is actually closer to the bottom right at the Customer box. The flow is then right to left and bottom to top, going against the audience’s expectation. Tip Like a story, your diagram should have a beginning (where the audience should start to read), a middle (the rest of the content in an appropriate order), and an end (the conclusions you want the audience to draw). Figure 4-4. Data flow diagram with no consideration of how the audience will read it (antipattern) Figure 4-5 rearranges Figure 4-4 to better indicate the direction of flow. Read through to see how much easier this is to follow. The start of the diagram is on the left (Customer) with requests flowing left to right and responses flowing right to left. The numbered events acting on the data flow top to bottom and left to right, along with the letter identifiers (A–C) of the databases. Figure 4-5. Data flow diagram matching the left-to-right, top-to-bottom flow of English text Another aspect of a visual’s flow to consider is the interactions it depicts (for example, labeled relationship arrows). A request should follow the same direction as text (left to right in English), and a response should flow in the opposite direction. Tip Ensure that a response from a component always flows in the opposite direction of any requests. Visually differentiating types of interactions helps your audience understand your diagram more easily. Getting the flow correct is easy in sequence diagrams. The flow starts in the top left and requests flow left to right and responses right to left. Figure 4-6 illustrates a sequence diagram with a flow that meets audience expectations. The order of the components along the top is critical to allowing the flow from left to right and then right to left. Figure 4-6. Sequence diagram showing requests flowing left-to-right and responses flowing right-to-left Tip Explain your diagram to someone (or even to a rubber duck) to check whether your explanation flows across the diagram or jumps about. Structural diagrams should have a similar flow of information, but require additional considerations. When creating a diagram that includes infrastructure, such as databases, the general expectation is that the infrastructure elements will be placed at the bottom of the diagram, with elements such as systems and containers above, and then elements such as actors or users at the top. This is not a hard-and-fast rule, but it should be followed unless doing so means you fall foul of antipatterns. Logical diagrams showing, for example, a layered architecture should follow the left-to-right and top-to-bottom flow but also take into account the layers. Similar to other structural diagrams, layers should be arranged logically from top to bottom, with the user-facing layer at the top (such as the user interface or API layer). Within the layers, consider the most logical way to lay out elements from left to right. Note Layout expectations differ a little for a hexagonal architecture diagrams. Think of the diagram more like the face of a clock. The top left is still a good place to start because this is where people’s eyes may naturally fall, but you could also draw their attention to the center. Use color, bold/larger text, or thicker lines to draw their eyes to where you want them to start and lay diagram elements out logically in a clockwise direction. Clear Relationships A diagram has two main elements: components (containers, processes, and so on) and the relationships between them (arrows, groupings, and so on). Both are critical to the message in a diagram, but relationships lead the audience through a story, and that is why the clear relationships pattern is important. Without clear relationships, your message gets lost or confused, which could lead to consequences such as: The design you give developers is not implemented the way you wanted it to be. You don’t get budget approval for the changes you want to make to the system because key stakeholders did not understand how those changes would add value. It is best to have unidirectional (one-direction) relationships, and the label on any arrow between two components should describe the relationship in the direction shown. A line with arrowheads at both ends should be used only when the same process truly does happen in both directions. This is fairly rare. Relationships can also be made clearer using pattern and color—for example, a dotted or dashed line for an arrow or a box.2 You’ll then need to include a legend.3 Sequence diagrams, such as Figure 4-7, are a good example of unidirectional relationships and flows. Don’t create a sequence diagram like Figure 4-8, which combines each pair of unidirectional relationships into one bidirectional relationship. Compare the labels in Figures 4-7 and 4-8 to see how much information is lost. The message of the diagram is not clear when bidirectional relationships are used, and adding more information to the labels would reduce whitespace and clarity. Figure 4-7. Sequence diagram showing unidirectional relationships Figure 4-8. Sequence diagram showing ambiguous bidirectional relationships (antipattern) ArchiMate, an open modeling language for enterprise architecture, defines many types of relationship via various combinations of patterns and shapes. This notation is good for communicating a large amount of information in a small space, but it requires a legend because the audience might not be familiar with the notation or remember every detail. Figure 4-9 shows a key to the types of ArchiMate relationships. Including a key (showing at least the types used in the displayed diagram) is needed whenever you create an ArchiMate diagram, to ensure that your audience understands the many types. Figure 4-9. ArchiMate relationship key ArchiMate is a perfectly valid notation to use, but consider your audience’s needs. Another notation, such as C4, could communicate your message in a much simpler way without a key (although including a key is nearly always a good idea). I’ll discuss trade-offs with regard to notation further in Chapter 5. Make the story that your relationships tell clear and easy for your audience to understand. Types of Relationships You can convey many types of relationships via visuals. Here are five relationship types to consider: Hierarchical Illustrates the parent-child connection between elements. It often represents organizational structures or classification systems. Examples include organizational charts, family trees, and taxonomies. Sequential Shows a linear progression or a series of steps. It indicates an order or a process that must be followed. Examples include flowcharts, timelines, and step-by-step guides. Causal Depicts cause and effect, as one element leads to or influences another. This type of relationship is often seen in flowcharts, system diagrams, and decision trees. Proportional Illustrates the relative size, quantity, or scale of elements in comparison to one another. Examples include bar graphs, pie charts, and treemaps. Spatial Shows the physical arrangement or relative position of elements. This type of relationship can be seen in maps, floor plans, and network diagrams. Summary Throughout this chapter, you have learned techniques for creating flow and narrative in your diagrams to improve audience understanding and keep their attention. Along with the patterns and antipatterns from previous chapters, you now have a large toolbox to draw from when creating diagrams, but there is still more to add. In this chapter, I introduced notation, which is the system of symbols used to create your diagram and convey your message. The next chapter dives into some antipatterns to help you spot when, and when not, to apply some of the common notations in use today. 1 See Figures 1-10, 1-11, and 1-12 in “Mixing Levels of Abstraction” for more on levels of abstraction such as these. 2 Ensure you avoid the relying on color to communicate antipattern (see “Relying on Color to Communicate”). 3 See “Include a Legend” for more on this. Chapter 5. Notation When you create diagrams, you might use a standard notation, such as Unified Modeling Language (UML) or Business Process Model and Notation (BPMN), or a nonstandard notation (for example, your own, or a corporate standard of boxes and lines).1 You may not think much about the notation you use or, conversely, spend far too long deciding on one. This chapter covers several antipatterns that will guide you to see where a standard or nonstandard notation could reduce the likelihood of successful communication with your audience. Using Icons to Convey Meaning Using icons to convey meaning is an antipattern that has arisen from cloud provider icons becoming an almost formal notation. Before the cloud, people rarely creat <Has llegado al límite de recortes para este elemento>
==========
communicationpatterns (Jacqui Read)
- La subrayado en la posición 423-7871 | Añadido el viernes, 15 de noviembre de 2024 19:00:32

 <Has llegado al límite de recortes para este elemento>
==========
communicationpatterns (Jacqui Read)
- La subrayado en la posición 423-428 | Añadido el viernes, 15 de noviembre de 2024 19:01:39

 <Has llegado al límite de recortes para este elemento>
==========
communicationpatterns (Jacqui Read)
- La subrayado en la posición 456-460 | Añadido el viernes, 15 de noviembre de 2024 19:11:56

 <Has llegado al límite de recortes para este elemento>
==========
communicationpatterns (Jacqui Read)
- La subrayado en la posición 460-466 | Añadido el viernes, 15 de noviembre de 2024 19:12:42

 <Has llegado al límite de recortes para este elemento>
==========
communicationpatterns (Jacqui Read)
- La subrayado en la posición 494-496 | Añadido el viernes, 15 de noviembre de 2024 19:19:07

 <Has llegado al límite de recortes para este elemento>
==========
communicationpatterns (Jacqui Read)
- La subrayado en la posición 541-542 | Añadido el viernes, 15 de noviembre de 2024 19:27:38

 <Has llegado al límite de recortes para este elemento>
==========
communicationpatterns (Jacqui Read)
- La subrayado en la posición 552-554 | Añadido el viernes, 15 de noviembre de 2024 19:29:42

 <Has llegado al límite de recortes para este elemento>
==========
communicationpatterns (Jacqui Read)
- La subrayado en la posición 608-610 | Añadido el viernes, 15 de noviembre de 2024 19:38:37

 <Has llegado al límite de recortes para este elemento>
==========
communicationpatterns (Jacqui Read)
- La subrayado en la posición 612-616 | Añadido el viernes, 15 de noviembre de 2024 19:39:31

 <Has llegado al límite de recortes para este elemento>
==========
communicationpatterns (Jacqui Read)
- La subrayado en la posición 623-631 | Añadido el viernes, 15 de noviembre de 2024 19:40:39

 <Has llegado al límite de recortes para este elemento>
==========
communicationpatterns (Jacqui Read)
- La subrayado en la posición 620-623 | Añadido el viernes, 15 de noviembre de 2024 19:40:47

 <Has llegado al límite de recortes para este elemento>
==========
communicationpatterns (Jacqui Read)
- El marcador en la posición 634 | Añadido el viernes, 15 de noviembre de 2024 19:41:07


==========
The World of Yesterday (Zweig, Stefan)
- El marcador en la página 174 | posición 2521 | Añadido el viernes, 15 de noviembre de 2024 22:49:58


==========
The World of Yesterday (Zweig, Stefan)
- La subrayado en la página 174 | posición 2525-2526 | Añadido el sábado, 16 de noviembre de 2024 11:59:10

Europe, America and The Book of Job. Today they are great rarities in second-hand bookshops, and I was captivated.
==========
The World of Yesterday (Zweig, Stefan)
- La subrayado en la página 175 | posición 2536-2537 | Añadido el sábado, 16 de noviembre de 2024 12:01:33

And to the many things I loved in the world, I had added another.
==========
The World of Yesterday (Zweig, Stefan)
- La subrayado en la página 175 | posición 2536-2537 | Añadido el sábado, 16 de noviembre de 2024 12:01:42

suddenly it was revealed to me in the truly astral figure of Blake. And to the many things I loved in the world, I had added another.
==========
The World of Yesterday (Zweig, Stefan)
- La subrayado en la página 175 | posición 2536-2537 | Añadido el sábado, 16 de noviembre de 2024 12:01:46

suddenly it was revealed to me in the truly astral figure of Blake. And to the many things I loved in the world, I had added another.
==========
The World of Yesterday (Zweig, Stefan)
- La subrayado en la página 177 | posición 2556-2561 | Añadido el domingo, 17 de noviembre de 2024 00:56:47

Until the Great War, in fact, my life was still governed in some odd way by the idea that everything was only temporary. Nothing that I did, I told myself, was the real thing—not in my work, which I regarded as just experimenting to discover my true bent, not the women with whom I was on friendly terms. Like this, my young self could feel that it was not yet fully committed to anything, while I still had the carefree pleasure of tasting, trying and enjoying whatever was offered. At an age when other men had been married for some years, had children, held responsible positions, and must strain every nerve to the limit, I still thought of myself as a young man, a novice, a beginner with endless time ahead of me, and I hesitated to commit myself to anything definite.
==========
The World of Yesterday (Zweig, Stefan)
- El marcador en la página 189 | posición 2740 | Añadido el domingo, 17 de noviembre de 2024 01:36:11


==========
communicationpatterns (Jacqui Read)
- La subrayado en la posición 653-655 | Añadido el domingo, 17 de noviembre de 2024 16:35:17

 <Has llegado al límite de recortes para este elemento>
==========
communicationpatterns (Jacqui Read)
- La subrayado en la posición 658-661 | Añadido el domingo, 17 de noviembre de 2024 17:53:07

 <Has llegado al límite de recortes para este elemento>
==========
communicationpatterns (Jacqui Read)
- La subrayado en la posición 710-715 | Añadido el domingo, 17 de noviembre de 2024 17:59:20

 <Has llegado al límite de recortes para este elemento>
==========
communicationpatterns (Jacqui Read)
- La subrayado en la posición 737-751 | Añadido el domingo, 17 de noviembre de 2024 18:03:32

 <Has llegado al límite de recortes para este elemento>
==========
communicationpatterns (Jacqui Read)
- La subrayado en la posición 788-803 | Añadido el domingo, 17 de noviembre de 2024 18:08:06

 <Has llegado al límite de recortes para este elemento>
==========
The World of Yesterday (Zweig, Stefan)
- La subrayado en la página 193 | posición 2802-2804 | Añadido el domingo, 17 de noviembre de 2024 23:14:32

But only in youth does coincidence seem the same as fate. Later, we know that the real course of our lives is decided within us; our paths may seem to diverge from our wishes in a confused and pointless way, but in the end the way always leads us to our invisible destination.
==========
The World of Yesterday (Zweig, Stefan)
- El marcador en la página 195 | posición 2825 | Añadido el domingo, 17 de noviembre de 2024 23:19:04


==========
The World of Yesterday (Zweig, Stefan)
- El marcador en la página 199 | posición 2875 | Añadido el lunes, 18 de noviembre de 2024 00:18:19


==========
The World of Yesterday (Zweig, Stefan)
- La subrayado en la página 200 | posición 2891-2892 | Añadido el miércoles, 20 de noviembre de 2024 00:43:38

This was the first time I had experience of the menace of delusions of racial purity, a plague that has affected our world more disastrously than the real plague ever did in earlier centuries.
==========
The World of Yesterday (Zweig, Stefan)
- La subrayado en la página 201 | posición 2903-2905 | Añadido el miércoles, 20 de noviembre de 2024 00:47:22

radio, I learnt more about the forces and tensions that move our world from these people than from a hundred books.
==========
The World of Yesterday (Zweig, Stefan)
- El marcador en la página 204 | posición 2951 | Añadido el miércoles, 20 de noviembre de 2024 01:01:52


==========
The World of Yesterday (Zweig, Stefan)
- El marcador en la página 209 | posición 3023 | Añadido el domingo, 24 de noviembre de 2024 13:12:32


==========
communicationpatterns (Jacqui Read)
- La subrayado en la posición 872-878 | Añadido el martes, 26 de noviembre de 2024 20:12:14

 <Has llegado al límite de recortes para este elemento>
==========
communicationpatterns (Jacqui Read)
- La subrayado en la posición 896-898 | Añadido el martes, 26 de noviembre de 2024 20:16:21

 <Has llegado al límite de recortes para este elemento>
==========
communicationpatterns (Jacqui Read)
- La subrayado en la posición 911-916 | Añadido el martes, 26 de noviembre de 2024 20:21:25

 <Has llegado al límite de recortes para este elemento>
==========
communicationpatterns (Jacqui Read)
- La subrayado en la posición 923-925 | Añadido el martes, 26 de noviembre de 2024 20:22:21

 <Has llegado al límite de recortes para este elemento>
==========
communicationpatterns (Jacqui Read)
- La subrayado en la posición 953-955 | Añadido el martes, 26 de noviembre de 2024 20:25:25

 <Has llegado al límite de recortes para este elemento>
==========
communicationpatterns (Jacqui Read)
- La subrayado en la posición 967-974 | Añadido el martes, 26 de noviembre de 2024 20:29:57

 <Has llegado al límite de recortes para este elemento>
==========
communicationpatterns (Jacqui Read)
- La subrayado en la posición 982-983 | Añadido el martes, 26 de noviembre de 2024 20:32:57

 <Has llegado al límite de recortes para este elemento>
==========
communicationpatterns (Jacqui Read)
- La subrayado en la posición 987-992 | Añadido el martes, 26 de noviembre de 2024 20:33:52

 <Has llegado al límite de recortes para este elemento>
==========
communicationpatterns (Jacqui Read)
- La subrayado en la posición 1005-1007 | Añadido el martes, 26 de noviembre de 2024 20:35:41

 <Has llegado al límite de recortes para este elemento>
==========
communicationpatterns (Jacqui Read)
- La subrayado en la posición 1005-1007 | Añadido el martes, 26 de noviembre de 2024 20:35:54

 <Has llegado al límite de recortes para este elemento>
==========
communicationpatterns (Jacqui Read)
- La subrayado en la posición 1005-1007 | Añadido el martes, 26 de noviembre de 2024 20:36:03

 <Has llegado al límite de recortes para este elemento>
==========
communicationpatterns (Jacqui Read)
- La subrayado en la posición 1021-1023 | Añadido el martes, 26 de noviembre de 2024 20:37:47

 <Has llegado al límite de recortes para este elemento>
==========
communicationpatterns (Jacqui Read)
- La subrayado en la posición 1035-1037 | Añadido el martes, 26 de noviembre de 2024 20:40:26

 <Has llegado al límite de recortes para este elemento>
==========
communicationpatterns (Jacqui Read)
- La subrayado en la posición 1037-1039 | Añadido el martes, 26 de noviembre de 2024 20:40:41

 <Has llegado al límite de recortes para este elemento>
==========
communicationpatterns (Jacqui Read)
- La subrayado en la posición 1045-1049 | Añadido el martes, 26 de noviembre de 2024 20:41:42

 <Has llegado al límite de recortes para este elemento>
==========
communicationpatterns (Jacqui Read)
- La subrayado en la posición 1051-1054 | Añadido el martes, 26 de noviembre de 2024 20:42:44

 <Has llegado al límite de recortes para este elemento>
==========
communicationpatterns (Jacqui Read)
- La subrayado en la posición 1054-1060 | Añadido el martes, 26 de noviembre de 2024 20:42:55

 <Has llegado al límite de recortes para este elemento>
==========
communicationpatterns (Jacqui Read)
- La subrayado en la posición 1063-1072 | Añadido el martes, 26 de noviembre de 2024 20:44:00

 <Has llegado al límite de recortes para este elemento>
==========
communicationpatterns (Jacqui Read)
- La subrayado en la posición 1072-1078 | Añadido el martes, 26 de noviembre de 2024 20:44:17

 <Has llegado al límite de recortes para este elemento>
==========
communicationpatterns (Jacqui Read)
- La subrayado en la posición 1081-1089 | Añadido el martes, 26 de noviembre de 2024 20:45:43

 <Has llegado al límite de recortes para este elemento>
==========
communicationpatterns (Jacqui Read)
- La subrayado en la posición 1112-1115 | Añadido el martes, 26 de noviembre de 2024 20:48:15

 <Has llegado al límite de recortes para este elemento>
==========
communicationpatterns (Jacqui Read)
- La subrayado en la posición 1184-1188 | Añadido el martes, 26 de noviembre de 2024 20:57:43

 <Has llegado al límite de recortes para este elemento>
==========
communicationpatterns (Jacqui Read)
- La subrayado en la posición 1197-1199 | Añadido el martes, 26 de noviembre de 2024 20:59:15

 <Has llegado al límite de recortes para este elemento>
==========
communicationpatterns (Jacqui Read)
- El marcador en la posición 1215 | Añadido el martes, 26 de noviembre de 2024 21:46:10


==========
The World of Yesterday (Zweig, Stefan)
- La subrayado en la página 216 | posición 3131-3134 | Añadido el martes, 26 de noviembre de 2024 22:32:36

G A Borgese sent us comradely greetings from Italy, and encouragement came from the Scandinavian and Slavonic countries. “Come and visit us!” one great Russian author wrote to me. “Show the pan-Slavists who urge us to go to war that you are against it in Austria!” How we all loved our time, a time that carried us forward on its wings; how we all loved Europe! But that overconfident faith in the future which, we were sure, would avert madness at the last minute, was also our own fault.
==========
The World of Yesterday (Zweig, Stefan)
- El marcador en la página 217 | posición 3143 | Añadido el martes, 26 de noviembre de 2024 22:35:58


==========
The World of Yesterday (Zweig, Stefan)
- El marcador en la página 219 | posición 3172 | Añadido el martes, 26 de noviembre de 2024 23:13:36


==========
The World of Yesterday (Zweig, Stefan)
- La subrayado en la página 224 | posición 3247-3247 | Añadido el sábado, 30 de noviembre de 2024 21:12:42

tragedy was about to turn into Viennese farce.
==========
The World of Yesterday (Zweig, Stefan)
- La subrayado en la página 228 | posición 3320-3321 | Añadido el sábado, 30 de noviembre de 2024 21:42:18

“Who knows how many will stand firm once the posters ordering mobilisation go up? We have entered a time of mass emotion, crowd hysteria, and we cannot see yet what power it will have if war comes.”
==========
The World of Yesterday (Zweig, Stefan)
- La subrayado en la página 230 | posición 3341-3344 | Añadido el sábado, 30 de noviembre de 2024 21:56:14

Then, on 28th June 1914, a shot was fired in Sarajevo, the shot that in a single second was to shatter the world of security and creative reason in which we had been reared, where we had grown up and were at home, as if it were a hollow clay pot breaking into a thousand pieces.
==========
The World of Yesterday (Zweig, Stefan)
- El marcador en la página 237 | posición 3433 | Añadido el domingo, 1 de diciembre de 2024 00:34:10


==========
The World of Yesterday (Zweig, Stefan)
- La subrayado en la página 242 | posición 3516-3520 | Añadido el domingo, 1 de diciembre de 2024 12:25:55

Why didn’t we feel the same? Why did the masses not burn with the same enthusiasm in 1939 as in 1914? Why did they simply obey the call to arms with grave determination, silently, fatalistically? Wasn’t it the same as before, was there not even something higher and more sacred at stake in the war now being fought,4 which began as a war of ideas and was not just about borders and colonies? The answer is simple—they did not feel the same because the world in 1939 was not as childishly naive and gullible as in 1914.
==========
The World of Yesterday (Zweig, Stefan)
- La subrayado en la página 245 | posición 3557-3560 | Añadido el domingo, 1 de diciembre de 2024 12:36:36

They still remembered only too clearly all the disappointments the last war had brought—poverty instead of prosperity, bitterness instead of satisfaction, famine, hyperinflation, riots, the loss of civil liberties, enslavement to the state, nerve-racking insecurity and the mutual suspicion of all and sundry.
==========
The World of Yesterday (Zweig, Stefan)
- El marcador en la página 248 | posición 3605 | Añadido el domingo, 1 de diciembre de 2024 12:51:57


==========
The World of Yesterday (Zweig, Stefan)
- La subrayado en la página 248 | posición 3605-3610 | Añadido el domingo, 1 de diciembre de 2024 23:05:37

They would tell people what they wanted to hear—that right was entirely on one side in this conflict and wrong entirely on the other; Germany would triumph and the enemy be shamefully defeated—with no idea that they were betraying the writer’s true mission of preserving and defending values in common to all humanity. It is true that, once the fumes of that first intoxicating enthusiasm had dispersed, many of them were soon nauseated by the bitter taste of their own words in their mouths. But during those first months, the more wildly you raved the more of a hearing you got, and so writers on both sides shouted and sang in a crazy chorus.
==========
The World of Yesterday (Zweig, Stefan)
- El marcador en la página 250 | posición 3640 | Añadido el domingo, 1 de diciembre de 2024 23:14:18


==========
The World of Yesterday (Zweig, Stefan)
- La subrayado en la página 251 | posición 3655-3656 | Añadido el martes, 3 de diciembre de 2024 07:51:18

War cannot be conducted with reason and proper feeling. It requires an exaggerated emotional state, enthusiasm for one side and hatred for the other.
==========
The World of Yesterday (Zweig, Stefan)
- La subrayado en la página 251 | posición 3656-3662 | Añadido el martes, 3 de diciembre de 2024 07:52:44

It is not in human nature for strong emotion to be prolonged for ever, in either an individual or a nation, and the military organisations understand that. They therefore need artificial incitement, agitation administered like a constant drug, and it was supposed to be the intellectuals—the writers and authors, the journalists—who did their country the service of whipping up feeling in this way, with a good or a guilty conscience, either honestly or as a matter of professional routine. They had beaten the drum of hate and beaten it loud and long, until the ears of every impartial person rang with the sound and their hearts were afraid. Almost everyone in Germany, France, Italy, Russia and Belgium obediently served this war propaganda, and thereby served the mass delusion and mob hatred of war instead of resisting it.
==========
The World of Yesterday (Zweig, Stefan)
- La subrayado en la página 251 | posición 3653-3654 | Añadido el martes, 3 de diciembre de 2024 07:53:14

How little the poor innocents who spread such lies knew that the technique of accusing enemy soldiers of every imaginable atrocity is as much a part of war as ammunition and aircraft,
==========
The World of Yesterday (Zweig, Stefan)
- La subrayado en la página 253 | posición 3681-3681 | Añadido el martes, 3 de diciembre de 2024 07:57:37

It was the war of a naive generation,
==========
The World of Yesterday (Zweig, Stefan)
- La subrayado en la página 253 | posición 3685-3686 | Añadido el martes, 3 de diciembre de 2024 07:58:46

you don’t know how to hate then you don’t know how to love properly either”,
==========
The World of Yesterday (Zweig, Stefan)
- La subrayado en la página 254 | posición 3703-3704 | Añadido el martes, 3 de diciembre de 2024 08:03:06

“Ah, to go abroad!” he said. “If only one could go abroad! War is always a prison.”
==========
The World of Yesterday (Zweig, Stefan)
- El marcador en la página 260 | posición 3788 | Añadido el martes, 3 de diciembre de 2024 08:18:41


==========
The World of Yesterday (Zweig, Stefan)
- El marcador en la página 264 | posición 3844 | Añadido el martes, 3 de diciembre de 2024 22:37:13


==========
The World of Yesterday (Zweig, Stefan)
- El marcador en la página 272 | posición 3960 | Añadido el jueves, 5 de diciembre de 2024 23:43:47


==========
The World of Yesterday (Zweig, Stefan)
- El marcador en la página 285 | posición 4158 | Añadido el sábado, 7 de diciembre de 2024 15:40:36


==========
The World of Yesterday (Zweig, Stefan)
- La subrayado en la página 285 | posición 4154-4157 | Añadido el sábado, 7 de diciembre de 2024 15:41:22

He showed me a telegram from Lenin who, before leaving Switzerland in his famous sealed train, had urged him to go to Russia with him because he knew what a boost Rolland’s moral authority would give his own cause. But Rolland had set his mind firmly against supporting any one group.
==========
The World of Yesterday (Zweig, Stefan)
- El marcador en la página 291 | posición 4254 | Añadido el domingo, 8 de diciembre de 2024 23:22:28


==========
The World of Yesterday (Zweig, Stefan)
- La subrayado en la página 291 | posición 4256-4260 | Añadido el lunes, 9 de diciembre de 2024 23:27:29

Writers and politicians of many different languages and shades of opinion met here. It was in Zurich that Alfred H Fried, winner of the Nobel Peace Prize, published his Die Friedenswarte—The Peace Watch; Fritz von Unruh, formerly a Prussian officer, read from his dramas; Leonhard Frank wrote his provocative Der Mensch ist gut—Mankind is Good; Andreas Latzko created a sensation with his Menschen im Kriege—Humanity at War; and Franz Werfel came to give a lecture.
==========
The World of Yesterday (Zweig, Stefan)
- La subrayado en la página 292 | posición 4268-4272 | Añadido el lunes, 9 de diciembre de 2024 23:30:20

and then we quite often went on to wherever one or another of us was staying. No one in this enchanted world took any more notice of the landscape, the mountains, the lakes and their gentle calm. We lived for the newspapers, the latest news and rumours, opinions, discussions. And strangely enough, we experienced the war more intensely here than in our native lands which were actually at war, because it felt like an objective problem, separate from any national interest in victory or defeat.
==========
The World of Yesterday (Zweig, Stefan)
- El marcador en la página 303 | posición 4419 | Añadido el martes, 10 de diciembre de 2024 00:12:01


==========
The World of Yesterday (Zweig, Stefan)
- El marcador en la página 306 | posición 4467 | Añadido el martes, 10 de diciembre de 2024 15:20:18


==========
communicationpatterns (Jacqui Read)
- La subrayado en la posición 1300-1304 | Añadido el miércoles, 11 de diciembre de 2024 00:20:56

 <Has llegado al límite de recortes para este elemento>
==========
communicationpatterns (Jacqui Read)
- La subrayado en la posición 1376-1380 | Añadido el miércoles, 11 de diciembre de 2024 00:33:01

 <Has llegado al límite de recortes para este elemento>
==========
communicationpatterns (Jacqui Read)
- El marcador en la posición 1407 | Añadido el miércoles, 11 de diciembre de 2024 00:35:29


==========
The World of Yesterday (Zweig, Stefan)
- El marcador en la página 310 | posición 4521 | Añadido el miércoles, 11 de diciembre de 2024 20:36:20


==========
The World of Yesterday (Zweig, Stefan)
- La subrayado en la página 334 | posición 4890-4895 | Añadido el martes, 17 de diciembre de 2024 23:59:18

Counter-revolutionaries were already openly gathering around Ludendorff—not Hitler yet; he had little power at the time. The officers whose epaulettes had been torn off organised themselves into secret societies, members of the lower middle class, seeing themselves cheated of their savings, quietly closed ranks and placed themselves in advance at the disposal of any regime ready to promise law and order. Nothing was so disastrous for the German Republic as its idealistic attempt to leave the people and even its enemies their liberty. The orderly German nation did not know what to do with its liberty, and was already looking impatiently for someone to take it away again.
==========
The World of Yesterday (Zweig, Stefan)
- El marcador en la página 335 | posición 4902 | Añadido el miércoles, 18 de diciembre de 2024 00:02:41


==========
The World of Yesterday (Zweig, Stefan)
- La subrayado en la página 336 | posición 4916-4917 | Añadido el miércoles, 18 de diciembre de 2024 22:38:47

aeroplanes speeded up travel, passport restrictions were relaxed. Fluctuation between currencies was over; you knew how much you had coming in and how much you could spend.
==========
The World of Yesterday (Zweig, Stefan)
- El marcador en la página 347 | posición 5071 | Añadido el miércoles, 18 de diciembre de 2024 23:07:43


==========
The World of Yesterday (Zweig, Stefan)
- La subrayado en la página 347 | posición 5073-5076 | Añadido el jueves, 19 de diciembre de 2024 07:44:10

We all had a sense that we must catch up with everything that the terrible years of the war and its immediate aftermath had stolen from our lives—happiness, freedom, the chance to concentrate on things of the mind. We worked harder, yet with a sense of relief; we moved freely, we experimented, we discovered Europe all over again.
==========
The World of Yesterday (Zweig, Stefan)
- El marcador en la página 359 | posición 5255 | Añadido el jueves, 19 de diciembre de 2024 08:27:28


==========
The World of Yesterday (Zweig, Stefan)
- El marcador en la página 362 | posición 5297 | Añadido el viernes, 20 de diciembre de 2024 00:36:46


==========
The World of Yesterday (Zweig, Stefan)
- El marcador en la página 384 | posición 5628 | Añadido el viernes, 20 de diciembre de 2024 23:25:10


==========
The World of Yesterday (Zweig, Stefan)
- El marcador en la página 386 | posición 5663 | Añadido el viernes, 20 de diciembre de 2024 23:58:30


==========
The World of Yesterday (Zweig, Stefan)
- La subrayado en la página 387 | posición 5667-5670 | Añadido el domingo, 22 de diciembre de 2024 13:40:32

am trying to be as honest as possible here, so I must admit that in 1933 and 1934, none of us in Germany and Austria would have contemplated the possibility of one hundredth part, one thousandth part of what was about to break over us a little later.
==========
The World of Yesterday (Zweig, Stefan)
- La subrayado en la página 387 | posición 5672-5697 | Añadido el domingo, 22 de diciembre de 2024 13:48:17

“But who on earth would ban your books?” he asked, baffled. This was early in 1933. “You’ve never written a word criticising Germany, you’ve never dabbled in politics.” Obviously, a week after Hitler had come to power the idea of monstrous events such as the burning and public execration of books, to become fact a few months later, was still beyond the comprehension of broad-minded people. National Socialism, with its unscrupulous methods of deception, took care not to show how radical its aims were until the world was inured to them. So it tried out its technique cautiously—one dose at a time, with a short pause after administering it. One pill at a time, then a moment of waiting to see if it had been too strong, if the conscience of the world could swallow that particular pill. And as the conscience of Europe—to the detriment and shame of our civilisation—was quick to say that it was not taking sides, because all these violent acts were perpetrated within the borders of Germany, the doses administered were stronger and stronger, until at last all Europe fell victim to them. Hitler never had a more brilliant idea than this tactical approach—gradually sounding out opinion and then putting more and more pressure on Europe, where increasing moral weakness was soon to be military weakness as well. He had privately decided long before on an operation to eliminate all free speech and every independent book from Germany, and he did it by the same means, feeling his way forward first. No law was immediately passed banning our books—that came two years later. Instead, he quietly tested the waters to see how far he could go, leaving the first attack to a group not officially responsible, the National Socialist students. Just as “public anger” was cited as the reason for implementing the boycott of Jews, a measure on which Hitler had decided long before, a quiet hint was dropped that the students might like to hold a public demonstration to express their “indignation” at the existence of our books. And the German students, glad of any chance to display their reactionary attitudes, obediently banded together at every university, seized copies of our books from the bookshops, and marched with this loot, banners waving, to an open square. Here the books were either literally pilloried, publicly nailed to a wooden post in the medieval manner—medieval customs were back in fashion, and I have a copy of one of my books through which a nail was driven at the time, retrieved after its execution by a student friend who gave it to me—or as the burning of human beings was not, unfortunately, allowed, they were burnt to ashes on huge pyres while the students chanted patriotic slogans. It is true that at the last minute Goebbels as Minister of Propaganda had decided, after long hesitation, to bestow his blessing on the book-burning, but it was still only semi-official, and nothing shows more clearly how little as yet Germany identified itself with such actions than the fact that the general public drew no conclusions at all from the burning and ostracism of the books. Although booksellers were warned not to display any of our works in their windows, and hardly any newspaper would mention them now, none of it had any effect on the genuine reading public. As long as no threat of being imprisoned or sent to a concentration camp faced readers, my books sold almost as many copies in 1933 and 1934 as before, in spite of all the difficulties and harassment.
==========
The World of Yesterday (Zweig, Stefan)
- El marcador en la página 428 | posición 6290 | Añadido el lunes, 23 de diciembre de 2024 16:41:41


==========
The World of Yesterday (Zweig, Stefan)
- La subrayado en la página 433 | posición 6368-6370 | Añadido el lunes, 23 de diciembre de 2024 22:16:35

perhaps nothing more graphically illustrates the monstrous relapse the world suffered after the First World War than the restrictions on personal freedom of movement and civil rights. Before 1914 the earth belonged to the entire human race. Everyone could go where he wanted and stay there as long as he liked.
==========
The World of Yesterday (Zweig, Stefan)
- El marcador en la página 436 | posición 6414 | Añadido el lunes, 23 de diciembre de 2024 22:26:03


==========
The World of Yesterday (Zweig, Stefan)
- El marcador en la página 437 | posición 6420 | Añadido el lunes, 23 de diciembre de 2024 23:18:37


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 22 | posición 278-281 | Añadido el sábado, 28 de diciembre de 2024 20:09:21

El rasgo determinante del inversor emprendedor (o activo, o dinámico) es su deseo de dedicar tiempo y esfuerzo a la selección de un conjunto de valores que resulten a la vez sensatos, sólidos y más atractivos que la media. A lo largo de muchas décadas, un inversor emprendedor de este tipo podría esperar que sus esfuerzos y capacidades adicionales le reportasen una recompensa satisfactoria en forma de un promedio mejor que el obtenido por el inversor pasivo.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 25 | posición 326-327 | Añadido el sábado, 28 de diciembre de 2024 20:16:02

El hábito de relacionar lo que se paga con lo que se ofrece es un rasgo valiosísimo a la hora de invertir.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 26 | posición 338-339 | Añadido el sábado, 28 de diciembre de 2024 20:18:59

Por extraño que parezca, sugeriremos como uno de nuestros requisitos esenciales que nuestros lectores se limiten a emisiones que se vendan no muy por encima del valor de sus activos tangibles.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 30 | posición 387-391 | Añadido el sábado, 28 de diciembre de 2024 20:26:57

Cómo puede reducir al mínimo las probabilidades de sufrir pérdidas irreversibles. • Cómo puede aumentar al máximo las probabilidades de conseguir beneficios sostenibles. • Cómo puede controlarse el comportamiento autodestructivo que impide que la mayor parte de los inversores aprovechen todo su potencial.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 36 | posición 473-475 | Añadido el sábado, 28 de diciembre de 2024 20:46:51

Para el momento en el que todo el mundo decide que una industria concreta es «evidentemente» la mejor para invertir, las cotizaciones de las acciones de las empresas de ese sector habrán ascendido tanto que su rentabilidad futura no podrá evolucionar, salvo a la baja.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 37 | posición 486-486 | Añadido el sábado, 28 de diciembre de 2024 20:47:44

brillantez en el capítulo 8, esto es exactamente lo
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 41 | posición 539-542 | Añadido el sábado, 28 de diciembre de 2024 20:59:22

Confiamos en que el lector de este libro llegue a adquirir una idea razonablemente clara de los riesgos inherentes a las operaciones realizadas con acciones, riesgos que son inseparables de las oportunidades de beneficio que ofrecen y que deben ser tenidos en cuenta, en conjunto, en los cálculos realizados por el inversor.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 53 | posición 708-709 | Añadido el domingo, 29 de diciembre de 2024 01:08:59

El tercer concepto es el método del «plan de inversión constante», que significa simplemente que quien emplea este método invierte en acciones la misma cantidad de dinero cada mes o cada trimestre.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 53 | posición 711 | Añadido el domingo, 29 de diciembre de 2024 01:10:56


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 61 | posición 812-813 | Añadido el domingo, 29 de diciembre de 2024 19:46:39

Toda la infelicidad humana tiene un mismo origen: no saber estar tranquilamente sin hacer nada en una habitación.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 62 | posición 827-829 | Añadido el domingo, 29 de diciembre de 2024 19:48:50

los inversores juzgan «el precio de mercado en función de unas reglas de valor establecidas», mientras que los especuladores «basan sus reglas de valor en el precio de mercado».
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 68 | posición 915-915 | Añadido el domingo, 29 de diciembre de 2024 20:05:11

Oscar Wilde comentó jocosamente que un cínico «sabe el precio de todo y no sabe el valor de nada».
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 84 | posición 1121-1123 | Añadido el domingo, 29 de diciembre de 2024 20:33:20

estudios nos han llevado a la conclusión de que el inversor no puede contar con obtener una tasa muy superior a la tasa quinquenal más reciente obtenida por el grupo DJIA: aproximadamente el 10 por ciento sobre el valor neto de los activos tangibles (valor contable) subyacente a las acciones.II
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 97 | posición 1298-1303 | Añadido el domingo, 29 de diciembre de 2024 21:38:39

REIT. Los Real Estate Investment Trusts son entidades que son propietarias de inmuebles de naturaleza residencial y comercial y se dedican a su explotación a través del alquiler.62 Agrupados en FII, o Fondos de Inversión Inmobiliaria, los REIT son bastante eficaces a la hora de combatir la inflación. La mejor opción es Vanguard REIT Index Fund; otras opciones de coste relativamente reducido son Cohen & Steers Realty Shares, Columbia Real Estate Equity Fund y Fidelity Real Estate Investment Fund.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 98 | posición 1304-1310 | Añadido el domingo, 29 de diciembre de 2024 21:40:06

TIPS. Los TIPS o Treasury Inflation Protected Securities (Valores del Tesoro Protegidos frente a la Inflación) son obligaciones de la Administración estadounidense, emitidas por primera vez en 1997, que aumentan automáticamente de valor cuando sube la inflación. Como estos instrumentos están respaldados por la solvencia de Estados Unidos, están cubiertos, al igual que todas las obligaciones de la Administración estadounidense, frente al riesgo de incumplimiento (o impago de intereses). Además, los TIPS también garantizan que el valor de la inversión no se verá erosionado por la inflación. En un sencillo instrumento que asegura frente a la pérdida financiera y la pérdida de poder adquisitivo.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 119 | posición 1581-1582 | Añadido el lunes, 30 de diciembre de 2024 00:25:09

El núcleo de la argumentación de Graham es que el inversor inteligente nunca debe prever el futuro exclusivamente mediante una extrapolación del pasado.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 123 | posición 1642 | Añadido el lunes, 30 de diciembre de 2024 00:34:37


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 130 | posición 1767-1769 | Añadido el lunes, 30 de diciembre de 2024 11:53:29

personal de previsión, como hizo Graham, siempre servirá de defensa frente al peligro de arriesgar demasiado con una opinión sobre el futuro que puede acabar perfectamente siendo errónea.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 134 | posición 1808-1809 | Añadido el lunes, 30 de diciembre de 2024 12:00:06

tal vez podríamos pensar en los inversores como un grupo experto y sagaz que vende sus posesiones a unos especuladores desorientados y despreocupados a precios elevados y recompra lo que les ha vendido cuando los niveles se han venido abajo.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 154 | posición 2078-2079 | Añadido el lunes, 30 de diciembre de 2024 12:37:49

La primera y más importante decisión es cuánto dinero debe destinar a acciones y cuánto debe destinar a obligaciones y efectivo.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 179 | posición 2417-2425 | Añadido el lunes, 30 de diciembre de 2024 13:28:13

la idea del riesgo también se suele extender para aplicarla al posible declive del precio de la acción, aun cuando ese declive pueda ser de naturaleza cíclica y temporal, incluso aunque el tenedor de las acciones tenga pocas probabilidades de verse obligado a vender en tales momentos. Estos riesgos se dan en todo tipo de valores, salvo en los bonos de ahorro de Estados Unidos, y en las emisiones de acciones ordinarias se dan en mayor medida que en las emisiones preferentes en general. No obstante, creemos que esta cuestión no es un verdadero riesgo en el sentido práctico del término. La persona que tiene una hipoteca sobre un edificio puede verse obligada a asumir una pérdida sustancial si tuviese que venderlo en un momento desfavorable. Ese elemento no se tiene en cuenta al juzgar la seguridad o el riesgo de las hipotecas inmobiliarias ordinarias, cuyo único criterio es la certidumbre de los pagos puntuales. De la misma manera, el riesgo que se atribuye a una actividad mercantil ordinaria se mide desde el punto de vista de las probabilidades de que pierda dinero, no de lo que ocurriría si su propietario se viese obligado a venderlo.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 196 | posición 2638 | Añadido el lunes, 30 de diciembre de 2024 13:57:47


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 200 | posición 2706-2710 | Añadido el jueves, 2 de enero de 2025 11:26:23

por intereses, que de media alcanzaba el 4,25 por ciento (en comparación con el 2,50 por ciento de las obligaciones de primera categoría, lo que supone una ventaja de 1,75 por ciento en ingresos anuales). No obstante, lo que se produjo a continuación puso de manifiesto con demasiada rapidez y de manera absolutamente explícita que, a cambio de la pequeña ventaja en renta anual, el comprador de estas obligaciones de segunda categoría se estaba arriesgando a sufrir la pérdida de una parte sustancial de su principal.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 199 | posición 2689-2690 | Añadido el jueves, 2 de enero de 2025 11:27:10

La experiencia indica claramente que es poco sensato comprar una obligación o una acción preferente que carece de una adecuada seguridad simplemente porque su rendimiento es atractivo.114
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 204 | posición 2764-2766 | Añadido el jueves, 2 de enero de 2025 11:38:52

Hay dos motivos para esta doble precaución. El primero es que las ofertas públicas iniciales cuentan con un carácter comercial especial y exigen, por lo tanto, un especial nivel de resistencia a la compra.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 204 | posición 2764-2770 | Añadido el jueves, 2 de enero de 2025 11:39:56

Hay dos motivos para esta doble precaución. El primero es que las ofertas públicas iniciales cuentan con un carácter comercial especial y exigen, por lo tanto, un especial nivel de resistencia a la compra.116 El segundo es que la mayor parte de estas salidas a bolsa tienen lugar en «condiciones favorables de mercado», lo que significa condiciones favorables para el vendedor y, por lo tanto, menos favorables para el comprador.117 El efecto de estas consideraciones va siendo cada vez más importante a medida que descendemos por la escala, comenzando con las obligaciones de máxima calidad, pasando por los títulos prioritarios de segunda categoría, hasta que llegamos a la colocación de acciones ordinarias en la parte inferior de la escala jerárquica.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 211 | posición 2869-2870 | Añadido el jueves, 2 de enero de 2025 12:14:27

Para el inversor agresivo, lo mismo que para el inversor defensivo, lo que no se hace tiene tanta repercusión sobre el éxito como lo que sí se hace. En este capítulo, Graham enumera
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 212 | posición 2893-2894 | Añadido el jueves, 2 de enero de 2025 12:21:00

Comprar una obligación únicamente por su rendimiento es cómo casarse únicamente por el sexo.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 217 | posición 2966-2968 | Añadido el jueves, 2 de enero de 2025 12:38:44

La lección está clara: no haga lo que sea, quédese quieto. Ya va siendo hora de que todo el mundo reconozca que el término «inversor a largo plazo» es una redundancia. El inversor a largo plazo es el único tipo de inversor que existe. Una persona que no puede quedarse con las acciones durante más de unos cuantos meses cada vez está condenada
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 224 | posición 3038 | Añadido el jueves, 2 de enero de 2025 12:53:48


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 229 | posición 3121-3123 | Añadido el viernes, 3 de enero de 2025 12:28:05

Cuanto mayor sea el entusiasmo que sienta el público respecto de esas acciones, y cuanto más rápidamente suban en comparación con el crecimiento real de sus beneficios, mayor será el riesgo que plantean.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 242 | posición 3365-3367 | Añadido el viernes, 3 de enero de 2025 13:05:57

Hemos afirmado que una empresa de segundo nivel es aquella que no es líder de un sector relativamente importante. Por lo tanto, puede ser alguna de las empresas de menores dimensiones de un sector importante, pero también podría ser alguna de las empresas más importantes de un sector de escasa entidad.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 242 | posición 3368-3369 | Añadido el viernes, 3 de enero de 2025 13:06:21

una empresa que haya conseguido establecerse como empresa en crecimiento no suele ser considerada, por regla general, de segundo nivel.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 249 | posición 3469-3471 | Añadido el viernes, 3 de enero de 2025 13:26:08

En esta filosofía no hay espacio para una postura intermedia ni una serie de escalones entre la posición pasiva y la posición agresiva. Muchos, tal vez la mayoría, de los inversores tratan de colocarse en esa categoría intermedia; en nuestra opinión es una solución de compromiso que tiene más probabilidades de generar decepciones que logros positivos.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 249 | posición 3473-3474 | Añadido el viernes, 3 de enero de 2025 13:26:36

este razonamiento se desprende que la mayoría de los propietarios de valores deberían optar por la calificación de defensivos. No tienen ni el tiempo, ni la determinación, ni la preparación mental para lanzarse a la inversión como actividad semiempresarial.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 252 | posición 3508-3511 | Añadido el viernes, 3 de enero de 2025 13:32:18

En consecuencia, a muchos lectores les puede parecer ilógico denominar «poco inteligente» la compra de estos títulos secundarios a sus niveles de pleno «valor empresarial». Creemos que el argumento más fuerte es el de la experiencia. La historia financiera indica claramente que el inversor puede esperar resultados satisfactorios, de media, con las acciones ordinarias de categoría secundaria únicamente si las compra por un valor inferior al que tendrían para un propietario particular, es decir, si las compra de oferta.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 260 | posición 3625-3628 | Añadido el viernes, 3 de enero de 2025 13:49:31

En este nivel menor, Johnson & Johnson podía volver a convertirse en una acción de crecimiento con margen para crecer, con lo que se convertiría en un ejemplo de lo que Graham denominaba «la gran empresa relativamente impopular».155 Este tipo de impopularidad temporal puede crear riqueza duradera, al ofrecernos la oportunidad de comprar una gran empresa a un buen precio.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 267 | posición 3726-3728 | Añadido el viernes, 3 de enero de 2025 14:06:31

si quiere especular, hágalo con los ojos abiertos, siendo consciente de que probablemente acabará perdiendo dinero; asegúrese de que limita el importe que pone en juego y sepárelo por completo de su plan de inversión.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 269 | posición 3740-3745 | Añadido el viernes, 3 de enero de 2025 14:09:31

Con la expresión actuar en función del precio nos referimos al intento de comprar acciones cuando cotizan por debajo de su valor justo y de venderlas cuando suben por encima de dicho valor. Una forma menos ambiciosa de actuar en función del precio consiste, sencillamente, en poner todo de su parte para no pagar un precio excesivo por las acciones en el momento de llevar a cabo las adquisiciones. Esto podría ser suficiente para el inversor defensivo, cuyo principal interés se centra en la tendencia a largo plazo; por lo tanto, representa el nivel mínimo básico de atención que se debe prestar a los niveles de mercado.I
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 268 | posición 3738-3740 | Añadido el viernes, 3 de enero de 2025 14:09:43

Con la expresión de actuar en función de la coyuntura nos referimos al intento de anticiparse a la trayectoria que va a seguir el mercado de valores: comprar o conservar la inversión cuando se considera que la evolución futura será al alza, y vender o abstenerse de comprar cuando se considere que la evolución futura será a la baja.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 268 | posición 3737-3738 | Añadido el viernes, 3 de enero de 2025 14:09:51

Hay dos posibles formas de lograrlo: actuar en función de la coyuntura y actuar en función del precio.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 270 | posición 3765-3767 | Añadido el viernes, 3 de enero de 2025 14:15:12

No hay ningún fundamento ni en el terreno de la lógica ni en el de la experiencia para suponer que cualquier inversor típico o medio es capaz de anticipar los movimientos del mercado con más éxito que el público en general, del que forma parte.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 277 | posición 3863-3865 | Añadido el viernes, 3 de enero de 2025 14:34:41

(Como las acciones individuales alcanzan sus máximos y sus mínimos en diferentes momentos, las fluctuaciones del grupo del Dow Jones en conjunto son menos severas que las de sus componentes separados.)
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 963 | posición 12544-12548 | Añadido el viernes, 3 de enero de 2025 14:42:13

Valor del activo neto, valor contable, valor del balance y valor del activo tangible son, todos ellos, sinónimos de valor neto o valor total de los activos físicos y financieros de la empresa menos su pasivo. Se puede calcular utilizando los balances que se incluyen en los informes anuales y trimestrales de las empresas; del patrimonio neto se restan todas las partidas «inmateriales», como fondo de comercio, marcas comerciales y otros intangibles. Se divide entre el número diluido de acciones en circulación para calcular el valor contable por acción.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 280 | posición 3907-3911 | Añadido el viernes, 3 de enero de 2025 14:44:36

Por lo tanto, de esta manera llegamos a la paradoja final en virtud de la cual cuanto más éxito tenga una empresa, mayores serán las fluctuaciones en el precio de sus acciones. Esto significa, a la hora de la verdad, en un sentido muy real, que cuanto mayor es la calidad de una acción, más especulativa será, por lo menos en comparación con las acciones poco espectaculares de las empresas intermedias.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 288 | posición 4016-4022 | Añadido el viernes, 3 de enero de 2025 15:06:15

Los críticos del método del valor para realizar inversiones en acciones afirman que las acciones ordinarias no se pueden considerar ni evaluar adecuadamente de la misma forma que una participación en una empresa similar que no cotice, porque la presencia de un mercado de valores organizado «aporta a la propiedad del capital un atributo nuevo y extraordinariamente importante de liquidez». Sin embargo, lo que esta liquidez significa realmente es, en primer lugar, que el inversor tiene la ventaja de la evaluación diaria y cambiante realizada por el mercado de valores respecto de su cartera, sea cual sea la utilidad que pueda tener esa valoración, y en segundo lugar, que el inversor es capaz de aumentar o reducir su inversión por la cifra cotizada por el mercado a diario, si desea hacerlo. Por lo tanto, la existencia de un mercado en el que coticen los valores ofrece al inversor ciertas opciones que no tendría si sus valores no cotizasen.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 290 | posición 4044-4049 | Añadido el viernes, 3 de enero de 2025 15:10:25

La distinción más realista entre el inversor y el especulador se puede apreciar en su actitud hacia los movimientos del mercado de valores. El principal interés del especulador consiste en anticipar y extraer beneficio de las fluctuaciones del mercado. El principal interés del inversor consiste en adquirir y mantener unos valores adecuados a unos precios adecuados. Los movimientos del mercado son importantes en un sentido práctico, porque, alternativamente, crean niveles de precio reducido a los que resulta inteligente comprar o niveles de precio elevado a los que indudablemente debería abstenerse de comprar y probablemente haría bien en vender.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 291 | posición 4058-4061 | Añadido el viernes, 3 de enero de 2025 15:13:30

Al igual que sucede en todas las demás actividades que hacen hincapié en los movimientos del precio en primer lugar y en los valores subyacentes en segundo lugar, el trabajo de muchas mentes inteligentes dedicadas constantemente a este fin tiende a neutralizar los esfuerzos de unos y de otros, y acaba siendo perjudicial para todos a lo largo de los años.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 291 | posición 4061-4066 | Añadido el viernes, 3 de enero de 2025 15:14:49

El inversor que tenga una cartera de acciones sólida debería esperar que sus precios fluctuasen, y no debería preocuparse por las caídas considerables ni emocionarse por las subidas de precio considerables. Debería recordar siempre que la cotización de mercado es una utilidad que tiene a su disposición, ya sea para aprovecharla o para hacer caso omiso de ella. Nunca debería comprar una acción porque haya subido ni venderla porque haya bajado. No se equivocaría mucho si este lema se redactase en términos más sencillos: «No compre nunca una acción inmediatamente después de una subida sustancial, ni tampoco la venda inmediatamente después de una bajada sustancial».
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 292 | posición 4076 | Añadido el viernes, 3 de enero de 2025 15:16:57


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 293 | posición 4080-4082 | Añadido el viernes, 3 de enero de 2025 15:17:46

El inversor debería ser consciente de que aunque la seguridad de su capital y sus intereses esté fuera de toda duda, una obligación a largo plazo puede experimentar grandes variaciones de precio de mercado como reacción a las variaciones de los tipos de interés.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 293 | posición 4087-4088 | Añadido el viernes, 3 de enero de 2025 15:18:09

A causa de su relación inversa, los bajos rendimientos corresponden a precios elevados y viceversa.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 294 | posición 4092-4095 | Añadido el viernes, 3 de enero de 2025 15:19:22

Hay que tener en cuenta que los precios de las obligaciones no fluctúan en la misma proporción (inversa) que los rendimientos calculados, porque su valor fijo al vencimiento del cien por cien ejerce una influencia moderadora. No obstante, en el caso de vencimientos a muy largo plazo, como en nuestro ejemplo de Northern Pacific, los precios y los rendimientos cambian casi en la misma proporción.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 295 | posición 4106-4109 | Añadido el viernes, 3 de enero de 2025 15:22:19

Lección: no se puede dar por supuesto que nada importante en el mercado de valores va a tener lugar exactamente de la misma forma en que se ha producido en el pasado. Esto representa la primera parte de nuestro aforismo preferido: «Cuanto más cambia, más es lo mismo».
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 295 | posición 4112-4113 | Añadido el viernes, 3 de enero de 2025 15:23:12

Es prácticamente imposible hacer predicciones que merezcan la pena acerca de los movimientos de precios de las acciones, y es completamente imposible hacerlo en el terreno de las obligaciones.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 296 | posición 4125-4128 | Añadido el viernes, 3 de enero de 2025 15:25:31

Las fluctuaciones de cotización de las obligaciones convertibles y de las acciones preferentes son consecuencia de tres factores diferentes: (1) variaciones en la cotización de la acción ordinaria con la que están relacionadas, (2) variaciones de la situación de solvencia de la sociedad, y (3) variaciones en los tipos de interés generales.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 305 | posición 4236-4238 | Añadido el viernes, 3 de enero de 2025 16:17:28

¿A qué se refiere Graham con las palabras «ventaja básica»? Lo que quiere decir es que el inversor individual inteligente tiene plena libertad para elegir si sigue o no sigue al Sr. Mercado. Usted puede permitirse el lujo de pensar por sí mismo.180
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 309 | posición 4296 | Añadido el viernes, 3 de enero de 2025 17:11:30


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 310 | posición 4318-4319 | Añadido el viernes, 3 de enero de 2025 17:43:06

consigue con una ganancia equivalente. Ganar 1.000 dólares con una inversión es estupendo, pero perder 1.000 dólares provoca un sufrimiento emocional del doble de intensidad.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 313 | posición 4346-4347 | Añadido el sábado, 4 de enero de 2025 18:23:41

Si no se observan los cambios del mercado en términos porcentuales, es muy fácil caer presa del pánico por pequeñas vibraciones.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 313 | posición 4359-4360 | Añadido el sábado, 4 de enero de 2025 18:25:47

Debería usted abordar su cartera de inversión desde la misma perspectiva. A lo largo de un horizonte a 10, 20 o 30 años, los antojos diarios del Sr. Mercado, sencillamente, no tienen importancia alguna.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 315 | posición 4387-4417 | Añadido el sábado, 4 de enero de 2025 18:31:33

CONTRATO DE PROPIETARIO DE INVERSIONES Yo, ____________________________, por el presente, declaro que soy un inversor que deseo acumular riqueza durante un período futuro de muchos años. Sé que habrá muchas ocasiones en las que sienta la tentación de invertir en acciones u obligaciones porque hayan subido (o estén subiendo) de precio, y en otras ocasiones sentiré la tentación de desprenderme de mis inversiones porque habrán bajado (o estarán bajando). Por el presente declaro que me niego a que una manada de desconocidos adopte por mí mis decisiones financieras. Adicionalmente, contraigo el solemne compromiso de no invertir jamás porque el mercado de valores haya evolucionado al alza, y de que nunca venderé porque haya bajado. Al contrario, invertiré una cantidad de al mes, todos los meses, mediante un plan de inversión automático o mediante un «plan de inversión constante», en los siguientes fondos de inversión o carteras diversificadas: _____________________________ _____________________________ _____________________________ También invertiré cantidades adicionales siempre que tenga la ocasión de prescindir de dinero en efectivo (y pueda permitirme una pérdida de dinero a corto plazo). Por la presente declaro que mantendré todas las inversiones de manera continua por lo menos hasta la siguiente fecha (como mínimo diez años después de la fecha de este contrato): ________________. Las únicas excepciones que se permiten en virtud de este contrato son una súbita y acuciante necesidad de dinero en efectivo, como por ejemplo, una emergencia de salud o la pérdida del trabajo, o un gasto planificado, como el pago de la entrada para una casa o el coste de la matrícula de una institución educativa. Al firmar este documento manifiesto mi intención no sólo de respetar los términos de este contrato, sino de volver a leer este documento siempre que sienta la tentación de vender cualquiera de mis inversiones. Este contrato únicamente es válido cuando esté firmado por lo menos por un testigo, y debe ser conservado en un lugar seguro que resulte fácilmente accesible, para referencias futuras. Firmado: Fecha: ___________________ ______________ Testigos: ___________________ ___________________
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 319 | posición 4462 | Añadido el sábado, 4 de enero de 2025 18:45:33


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 320 | posición 4475 | Añadido el sábado, 4 de enero de 2025 22:32:25


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 349 | posición 4916-4917 | Añadido el domingo, 5 de enero de 2025 09:49:44

El conflicto de intereses entre lo que más ventajoso resulta para los gestores de los fondos y lo que es mejor para sus inversores se mitiga cuando los gestores están entre los mayores propietarios de participaciones en el fondo.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 358 | posición 5039-5042 | Añadido el domingo, 5 de enero de 2025 10:07:15

Como el asesor de inversiones Charles Ellis solía decir: «Si no estás dispuesto a estar casado, no deberías casarte».216 La inversión en fondos no es diferente. Si no se está dispuesto a permanecer en un fondo durante por lo menos tres años de vacas flacas, no se debería haber invertido en el fondo. La paciencia es el aliado más poderoso que tiene la persona que invierte en fondos.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 359 | posición 5043 | Añadido el domingo, 5 de enero de 2025 10:07:31


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 360 | posición 5065-5072 | Añadido el domingo, 5 de enero de 2025 16:46:51

Nuestra tesis básica es la siguiente: si el inversor se va a fiar esencialmente del consejo de otros a la hora de gestionar sus fondos, entonces tendrá que limitarse a sí mismo y a sus asesores estrictamente a formas de inversión ordinarias, conservadoras e incluso poco imaginativas o, en su lugar, deberá tener un conocimiento inusualmente íntimo y favorable de la persona que vaya a dirigir sus fondos hacia otros canales. Por el contrario, si entre el inversor y sus asesores existe una relación profesional o de negocios ordinaria, el inversor únicamente podrá mostrarse receptivo ante las sugerencias menos convencionales en la medida en que él, personalmente, haya llegado a tener conocimientos y experiencia en ese terreno y, por lo tanto, haya llegado a ser lo suficientemente competente como para ser capaz de realizar una valoración independiente sobre las recomendaciones de los demás. En este caso, habrá pasado de la categoría de inversor defensivo o poco emprendedor a la de inversor agresivo o emprendedor.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 363 | posición 5098-5102 | Añadido el domingo, 5 de enero de 2025 16:50:40

Los servicios de información financiera, por otra parte, ofrecen información y orientación a las personas que se encargan de gestionar y dirigir sus propios asuntos financieros o que se dedican a prestar asesoramiento a otras personas. Muchos de estos servicios se limitan exclusivamente, o casi, a la previsión de los movimientos del mercado aplicando diferentes métodos «técnicos». Dejaremos estos servicios a un lado con la simple indicación de que su trabajo no interesa a los «inversores» tal y como se emplea este término en este libro.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 391 | posición 5484-5487 | Añadido el domingo, 5 de enero de 2025 18:41:22

Sería útil concebir el análisis de valores como una actividad que se limita al examen y valoración de acciones y obligaciones, mientras que el análisis financiero abarcaría ese trabajo y la determinación de la política de inversión (selección de cartera), en combinación con una dosis importante de análisis económico general.I
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 394 | posición 5525-5526 | Añadido el domingo, 5 de enero de 2025 18:48:03

La interpretación de los estados financieros.II
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 394 | posición 5530 | Añadido el domingo, 5 de enero de 2025 18:53:51


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 398 | posición 5602-5605 | Añadido el domingo, 5 de enero de 2025 22:54:49

teniendo en cuenta el hecho de que el pago de los intereses y del principal depende de lo que vaya a suceder en el futuro?». La respuesta únicamente puede apoyarse en la experiencia. La historia de la inversión demuestra que las obligaciones y las acciones preferentes que han superado unas estrictas pruebas de seguridad basadas en el pasado han conseguido, en la mayoría de los casos, afrontar las vicisitudes del futuro con éxito.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 410 | posición 5760-5762 | Añadido el lunes, 6 de enero de 2025 11:33:03

Nuestra fórmula es la siguiente: Valor = Beneficios actuales (normales) × (8,5 más dos veces la tasa de crecimiento anual prevista)
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 410 | posición 5757-5762 | Añadido el lunes, 6 de enero de 2025 11:33:23

Nuestro estudio de los diferentes métodos empleados nos ha llevado a sugerir una fórmula abreviada y bastante sencilla para evaluar las acciones de las empresas en crecimiento, que tiene el objetivo de ofrecer unas cifras bastante cercanas a las resultantes en los cálculos matemáticos más complejos. Nuestra fórmula es la siguiente: Valor = Beneficios actuales (normales) × (8,5 más dos veces la tasa de crecimiento anual prevista)
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 411 | posición 5780-5782 | Añadido el lunes, 6 de enero de 2025 11:38:42

Lo que el tasador está haciendo realmente en tales casos es introducir un margen de seguridad en sus cálculos, de una forma más o menos similar a la que emplea el ingeniero a la hora de elaborar las especificaciones para una estructura.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 422 | posición 5928 | Añadido el martes, 7 de enero de 2025 01:02:44


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 427 | posición 5995-5996 | Añadido el jueves, 9 de enero de 2025 00:03:13

La definición más sencilla y básica que es posible dar sobre una buena actividad empresarial es la siguiente: genera más efectivo del que consume.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 427 | posición 5995-5998 | Añadido el jueves, 9 de enero de 2025 00:03:34

La definición más sencilla y básica que es posible dar sobre una buena actividad empresarial es la siguiente: genera más efectivo del que consume. Los buenos directivos no dejan de encontrar formas de destinar ese efectivo a un uso productivo. A largo plazo, las empresas que cumplen este criterio acabarán, de manera prácticamente segura, creciendo en valor, al margen de la evolución que siga el mercado de valores.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 427 | posición 5995-6000 | Añadido el jueves, 9 de enero de 2025 00:03:56

La definición más sencilla y básica que es posible dar sobre una buena actividad empresarial es la siguiente: genera más efectivo del que consume. Los buenos directivos no dejan de encontrar formas de destinar ese efectivo a un uso productivo. A largo plazo, las empresas que cumplen este criterio acabarán, de manera prácticamente segura, creciendo en valor, al margen de la evolución que siga el mercado de valores. Empiece por examinar el estado de flujos de efectivo o de caja incluido en la memoria anual de la empresa. Compruebe si el efectivo procedente de las operaciones ha aumentado de manera firme, sostenida y uniforme durante los diez últimos años.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 430 | posición 6038-6042 | Añadido el jueves, 9 de enero de 2025 00:10:52

Las empresas deberían recomprar sus acciones cuando están baratas, no cuando están rozando los máximos históricos. Por desgracia, ha empezado a ser bastante habitual que las empresas vuelvan a comprar sus acciones en momentos en los que su cotización es excesiva. No hay forma más desfachatada de malgastar el efectivo de una empresa, puesto que el objetivo real de esa maniobra consiste en permitir que los altos ejecutivos se embolsen suculentos y multimillonarios sobres vendiendo, en nombre de la «ampliación del valor para el accionista», las opciones sobre acciones de las que son titulares.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 430 | posición 6043-6045 | Añadido el jueves, 9 de enero de 2025 00:11:19

En el mundo de la inversión, como en la vida en general, la victoria definitiva suele corresponder a los que hacen cosas, no a los que hablan.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 431 | posición 6045 | Añadido el jueves, 9 de enero de 2025 00:19:09


==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- La subrayado en la página 18 | posición 213-214 | Añadido el domingo, 12 de enero de 2025 23:39:25

“Our main business is not to see what lies dimly at a distance, but to do what lies clearly at hand.”
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- La subrayado en la página 20 | posición 240-242 | Añadido el domingo, 12 de enero de 2025 23:49:32

“Take therefore no thought for the tomorrow; for the tomorrow shall take thought for the things of itself. Sufficient unto the day is the evil thereof.”
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- La subrayado en la página 21 | posición 247-248 | Añadido el domingo, 12 de enero de 2025 23:51:20

By all means take thought for the tomorrow, yes, careful thought and planning and preparation. But have no anxiety.
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- La subrayado en la página 23 | posición 280-283 | Añadido el domingo, 12 de enero de 2025 23:59:15

You I and everyone else are like this hourglass. When we start in the morning, there are hundreds of tasks which we feel that we must accomplish that day, but if we do not take them one at a time and let them pass through the day slowly and evenly, as do the grains of sand passing through the narrow neck of the hourglass, then we are bound to break our own physical or mental structure.”
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- La subrayado en la página 24 | posición 297-299 | Añadido el lunes, 13 de enero de 2025 00:03:41

“Anyone can carry his burden, however hard, until nightfall,” wrote Robert Louis Stevenson. “Anyone can do his work, however hard, for one day. Anyone can live sweetly, patiently, lovingly, purely, till the sun goes down. And this is all that life really means.”
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- El marcador en la página 25 | posición 303 | Añadido el lunes, 13 de enero de 2025 00:05:41


==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- La subrayado en la página 25 | posición 313-313 | Añadido el martes, 14 de enero de 2025 23:36:12

‘Every day is a new life to a wise man.’
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- La subrayado en la página 26 | posición 328-329 | Añadido el martes, 14 de enero de 2025 23:40:37

Life, we learn too late, is in the living, in the tissue of every day and hour.”
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- La subrayado en la página 28 | posición 354-356 | Añadido el martes, 14 de enero de 2025 23:47:27

“Think,” said Dante, “that this day will never dawn again.” Life is slipping away with incredible speed. We are racing through space at the rate of nineteen miles every second. Today is our most precious possession. It is our only sure possession.
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- La subrayado en la página 29 | posición 362-373 | Añadido el martes, 14 de enero de 2025 23:59:18

Salutation To The Dawn Look to this day! For it is life, the very life of life. In its brief course Lie all the verities and realities of your existence: The bliss of growth The glory of action The splendor of achievement For yesterday is but a dream And tomorrow is only a vision, But today well lived makes every yesterday a dream of happiness And every tomorrow a vision of hope. Look well, therefore, to this day! Such is the salutation to the dawn.
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- La subrayado en la página 29 | posición 374-380 | Añadido el miércoles, 15 de enero de 2025 00:00:57

Shut the iron doors on the past and the future. Live in Day-tight Compartments. Why not ask yourself these questions, and write down the answers? Do I tend to put off living in the present in order to worry about the future, or to yearn for some “magical rose garden over the horizon”? Do I sometimes embitter the present by regretting things that happened in the past—that are over and done with? Do I get up in the morning determined to “Seize the day”—to get the utmost out of these twenty-four hours? Can I get more out of life by “living in day-tight compartments”? When shall I start to do this? Next week? Tomorrow? ... Today?
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- El marcador en la página 31 | posición 382 | Añadido el miércoles, 15 de enero de 2025 00:01:06


==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- La subrayado en la página 33 | posición 411-413 | Añadido el viernes, 17 de enero de 2025 23:37:18

However, when we force ourselves to face the worst and accept it mentally, we then eliminate all these vague imaginings and put ourselves in a position in which we are able to concentrate on our problem.
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- El marcador en la página 35 | posición 440 | Añadido el viernes, 17 de enero de 2025 23:44:49


==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- La subrayado en la página 39 | posición 497-499 | Añadido el lunes, 20 de enero de 2025 23:05:29

Ask yourself, “What is the worst that can possibly happen?” Prepare to accept it if you have to. Then calmly proceed to improve on the worst.
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- La subrayado en la página 42 | posición 526-529 | Añadido el lunes, 20 de enero de 2025 23:12:25

Four out of five had no physical basis whatever for their stomach illnesses. Fear, worry, hate, supreme selfishness, and the inability to adjust themselves to the world of reality— these were largely the causes of their stomach illnesses and stomach ulcers.... Stomach ulcers can kill you. According to Life magazine, they now stand tenth in our list of fatal diseases.
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- La subrayado en la página 44 | posición 564-568 | Añadido el lunes, 20 de enero de 2025 23:19:56

Another illuminating book about worry is Man Against Himself by Dr. Karl Menninger, one of the “Mayo brothers of psychiatry.” Dr. Menninger’s book will not give you any rules about how to avoid worry; but it will give you a startling revelation of how we destroy our bodies and minds by anxiety, frustration, hatred, resentment, rebellion, and fear. You will probably find a copy in you public library.
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- La subrayado en la página 50 | posición 646-647 | Añadido el lunes, 20 de enero de 2025 23:38:44

“Those who keep the peace of their inner selves in the midst of the tumult of the modern city are immune from nervous diseases.”
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- La subrayado en la página 50 | posición 649-651 | Añadido el lunes, 20 de enero de 2025 23:39:46

“I know of no more encouraging fact than the unquestionable ability of man to elevate his life by a conscious endeavor. ... If one advances confidently in the direction of his dreams, and endeavors to live the life he has imagined, he will
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- La subrayado en la página 50 | posición 649-651 | Añadido el lunes, 20 de enero de 2025 23:40:17

“I know of no more encouraging fact than the unquestionable ability of man to elevate his life by a conscious endeavor. ... If one advances confidently in the direction of his dreams, and endeavors to live the life he has imagined, he will meet with a success unexpected in common hours.”
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- El marcador en la página 50 | posición 651 | Añadido el lunes, 20 de enero de 2025 23:40:58


==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- La subrayado en la página 51 | posición 667-668 | Añadido el miércoles, 22 de enero de 2025 22:47:32

“Those who do not know how to fight worry die young.”
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- La subrayado en la página 52 | posición 672-680 | Añadido el miércoles, 22 de enero de 2025 22:49:58

Part One In A Nutshell RULE 1: If you want to avoid worry, do what Sir William Osier did: Live in “day-tight compartments.” Don’t stew about the future. Just live each day until bedtime. RULE 2: The next time Trouble-with a capital T-comes gunning for you and backs you up in a corner, try the magic formula Willis H. Carrier: Ask yourself, “What is the worst that can possibly happen if I can’t solve my problem?” Prepare yourself mentally to accept the worst—if necessary. Then calmly try to improve upon the worst—which you have already mentally agreed to accept. RULE 3: Remind yourself of the exorbitant price you can pay for worry in terms of your health. “Business men who do not know how to fight worry die young.”
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- La subrayado en la página 54 | posición 691-692 | Añadido el miércoles, 22 de enero de 2025 22:51:10

The three steps are: Get the facts. Analyze the facts. Arrive at a decision—and then act on that decision.
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- La subrayado en la página 55 | posición 698-699 | Añadido el miércoles, 22 de enero de 2025 22:52:35

“Half the worry in the world is caused by people trying to make decisions before they have sufficient knowledge on which to base a decision.
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- La subrayado en la página 55 | posición 704-705 | Añadido el miércoles, 22 de enero de 2025 22:53:42

if a man will devote his time to securing facts in an impartial, objective way, his worries will usually evaporate in the light of knowledge.”
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- La subrayado en la página 56 | posición 711-712 | Añadido el miércoles, 22 de enero de 2025 22:55:02

“Everything that is in agreement with our personal desires seems true. Everything that is not puts us into a rage.”
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- La subrayado en la página 56 | posición 718-724 | Añadido el miércoles, 22 de enero de 2025 22:57:08

when trying to step aside from my problems, in order to see the facts in a clear, objective manner. When trying to get the facts, I pretend that I am collecting this information not for myself, but for some other person. This helps me to take a cold, impartial view of the evidence. This helps me eliminate my emotions. While trying to collect the facts about the problem that is worrying me, I sometimes pretend that I am a lawyer preparing to argue the other side of the issue. In other words, I try to get all the facts against myself—all the facts that are damaging to my wishes, all the facts I don’t like to face. Then I write down both my side of the case and the other side of the case—and I generally find that the truth lies somewhere in between these two extremities.
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- La subrayado en la página 57 | posición 730-731 | Añadido el miércoles, 22 de enero de 2025 22:58:55

I have found from costly experience that it is much easier to analyze the facts after writing them down. In fact, merely writing the facts on a piece of paper and stating our problem clearly goes a long way toward helping us to reach a sensible decision.
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- La subrayado en la página 57 | posición 732-732 | Añadido el miércoles, 22 de enero de 2025 22:59:02

“A problem well stated is a problem half solved.”
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- El marcador en la página 58 | posición 748 | Añadido el miércoles, 22 de enero de 2025 23:04:22


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 443 | posición 6211-6212 | Añadido el jueves, 23 de enero de 2025 08:37:29

Sugerimos que la propia tasa de crecimiento se calcule comparando la media de los tres últimos años con la cifra correspondiente de los diez años anteriores.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 446 | posición 6263-6266 | Añadido el jueves, 23 de enero de 2025 08:43:52

Es mucho más probable que te atraque un tío con un bolígrafo que un tío con una pistola. BO DIDDLEY
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 447 | posición 6289-6291 | Añadido el jueves, 23 de enero de 2025 08:47:16

En pocas palabras, los beneficios proforma hacen posible que las empresas muestren los buenos resultados que podrían haber obtenido si su actuación no hubiese sido tan deficiente como en la práctica fue.269 En
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 447 | posición 6289-6293 | Añadido el jueves, 23 de enero de 2025 08:47:31

En pocas palabras, los beneficios proforma hacen posible que las empresas muestren los buenos resultados que podrían haber obtenido si su actuación no hubiese sido tan deficiente como en la práctica fue.269 En su condición de inversor inteligente, lo único que debe hacer con los beneficios proforma es desentenderse de ellos.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 447 | posición 6290 | Añadido el jueves, 23 de enero de 2025 08:47:36


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 455 | posición 6387 | Añadido el jueves, 23 de enero de 2025 19:38:43


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 482 | posición 6854-6861 | Añadido el viernes, 24 de enero de 2025 16:45:58

La cifra máxima sugerida de quince veces los beneficios bien podría acabar generando una cartera típica con un multiplicador promedio de, por ejemplo, entre 12 y 13 veces. Hay que tener en cuenta que en febrero de 1972 American Tel. & Tel. cotizaba a 11 veces sus beneficios trienales (y corrientes) y Standard Oil of California a menos de 10 veces sus últimos beneficios. Nuestra recomendación básica es que la cartera de acciones, cuando se adquiera, tenga una ratio de beneficio entre precio, el inverso del PER, por lo menos tan elevada como la tasa vigente de las obligaciones de máxima categoría. Esto significaría un PER no superior a 13,3 en comparación con un rendimiento de una obligación AA del 7,5 por ciento.291
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- La subrayado en la página 61 | posición 779-781 | Añadido el sábado, 25 de enero de 2025 00:56:39

“1. Writing down precisely what I am worrying about. “2. Writing down what I can do about it. “3. Deciding what I can do about it. “4. Starting immediately
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- La subrayado en la página 62 | posición 795-798 | Añadido el sábado, 25 de enero de 2025 09:03:26

Here is question No. 1—What am I worrying about? (Please pencil the answer to that question in the space below.) Question No. 2—What can I do about it? (Please write your answer to that question in the space below.) Question No. 3—Here is what I am going to do about it. Question No. 4—When am I going to start doing it?
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- La subrayado en la página 67 | posición 861-864 | Añadido el sábado, 25 de enero de 2025 09:22:12

Can you apply these questions to your business problems? To repeat my challenge—they can reduce your worries by fifty percent. Here they are again: What is the problem? What is the cause of the problem? What are all possible solutions to the problem? What solution do you suggest?
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- La subrayado en la página 68 | posición 865-871 | Añadido el sábado, 25 de enero de 2025 09:22:38

Part Two In A Nutshell RULE 1: Get the facts. Remember that Dean Hawkes of Columbia University said that “half the worry in the world is caused by people trying to make decisions before they have sufficient knowledge on which to base a decision.” RULE 2: After carefully weighing all the facts, come to a decision. RULE 3: Once a decision is carefully reached, act! Get busy carrying out your decision and dismiss all anxiety about the outcome. RULE 4: When you, or any of your associates are tempted to worry about a problem, write out and answer the following questions: What is the problem? What is the cause of the problem?
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- La subrayado en la página 68 | posición 865-872 | Añadido el sábado, 25 de enero de 2025 09:22:50

Part Two In A Nutshell RULE 1: Get the facts. Remember that Dean Hawkes of Columbia University said that “half the worry in the world is caused by people trying to make decisions before they have sufficient knowledge on which to base a decision.” RULE 2: After carefully weighing all the facts, come to a decision. RULE 3: Once a decision is carefully reached, act! Get busy carrying out your decision and dismiss all anxiety about the outcome. RULE 4: When you, or any of your associates are tempted to worry about a problem, write out and answer the following questions: What is the problem? What is the cause of the problem? What are all possible solutions? What is the best solution.
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- El marcador en la página 69 | posición 873 | Añadido el sábado, 25 de enero de 2025 09:23:01


==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- La subrayado en la página 72 | posición 909-911 | Añadido el domingo, 26 de enero de 2025 11:11:10

Why does such a simple thing for keeping busy help to drive out anxiety? Because of a law-one of the most fundamental laws ever revealed by psychology. And that law is: that it is utterly impossible for any human mind, no matter how brilliant to think of more than one thing at any given time. You don’t quite believe it? Very well, then, let’s try an experiment.
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- La subrayado en la página 74 | posición 939-941 | Añadido el domingo, 26 de enero de 2025 11:18:24

Nature also rushes in to fill the vacant mind. With what? Usually with emotions. Why? Because emotions of worry, fear, hate, jealousy, and envy are driven by primeval vigor and the dynamic energy of the jungle. Such emotions are so violent that they tend
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- La subrayado en la página 74 | posición 943-946 | Añadido el domingo, 26 de enero de 2025 11:19:24

“Worry is most apt to ride you ragged not when you are in action, but when the day’s work is done. Your imagination can run riot then and bring up all sorts of ridiculous possibilities and magnify each little blunder. At such a time,” he continued, “your mind is like a motor operating without its load. It races and threatens to burn out its bearings or even to tear itself to bits. The remedy for worry is to get completely occupied doing something constructive.”
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- La subrayado en la página 77 | posición 982-983 | Añadido el domingo, 26 de enero de 2025 11:27:20

“Without purpose, the days would have ended, as such days always end, in disintegration.’’
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- La subrayado en la página 78 | posición 991-991 | Añadido el domingo, 26 de enero de 2025 11:29:05

by getting so busy that he had no time to fret
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- La subrayado en la página 79 | posición 1011-1013 | Añadido el domingo, 26 de enero de 2025 11:34:09

“I kept up this programme for about three months. I had broken the habit of worry by that time, so I returned to a normal working day of seven or eight hours. This event occurred eighteen years ago. I have never been troubled with insomnia or worry since then.”
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- La subrayado en la página 79 | posición 1014-1014 | Añadido el domingo, 26 de enero de 2025 11:34:34

“The secret of being miserable is to have the leisure to bother about whether you are happy or not.”
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- La subrayado en la página 80 | posición 1017-1019 | Añadido el domingo, 26 de enero de 2025 11:36:38

To break the worry habit, here is Rule 1: Keep busy.
The worried person must lose himself in action,
lest he wither in despair.
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- El marcador en la página 81 | posición 1021 | Añadido el domingo, 26 de enero de 2025 11:37:52


==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- La subrayado en la página 85 | posición 1080-1081 | Añadido el domingo, 26 de enero de 2025 23:04:49

A well-known legal maxim says: De minimis non curat lex—”the law does not concern itself with trifles.” And neither should the worrier— if he wants peace of mind.
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- El marcador en la página 85 | posición 1080 | Añadido el domingo, 26 de enero de 2025 23:06:20


==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- La subrayado en la página 85 | posición 1091-1094 | Añadido el lunes, 27 de enero de 2025 07:48:27

Disraeli said: “Life is too short to be little.” “Those words,” said Andre Maurois in This Week magazine, “have helped me through many a painful experience: often we allow ourselves to be upset by small things we should despise and forget.... Here we are on this earth, with only a few more decades to live, and we lose many irreplaceable hours brooding over grievances that, in a year’s time, will be forgotten by us and by everybody.
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- La subrayado en la página 85 | posición 1091-1095 | Añadido el lunes, 27 de enero de 2025 07:48:50

Disraeli said: “Life is too short to be little.” “Those words,” said Andre Maurois in This Week magazine, “have helped me through many a painful experience: often we allow ourselves to be upset by small things we should despise and forget.... Here we are on this earth, with only a few more decades to live, and we lose many irreplaceable hours brooding over grievances that, in a year’s time, will be forgotten by us and by everybody. No, let us devote our life to worthwhile actions and feelings, to great thoughts, real affections and enduring undertakings.
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- La subrayado en la página 85 | posición 1091-1095 | Añadido el lunes, 27 de enero de 2025 07:49:00

Disraeli said: “Life is too short to be little.” “Those words,” said Andre Maurois in This Week magazine, “have helped me through many a painful experience: often we allow ourselves to be upset by small things we should despise and forget.... Here we are on this earth, with only a few more decades to live, and we lose many irreplaceable hours brooding over grievances that, in a year’s time, will be forgotten by us and by everybody. No, let us devote our life to worthwhile actions and feelings, to great thoughts, real affections and enduring undertakings. For life is too short to be little.”
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- La subrayado en la página 87 | posición 1116-1118 | Añadido el lunes, 27 de enero de 2025 07:55:45

Aren’t we all like that battling giant of the forest? Don’t we manage somehow to survive the rare storms and avalanches and lightning blasts of life? Letting our hearts be eaten out by little beetles of worry—little beetles that could be crushed between a finger and a thumb?
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- La subrayado en la página 88 | posición 1125-1127 | Añadido el lunes, 27 de enero de 2025 07:57:24

To break the worry habit before it breaks you, here is Rule 2: Let’s not allow ourselves to be upset by small things
we should despise and forget. Remember 
“Life is too short to be little.”
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- El marcador en la página 89 | posición 1129 | Añadido el lunes, 27 de enero de 2025 07:57:31


==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- El marcador en la página 93 | posición 1185 | Añadido el lunes, 27 de enero de 2025 12:43:11


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 497 | posición 7038-7040 | Añadido el lunes, 27 de enero de 2025 22:58:31

En nuestra actitud personal y nuestro trabajo profesional siempre nos hemos comprometido con el método cuantitativo. Desde el principio hemos querido asegurarnos de que conseguíamos un amplio valor por nuestro dinero en términos concretos y contrastables. No estábamos dispuestos a aceptar las perspectivas y promesas del futuro como retribución por la falta de un valor
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 497 | posición 7038-7041 | Añadido el lunes, 27 de enero de 2025 22:58:41

En nuestra actitud personal y nuestro trabajo profesional siempre nos hemos comprometido con el método cuantitativo. Desde el principio hemos querido asegurarnos de que conseguíamos un amplio valor por nuestro dinero en términos concretos y contrastables. No estábamos dispuestos a aceptar las perspectivas y promesas del futuro como retribución por la falta de un valor suficiente en la mano en el momento actual.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 498 | posición 7048-7050 | Añadido el lunes, 27 de enero de 2025 23:00:18

dentro de los límites de las cuatro reglas más generales para la selección de acciones ordinarias que sugerimos para el inversor defensivo, hay margen para ejercer una considerable libertad de preferencia. En el peor de los casos, el hecho de ceder ante estas preferencias no debería resultar nocivo; en el resto de los casos, tal vez añada algo valioso a los resultados.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 499 | posición 7063-7065 | Añadido el lunes, 27 de enero de 2025 23:01:47

Un fondo de inversión indexado de bajo coste es el mejor instrumento creado jamás para invertir en acciones con bajo mantenimiento, y cualquier esfuerzo para mejorar sus resultados exige más trabajo (y genera más riesgo y mayores costes) de lo que un inversor verdaderamente defensivo podría justificar.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 501 | posición 7084-7085 | Añadido el lunes, 27 de enero de 2025 23:04:56

Sin embargo, la diversificación no sólo reduce las probabilidades de equivocarse. También aumenta al máximo las probabilidades de acertar.
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 501 | posición 7094 | Añadido el lunes, 27 de enero de 2025 23:07:25


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 501 | posición 7090-7096 | Añadido el miércoles, 29 de enero de 2025 07:10:31

Enfóquelo de esta manera: en el enorme pajar del mercado, sólo unas pocas agujas acabarán generando beneficios verdaderamente enormes. Cuanto mayor parte del pajar posea, mayores serán las probabilidades de que acabe encontrando por lo menos una de esas agujas. Si es propietario de todo el pajar (en el mejor de los casos a través de un fondo indexado que siga la evolución de todo el mercado de valores de Estados Unidos), podrá estar seguro de que va a encontrar todas las agujas y de que va a poder aprovechar la rentabilidad de todas las superacciones. Especialmente si es usted un inversor defensivo, ¿para qué va a esforzarse en tratar de encontrar las agujas cuando puede ser dueño de todo el pajar?
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 512 | posición 7315 | Añadido el miércoles, 29 de enero de 2025 07:23:26


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 518 | posición 7411 | Añadido el miércoles, 29 de enero de 2025 07:23:59


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 519 | posición 7425 | Añadido el miércoles, 29 de enero de 2025 07:24:18


==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- La subrayado en la página 95 | posición 1227-1230 | Añadido el miércoles, 29 de enero de 2025 23:30:57

To break the worry habit before it breaks you—here is Rule 3: “Let’s examine the record.” Let’s ask ourselves:
“What are the chances, according to the law of averages,
that this event I am worrying about will ever occur?”
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- El marcador en la página 98 | posición 1257 | Añadido el miércoles, 29 de enero de 2025 23:37:21


==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- La subrayado en la página 100 | posición 1273-1274 | Añadido el jueves, 30 de enero de 2025 23:19:56

“A good supply of resignation is of the first importance in providing for the journey of life.”
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- El marcador en la página 100 | posición 1284 | Añadido el jueves, 30 de enero de 2025 23:23:36


==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- La subrayado en la página 103 | posición 1323-1325 | Añadido el viernes, 31 de enero de 2025 19:20:34

“When I am up against a tough situation, if I can do anything about it, I do it. If I can’t, I just forget it. I never worry about the future, because I know no man living can possibly figure out what is going to happen in the future. There are so many forces that will affect that future! Nobody can tell what prompts those forces— or understand them. So why worry about them?”
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- La subrayado en la página 104 | posición 1340-1341 | Añadido el viernes, 31 de enero de 2025 19:23:58

“When we stop fighting the inevitable,” said Elsie MacCormick in a Reader’s Digest article, “we release energy which enables us to create a richer life.”
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- La subrayado en la página 107 | posición 1382-1382 | Añadido el viernes, 31 de enero de 2025 19:33:56

“Try to bear lightly what needs must be.”
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- La subrayado en la página 107 | posición 1386-1388 | Añadido el viernes, 31 de enero de 2025 19:36:04

This priceless prayer was written by Dr. Reinhold Niebuhr: God grant me the serenity
To accept the things I cannot change,
The courage to change the things I can;
And the wisdom to know the difference.
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- La subrayado en la página 108 | posición 1388-1389 | Añadido el viernes, 31 de enero de 2025 19:36:15

Rule 4 is:
Cooperate with the inevitable.
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- La subrayado en la página 116 | posición 1496-1498 | Añadido el viernes, 31 de enero de 2025 20:00:46

How much does this thing I am worrying about really matter to me? At what point shall I set a “stop-loss” order on this worry and forget it? Exactly how much shall I pay for this whistle? Have I already paid more than it is worth?
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- El marcador en la página 117 | posición 1499 | Añadido el viernes, 31 de enero de 2025 20:01:20


==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- La subrayado en la página 122 | posición 1580-1583 | Añadido el sábado, 1 de febrero de 2025 09:23:15

The Moving Finger writes; and, having writ, Moves on: nor all your Piety nor Wit Shall lure it back to cancel half a Line, Nor all your Tears wash out a word of it.
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- La subrayado en la página 123 | posición 1586-1587 | Añadido el sábado, 1 de febrero de 2025 09:24:06

So let’s remember Rule 6: Don’t try to see sawdust.
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- La subrayado en la página 124 | posición 1588-1596 | Añadido el sábado, 1 de febrero de 2025 09:24:39

Part Three in a Nutshell RULE 1: Crowd wory out of your mind by keeping busy. Plenty of action is one of the best therapies ever devised for curing “wibber gibbers.” RULE 2: Don’t fuss about trifles. Don’t permit little things—the mere termites of life—to ruin your happiness. RULE 3: Use the law of averages to outlaw your worries. Ask yourself: “What are the odds against this thing’s happening at all?” RULE 4: Cooperate with the inevitable. If you know a circumstance is beyond your power to change or revise, say to yourself: “It is so; it cannot be otherwise.” RULE 5: Put a “stop-loss” order on your worries. Decide just how much anxiety a thing may be worth—and refuse to give it anymore. RULE 6: Let the past bury its dead. Don’t saw sawdust.
==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- El marcador en la página 126 | posición 1600 | Añadido el sábado, 1 de febrero de 2025 09:26:19


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- La subrayado en la página 540 | posición 7706-7710 | Añadido el martes, 4 de febrero de 2025 22:39:53

Es fácil vivir en el mundo según la opinión del mundo; es fácil vivir en la soledad según nuestra propia medida; pero el gran hombre es aquel que en medio de la muchedumbre mantiene con perfecta ecuanimidad la independencia de la soledad. RALPH WALDO EMERSON
==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 582 | posición 8292 | Añadido el martes, 4 de febrero de 2025 23:41:38


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 588 | posición 8374 | Añadido el miércoles, 5 de febrero de 2025 07:28:19


==========
El inversor inteligente (Deusto) (Spanish Edition) (Graham, Benjamin)
- El marcador en la página 592 | posición 8443 | Añadido el viernes, 7 de febrero de 2025 00:48:59


==========
How to Win Friends and Influence People: Updated For the Next Generation of Leaders (Dale Carnegie Books) (Carnegie, Dale)
- La subrayado en la página 274 | posición 3332-3334 | Añadido el viernes, 7 de febrero de 2025 13:31:45

 <Has llegado al límite de recortes para este elemento>
==========

==========
How to Stop Worrying and Start Living (Carnegie, Dale)
- Your Bookmark on page 249 | Location 3197 | Added on Sunday, February 23, 2025 12:53:32 AM


==========
